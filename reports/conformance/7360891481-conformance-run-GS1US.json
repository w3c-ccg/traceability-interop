{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "500ad0b1-1c1b-4500-83d6-bfe0c8fa5e69",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e6843e49-7302-4fcf-9c09-1bd580666eef",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb494bef-dcc5-4596-8d71-e004ba43b655",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f2d92055-a124-4ad1-a7d1-cddf1fbc8a60"
                }
              }
            ]
          },
          {
            "id": "e0aa51cf-926d-4dff-a447-7fad9b8fca53",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "018acd60-63f2-4b92-9d45-2993edd2c3b5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4d44456f-90de-4f1b-91fd-6ebd3965603e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5dc6d4df-b4be-4b28-b385-469f2967fa7c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a35c8607-e07a-4767-a7e7-43cae41b6bbb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8121c1d9-3ceb-4a76-aed3-8d9118a6c69a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15a90ecb-ba5a-468b-8ab0-0634b3996ba6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61597f40-6b0f-465a-9447-f76dda510d83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ce3d91e-5966-4c64-9abb-69545d05134e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d28674c8-bbd9-4318-980f-edc3d1f7efb6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4147bff7-4126-4284-856c-64cb9c7f0819",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8f51083-4413-434f-8a98-d6759d6c672d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0e4938f-623b-4ed7-976a-89f136fdaee3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "01bae0c0-faf8-4b26-88f2-91d77f318beb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c0ad27c-0bde-4938-9258-d9d2e5dc8736",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6189777-d974-4ea3-a7b8-2151bdb212db"
            }
          }
        ]
      },
      {
        "id": "b9d4da15-d206-4ae7-af59-3d4b165b4751",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d0b66401-e100-4f1e-a63b-ecf6dd534d30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1d5339b-5722-4dbf-b1ff-36eaa0e0d31e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6d4dbe0-aede-4a6a-83e9-b0786f5909f0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af59755c-dc48-4dd7-952e-205a6eaa524f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7de854b6-df4c-488c-be2f-8fa4085de855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7a4d86-2dde-429c-80d0-fdb3a78d1137",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77910ed3-5bb9-4c1d-94b2-3ab470d48047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c2944b0-f034-42e3-9e1c-8cd391d2d429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4adecac-8422-4237-bb38-c0c6a72ca99e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b97c9d-72fa-4a7e-a6db-b8f42c9acf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cea8b5e-5753-46c8-8d10-eff0cf464ddb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3739f649-ee18-4375-8b1c-cf7c52a35b9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17b46399-2705-4845-a433-ddf7116d8793",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef7ace8-5478-459d-a1a9-25ece964f155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9741f1fd-d465-4ee2-a006-f47e9367f43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1442df-bd72-4117-b6dd-33c21f108e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca942c8-d8bb-4e95-b8b5-14b1e209d77c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d1e737e5-985d-45d8-b0a9-11135566a28d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0de4d6cf-31e1-4a5a-b7ab-dfa2dc295ab0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73472746-8f07-4729-95b1-135d99be5b97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5cc348aa-49f1-4193-a773-56308478e7db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b5284a8-e6f2-4fd4-87a3-9cae99fa803f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5114d8fc-d91e-42b6-a869-9ea77cd4c722"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff456d0b-bbae-4c6d-9074-5783e4618c88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6385ac17-4bd5-4be7-acd2-1e825b132f5c"
            }
          }
        ]
      },
      {
        "id": "5bf60ed5-0844-43c1-b453-a006ec75cd33",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3840a57f-b4f3-4bed-b39a-665d442da682",
            "name": "Negative Testing",
            "item": [
              {
                "id": "235eb261-59d3-4b65-afb9-3388774d5800",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e9130f10-6fd2-4149-84fe-05a2195f6fc2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d245314-84a9-4f61-84d1-430fa53bb4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04708f8d-2b3b-4303-a392-0a1f04fd3a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78af5f8-9958-4738-b10b-ff542d7b93c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae354d49-8384-40f1-9100-6e34ce2e7958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec0cc69-1f03-45ba-8e9e-40c4cb7c3169",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b3b738-b2b3-4b0d-a4a8-0abd55397b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab838f0f-34bb-4053-91ee-95e73771d11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb6617e-1663-43ca-a078-2334d9b025d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02f0b51b-eec7-46e1-80fa-f5dd3c308cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67d190d-eb74-410a-91bc-b13c24a223c5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280b70db-966c-4c8f-afe6-eec0776c79e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aea8d1a-e555-443b-a228-b1346c41ea77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bd6edf-a0a4-4a8b-9024-47bd2b8b67ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee484548-844d-4294-b0cf-d598d84e1b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f40c62-2572-4378-9fec-2d89c6324c4f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbccf276-e7ba-4add-8c91-26a2a9965f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8de703-8c80-4e01-a941-76c401191645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda0cafd-eda6-46a4-b28e-abbdd02d8131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f36ac9d-a3fd-4376-af5c-f85c75248df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2820965-2332-4159-aa5a-83f4ebf97c56",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9847cc3f-ade4-4437-9155-dbf542c6f1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2a3c40-695d-4d73-bfae-55b616e269cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066a685d-9857-4fe8-8071-f9a9a270a841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8b82ba8-99e4-4672-8924-0d9b8c1738cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdc7a8c-4a21-48e2-b60d-aaf7564ccdb9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc13e45-9b46-4633-8665-0739f2cc7f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9dcf9d4-e672-4c17-9325-12b864fb2607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab094ac-5259-4f13-9833-9ef53c77ec2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3636a38f-9dca-4569-94fe-bdfd1605ee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76170cb4-3acf-477c-b039-99d915a72d3e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26079bb2-eea1-47a9-9abf-d3390a6d97fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12f4318-755e-4644-a389-5d21a42f1a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b100e90c-7d07-480c-a327-9a09e7534d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "884fc13c-24c6-4c7f-b765-59536ad46567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60707073-a8ff-4565-a5f4-daeece149de5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6604691-81ed-44ed-b07d-aee938742aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8550ecec-cbe2-431b-9eb8-606f49de8774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a5e583-a07c-40fb-86aa-fe5e85d7010f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a07f42a5-b9c3-4f45-ace5-50c047876e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3c0db4-d9c4-43e7-9457-015ce004d14d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fa305f-ab42-4c7d-85ff-6ae39574b34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048a21b6-0438-4160-b9da-93f63e381c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f22a586-7293-4c66-bba3-3ff219480c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ffbf749-a388-4284-8ba5-9a01e813a121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7665754c-2888-4d5c-8eb4-ff5eae30229b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd45c700-36ba-4621-8a5b-a25c7bf053c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caaedf7b-5d7a-47b7-90b4-64e34168a854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667baa64-a1af-4245-82d9-8688bc1142c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e46f055-cd94-4f18-81e7-776b875bc507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d7dce7-0789-4b7f-ad6d-9b3bffbe9a3b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922cf71f-ae3b-4f61-9600-21fc8e674dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7cef59-dac6-44e9-9072-da4c6c782ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f032d353-c515-45db-a6bd-a149520026a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e57738a0-662c-4dca-ba93-3faa053d3359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff88421e-faf8-4798-a846-cda16b0e177e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6785cc-abd4-408e-b1f4-1cab81712181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44932c18-6994-4ad5-8f79-464e98ae1b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1fac09-b0c9-40e0-8869-70b855b86f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "255a5204-3fb2-4e67-ac06-db634f93fc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ecde4c-cd8a-4f0e-9fdc-31595f03d43b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fddc4c-18f2-482c-962b-d0efc2a7c71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e4de96-2146-4bd0-a44a-752089be0652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1643d52d-9594-42f8-8958-060147e2405c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4cf5b0f-8484-4b5a-9df5-9571064d4069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56372d18-0278-4790-a32a-ef1eb7f2c19e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3129a5-2738-4128-a96b-567544661ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885b083d-1fa0-4aea-b339-a6187e987811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3cb203-2b34-4a2e-86c5-059eb0a1543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82237509-c553-4037-9d67-82538e061ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd984101-df27-4e55-88c2-cd97e987794c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ac30df-bba7-49ee-8866-4595143b8cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f3c852-17ac-4aa0-b86c-d924f4dde643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb2025d-a827-401d-b73b-0c3df482f4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9c20f48-c6b7-4ec1-a58f-94942d705367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa691bed-fc62-4002-8630-8075bdc65e5f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24127fb-9caf-4ef9-88f9-ee6b2060908e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12190394-4c27-40f9-ab7d-967f5b6584fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264bd2de-6642-46b4-ae51-0c1bb5203858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "411ad40e-69e2-4739-9449-5de4fadd45ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0745d8bf-50c8-4349-9e39-3383a103ee7a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6c9fa8-69a9-4041-8dfa-ca459b09b55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db3bcc7-febb-46ec-b757-298293f65870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f6510b-24e3-4670-b844-6a9baa6a627d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a576a8fe-863c-4a4a-a0f3-738680bc2fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cc4778-4d2f-47dc-a965-a6d0fc9b8b55",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69841e20-0c9e-4423-88a7-3fa03c91a981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562ed486-ff97-4146-af12-25ada1c01430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1c206c-de8f-46f7-b815-162b5b6bd759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d60d85-373e-49fb-99a1-837c95804d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc1eb97-02a7-4dc0-b405-ea13e3efa035",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66745573-a742-4fd7-890a-efb8786b6b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c4db89-2a44-4542-b4aa-84c407bf0870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38a635e-145d-4eeb-85af-7e02da032bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5aaec9-1b43-4b8b-a842-b15298e67bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52318fb4-b0af-4b2d-aa55-861a2eab1475",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336e903b-234d-4f47-9a35-2877608fcf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79558d2c-6963-463b-b83d-3b8f4816b978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41409ea3-9180-457d-8063-16272a4260d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e56679bd-6c85-4896-8c4b-33a4c0b61c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c80c80-3d23-45dc-ad0f-c0bf5a51f435",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e54b53-de34-4a11-ac71-ccdf57481e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d8ee0c-b622-4d7f-99b6-837333d68726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d1b96d-44af-4fee-8848-60e570c1214b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2213f41f-1815-40d7-91c7-b7cf27fa389d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19c9072-d91c-4a8d-b24f-c0f38bd863c3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fa3612-3476-41e9-8e8f-99c1ba9185c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae669144-e864-491b-9ef2-e5662700574d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248144b9-d888-4102-858c-99acf6534551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcd3574-5beb-4589-aa93-96797110393d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bad4b6-4d0c-4bde-85fa-9a47253a47cc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457cf9a3-0ed8-4e41-a8be-1364a2e3c774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6343258c-a955-44d8-bd5d-80bc28f006d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8948ef-2cf2-49c3-9cbe-4b6f097718bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "807989e3-cf0a-47f6-a0ec-0c9796e502bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81409f74-d8aa-46ee-8dbc-32eb7465f4bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dccbdf-a041-47cc-bf63-37fd1ddec5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf914257-5db6-47bf-bea0-a148527e4606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b968de-4d2e-4cf9-834f-0d3367bdedcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "991aac5d-e59b-4535-963c-20c9df548a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502be0e0-77a1-4518-9261-a09991e4a8cd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8054d470-6a2b-48e7-b7b9-c4119ce3bbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255b51a0-cd78-45ac-a95d-15b8b60630b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d78794d-e0f3-4a21-860f-36e2e4b3eeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "798a10d0-d7bc-4a2c-8322-19324ac77533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7013ba73-0a11-4177-b9d0-ffb4fac344f8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11752855-1be9-4762-8182-3b8d5b0d2bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fd0daa-45ec-49dd-a12e-0729a16533b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fb8661-0b60-41f5-a7e0-c81596e08835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f50bcb2-e92b-4386-a193-550d847916b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a0b7ce-92eb-4d5e-b1ad-846adc82d215",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4137b1-ae7e-4634-90fc-8c6156d9563b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34caf6a-c45c-487e-be6d-1fca3434e0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbfe4fe-31bf-4004-b32b-13295af09368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d386ddcf-4d42-4f2b-ad8e-5593b06a5806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ddc090-332e-4b09-a414-c3fed21e812b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311572a7-2ffd-4f98-ad1a-4e3f2a6376af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e124992a-e18a-4a9e-83fa-cb95415f3b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab976f-f8bf-462a-9c01-0ebafe795669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de2097f0-20ef-4bd9-aa00-c7a2bf13075e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f13a0bd-4095-4fba-b679-295a7daeb227",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a87445e-009d-4dfc-972c-26106901ad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbe3ae1-fd12-4a27-b48c-1ceeb90895ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b8ac9d-9385-4804-9e90-23270cb13fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "284a0994-9eea-4b9f-a557-3ba7ff961865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c06521-5e32-454a-8ead-2f362f350a88",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda0574d-134e-468c-ab3d-2cffaa5f42d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7751fc91-8d78-43ee-bccb-4e7807fc8d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1713ec98-407a-4999-9291-3f34d5987d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7974bec-0af3-47b7-85f9-3a59159fda03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c42bfe-e5a9-4797-9553-96566a01cea2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63857a27-0f1e-4f49-a475-3b0bea204931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b463e27-c695-485a-bfc3-686c037eab87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb72cdc-ba22-42d7-b059-11d27b9484a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43886213-84c6-4910-96ed-0688ddfbb278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449eb3b4-4c60-4c93-940a-14eda63afe70",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4140eb17-30f0-44fa-8652-ef323b2b6faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd24165-fdc7-4880-8fa6-0d39b5e06330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc66a1c-0fc9-4807-8499-fb7fee5c45ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3936c323-ebbe-4cf2-b9de-d560bc253873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06caa8-3c77-4c93-b3ad-f84b605269f2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8df000-cd2c-4693-b69d-017dda964d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d323b9-2af4-4478-87a3-48b0d4a5403d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288ec1ae-819e-4c62-aaad-cf0f210d468a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9f8dda-c325-4b05-b5fc-9d726734b0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a29f74-328c-4482-a54f-10e4ed6418cc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16775e4-b322-4add-820e-7f03385a7efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6530b472-213d-4b13-8fd8-d06160557541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d69a2c9-807e-468d-a7fa-ea3ca7923e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "333bd6ae-c714-4ca3-995b-401bda3ade43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197d8b3c-52f5-4b81-aa23-39a4b12adf54",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd706c-e563-4df5-99c6-732da4915b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936839ae-8a39-4e87-a973-1f2dbbc3b344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1029336-f42a-4bc9-9586-f662803fcfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "377d7a9d-2ad1-4c3c-8985-8dcea692bcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324be235-ac6c-4688-b393-c48f1afd7130",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fe35c9-f997-44c9-b242-828a9b7a2c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de061d74-845e-43d2-9da2-63d37550fd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fbbee1-d015-46b7-abd4-c1a35cdedb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "914fd2a9-e57e-4849-8899-276eb0c0b3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce17446e-b341-4c44-a985-06b5f9e48e97",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8860bd-2467-49e8-89f6-f452f5f4d0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2281a1e-a74a-4841-b163-ac15edc98fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc2f58f-8ea5-4cee-84e8-ba35fdabddaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a16433-87cd-4897-b6dc-078b9c0e8285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee1fb62-aa35-4994-8a60-c79ac85aef8d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70ec97b-5669-4e9c-8dc7-0bbd4c9cd8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0becd3-d827-4a37-9d7e-2e59df973623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d62efa-3b14-4099-b4ba-99312442c0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f210321-3b14-4a2d-be9a-24251e79d611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0b9b0b-8d84-4f2a-a9e6-23320dfacd78",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6335135-a5db-4c23-8ebd-5985c34b5974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd5f037-f75c-4d27-8fe4-12c9a96adc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320e8444-3141-4dbb-b282-5c8d4a69e0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e51be8-beb7-4bd2-87dc-4d2564a33279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d90ff85-828f-49c3-a33a-f5028ac40e17",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d133e8-7c53-495e-b089-7a53fbf0fa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540778f1-2043-43ac-b5c8-4c0cc0b12172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acff448f-9c20-4347-ae2b-2dce4488f3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "646d5bc8-c1d9-423b-82f4-d6485b2b2f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efeb979-f616-4fe7-946c-c04f065f3aaf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26c83a0-a4fe-4974-a364-b9a9eb8f2f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b6ec28-ff74-4919-a683-233ddd48e2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe97c59-7e46-4a8f-b2d5-7341c3195053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1218a736-c0c9-4554-8761-d12aabe5f0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28fd653-9849-4291-b39f-c960fa10cc27",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0dc809-7c0c-42b4-8be3-feb4025c3b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d9d431-73f9-43b9-85e8-eaab78c6ba80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014f23ea-3fea-48dd-9d57-3b4144dd4c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7a966ddc-eeb0-438a-9864-a2a392513825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1403662-c7c9-4917-b4ee-08d8130b0d08",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72639da9-280e-4791-8edd-f56bfeda3b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29d1ece-9390-4c92-9673-71de5d15b4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9adbbb1-19f1-4315-842c-5282ea4445a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "998d8e72-daba-4735-86c2-537ab369f129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cc0de7-88e6-40d2-87d4-c024aff0566b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd6f6c9-681f-45d9-b1d1-b84d307b020c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0aa644-7742-4656-bde3-eaefca583053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb14a60-6486-4a5a-9782-396bbfe0f384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a42623-2bd0-4378-bf31-f6679bf514ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a17537-3a5c-46a9-9c32-ecc9c8905559",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f84e88-b1cd-4495-8855-a0fc2e1e8f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d809e391-de30-4b2c-bca2-9de13ac58230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd086543-9a7b-4a4b-914d-98c296fbf1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c244235d-650f-4161-aafe-f791b1b2f589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6effa2c8-32a1-4de0-a78a-b42a5f766d31",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0ab5de-137f-4aa3-acbe-a34e23a24170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d83364-0590-4141-a7cb-460c385b81fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da9ed9a-2c56-4e9e-8523-2122a96d757a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e70e855-d75a-423e-ba23-c5d2887ef486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2756cbb6-cdab-4b28-a53c-3dd5201822c8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e5b75a-b4cd-4b87-a0e3-3127898f385f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25dbeb9-cd8f-4f08-9bc5-9c2ab740d833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5bb22f-29aa-410e-ac65-e3ca8b329b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d54ddf7-1053-47f5-853b-179b66d0c3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efde5fae-25ab-4298-99a3-15af4c1bb19e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40920a6e-b7d7-4f1f-a2be-419fb916c242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4694463-08c9-4584-9ec5-00be048ae420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338c9cb5-85f9-4bf3-b3ce-5cec00626315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fed1cff-5bfd-4e75-9d80-ce1e075ccd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab09e6f5-ec36-4322-9ad5-3f0adc3e5fa5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03170bdb-f6b6-4872-a14e-59a5097f3497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1cdfeb4-af66-4fb5-bd33-c821f07e7935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d29cc4b-6aba-4b05-b8e0-1cd644fb6694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4362d62a-c351-48ba-9a89-21b3bc7d3dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a9e99b-822e-4619-a5c7-d7700aced50d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b7c30e-b4ed-418b-94b0-973db8a7648d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7784c2-980e-4b36-9712-d0f1e1671695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b05594-9de4-4a38-8115-d4c25c14a535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8364f205-01d9-4775-a3d1-107883a8a797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0758bce-aac8-4c39-9054-8d91b3f98fec",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09479d8a-c62a-4c41-82a4-3cef8487a529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5538ab11-c8aa-4d27-9fa1-28fdc3b3abe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2683bba7-b150-4fb4-a3f5-3cf04caff93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e567fa-b96c-46a3-8f98-e4a0f5f97dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6654ff9-75e7-4e65-b4f4-0d2a9d012444",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c932fd-aad6-4fd7-b2c3-f47488988ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569e583e-7ab4-4c51-91e9-e196dbc4b915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6aa9c4-882c-4e6b-b71d-68aca97749f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3440f728-85ba-4034-8da2-1d63f9026e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063d6e2d-edb2-4f5d-b9e9-4a68b8a84d11",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc725287-c9f1-44cd-9be1-c45690200745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f92c40-20d4-4104-87b0-ab7ba8b0aad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711dd706-8647-459f-aa3f-27cd9326338f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ce9a54-13f2-41ba-8abe-e728322215c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a52599d-99d1-4b59-868f-57cad36a5fa2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7659a850-6d73-486e-a569-4345e7466c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2070aa-64af-4eb8-af59-882ae3ddc34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd5deeb-8afa-4631-b24a-f2a42b6548f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "895c94a7-a053-45a1-9597-659fcc1df53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf861758-7f1f-46af-87f2-f35db47d35d6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c149c5-868c-44e6-ace1-6dff8fbf9e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee887042-89ab-4e4f-ae81-78d4ec37f5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a47578d-1acd-4cb9-8ec3-8b64badad6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbe022e-0ec1-47f8-b38b-d536e311707e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df9d7f0-6a34-4fd7-8079-247a622ba081",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8901462-cb82-48a2-8fbb-20f1d74c60ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb58406e-4451-4985-b5fc-2525a89a7416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a714b023-9a6c-409d-82f9-d1955f4afbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "30ef9fc2-eb5b-4383-afe7-b1359ee29b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4989ea93-640f-4741-83f9-5cba978c2f5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904fef68-6f38-4e5a-9c85-46c3f3cac4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33181731-76b9-4ad6-8e65-034039cdb583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415f6524-58f9-474f-85e5-38763072ecba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d37c8eb5-8aa2-4acf-8ce4-d073dac82b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73170da6-fe3c-4c0a-9ec2-bd3aaa548696",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da19ab81-f4b0-47c5-afa2-78eefb2fc134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de83ea01-3418-45a4-b17e-d7aec27c2365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af88027f-d726-483a-a274-35cc443b12a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c064ee5c-6bd4-4f88-95e7-c4ba6f5ff212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3636bafb-0b3f-450c-a37c-559c2751e84f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665540fd-3f59-4b14-947d-183b7cccff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4200f846-74ea-40c2-9d42-e6d6759486c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1d667a-a0bb-4dcb-9367-e385d911e1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af090a68-9275-499c-9a6f-332ce46a377e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e50944-813b-427d-a8eb-30715bcb3783",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dd0ea7-b11d-416b-a937-5edd8ac406d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14aca2d-16a9-405b-8113-e4824e469d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e7def0-1aa1-4d76-945b-53017719e08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f249b6ae-783e-438b-824a-8837931a75d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ceca93-c418-4014-9912-7d7a99aa0d94",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52f4f2f-b649-40c3-ace4-fa377ca73248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618c086d-632a-4705-b589-eeb35b7c06ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cec93b-14a4-4d72-86de-45c8afb8f5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eefc073e-e73e-419c-a2ec-edc7be683a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62d9007-6602-4ad5-a98c-3c6f645d4f0c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a032f2f-7978-459b-8417-6cb710194d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2279b2-3d4c-45f6-8477-0e2f7d7dc6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb31391-ab2b-43c8-8083-ac880bade37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7402567-3ba6-426c-9323-f3292afd7b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c655d1-b40a-4eda-b0d1-56eeaf2626b0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa13c16a-4416-4871-abd5-0895c8b2c90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acfaea3-ef81-4094-8cd6-8af6d84f7bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a759d6-5173-4dc1-a8ed-b3ad484186ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec6553d-c948-4510-af33-b7ad7e9c4c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0034388f-be71-4bdc-8122-68d1e78dcc73",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea409f4e-f369-42c7-a7c2-033c2f1a8991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18db34a9-41b9-40ba-b56c-b9cc6e85957b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c8440f-6edd-48f3-81e9-4ae5fe4ee454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afad4ebc-8a11-4197-91cf-589fc0d44802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cb8870-763b-4c3f-a702-0db495a5cb27",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3400f11a-5765-45f2-99de-390606d47c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84f4d60-fef3-4870-8b94-a27060a5a319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda97404-e8f0-4290-a345-b9fb27b90298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e386698-4c0d-4ead-bd44-d6dd05e26711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67287d28-cd55-4ad1-a2d0-043b94cca98f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706badfc-7ba2-4ebf-bfc7-ec96b6412b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ef0fc2-187a-4c2f-abea-dcb084fc0468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efb7e8a-9910-41a9-9215-f160b0a3c734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df391563-fe61-4f45-8565-d04179baddf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4496662b-db28-4651-a358-7036f3905adb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b381d8-8230-4b13-9604-3601e7c7db17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdd3954-bedb-449d-96b2-7390ecef71a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a335a40-bbb1-4bf6-be31-6248809c3560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1687f2b8-48d1-4cb9-8724-ec0a8262cd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34155bb9-4ea3-4248-b9aa-71926616f6b5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b167ab23-8af5-4787-abc8-ad532fa24618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250aeade-4acc-4cfb-b3e7-8fba1676672e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05bee74-926b-492f-afc6-37b8c1327676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2e0b67-5b1a-4388-b516-668dd3f379c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fa7b7e-5903-49e4-8557-8fd91eca88c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf069300-a925-489d-bbe4-a8b60716b474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e922aa9-6440-455e-9780-9faddc3ff79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c9e7c1-bb3b-4cd0-870c-5e0a0dca2284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a7bef3-72c8-43ba-8cd0-3b6e58f7e2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425ac453-d23c-49a3-bfc7-862161dd7e5e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb68957-40d5-4942-8217-7eeedc5b469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c150d6-ff4e-4a54-bb42-da30457ac417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6415cb45-a9a7-43c5-ae99-014835d5bec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69e81e11-1e0c-48f4-b222-358b574508e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa6fa71-d618-4015-8dae-455a084cefb5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7a7965-2ce5-4cd2-82d2-926d5928a980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a56d16d-9a37-4576-b153-44c4b17c3a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa984dc8-f7b5-4aee-897a-f8f74ab8c898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a03e2f83-1558-4dba-bc0b-d474b09ca139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db326ac-9b28-4ed2-a636-a878899dfc42",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09afdda7-14d0-46c4-bab5-9e687d29a23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298c63be-0938-4a3a-9356-ccabd8589185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7595bbc-5f33-44dd-a506-e9fd9e0c45fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7188a0b-8793-41c2-927d-261890c7f397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f216906-e1db-4780-9bb5-0c12b8579eda",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06da6098-c5d8-42dc-b9f9-bd92108e2ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de41d2c6-8401-49e0-b724-8aa7b66f6640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375ac9bd-8799-437f-b817-c77684dc6368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb83783-afcc-479d-86c4-8e90a3d53cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663b60f4-175e-4958-9b7b-2443d89d25b0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24b468e-c186-4282-9de3-e560fd769ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb01142-7492-46dd-8d41-e349b7a45e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e390c2-c22a-46d2-abaa-70c0b2866b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3134cb0-53a5-4fd6-ad52-1bdc171a36b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9842fe9e-c60d-47e3-acdf-bb89c0c9547b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03f03bd-d316-48d1-837c-05bedba181db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d36321-17ed-414e-99ac-7ca1d152fb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71acc827-03f3-4f5e-90ed-0920adf6a594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce1775a-73ab-4fba-ba95-802fc96657d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115f2811-8737-4b29-9af6-33812af6da0d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152ea788-81a8-4c2e-b9a6-98165c5444de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df97ab9-88be-43eb-9083-fa41eb4571e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7445cc64-d993-4886-ac0c-f03aabf9c9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f245ce5-65ed-4d4c-9b41-094efd4927e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499ec26e-f00b-48d7-b00f-fa2f4e076c38",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab28b329-afdc-4b5b-8be5-e101d4bc5f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0f6dc6-5fe0-4146-8e0a-1eb39fa30a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fab34a-b693-4900-8a50-fb5db77db0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6c5a97-0e50-4014-bb88-c435e499c629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d6c90c-2469-4f89-8cdb-79276a03bee4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc8ec3d-9cd1-4f10-a244-e23d69591511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a110baf7-7655-4755-91f8-2e431a651911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cc7707-f45e-49b2-b487-fa2caf0f2036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb5abf0-9b2e-443f-9f83-d345005cc165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a335c61-7cef-473e-a9a1-bc5586953254",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2914b948-7a12-401f-bdf3-823debe509e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c54d289-09bc-4f8e-88fe-ec5a2d6da9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f13595-14f7-43b5-8237-efbec12cca4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88231b50-9795-48f6-8cfa-8cb699294908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c85b365-7b19-4476-8157-748a489fe7d5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc775f9-c6a9-4163-9c21-a66b3ca18901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04854469-e3b2-4338-a6e6-f0ab892ac222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b274137d-0d5e-41dc-b191-65383a074988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e13afa00-21ff-417f-87c7-9eb51a6e5bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c16510-243f-4bd7-9233-83e2c9da100d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862ccd7f-35b9-4f6c-a8c9-ac739c8b12e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152dbde4-0c64-41e4-9c55-e9b28dfc47d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16eafcaa-2ce0-4e66-b1bd-bad7f0082950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4c0953-05ff-4226-8230-5c8b786504a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fa85f2-2dcf-4599-be0b-05dc2fd512f0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760c5a78-567a-4753-ac03-ba6cd46e2007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3407d52-288a-4bfa-aa21-a6af36c10288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129d5d2e-f1dc-4697-826c-6082241086fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1d2290-608f-4c57-b0ff-1e0730a5e674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ef17ff-590f-4f74-90f5-d51a209d41a0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97251d78-a4dc-4c22-8902-ee9003f21b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fc57f1-f0f6-4a32-847e-8acb2f07be6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56be027c-1f49-4f72-9992-7258475e1eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf73736-e1ca-4e63-8a7b-518e20f4cc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90101c5d-5a57-42c4-883a-ee15cc1f1bcb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e31ce0-535a-4813-96db-413049a679a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c9b46a-3ddd-492a-a410-3c839469cd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6998841-abdd-45bf-b43c-133c2d4e245a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2981aa6-6f82-4cbe-8ea2-058dc95673ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd3f2cb-7dfe-4661-92ae-dab277df8613",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35310f8b-7aef-4092-97ce-4edba087ce10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b705c2-1147-4681-bd07-54a70f037128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462829cd-03df-413e-81fd-765cd1e1e0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fe8656-4219-4ea2-b938-c7f7f2b76e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3eea96-c89b-49f1-8117-6e312e753010",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e46433-8244-48f4-a3d8-972a1da1f3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84115f8-1fbb-4020-8869-03943fe533cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f650a8-1a9f-403c-9b1c-fd760b85aa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa8019f-34bc-4fe4-9381-1892d127dd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c567273-feff-4459-a4bf-d0292ebecb21",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4f923f-89d7-4500-8e27-3153f43af0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b959ffdb-b56d-4123-83c5-788adeb1be2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94e36fa-546d-491a-87c4-a22839c937f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "071e4e39-5fea-4b39-8dc5-953b7502a711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da90da3d-e6fd-4fb3-8bea-4eea1a964745",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a0acea-11d7-4e0d-9271-85a2a65ec96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a70915-b46d-4f3c-9ae2-a47f72ce3f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f4dbc1-17f0-4ac9-8fb6-db244707b2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57f252eb-d3d9-43b8-b33c-783387241503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d000c6aa-3a63-45f9-bef6-0333815b323b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498bd629-07f2-486e-aba9-d39818ab9590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45cc945-951f-4af5-a13f-57f73c8b4d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0468343b-b760-4b06-8a92-5737a60d0f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de1a4fad-3494-406a-b343-c9e819c8c2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cc37b8-1563-4b6d-add9-a54c2203f24b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7220e685-2a65-48a2-923a-cce3f479bd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ce8083-31e0-4f63-a5b3-246b8e2b2053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2e4180-1d36-4617-961b-3dc0bf3e950d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "addb719b-81c5-4abe-9c56-05642f8557f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55421ba7-3fd9-40ad-8831-5e0d9e202a74",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4582748-5ed3-41ce-8a36-6463d8011bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094f3fa8-b710-4d86-ba14-fa47c9098f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed653708-92da-48f2-ac87-448f2f67a2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd5bfb5-1310-417d-8fe8-f1a5a633db83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994c1320-d31a-42ce-a222-535e0a9e4404",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9860b6a6-7f3f-4324-95f9-1ff71b6d7785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "961c2b6f-44b7-45cd-ba0f-3008861b3753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6acb0dd-9d14-4f15-852c-64850a392a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0289d2b-d14c-40d7-a610-a19b370762c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1f28da3-6ec4-46af-bedd-55d0cc14f76a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4e69cf1-e988-4c15-b01e-03add8c45d82",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6395c510-a166-4c7e-a29b-660998a3bcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7eb8920f-0f72-4a6a-98d8-3824992b6ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e8a106-ed17-4d47-95bb-261694ab6c4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1a383ac-2504-4a28-87b0-54e2bbdc9401"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d6cf76a-3dd2-49ae-9881-3a52bd970579",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d95e7c6-ae8a-4922-bbd5-bcc0034fdd2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "205a2925-a822-4681-9681-42063e47f460",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5489b3f-68f2-40d6-adf0-6689d0cfe5c1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae152408-cb72-43af-a839-2986cdefe48f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1cf62a57-70cf-4632-b3e4-bc5cf406b9aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22cab5d6-32c7-4d4b-b4df-11e2aa1e9839",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "687cf338-85cc-440d-a95b-d0159006495a"
                }
              }
            ]
          },
          {
            "id": "4138dd90-6e86-4cc2-8926-1441dd961bcf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90d439ac-943c-4475-b041-8f5867c1a554",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8535270a-3139-485a-a008-1aa7453e4fbb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520de625-18a8-403d-8ba9-5774a93dd638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c00c5b18-3ea9-4dcf-a654-512a8dcdf463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bda64c-bcd8-482e-8ee4-8a029dd0df72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d45f2e-a423-4a3e-aca5-bfc0de1808e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ee6bb80-e30b-424e-b6ad-5c52d7b59e56",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6cf755c-bb7d-4009-b146-f9fd8a6c6d85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e0be7e4-78b6-4df3-8768-99eba7ba735f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c0ab014-65d7-4d0b-b5a0-e1ebc9b1997a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "490333ac-64a5-44cd-978f-e4a0c45bf52c"
                    }
                  }
                ]
              },
              {
                "id": "f5c146f7-bb73-48f2-87c3-1eb266b5868b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5b50398-b6ac-46d9-9355-1f933ab1f67a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "706912fc-4757-4407-98e8-3929c7499102"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5351acf-c122-49a5-b43b-3c8828fd5b02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9076a2c-d717-462a-af06-d9ffbda22182"
                    }
                  }
                ]
              },
              {
                "id": "fda3e1e0-c751-4631-829e-ea2a9dd4d35e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f23c6fd0-8eb4-4709-b78c-e4c0b155d64e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b76fab9-8356-44e5-802c-9c6b67940974"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed02458b-f601-49be-a92c-a3406a9dfa38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d891ff45-f268-44ee-8720-5de73425a52d"
                    }
                  }
                ]
              },
              {
                "id": "a249e913-bf3c-4579-b359-88cc1ddc4eed",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e036fb1-d9f7-425e-92fd-fbc900727c3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8800abc-7277-4233-9564-f6bdb0fd15c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9983c8de-14ec-4e99-904c-545230fd0994",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "67025858-4376-4ed6-80d1-f4467b787bbb"
                    }
                  }
                ]
              },
              {
                "id": "60fb1bab-bebe-4afe-9aa0-861b40315b62",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21adff5d-a782-4fd7-8e40-069c8540e9ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46c67430-4c3f-4c46-9dd7-e32c9f429f86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bc49380-cd96-42f1-ae28-0c46c81c35e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "61c46416-06c3-4938-a3c8-75ef88c3d0bb"
                    }
                  }
                ]
              },
              {
                "id": "182e36ff-a8fb-4235-9472-4ea1892ec06b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21f72060-d5b4-40cf-9068-07b9aa36c815",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d7c3e23-e827-474e-a41d-de551b2e98a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "259a078b-f5c8-4ceb-9645-91b6d4a3e87e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b1fa8f4-c418-45af-8bcf-8aca6875beee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7c2a6e3-68f5-4d52-9b74-57d744a6bf1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83f3f0a5-6c61-4bcc-bdf5-a60f3f30d5b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23675a1c-f6f8-472f-ac73-a235f8e1fd75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59b9f5bc-7a2a-4c96-a49a-d339dadf2a53"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92877650-5b06-447a-a5fc-17d01640eda8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3ba0dace-8e6b-4dd7-b957-e18b07f9c96c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "274c87ca-af6e-4ac4-94a0-d16a1b9e0c46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "959adafd-cde6-4227-b235-19f3966549f0"
            }
          }
        ]
      },
      {
        "id": "ae6b7abf-a0c0-43ad-a624-24eaeb5ebe05",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d72ed827-6973-4081-adf6-8f0cd01c0103",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b071d8ab-a509-4b5f-8e42-7efc7ce5acc2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "528751b0-9be6-4d47-af55-9e38393f161c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800374fd-b326-45e1-8988-0c9c41c4dbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a080bf9-7941-4d04-9981-580582c87664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ffa373-15c6-4abe-8eb0-2a41ca1c1b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0a9390-c717-4106-8289-eacf1037d527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98b86f1-5aa9-4720-a533-ce8cf9ed21f4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ada316-791f-45e1-a370-538c21e56a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2d98f4-a987-487f-bf08-9391a4450755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4041aeef-faad-496b-99ed-752db73c1a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b846139e-00be-4a51-8c41-9410c4145e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a960602-4d5a-496f-9b74-f9ac04862167",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7733172-cd14-4e86-803a-616383aafcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e236f9be-c07e-4b7d-88f1-4386ce614038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2791ed8f-274c-43fa-b0a2-f71b2b6f83ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c09d89-a20f-4622-9765-03ff7405feb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e2e11-ef54-4d4f-8311-43d4710707ed",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88c4ade-f108-4263-b7bb-7c2390374316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f352519-0f2e-4c9d-9069-6cb843b416b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f522c1-f7f7-4328-8425-edc4ee4b23ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69484cd9-ed75-4af8-a085-f20d903aa4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7de3ccd-954f-4108-80f5-d4f5bfb84904",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d966c624-d4f0-4d04-9605-2fe2da706559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9997f2-96c5-41f5-8f28-2dca47c3dd31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c7da13-c680-40a6-a2bc-65fe1056a890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f0f587-3b08-4bb0-bf5f-623dd8cb0c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ce70bf-3760-434a-a857-1509b9d8b3ff",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5001719-1d50-43a0-8362-d92a6912d26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e71af2-6b1e-40b8-9668-058130fd1799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5572355-1044-43a3-9ed2-fd875c12cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "322add12-ff54-49a2-bdb7-57a48c847cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77395614-7ff5-4745-9d5f-de1d9ed68314",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ed391d-6e0f-4f78-8bf1-d80dfafa2082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46715a64-dc94-4aea-8f71-8d9623d38d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37baf089-5003-4557-b14b-b91749dbcbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb59cd9-d7d0-4399-a6df-34a8214f8bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e3378d-6869-407b-baa6-72aa8ba1f086",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0317e2-6879-47ca-a50b-60cd16287fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5f920c-c3bf-4f6f-bb88-20b4e493b324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b496139-8473-433b-b354-e1bee9d4fa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "075c8a9c-8026-45d7-ba96-8cc08e3fd53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7f7123-fb89-4183-91e4-306254181c3c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e48d81-95dc-47b0-92bd-97d0670c372d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210994b1-c673-49a7-af93-181dc4e8efe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c918925-b48b-4db0-9f86-c0ae78a12e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad526df-495a-41fe-9f16-455b4c390adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61111550-aad4-4d84-b424-0aa67926280b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d47f37-5657-4a9f-9ac2-4930125abd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829401a6-0b56-40dc-81e2-0d32f53f4a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31f2848-56b3-4808-8da8-7d92f11831b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e477de8-ec6e-40f5-9298-d47eedc0c917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1727f04e-4f5b-4b22-b661-5847e5d4a9e8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc061535-8a33-4a16-a7d4-a81835de45c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61af11a3-ac03-440d-8ba5-1380da25e1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e35f8ce-1131-456b-8e41-306e647cdff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1744d5b1-e779-4719-bae8-f13bdc421605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241ba016-7138-4774-ad62-40ab890fda26",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceae46d8-aa5b-4ac8-8ad5-c085a6d8e5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819b88de-29fe-4436-be98-ae34ef4aaa5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38852bf4-f381-4f66-b5d7-90f78203b423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce9cf80-f2d1-4a03-b092-30ebc7f431ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e318875-451f-45d0-9139-787810ea157b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdc1706-214f-4f81-99ae-fda120f7184a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0799987b-1e43-4373-aece-4be8a3aac92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734c5a25-c029-4f79-a32c-26284f55d6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1af250e-7565-467f-8c0a-b23e110ecaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd6535c-6f4e-4390-ae3b-3212b9b3e133",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d74e0d1-d4c9-46b1-8e2c-c8c46847a599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802c84d3-3ee5-46a3-bb57-73f64d7fe21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d5f7c1-3fb9-456a-9722-15a4fb4a9a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "301c6f33-9a70-4a62-90ab-2a055425f506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4bc283-ff00-443f-ab49-962c1ada7787",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf23335-68a7-4ab6-8777-99cf5eb5e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a303aa17-3920-410b-ba88-75061ecd5561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218bc1ed-e5cd-4442-a295-b0d1195b4751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f49a882-e780-4107-b808-c89c042d7f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4b8d95-bce7-46a3-ad58-a3a46da5d69d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4961936-1cff-4654-92bc-ca3db03d214d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96c4438-2aea-4686-b507-4edf6d755d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb21b82b-4d8d-42f7-bc1c-1abba6b01a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef9da69-289a-4fb8-a4b3-bd854c25a240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66949ff8-55bd-4466-8766-e4e10e34367b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68765311-c894-4dc4-88f9-9fdcf7eca27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a7368f-6b43-4eaf-875e-e4090a592367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00a2a2d-f30a-4c52-a746-af9ec838f124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "51854f3c-bd6b-4387-849b-4a1f17c3a86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7c7f72-3877-49bd-9b18-f15756634cb2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd777046-0d5d-4eaa-b424-8d57d935e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c9d019-f245-4b72-ba4f-685d4bedce8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15ac856-0529-4b11-bf2f-4ad72570f658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ffa2c9-2c61-4cf7-9497-bc47df99f871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97431d9-e956-49b1-9d34-6c2f8cdde81e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd99bcc5-5b8b-4dba-8bbd-92eac6ea6076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0b1ad8-323c-41bb-bf02-ba1bc8c641db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766bb827-fcac-4529-9883-f04446a7df27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3f8963-a4e4-4158-87c7-bc8634290832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ed0053-b77c-4fca-945e-c7cce6a31861",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdf9397-978a-499c-9786-dd30e7c92348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205cda40-0886-4ae1-97d1-08b46c186a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51337b3-abb7-4f7a-a68d-2890ce45f659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2b63c1-4a61-4c4c-bd1d-07e9295860a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc76beb-c0a0-4c06-9c92-3aeb50381840",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0808b935-e7b4-4ab8-8c76-1751e9401273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf089ce-eec4-4220-8334-cb13b0b4c246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df5803c-93b1-4978-9696-6f4ffef75f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfcfa4e-532d-448b-b6a2-d30af9017479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020b257d-0673-43b9-b3b9-e6a79d2a5b04",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcba36c-d393-4a02-a533-a946e0d5c276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9623633-5037-4021-9532-520afee27127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95c9e55-10a3-4d04-a35a-42a92ed65f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10905f1f-85e8-4d99-a30b-c01e3b1731bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c110a16c-6111-43b4-8eb2-c9fb05bcdb4f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd669fc5-f52c-4765-bf59-d3d7b94b5ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72a8198-e846-45f7-bfa9-1169bfc9ef9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01497ff3-a25e-4fcc-be8c-f30dcdd4e9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab9a409-adfd-4116-ac82-e295abfabb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b48530c-d137-4ac1-ad95-2fd0aa7c83d0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a988d9-be87-44bf-8ae5-2b094bc34df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246d905f-c3a6-4b78-8e68-ab33f1c1d3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cb705f-54a5-492d-972f-aa829780d7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a093938-52d5-48e1-ad6f-bdbd2bb73018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbaee4e-2b61-40ca-81a1-e5d3307f75c9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3935b35d-b5c0-4a86-ae0e-31c913e23506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fa95b2-1d2b-43c3-98cf-976ea436a96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4d8d9b-7c75-43c6-925a-c5cae6f1e2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76cff513-94cd-40f2-a050-c51645074202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f290dc3c-d84e-4ed0-9de7-e1d22ea05889",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efd72fe-60cc-4dae-aa2d-49ef093f08b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae6c634-c47a-41a8-b6ca-05b5f0858177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3333c79-42a7-428d-9087-380681b3bc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "102b4f59-ca1c-4478-b82a-7929db1b83c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20677450-2e48-4cdf-aa70-19d20561e1ca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf7d6c2-c1f7-4dcd-93ea-974ed7302c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a556c604-5292-4cf4-846d-e1bb1a0f49fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c609cc53-bc62-4a97-8a7b-30e66516ceb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79a502d-a0ea-4d69-b45a-6a1aef409db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44b4af0-fd7a-4be2-b8c2-bf1627bfe663",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa0547a-6afb-4682-b613-30eb5c5b7e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed9fb7f-7851-48c0-96bb-f377ea27d5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9349c3f5-aa89-4353-b52b-982cd2a2dd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff37b96-e133-466b-9323-f3247f54b3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1e944b-742c-440d-b6ed-1bee9e153c34",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54383467-f571-4cf7-91b4-64e2c894c585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89995e6-789a-4a92-bada-1f7837fa3158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13bd3d5-f5b1-43e4-bdcf-47cdda4fda2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a0720d-f187-4691-a8ca-17db68e56e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbf26fd-8c5e-4108-8da5-83f7aa293745",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e75cd5-d06d-453d-a6db-a9eb314f24f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b130627b-209b-4725-9b5e-4e638d4b69f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4069fd0-9a84-46fc-82a2-2c8849b7e6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a2e51d-a808-4206-a355-ec43eafd6347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e35a4b-2bfa-49dc-a535-23c413a4510e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675970cc-6104-4449-8195-2e920f553b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c751a9c-60b0-487b-b025-37eeae5ea742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0df074f-0b88-459e-8110-0fd2d022cb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ca9e48-eb59-4364-b0df-5c5ce09658df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754b7cce-dd2e-49ba-a32e-d34d6210937b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c17a189-672f-47ef-a9da-be951c818667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ab734e-3b4e-4dad-8581-00ff1313a3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4178ffe0-f1f4-4a76-905a-f9ac3fad19a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf5c9fd-0fa0-4da6-8f0e-03eaf1b200c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12bbf8a2-7f2b-401e-a68e-48b7340d83ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9d13995-29bd-46fe-8340-3c23b31e21d0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f404b5-782e-4860-a564-85335dea3ab1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c37103c3-9d42-45a3-a7dd-ecd8a1a67ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd0be83-e3f6-4e9f-bd90-ffe2fced13a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f7c52ab-d79b-406e-a75d-4282584be025"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc47638a-99ca-4e16-862e-31b5489577ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c04c1e25-b527-4adc-abc5-9278997b7fb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0102d17-b32b-4890-9162-ace99c600c33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a55be449-cc98-4004-997a-d0918adadad4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0fc6a5c-dddb-4991-afe1-4804a80b13d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41dcd0c4-c491-47ba-bdbb-8099a2e4134d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1131984-106b-4453-8229-bd2ed91da41f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e69ec7b7-b471-4179-aa72-b9f519efb3c3"
            }
          }
        ]
      },
      {
        "id": "3973b478-333d-4b86-863c-7217f831fa4a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "471f983c-a19a-4850-97ee-10acb67c2f22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "001b665c-63a1-463d-907f-38eaf1cb33e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2383f43-3f0f-437a-8b34-d66f7cb208ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48ad1f0-2ee6-4e87-a998-a3c94bea4d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ce892f-837e-4445-a92f-a8b9ac40cd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c475965a-8cbc-4b28-b27f-23460f9bba4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd65f68-7ce8-4447-a595-eb502a126c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f338f84a-4e71-4910-9cc0-33b34ee70239",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d299c1-cff3-4382-8f33-3d495f8a87de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3827dc8d-4782-4b4e-8e2f-0c438b8a66c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7518986-b57a-4ee6-9fcf-e94fd01400a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3af23a7-50e4-444b-a297-b57fb9a3a979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533da3f1-5724-4293-9e88-0c913759b3e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084502df-e5a4-4edc-97c6-f7b461043253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93062c2-244c-4d0d-b508-b1225e51bb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc6a533-a8ce-4880-9e28-6cb3d5ec3465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b397575-d174-47d2-9790-1f0a58bd3dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554a45e9-c227-4fb4-b36a-d00a65c2ae4f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8205c5-f345-4bc1-b506-043a02667296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1102ec7-200e-4e52-bbb3-300a42379f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cde47db-82fd-48b0-b851-4dfb53aa34cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f35d403-4c57-42a0-9078-56069104228d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f9fcd9-420f-4242-8abf-6f042e49119f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1870e5-fe8f-4090-b54e-bdbe7328ad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7df798-c82b-48de-a615-63b0006e0770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66275dc-7487-475d-8df5-c876c14690b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02bd2de1-9947-40c8-94d5-e1a7d2e6a986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d6f1ef-a247-4dac-935c-aee6305304ec",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bcd5f5-00d1-4d46-a9ce-14a16d80c732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f53a0ce-b8de-4f51-8254-cb323a89a832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09384532-4ba0-4482-b98e-cde63aa2c4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "509e59e7-95f8-4fcb-a6ab-0fdb2ce30cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107ff0be-f5fe-4a1f-a65a-1a4a8014cb5d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15032380-1b07-4767-9eef-030f86ec6ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420ddaa1-b4d1-4e0d-a945-7226c255001f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d607afb7-073d-4386-9500-c97b35f7d8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc828c9-fbf9-4c39-b7b6-66a8d51bdc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94c1221-264f-4a64-af79-67bba47263f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fcdc55-f354-43ef-8349-89336e4aa2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f499a44-2c33-4683-a365-4f6a6de55fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1deff38-79b9-408b-b8f7-3a055e5f8100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "584f6b41-efc8-4fcd-9768-374263d0683c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eb994d-f6f4-4351-aadd-e8a9ca0165eb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b2137b-92cf-4f7b-82c4-a27f9f070fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e43ca9e-ef10-4642-8fb5-89e4f0be36e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950f90dc-f118-43a1-aafd-d8fcc74e3473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa955a77-7ec0-443b-9d0f-260e32ed2e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7192ca46-fba0-40f3-829c-243c27e1b6d3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd2211c-0ef0-4bda-aea3-30151321da7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216b07ab-14ce-4721-9b9b-ee1636c22967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ae9337-f1b2-4cca-9985-0fcbc90800a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8909ed80-8bf3-4151-af95-b3f05795d828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499f37b8-9d81-4b19-8cba-a029705ed5de",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69fba0c-9adc-45da-8240-7555737599ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35530773-c97c-4568-b625-88028fdb8798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cd4b39-71a9-4bd7-9653-9e5aba1292fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab7155f-f690-41b8-83cd-5710fd7f98ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30c31f7-4351-4686-9b6c-7ba494510e0c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbba1cdd-2f57-47d6-a820-5896bad3596d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64415b93-0e70-46ad-873c-8a5f033de569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ebfc1c-106a-4871-96d6-896a6315eccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "411b826a-9004-40bf-b830-bcdbf36e9fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f53cbcd-dc4b-4cb4-8e5a-2418efe0b904",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d28755-8156-4f42-abb3-8c56d27778a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885dee96-a92f-43d7-b62e-278e02270846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d0061a-628f-4557-b189-ae78f5c85400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "762faeb0-0332-4188-82b6-8f3da5034926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fdeeb6-9694-445a-8ba4-302c83dbe99b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614d838e-cb9a-46cb-9330-bb2434cb9fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2441ad-ee94-46d7-a0ad-a8a1f8c3e16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8fb473-b7b5-4643-bcde-637f460de564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f68eea1-13a5-44fe-a3a3-3b35426fb3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a664ac1a-3ff2-462d-b7f4-c259f5315902",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f40f67-767a-4847-8c62-d61b01cc70e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e06dd89-0342-4b75-89d9-2950bf06bdf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6071e442-683a-4818-b388-94d179e10c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be692d1c-9fe8-43e2-ad0a-1e6893e47408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da69fa4-c965-4232-8c67-a9062e5e2507",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37a8cfc-ada5-49d7-a12f-8b9dc1ec0529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c711ca4-50ec-4f10-b27b-1f1876ac2cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935ce4c6-cab3-4c3f-8924-ce73a811de23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "25ab6604-2c11-4027-845f-7565d5bfb279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f689718-e799-4fdf-9997-7a79c7508b5b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768a548f-c821-4d97-aca8-e2cab9bbd93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b49d15-38fb-40d0-8b54-f96f7da7f00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f5664f-6111-4a7b-a992-8ac5700b61ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8211726d-e4ec-4cc6-8a89-f6cea7307d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1304ce50-31aa-4f5c-bfd7-cbb445445992",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c79ef9-028c-4be6-95dd-8768b4ff45ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea9d05e-456d-4125-ad90-99a77c71bbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657ec2d2-ff63-4a48-886d-ea9853e2ab28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea127d35-29b4-4a17-a082-c23d104d7f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85cc142-2a8b-47f3-a647-ba5c72f3f938",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f97a766-03a8-4ee2-9bef-c5359d538b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7289b9db-c12e-4da3-a836-2e3bf7ae0183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25978c6-25e3-47c9-8723-d9cfe499f2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5b941d-0781-480d-8c74-45431abe2195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8b0774-4e01-4051-9cf2-3368e0851bc4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101371f4-f902-4a52-bedc-b7cb5474b25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e34b26c-a98d-4635-ae9d-640bf4b12876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4c3dee-0117-46fc-8552-d18b51b8cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52763ff3-69ac-489c-9133-1fdf093341be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cc29f2-d88a-4f8e-85a1-ee3258f00d73",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca7fdc5-abb7-490e-bcdf-b7fff503e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e963fe2a-e2d0-45c9-8c21-74b20b59529e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b78e20f-bfbb-4e60-8f19-332656d6180c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "667a561c-0772-45c4-88b1-63e84c1bc40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637b66db-e3f2-4609-83ec-4513f17eac52",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1341aa45-e5c5-420a-af6c-97049a025f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0407867-8bc2-45a1-89fb-8cf0ca8f09bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfca3121-de3c-467d-b93c-6bf40a23d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29cba56f-c7f2-4fa7-ad57-c1d774aa0194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44efcee1-5c30-43a3-b018-7264b18dac19",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff75a4d-ceba-412c-8b4e-98f7db3c005f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4a6e44-e7b8-4d6e-8fb5-caf5177be449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920554d7-d029-40bd-b578-3df8f3dcc5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8eeffac-b81d-4d36-a998-1493cc1c4ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9eaa38-3754-4ab1-91ae-526662905412",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00ca10e-ee0a-4ceb-89b0-7750d1fbda58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb1a7f6-780e-4bc6-935f-9198ac9ea245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3ee299-af95-4d63-845c-126a744f2251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe02879-adf2-4882-b1c4-f4eb4dcda469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e4621e-7292-49b6-b3f8-5765db351590",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b77501-cb9e-4330-bacd-06e2dd1ca1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd793cf1-097d-4dbb-9014-2026806aefae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441165e6-b5a8-40f6-8bf6-147474df825d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60952d80-727c-433f-a912-d42b5fc88a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6e0a63-d973-476d-831d-57be1fa4d542",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74af3826-6370-44c4-880b-1fbfcae8823e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0e2c64-135b-4275-bc65-9d8055ec43bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5bf1af-2bf0-4722-9aa3-fe0cf4f7a623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60b07622-a288-4389-9655-7e9b4603c87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c32d0a-18e2-421a-b86e-4b68249966c7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6ce18f-71fc-41df-9c5d-fbd80f2274ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52cd9d7-1f80-40f2-87d8-b3af865ab75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cafde43-d88a-4a0c-a3e4-362d5c21d682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a43e0d48-1947-4dde-bd6e-017a33b94845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc45d86-e72f-43a5-83eb-44fe5ccda96e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f6cf1a-a649-48de-88c3-21baa84e32e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102004cf-f228-40e6-9fb5-929de3fd29a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b50f64-5d28-4942-9654-884708cd4b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0fa3eb-e108-4a07-85f7-cd695d8cdc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcdb6dd-1a45-481e-9456-f1f891a86883",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0213a6-5bde-4543-a163-435991a6ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f150441-8f97-455b-b576-ee3a960f9328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6401b0-bc25-4ee5-81e0-68221731b8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f3d921-2274-453f-8273-a9e93b1a12cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6e9f2c-068d-4cdc-bf11-927658e9dd72",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8100aaad-3843-449e-a29d-0c67c2631bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fe9b7e-ea4a-49d8-a722-13b805a18f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd2db3b-58f7-4cbd-8f66-fb5f85219dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27517e24-d6b2-4c2e-87f3-95ed2d0cfb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9a407f-0b77-48fa-99e1-bb0c7cde7da6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9688b945-b4ab-4728-8fbb-030ba968f0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b2661c-0979-467d-9c96-7a880dc69e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2f0b55-4821-419d-968c-00257c9bb969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b80ade-3368-498c-92f2-a7c8d3232b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70510ef8-d384-47ae-b347-796e8f1634c9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921926c4-b2e2-41db-8500-0fd3da240ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fec616e-87b7-4224-91eb-c63ca96701ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f757c7-a9fe-4778-973d-936c738eb121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f8a62b-2592-4065-b4b4-a081f1ddf538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed10d3a-80a3-4441-89ca-b85314c62cb6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c949d15-e119-4ec8-9e0d-b2475a395eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0a25a2-e431-4386-83b9-6ab2a46faf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff235326-4701-433d-bfd4-f6263f534208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17a685c-35ce-47bb-b445-c37f200558ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f96eb44-3901-49b7-bd18-df5ae3484337",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd527323-4385-45a3-abf1-f91358789a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de796e34-34e4-4c35-9b16-30934a2b3ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701ca3d5-d8f5-4d92-a56f-3a1435311c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c6837e-0f2f-4e89-90f1-52957e84d4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db20a42a-b77a-4d0f-8acb-6501051ddc4d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1aef16e-f582-4360-9d72-c306cc46a0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829cbbc5-81a3-46d8-b1d0-6de6c0bad9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4196490c-a20b-4ad3-8efd-bd0ec32c04b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a8799f-d755-4b52-8601-7baca6376d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a673e7cc-dc02-44b3-bdf1-fe2fd46bd520",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d75fe8-0e73-4622-9d68-006608924fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9660905b-3670-475d-bfed-f9999cb18917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d892780f-e781-439c-a140-740320131883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa790bc8-3ac6-4d47-9144-8eda52a7b903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b678eb9f-d7e9-439c-888f-a4b0289e3487",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2752d5b9-af6c-4aa4-b152-f8ddd7e7ed88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268c4c09-8c9b-4f5a-b1f5-4361b679f444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6f0f54-e988-464a-9966-912cd02204ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c856f98-046f-481d-bf76-589bde9c6748"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c2ce8cd-f962-4f89-8f7e-d11e14af1c1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58cd86de-54c3-4464-b75e-527675539cd1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14c4bdc-5628-4109-af80-7dd448c9d2a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0b46449b-6f94-4f73-a417-598ba77a5f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741cc5e2-5b7e-45d4-a031-2d48b2afa930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7411c8a-a095-4eca-9433-fa66cff84d90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eed356ae-c459-40c9-9c12-2315e98f6c90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8371759f-e475-4a87-bc3d-84bd496d2473"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ff89082-b18e-43d5-972e-8afd267d853d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b8af3a4-f538-44ac-b8f0-9ce156199944"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33544438-410e-424f-973f-6d4e7f593acb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c9a619bc-6c4f-41f1-b9e9-c9e157955b16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9eb5e4e-89d2-4871-87df-35af09f8caee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05f4b979-7c96-440a-a4c4-a24c902e4738"
            }
          }
        ]
      },
      {
        "id": "4f7d914c-105a-48fa-bf6e-c90a562e6410",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f912fa78-32de-4eb8-aa81-9984d43a4c87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f9f28d1-ed4f-43ab-b80b-4a06a45c0250",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "609fd5c4-824e-428e-9755-913aaba15079",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57412626-03c3-4f6c-8037-b4b46d011455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d2cdd4-9947-429b-af0d-f41f61e89a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bce63bf-66e9-4658-9b32-9621cbbc4d35",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8100b8de-c41a-4b1d-a14d-e4fe95e4300d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154a242d-d1ab-4b24-9e9d-a80e05ec7ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbb6da4-9254-45f7-ae4c-7d27e4c5cb23",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1b1e24-a9e1-4d3b-be78-26c08b018dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0197549-5270-4790-b545-fead2a657b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13c461e-5c4d-486a-94d4-a69d759c1b78",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bd3da7-057b-4929-9723-1dd8c0314a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef6d20d-6c8a-457f-a2f5-8f82b9d7498f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984eeab1-505e-46a9-888b-7d8144407cf8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f35e69-c625-422b-b3b8-aa20dada7c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5452baa-505c-49f0-a1f2-a01ba4d1efb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1126707e-748b-4539-9a92-ecff3e106985",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba10cc24-51ed-47f9-9704-1e387151749e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59000de3-cf37-4c9c-98aa-1edf46f3a45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81b7c32-64e9-4ca9-952f-bf0d4113ec4f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d90d8c-ac54-4d00-a4f3-931672c06ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa74d21-b3c7-43da-89ee-fd68c7edd35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b26bc8-e72f-444d-a3e3-5c689285e141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcf60ab-bbf3-4351-988e-b2fb8b7284b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1771fff5-2ffa-40c7-8028-3009c59413af",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b071b3-bacf-4c5d-bf77-256ec90207a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e142cee8-8df4-46b6-acf0-245758f6e93c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de0b362-1a48-48fd-a493-b2985ba00f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caad90f9-48b7-4faa-bfc3-dc8a7385a7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9c0eb6-b8f3-475e-8959-30620b26321b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4c07e5-8219-4d06-9dda-c304fa23da55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb946f5b-7624-4cff-9a87-3d985a7a30c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f43749-a864-484c-ae41-99edae626d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05420a16-ae34-4a9a-93f7-03260cee28eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfeb75d-a6a8-4475-b9d0-05fa8a4296fa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970c08e7-b7ff-45fb-ab03-014041eb6f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df5aa566-5f65-40d7-9624-c47acda3beaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e14975-071e-4a84-9389-0a9c57434ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18da83a-48f7-492e-8985-de08cd7107e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61029932-f525-4375-9d41-b8fc7ca24cf5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65386f6a-9d02-4d1a-b872-e2f35c45b469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247a1e8e-cde0-42a3-bd32-dd169cd50183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9081e40a-589d-4d69-8945-2de2c1bca0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcd3295-dd53-4213-b5c7-b4a38f458b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5e86f4-2b35-4aa3-9d7b-2d80887490ea",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafbb72d-c14c-4d59-915c-ef0d455fce24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3d4f73-249f-4f32-bf95-1f35680be671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b944964c-0092-45a6-9867-a7174dba97a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6539ff68-4c4a-4ae2-895c-14bf4a874205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b964e7-150e-46fc-90cf-2c1f1613dbcf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0694c0e-f2eb-43f5-bd6e-912cbe57817a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d7f9057-2c38-4638-ae99-306e4601ce8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29aa4ebd-6440-4842-8d17-4f247bfe2cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ee6d32-2f63-421b-8a52-0e85d5ca6f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021cbada-7c68-4b54-9d73-d6753f94d0de",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935bedd8-3534-40d4-9eae-71fc6e1f5001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508c83b5-3c29-4a4c-94da-df6a135922e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5f9ad7-d2a9-4451-b428-92719812e3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31990076-1bce-4ed0-b61d-c03154b6d5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc9ecf9-5c95-47cc-965c-e2b565d9d031",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dc89db-4049-4669-9951-fa5f5109736a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0273c2-29a1-460c-a03b-fe33c7156dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bd8187-075a-414a-857d-5b6da7885245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e1e1b0-10ef-45c7-af7b-b59b50ce445f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3dd6f6-8a5f-4baa-99ef-50fd5854c7d2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3ab43c-f803-47cd-b521-38b6eea243de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f85d5b0-77ff-4f31-b6f2-36de3bfa58f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e81264-6be6-48b7-8797-0b5c9271f41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb8a955-4f3a-4610-96ab-a035c0c07f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33400029-dc88-4cf2-9a39-75f907f66e70",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eac61a6-f88e-4df2-aaad-dc52eb31ee66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78db13ca-dcaf-4b60-8de4-f9f062d304df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4e71e8-2b0a-4d71-b1ef-7fbbcb37cc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce35011-bfef-428d-ad82-c84becb88bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7e28fd-0606-4cda-ae38-5d774e5fa40f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39249d59-a140-4fd2-b357-7a96a6a326a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43d05b0-a40a-4cd7-9891-376c4577879b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b4acd2-d838-4540-b5fd-c95f864e16ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d1e730-eb39-4ef7-8f8d-d724bd971a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685017e8-92bb-426e-851a-d0f35da347e8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3986505c-a02d-4215-ade2-a2b54395a46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24a6556-a4a8-473a-b7d3-a92217423e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e861264a-f9aa-4f6b-a103-62d7c984ce64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ef5cd3-df2f-4ea8-a641-2283b791c620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028a4147-2549-43d2-9874-85914d5ede4a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998fb0bb-054d-4bf0-9a92-aa81341f4a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b48caf-21f9-4d51-b8fd-dfa79232938b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebf48d9-cc26-489a-bb08-b05568d70744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2408b18b-2eb6-4a48-9a8e-8260f2477f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60054983-67c3-48ce-a071-f01a81c105cd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7cf5f0-c6d0-448f-8763-2992e46fa2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69041f4-2c3c-4bf5-9416-803ef3153001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ceee60-8634-49a1-9fec-609b7ecaa00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9eff565-7b9f-4bdd-aaf6-fad627b44caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81fd0d0-edff-43fd-ad04-a2333946d8e2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5de6271-54c6-4c2a-8b88-6eda85c7a070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca00c691-ce67-43fd-9e1d-e423ca193a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2022327-09e6-4f45-a478-dca92f5ecbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f411841-d8ae-4927-a492-f26d967901b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9178a6b0-ded9-4a20-86e2-3d1dbb03efa5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae34151-f452-459a-8c14-e6151a0bf33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49788c8-87ff-4dee-b3f6-801b4ffe25ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f76a51f-7370-4155-aa7e-ef89140d5e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a40a25-cb00-4889-bd47-84a56af5c903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4319d934-45d8-4f80-94a2-decb9b1aaff2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c927698-3bba-4eb3-9a15-39c130fa0fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd3b737-755a-4db5-833c-d1594d37aedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125daf36-7a43-4096-adaf-fd4cc2ff6be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85790d6-14bd-4368-87ab-517790fed04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a6733c-734b-49f8-ac83-7e47f2c8fb00",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fdb4ce-16cc-444f-a694-b95692ca9155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68afc4ad-1f39-432e-8580-862300b7f201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c24992-75a3-4f4a-b418-f2a7dbd76b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a16ad5-6013-478c-9cb2-e958fd116c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08904780-f18b-4949-800e-f5c70cad1655",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8351d3f-93ba-4280-8210-97dc7e1d9120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192912aa-63c1-4668-83ee-3f84534a2086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d40ac76-4779-4a90-8664-ce4e72d6c734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4453b38b-bdf6-42dd-9a70-e1fe29a42653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985c0d50-9c6a-439f-93cd-77840b8524cf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c57d1a-7627-4d87-95ce-6978cc2cd582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c338e209-e579-4c28-b07b-a67a220d7288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243872f5-0e19-4a0d-9af5-4e51716b7464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e6d80c-08a9-438e-b2b0-353127acdeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df24a55-6d62-428c-96fb-85ab48c55b8a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff22e249-2ebd-4a7f-b33d-996aab1bfc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5749e218-d13e-4b1c-a96a-010fb232cb1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e484fd05-d46f-4d61-8b85-baa7d2af0bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f047ce9b-8e82-4ae5-bf54-605e3ed37751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a867165b-63e7-4430-875f-41d430222ad1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae8446d-1fda-4c24-978a-9c5dad222d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0be5a4-880d-4343-a9ce-c20358ceeb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b7dfea-bc03-420b-81eb-024fd1d5269f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1e0d57-0b73-4852-b090-c0f92e1d3cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2252c624-c276-4b8a-9fd5-f483ba76bfdc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e28d2ce-0353-49e7-86a5-e127f2255548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0cb4d6-91a1-4a43-9deb-2754634a8863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b888716-1f11-4b0d-9caa-da202bd73746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d391df54-6d4a-4c38-926f-13f946336c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a000fc-055c-42a2-8bf1-3b4d41cc28d7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978f3d83-5a92-414b-88e9-56d1f62387d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391376ac-353b-46ce-a225-b1af3979ff11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7c5ac6-cea2-429a-a9e8-89e7d3171968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db1c4b4-4803-4844-b78a-dd9c1d3b6bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09feb5d8-f360-4ded-a20b-e36157ad29cc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88f3e7e-135c-4dc5-939b-a5eb72f69c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2a4b4a-04cc-4a22-a6d3-05f593b5396f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc522ae5-289c-47bc-aee9-3e4ffd03bfef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45645a81-c83e-492d-8ec8-08e2e926e828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43209edc-ee36-433f-9d8c-eb83c2ff9513",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42a42a9-5e2f-4955-b207-30888a27adb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f86a395-6b08-45ce-9e13-4bf1eab4fa18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30ca23f-8b5a-4863-88a3-dc94dc551c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13dcf54-c473-449e-a18e-c6f46dad1ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca26be2-ae6e-4d9a-98ad-cc5e1cc38eea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23556d28-c92b-46d5-bb2c-92af584cb3fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee28449d-6648-4915-a01c-f32ecc176b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942b770b-5d22-4b73-a5f2-92e1cd4e0f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f7a157-c850-4193-90dd-fc9eea6b0dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5f1d71-5c7c-4b36-aeec-3b2ba448c100",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fffda9-980a-44f7-bcc3-fd7c5b20ddfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8ea5fa-d7ad-4bfb-8ea4-ba178b972865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030323a0-0f2a-40de-8f83-fc90c9833343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d767cd88-e94a-4535-9ed3-0289f762dc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2a40cc-924f-429a-a3bd-61774a04e546",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9798707-0456-4653-9832-85aec2724a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a565c2-a8c8-48a7-a810-001175dfd906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38012aca-6118-42e9-b0c6-acb1efd3d4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d97a533-1572-48f4-b3ae-b08293f5a57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dd6caa-d556-491e-a239-3c617ef220f6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19650ee9-ea7b-4e1a-89f8-8089ab46c8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1eff365-1762-41ff-8914-50b85b4c732b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38bc5de-420b-4090-abca-310716b643ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10e526e-8705-473d-a8ee-8ca2727d1485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490a9bab-5a56-44bf-8e9f-29ddb7710aea",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8bfa68-ba19-4c24-b296-c239ca695d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403ba2ef-c687-4efa-b6b1-0469993ec65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39841624-48a7-43f4-aefc-c390be1d5389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b95932-ad0e-4c5f-9dd4-0c543518aa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ef92c6-01bc-4f95-9f82-904bb4838920",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79faeac-a92a-4ece-a1bd-a1132bc6cf68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fedc15b-28a9-418b-9e07-1ab16c730532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d11cf2f-d9cd-4da1-8874-1b420b5f42ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63579d52-9cfe-4a27-a8c7-bb894189ecc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddbe6b4-a7ef-4859-a0f9-319765a58aed",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4713cd4f-89be-4ed6-9342-01981591bd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da869ab-44f8-431d-b713-b5b620e47676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d73ff38-4dbf-471f-b42a-fe2b06b2f065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00380e65-2fdd-44b8-95e1-7c9c9f179cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30144868-5b38-4647-9735-86fda4f1b594",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25a64f1-8677-4672-b110-4615e9a9e507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56b8ca5-5a5e-4284-92b8-8ab594d0154e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce709c04-c56c-4e18-ac35-af8aad47a491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b48f63b-61f9-4dbb-a5c7-19efe50be6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58013f59-49e9-4cac-83c4-c8a99a68f094",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e188f292-251f-42b4-9606-5a9f7c42523d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f420e162-1faf-44fb-b358-b4c182251b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2525aafb-2926-4c1b-a0a7-ca020888578c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baeaa87d-2167-4810-ae92-349254e455da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bfbb9e-8d81-48b4-9a5f-58a5da36eb05",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fcecf5-848f-4b0b-88d4-62b663f61c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efafee6-4bfd-447e-a225-87e59030e9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baebda2f-ffdb-42b7-8918-89e055bec6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4f23e1-79f8-4722-b79b-71727dd8d5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f1397-2b6e-42e1-8cda-49528fd8d6ad",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd4b560-9478-44cc-b8fc-fbddae43c3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140f4797-717f-478f-ac40-3622449333f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3098a03c-1fa3-4aec-8291-67627268901b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8dd036-5c0e-4388-b379-7982ed4ee1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ac225a-6608-43ce-b882-73394e7fdb41",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789d77cd-e06d-4a83-83d1-67ef5600321a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03724d0-20c2-4966-95e1-b53db135b317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc427fbe-7dfb-4397-801e-fed476b66f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691783e1-6d6f-494d-98fa-8f0e89f9ef02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da23d06-02ea-4c87-aa41-8c40a6acba02",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c2b339-d8e3-404a-8ba7-385e0ae7eaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e11e35-d3f8-4918-a154-abecdea2d82e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52152fc8-af2d-4d08-a18b-87b140524e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4afbd3-7ae6-4ab0-a079-f11af5236967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39f2eaf-145b-48cf-bc14-7ebe943f09c8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7def32a7-9e12-44c8-80eb-436b2e9b7517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07760786-5f13-4016-8428-56dec4df0f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef8cd4c-2620-455b-9f65-b50efb903085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57677bf9-a008-4642-a926-593f6a238d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb38dafa-e479-4a80-9412-1ffaa2f88025",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7192a369-2d57-4b80-8e4f-957e1397357d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2607ea4-e779-439a-8f30-c7e4eb56a4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995a8f29-fbdd-409c-b1c5-09f6e7984b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1e4a31-3a36-4e69-97c4-b4e62a34d046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6a3c05-bc4b-4402-b799-42e8cb407be3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569c327d-4cf3-4d38-968f-5add68af8138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fb55ba-b6cd-4e87-b878-1609a9cf9354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9795b85a-172b-419c-a39e-f64180e87dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8cb2f6-ca7a-471d-a546-d2cf7e4891d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bc445d-87f4-4707-a1b1-f2522b5ccd30",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74d8289-46bb-40f7-958e-25ee406f053a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3dbcca-3062-4ffe-9edf-bae8cdbcd85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ad0962-cbd2-40bb-bde6-1e1a7805c0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143a80a7-e1f1-4302-addd-78225576fac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1936bb-564a-4752-9a17-299bb0608867",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6390fa9-1846-4f13-a6b6-bb491b95052e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8177706-4b89-4cf1-abaf-7c5b2ffc3363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb8868b-b36a-4234-a242-245bb3bd6d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802fe09b-c545-498a-91c5-1abaab4f54d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6839351-3ead-4bce-9f1b-a2c974e252b7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284283d6-a357-4b9b-a009-8f636b8516d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c038455-f836-4e9a-b719-be9e46b86258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6e2d15-0cda-4862-8392-762930c2a756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba2c248-7a1d-4514-bc39-acf2918418e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53961c50-ed33-49cd-91a5-1d3f8b30072a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3eb9056-7eda-45f8-82ad-209c575dff7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a5f856-2f9f-401e-b770-3125057a98f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a9f821-1cd9-4699-89b9-95f7ce9d8875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d2ab1e-c7ed-4726-834f-b8771ebc7b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f116d26-c957-4db9-8470-7240ce054058",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918844e2-eca6-4b4d-85a3-6a1cb2d5a717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517abd54-0e11-48ff-a750-8b1246bf5606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6af09a-278b-48e2-96eb-0f2034daff85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0c2116-64b9-45e5-a6a0-69743364676f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2a22bd-2ae7-4b01-8736-4658c62ced95",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e917927-3495-4673-843e-6e968e8af3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0188539b-1a74-4457-b8ef-0e923bdf528c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f029ed39-34fc-48f4-ad2d-f21d67ae30b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676d6672-3225-4f78-a20d-869f83659012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22ab98e-77f7-42fb-86d1-c5bef15ec493",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997c902d-04ae-4ba1-a5e4-dde5ea144a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af288a6-928b-46f5-836f-5c4e0af17736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981f46e1-7e08-4275-bbec-81000b8d7897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf0b12f-2277-4d23-a22c-fc8f73bd8808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d405e0-d3ec-4194-bd76-47dcf96f55b5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d28257-9bce-4d73-8376-57ef836713ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c982743-ec25-4b09-9f41-f3be3407b32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeec560-e794-4b03-8ea6-2278afab11e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53c8ae6-1a5d-4487-9dc2-0941e0d37c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867238cc-309b-4a8c-83de-907c047b4077",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68f225c-fc51-42d9-9e75-011f4491448b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f87adc-8a84-4e1f-b84b-2a0cc1ed7ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a6d2ba-a9ad-4083-ae1e-5830fb365aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed1d503-3ede-418b-9f6e-df91fce97049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e088a73-f47a-48f2-9aff-daf1379c1562",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bac344f-c457-4edf-989b-e40dec1d2fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d32d61d-b337-46e0-a691-9b2a50d288b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed4165-4a65-471c-a941-ced3bf0bdc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b538e9-1cb4-400a-adae-40628bd323ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6ba35b-ccab-4210-a1c1-196611e1a636",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01445f0d-6c9d-46e3-ae9c-6cbd265f3a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9076b16-9e30-4be8-8249-e4c2681f3124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52cd37d-ac22-46f4-b945-6536d2a31991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00587de-d459-46b8-be62-7f181f9e86dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b63919-3e13-4c40-8d7c-073432e5ebaf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc46e81-0c08-4f9b-9a12-8cafa366e397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacfefda-886d-44af-a0cf-235e1afca532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91e4f69-cb82-4cb1-9172-cbe0c19c4cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fc22ed-595a-40ba-a326-a091c48de859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf937258-e018-4ac7-a9cd-08c7df1e5a0f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a9a451-93d5-4729-8f57-f3dcb139d6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3f97d5-0cde-47e1-b15c-e1a99d78cd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57340ff7-6455-4e61-9bcf-afe3524dd79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345cab79-4e8d-46de-92a2-b07eb0ed4bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ff91b2-fed7-4470-bf25-856a7f5385bf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ab6c45-6ced-449c-82c5-eda344b413b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b6baa8-1211-4b2a-98b6-1085a12e58d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbe9330-fd65-4d5c-94f7-15da5ca59f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384dcd93-7fe0-44e8-b2a3-4b4e3bd8a66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9206df64-f511-4787-8d6c-eff9cb82da31",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3001fc19-46e7-4b68-92ed-3782f7bda23c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feaff46b-e09c-48c1-93b3-e1c5b4813947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df099b6e-09c2-4049-9a96-3010da20e6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73f7f69-45e6-49c3-a305-ec7ff488bc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf9db4e-f1b1-4be2-b76a-eee6aac1e104",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0e11d2-e84d-4f2c-8eee-98d588e1d2e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9e1250-d0a6-49ab-92be-e08049119967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e152b7df-6a8d-4b7e-b24d-1b44e2c40b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2adeeb-6a0d-423d-9653-c5bdeda69d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee81157a-405c-4cb0-93f0-d9d93eb95708",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8c6a09-e1a9-4543-9b41-f70c376284bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27578d3e-6c7b-4bef-95e3-3db030433456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd4e26-093b-4130-be3e-0a34f920e2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa40aca-052d-4dbf-bc87-a9d25cc58022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f8f892-0ee3-41fa-961b-addc5b8dd80d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea029ded-9627-4e15-9bda-f6321f7f8048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d6a08d6-9574-4ba1-b511-343a275d5075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d35462-5b1b-467e-a9d0-c25db32d4a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083b9eb3-ffdc-4f70-bfce-738f98ddfcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22532803-fb1e-4598-ba4a-f15f3ad044de",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54418e85-a411-49e2-b83b-de6b08350814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d546bf-7919-4702-9d60-cb05ade67252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f395d2da-fbab-4bc0-a6c2-d568736aba26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58090e50-d075-4204-8b97-579bd9a483cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef56dc3-a7d1-4b24-a52b-eebeae47e891",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceea713-d5c5-461b-ba85-bb33352411ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e435e09-db3e-414b-878d-7c4fe467bddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5032dee-71b5-4e84-ada7-9c2f1de9c70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f200fe-a8bc-48f6-a780-757a5ae6e655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57399897-1fb9-4d70-95f6-1c4f7073b57d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4251cf8f-6de2-4e04-874c-7bae47dcb936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab65c9f7-57a1-4fa7-8384-c6aebec74cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efcc801-92d5-401d-b3f8-57e8db4dfb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc5a819-9987-4476-a4ce-3d1a5423f6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640c49c1-1709-4711-bbad-472f88e71848",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdf7824-ccf4-4589-94ec-f3b9edf5fcda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e9e550-b82a-4dca-8b6e-00f4d62cf9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d445cc-a905-4330-ba6b-fd2710ac1136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a48ff55-1494-47aa-86f8-39a7ee5bd460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2ef2b7-d8e7-4dfe-a8d4-82b6c921d9a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a9c254-f0dc-4f8f-9f5f-7d60d1e7ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "906895ac-e0ae-468e-8afe-e38afce726b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93985101-6f17-44a3-a2e1-61f8f3b28d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01d39d1-3983-45d2-aba4-89139cb5002c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f6bacf-b787-4ef0-931d-9bbe90bdd2e7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7c36bb-fc9d-4e7b-94a6-74c2e1f5aac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f82d08-cc90-4522-9807-e7bfb6bdb6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeb9126-d788-4474-ad02-70d2987ec30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2771a9-cd23-4717-8c8f-deb783e3fa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd9f374-7d4c-48e1-9824-6e73116fa1d3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8aeec45-d89c-4ae1-9d23-78bbe4b9c2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33885c27-5568-4388-a97f-088352bc8ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e33908-9889-4f51-978a-6e0d8ddaa066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c2ff1b-54c6-4e1b-a8bd-0c7e7eb7cb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7026be57-9508-4fe4-8ccb-c9454f5a1800",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d2c218-2ecc-4fe1-afc8-1b62d9b425ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd768bd-bef7-41aa-99fc-68cabaf9cbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15215d0-3b79-40d7-9d20-6a625ebcfe32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2d5e2e-f1ad-4f0f-b484-8bd9e7012f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eb5ce9-3bc1-46a9-a550-e7b8641d50ed",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b836e826-5859-41d8-9119-40873f044a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2bd5cce-8584-47a0-b3c3-017dff46912b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "babd3a45-bbf3-404c-ad36-2e031314e695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df146ec5-5399-4609-9111-1a76ec9a93ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd44a3e-65d6-483c-93be-eab154f270f8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936942a8-4e0c-4b4c-801d-315c0903ada8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414f42f5-422b-4294-80a4-9fdc98260201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8634d42-14ee-4dc2-b1e1-a999657c2756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19d02e4-c897-4335-bc7c-f896be803fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3268356f-8d92-46cb-8048-d2468d588094",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b258fb7b-c98a-403e-a9ee-d6ece333b871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f913b98-b9db-414b-b7f5-0e05928fa7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f66d340-dce1-442b-9460-15ad3ad7ef15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9ed890-8f28-41e9-ba84-fafc2e6f6bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1710650c-99bd-4dce-b87c-a2c9bbce780c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c99da26-43eb-400d-aaba-0590ce3e2e2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c05563-ae69-4789-bbdc-900d2866485e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb2d812-43f1-47de-a29d-82eb9dcc75a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dbd6d5-11ae-4301-a634-058ff8355c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaeef2c-1884-4e67-905f-02597f19187d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad67586-dd71-47f0-9d8a-18dbb936d776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d615c8-34df-4423-9f68-6e4dba29ffc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae19877c-c686-4bed-b72e-2a3107da8425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6033b18-0d61-4156-af70-fc5bbc9209cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af806b0-a7e9-4623-bae8-95a8f64975aa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35e9bd9-60db-4c36-8c31-151580b15fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7eac400-c1e1-485e-8b72-2aa92c0f3c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45991ab-6e65-496c-b966-1348fd02a4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64429efa-c72e-4328-983e-4e1726c23e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf07d45-8d89-46db-ae6d-6449394ab130",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdba0d12-ca31-4071-a6af-8f07c2a3751b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b8effb3-b9db-4822-b272-0cf05738c6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e28021-1b02-416c-bb93-3c15115344fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b513e40-fc89-44ee-a99c-061e1fc2c048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d88ec3-e132-4873-a588-e3d662076d11",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d3b171-a2dd-46e3-b5f7-119cee723297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "138b3685-a38e-44b3-ba22-23fce08de3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c026f17-febf-434f-ab24-705b341dd387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b0dcd6-d938-49d5-94a9-2bad8e655795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e83dbd-3e95-48a7-aae0-fc68a01c0dd2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691e8eac-c804-418f-9447-951fc580af20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d885237f-39ed-4461-a1ff-60bf3e5b18de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f642b4-f5fe-4020-8241-94692204221d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f301c370-c528-4e11-95fc-1b7c555888a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6cf3e8-5913-4b3b-8e35-3e66b43a158d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda2ed1c-e3be-499c-9517-6e8ed742f381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cba5065-91e5-4d4c-a964-2275fe8b1093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d585ef0-9c34-4b72-8377-8fc70e6fb8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4654572-fae8-42cd-8ff4-016eb7acd1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301c47ce-c4ea-4ba3-9ba4-cf51a6797550",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbf59c8-d005-4ea1-bd85-8f47788bc18f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd4220b8-8a95-4734-bbc6-38e64cf6c959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8d4da5-fef8-44dc-bb33-316745876000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc34e463-3708-482e-80c9-8a356b2a7957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc97114f-5f0b-4b52-ab9d-2564205e6dac",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b4adf2-07b9-4cc7-b300-18e2211d15ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652f0aae-9a82-43d8-81f3-38fc25372d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bea984e-7018-4699-8ab9-5b539f3b5958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a40fe1-b55c-4f53-973e-6a9d017ba59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efae3b8-7899-46d9-b8ae-6a4ddded6d06",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9830e487-e814-4130-9c99-bfccc28662fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f52a8b7-3650-4ed7-9525-0ad08c330a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b07cf67-b85d-4f57-a097-b89ee5393adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9604d1c-9ca2-4faa-be97-0e5b8235b963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a87e9d4-b94d-4571-94d6-501493f5c78b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4510a7ad-87d0-4d82-88d6-edf00be6b079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2624268-7b51-441a-9fbe-5e18287c4c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7996a971-b937-49bd-880f-6feaaf29a82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb630cfb-29b3-4e50-a014-19dda6e9431a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa04ff58-6bc1-4794-8e0c-980e1b104758",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0814b6fa-f1e3-4267-ab85-44d0dac4b197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc948c1-68ef-49c6-afb7-9bb564c64857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8164e6-f796-4e27-8710-e5ac53773288",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45d1c2f-7584-4b00-9004-ab6159b130f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cde5f8-5cff-4471-a6e3-9f637b316b20",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db07425a-95cc-4d7c-92ef-df45f787d3f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641e7752-fb17-4189-8acf-404c5d9418b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56122d65-c65a-4c12-a666-d0bd6292b6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521b4748-e296-420f-ac78-85ee8376eb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8083ae-f34a-4671-a239-ff8f2c4f69ce",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be0ef4e-11c9-43f8-ba44-e843b7edf1ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea236a15-1227-430a-b3aa-9cf8c53f5998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6e0456-f205-44c6-892c-b76128f609e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563a328b-bb61-4c1d-8c21-91727b0ccb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cf2e83-bca2-4f33-91fa-c09d11387400",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32707eee-5181-44e9-ae12-2f1d6dbb3fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c7718b-c1bb-41bb-9863-53bf88311f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c1b500-3f72-4bd1-8503-9e1ef902dab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d8caf0-8d07-41ad-a278-fb102f2879d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ed7c0d-09bc-4c79-8176-3206bd97901a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57d48da-a0ac-468f-a41d-fca2bb536939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57012270-a8db-4b7e-bd50-d6521de3d51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158636e2-c6b1-467e-938b-c11fff5433cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d169dc-0877-4f9e-a6bb-7e9f3aa0d6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd64238-df2b-482f-8e67-137496c4daa4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e5622c-9c3d-43b4-8af1-28f9587ae66e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2882e5-81a2-4878-98a8-717e520bb5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4232cdd5-1dbe-47b4-8a34-ba7b211d27a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7271be-78e4-4cdd-9c21-41360acc14df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f384c7-e9f1-431f-8bb0-d0d9927095c0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf015c6-42c0-47c1-b77d-7bcd2f7e7e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d632f313-76b5-45c6-ad1b-56698dfcb605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fae6850-f96d-4600-a6b6-bbf452ea5173",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf3ce68-c4fd-4c29-9a38-f01c9b103758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963d20a6-e542-4b31-b61e-516dc3315710",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3c2456-728f-459b-ae40-1ddf656d3752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d1ed34f-01ff-4ac8-8a1d-e688ba17e6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e270191-4b68-433b-aa1c-24d34af00ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5fb290-d773-44ce-a6a4-536850205752"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cb69b36-56f7-48bb-97ac-e60987772e99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97cb3482-4a5d-468c-9a51-9d21bd8b5a67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cd9806b-7efb-418b-92d1-a130d5b52cc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7f02312-ad7d-4a8f-85d1-e6c256ea37c2"
                    }
                  }
                ]
              },
              {
                "id": "fc466fd0-a4e3-4920-86db-ed1d30f7ed85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b59b3c0d-bd56-47ba-a677-4c4a2f383952",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e90d055-bb7c-48a4-966a-b7c5505f6564",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bcdbe2d6-4df8-4c14-9a64-d328461cb4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d7fd8a-dd52-4261-801f-c66b36871b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fb971ef-1f9a-464f-973e-482122ea848a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da7ed311-b78e-412c-a20d-3503be6e6ee3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdd894e8-d827-4dde-9cb7-5f3b622d5fae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0fa5e6f-106f-4a49-9f06-bbc7e0ccb7d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bec918e-dcee-4a58-8848-6a9af305f747"
                    }
                  }
                ]
              },
              {
                "id": "5206384a-1059-4d17-b117-151a1144466a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e171921e-54ee-42fa-9ca4-05108663ceaf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a12147e-7f6d-4ea8-88fb-306c4533ba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "380822f9-0d21-4e8f-ba85-dd0b3c59b66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46552e7d-d070-4b11-8e1e-262ee47014df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615a440d-f874-4678-bab7-6e884bdb299c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b82f5a89-e8fa-46e9-b6ad-2a257445e8a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3de95aaf-216f-4a55-8018-7d0f79ee740c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3443d304-ffdb-4ff8-9562-3d1c8c85777d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d00e600-6e3d-4d57-a058-cb61c4cc89a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6003488-5cc7-4868-968c-2f0a676d3a5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31a9054d-f7b7-42cf-9254-e8669d5765b1"
                    }
                  }
                ]
              },
              {
                "id": "8d8fd760-7c73-480f-a810-3bbb725f12fc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6754e82-7733-45fa-9523-49a30dfd7267",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7b5e2687-25eb-4fc5-a1ba-c3b006757971"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dee06926-6641-4523-8821-adadd7dadc0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb085e19-1f64-4373-8c81-396ae019722a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2f26e8f-77bd-4ce0-b1e8-2ca90ebf08ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "93fd48de-3049-4ce5-9362-a6c61bbbfa61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "793f47cc-6dfd-4f06-9d60-8c03cd0b1086",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5e69729-2978-43e2-92c8-07a891978e0c"
            }
          }
        ]
      },
      {
        "id": "d7217dac-8b22-4feb-b808-4f5f9c3f81ac",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5dfda2cb-b01c-47b1-ad37-ab9ee6a37ee9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c82f3fe-9f08-46c9-b0db-2d7754c88f1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eca7ceed-0e97-4baa-8ddf-04d1e389f129",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037a6a78-38bb-464a-b46f-cb41355bce84",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "775951d4-13ff-4d63-bf37-96b9502b2efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56a1fd9-601a-4d1a-95bd-8d7cc2df1218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12ecc806-21bb-455b-9440-19cb3ae7ad67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2929f95-1ad5-4d9b-a948-b69fe78e6e2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "237d4b83-1ea8-411e-9378-88e272d32529"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57e5e414-87fb-4026-a5b3-5f57c759479c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fa012fe-6307-459d-bf6f-e96f3de417e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f7c462c-de88-43c4-a9d4-6fff25b6bd6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dff0313a-bd67-4dd2-bd89-29a4b97d63c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85c56a2f-4da4-49ae-bddc-dadb5ada6647",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19650226-de0d-4f8e-b9a2-b2ed513aca96"
            }
          }
        ]
      },
      {
        "id": "356d3e8e-62d6-44e2-a8e7-4350f41ccf59",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d81a75ee-7a0a-4fda-98c3-5ae9a1c049b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f43a8aae-7a20-4a8c-b38a-b8c403c73707",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "992c4325-e429-49d2-ba51-4789fed0d64d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d9edbb-21ea-4337-99bb-797622c25875",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34ef402f-1e4c-4399-bea8-e36e7a31075c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99855ec5-9497-4b72-8e82-c034bc1a4706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7389c04a-5781-4759-8aa7-5599b50aeb0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "096f3840-6ff3-40a4-a76e-d16cc78ce0d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5566c050-29cb-4584-abf8-1da301c8e27a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "898c2fa9-fc60-4419-9d91-06b42b239e76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6b0f818-41c7-45f6-898b-8abf6976d3fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fadef93d-ceae-43fb-86da-813daa829362",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0697c9e6-d92b-4bbb-b4dc-0ccab34dc0d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60a7a687-ccc1-4079-b3bb-07680949adf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f64b9c24-fc0a-44ce-a930-ecc775efba5c"
            }
          }
        ]
      },
      {
        "id": "14b5a51f-1232-411a-bcf0-24256bf93a8a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1ef1ca18-7c0e-4580-93df-3305335e73ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac93e870-d751-4be0-92fd-bccb08722cc9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68912c33-2d7f-4a75-957a-fd39a5a59b0a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57185503-0605-4d5d-9626-5c15e7347814",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b916438f-a186-4fdb-829a-18522d0a18dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151e965d-365b-46c6-9bac-1c50210c048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c524f31-3099-41bb-b5a4-874d18ca7d08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08447449-3b43-452e-a453-6f7413a96f6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d588de2-6732-4a84-b8ea-98c1803a9e40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2365209-e7b1-474f-8e90-6ca7368f7f46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "398aeb69-c30c-4ac6-8109-7bb18a2f5545"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08047708-86e2-4a83-8918-330ad6acf961",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70df2da5-29a3-43a2-b584-0103baf7ce59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42465649-a23c-4425-8e06-110f12ee92d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d083bfc-b33a-410f-b7f2-7675cd4e8c63"
            }
          }
        ]
      },
      {
        "id": "a64e2377-7219-45a0-b315-d759c9e1205c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ca99f97-7453-4887-80c7-a262496dd314",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9890683a-6284-443f-afdb-cade2860a637",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8822795b-53b4-426d-a944-e38ed53ba58a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "238c216e-0d69-4a95-965d-200d5988109e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fe150a1-9018-4a61-8299-974b3d4bfc67",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 129.6140350877193,
      "responseMin": 21,
      "responseMax": 9172,
      "responseSd": 597.726915126109,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703896467040,
      "completed": 1703896513531
    },
    "executions": [
      {
        "id": "e6843e49-7302-4fcf-9c09-1bd580666eef",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4f8dbbe9-8d14-4edb-b2fc-4f6dd474787e",
          "httpRequestId": "545e7669-30ed-4aff-8ac5-44033e27b17f"
        },
        "item": {
          "id": "e6843e49-7302-4fcf-9c09-1bd580666eef",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b32f923c-4c7b-4c67-960f-70e9f4c57565",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "e0aa51cf-926d-4dff-a447-7fad9b8fca53",
        "cursor": {
          "ref": "cee34a0a-bf47-4c3e-bfec-de9a4d664e1a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "50a03f8b-ab04-49d3-9db3-47a390c83430"
        },
        "item": {
          "id": "e0aa51cf-926d-4dff-a447-7fad9b8fca53",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e8db85ac-8534-4126-bf12-6a35d0bc20eb",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "8121c1d9-3ceb-4a76-aed3-8d9118a6c69a",
        "cursor": {
          "ref": "8db4d85c-6052-42d4-9a43-fa3bd9286959",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a9b4155f-c758-45e4-b20f-76044f90ba22"
        },
        "item": {
          "id": "8121c1d9-3ceb-4a76-aed3-8d9118a6c69a",
          "name": "did_json"
        },
        "response": {
          "id": "b33bb3bb-40c2-4803-9314-031c5014445e",
          "status": "OK",
          "code": 200,
          "responseTime": 430,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d4dbe0-aede-4a6a-83e9-b0786f5909f0",
        "cursor": {
          "ref": "81fdeee8-f6a5-4ff7-a0cb-57adfb34fe11",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d15a4798-650f-4cc7-87d0-ff0a4c91f5d8"
        },
        "item": {
          "id": "b6d4dbe0-aede-4a6a-83e9-b0786f5909f0",
          "name": "did:invalid"
        },
        "response": {
          "id": "18ebcfaf-61e1-443c-906d-cd9509965bba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 668,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d4dbe0-aede-4a6a-83e9-b0786f5909f0",
        "cursor": {
          "ref": "81fdeee8-f6a5-4ff7-a0cb-57adfb34fe11",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d15a4798-650f-4cc7-87d0-ff0a4c91f5d8"
        },
        "item": {
          "id": "b6d4dbe0-aede-4a6a-83e9-b0786f5909f0",
          "name": "did:invalid"
        },
        "response": {
          "id": "18ebcfaf-61e1-443c-906d-cd9509965bba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 668,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7a4d86-2dde-429c-80d0-fdb3a78d1137",
        "cursor": {
          "ref": "577e44e2-2529-43b5-b0d5-ece68b83474c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "43cf280d-a597-47da-87b2-3a398771598e"
        },
        "item": {
          "id": "3c7a4d86-2dde-429c-80d0-fdb3a78d1137",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4e4d0266-e031-4245-b880-382cb6183784",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4adecac-8422-4237-bb38-c0c6a72ca99e",
        "cursor": {
          "ref": "36941304-d20a-4183-8db9-3a056c78f60e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "97e4d997-e22e-4209-80ea-a2d1fe18e0c2"
        },
        "item": {
          "id": "b4adecac-8422-4237-bb38-c0c6a72ca99e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "52523fde-76b7-4a06-8d5a-bd9ffae62643",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b46399-2705-4845-a433-ddf7116d8793",
        "cursor": {
          "ref": "d987483b-aa5f-4b05-b0fb-27426a669ebf",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7630fc99-d43c-4d38-8335-1eded5936177"
        },
        "item": {
          "id": "17b46399-2705-4845-a433-ddf7116d8793",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b0c22b9c-8966-455a-a3a6-f4e7bfcd901a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 169,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de4d6cf-31e1-4a5a-b7ab-dfa2dc295ab0",
        "cursor": {
          "ref": "37eb5d23-cd6b-4b94-9f1c-4d735c78446b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "23dd1998-8f07-4163-9033-7f08482c19ce"
        },
        "item": {
          "id": "0de4d6cf-31e1-4a5a-b7ab-dfa2dc295ab0",
          "name": "identifiers"
        },
        "response": {
          "id": "69b347da-fc2f-49eb-a483-8c629d16d837",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9130f10-6fd2-4149-84fe-05a2195f6fc2",
        "cursor": {
          "ref": "78b2f6a3-231b-4c9d-b11f-51d26261c8b3",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bb3febfa-a375-4aec-a9a5-0e2057e0b110"
        },
        "item": {
          "id": "e9130f10-6fd2-4149-84fe-05a2195f6fc2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2dbed543-01af-427a-a34b-aec29db13fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec0cc69-1f03-45ba-8e9e-40c4cb7c3169",
        "cursor": {
          "ref": "7ad810b6-7692-45d5-a7c5-de132d3e5a3f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cb4668ad-1f4a-4489-baee-ca891dc2cd23"
        },
        "item": {
          "id": "8ec0cc69-1f03-45ba-8e9e-40c4cb7c3169",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1302b71c-91c6-48dd-a96e-e2cde027f3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67d190d-eb74-410a-91bc-b13c24a223c5",
        "cursor": {
          "ref": "b7454c77-d27b-49fe-90b4-e9d6a31e8c50",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bf712d40-c1c1-4463-970d-6caff24a16b9"
        },
        "item": {
          "id": "f67d190d-eb74-410a-91bc-b13c24a223c5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a7ff4b98-bc69-4980-8b8a-4f9106bc5451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f40c62-2572-4378-9fec-2d89c6324c4f",
        "cursor": {
          "ref": "edfa87d5-c34b-4532-8fed-bdfb5e35e3b2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d61bf8fe-f088-4c49-872a-52932d33d7b3"
        },
        "item": {
          "id": "c6f40c62-2572-4378-9fec-2d89c6324c4f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "63024c8a-272b-4fd1-bd1c-bb2925d2c908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2820965-2332-4159-aa5a-83f4ebf97c56",
        "cursor": {
          "ref": "26567a9a-97d1-4db7-a559-c8d46739e4ba",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3fc64542-8570-4423-8bc4-967ceef72951"
        },
        "item": {
          "id": "d2820965-2332-4159-aa5a-83f4ebf97c56",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e55609a4-b057-48cd-8dab-39ec5376420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdc7a8c-4a21-48e2-b60d-aaf7564ccdb9",
        "cursor": {
          "ref": "87ec4c04-5d8d-4548-aa3f-5aa2628bfb11",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4a6d7688-42ad-41c2-9ef2-2e616e17568b"
        },
        "item": {
          "id": "9fdc7a8c-4a21-48e2-b60d-aaf7564ccdb9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1d51b05d-4c55-4844-ac9f-f2882cf4dd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76170cb4-3acf-477c-b039-99d915a72d3e",
        "cursor": {
          "ref": "abf3da78-21ca-427e-bcaa-74e812c581ef",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7158df44-fdd4-415b-812f-2ffbd49c36be"
        },
        "item": {
          "id": "76170cb4-3acf-477c-b039-99d915a72d3e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8b6db1a0-8a63-49f5-81c1-9278e6dbbb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60707073-a8ff-4565-a5f4-daeece149de5",
        "cursor": {
          "ref": "78e88e58-3d8c-44d5-aa65-b8ba8805186c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "917b2a97-3204-424a-823d-1d44ab63dac8"
        },
        "item": {
          "id": "60707073-a8ff-4565-a5f4-daeece149de5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3001023e-f0af-44fc-89cd-42681f95d04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3c0db4-d9c4-43e7-9457-015ce004d14d",
        "cursor": {
          "ref": "347d89b3-622a-44cf-abb5-24c00c8a2e88",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ea16247b-1dad-406e-b2a0-23215f366833"
        },
        "item": {
          "id": "5f3c0db4-d9c4-43e7-9457-015ce004d14d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d5c8f9fd-c92a-4894-b1cf-f400e556373b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7665754c-2888-4d5c-8eb4-ff5eae30229b",
        "cursor": {
          "ref": "b9f47e54-522a-4732-a957-b5ee52b0ea1c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "214892bb-812c-4858-b193-f81ad70b7f3d"
        },
        "item": {
          "id": "7665754c-2888-4d5c-8eb4-ff5eae30229b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7730b5f5-c147-4dc6-9779-e7d03f6ba285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d7dce7-0789-4b7f-ad6d-9b3bffbe9a3b",
        "cursor": {
          "ref": "db31293b-491d-49c8-9b88-c29f448ac044",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c1f1eb3a-01ad-48c9-9f1b-58732b5e78dd"
        },
        "item": {
          "id": "b9d7dce7-0789-4b7f-ad6d-9b3bffbe9a3b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c956c03e-0b97-4a5a-90a9-1bb9de4d1e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff88421e-faf8-4798-a846-cda16b0e177e",
        "cursor": {
          "ref": "e1f6908e-2a86-48af-adb0-d65ca0921e51",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c3d81632-234b-46e4-8057-1db77d62a31f"
        },
        "item": {
          "id": "ff88421e-faf8-4798-a846-cda16b0e177e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c97da186-2c3a-42e6-982f-e337839e0453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ecde4c-cd8a-4f0e-9fdc-31595f03d43b",
        "cursor": {
          "ref": "0d691f02-13b7-4349-86cb-39c0780c439d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b022add7-5f07-4399-bd82-662e58bc5961"
        },
        "item": {
          "id": "79ecde4c-cd8a-4f0e-9fdc-31595f03d43b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "33b7ebe8-6c9a-4a0b-8a4b-2061e348d5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56372d18-0278-4790-a32a-ef1eb7f2c19e",
        "cursor": {
          "ref": "cc30b5d2-3cfd-4b1e-94b0-7b82597bce95",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3c82c9cc-c7f9-4be7-8153-d877b53aa3bf"
        },
        "item": {
          "id": "56372d18-0278-4790-a32a-ef1eb7f2c19e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8f0f79d9-40cf-4047-9a5d-c8c2687b35a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd984101-df27-4e55-88c2-cd97e987794c",
        "cursor": {
          "ref": "449f42fe-bf54-4a38-be66-2b31f6462403",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c7c3921c-d186-4556-87b2-a7acf96f487f"
        },
        "item": {
          "id": "bd984101-df27-4e55-88c2-cd97e987794c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d0ca47cb-eaed-43a4-9200-beb623c6f880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa691bed-fc62-4002-8630-8075bdc65e5f",
        "cursor": {
          "ref": "948c7d3e-2a6e-4d62-9c38-c154bd6ba5e7",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "113c236c-c7f8-4bd6-8159-370d33b123be"
        },
        "item": {
          "id": "fa691bed-fc62-4002-8630-8075bdc65e5f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "46a9e0db-3c1b-4653-b254-0e8e39fd94c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0745d8bf-50c8-4349-9e39-3383a103ee7a",
        "cursor": {
          "ref": "ecb93d1c-7178-4c3b-a051-ddab6fc23c66",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b3a6a783-51fb-4466-b483-45ab51b17f03"
        },
        "item": {
          "id": "0745d8bf-50c8-4349-9e39-3383a103ee7a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "714faba4-f919-4e2f-9cdb-81a75fff5de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cc4778-4d2f-47dc-a965-a6d0fc9b8b55",
        "cursor": {
          "ref": "0065ce05-6a92-455d-8946-ea576ea65dcc",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0683d1a6-74a9-42ef-a8f7-ee0f03d0594a"
        },
        "item": {
          "id": "79cc4778-4d2f-47dc-a965-a6d0fc9b8b55",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "77bec787-1c33-4bd4-a5df-fde3c5eb9f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc1eb97-02a7-4dc0-b405-ea13e3efa035",
        "cursor": {
          "ref": "2b069672-b6bc-4ece-bcbc-f27ad5e5371d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "111b1dea-b000-4afd-8e7e-772dca8892fb"
        },
        "item": {
          "id": "9fc1eb97-02a7-4dc0-b405-ea13e3efa035",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5cd2322f-dde3-433b-8408-21cc92e912b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52318fb4-b0af-4b2d-aa55-861a2eab1475",
        "cursor": {
          "ref": "2e566897-4286-49b9-9d90-07601116ccb8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2d949932-674e-40bb-842c-8c5b3b054964"
        },
        "item": {
          "id": "52318fb4-b0af-4b2d-aa55-861a2eab1475",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "164822b6-57c7-4562-b13e-97467aed99e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c80c80-3d23-45dc-ad0f-c0bf5a51f435",
        "cursor": {
          "ref": "1b24139b-d0c4-45f6-bf8c-d7832d759dda",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f8fe4596-7d2b-44b7-a84f-3098c9c1639a"
        },
        "item": {
          "id": "19c80c80-3d23-45dc-ad0f-c0bf5a51f435",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "73497c16-95c1-4f96-a334-0d43a77101cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19c9072-d91c-4a8d-b24f-c0f38bd863c3",
        "cursor": {
          "ref": "dbba7e2e-cf97-4d3f-9a45-99a921c562d9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4d4f264a-8267-4003-a257-1c5c9b329073"
        },
        "item": {
          "id": "e19c9072-d91c-4a8d-b24f-c0f38bd863c3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7eb179d0-a7c6-44e7-a105-79956e62bed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bad4b6-4d0c-4bde-85fa-9a47253a47cc",
        "cursor": {
          "ref": "45614f41-0dc6-4e13-8da2-34c4c053bb9e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3b084a4b-d5d5-4c5f-b9d5-285a87195a16"
        },
        "item": {
          "id": "33bad4b6-4d0c-4bde-85fa-9a47253a47cc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "36cb60f8-2c53-4e09-962f-02e21044af40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81409f74-d8aa-46ee-8dbc-32eb7465f4bd",
        "cursor": {
          "ref": "4ee2c20c-76bf-4777-9917-45d1aeb22b85",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c0c6b52e-85f7-4c13-9c5a-37561edcc530"
        },
        "item": {
          "id": "81409f74-d8aa-46ee-8dbc-32eb7465f4bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6c892ecb-67eb-4867-af4e-cc92da051f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502be0e0-77a1-4518-9261-a09991e4a8cd",
        "cursor": {
          "ref": "977ec895-a7b1-4b11-93ed-534385ff1acc",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d92d33c6-cc42-4ace-b42c-d599d16e13fe"
        },
        "item": {
          "id": "502be0e0-77a1-4518-9261-a09991e4a8cd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c1ce07bf-1b30-4270-ad61-fc9b1993d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7013ba73-0a11-4177-b9d0-ffb4fac344f8",
        "cursor": {
          "ref": "432ef735-ea45-4f3f-9978-a4fefd2f1cbc",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "84475fe8-edda-44d1-b035-c8b0d9e5cb32"
        },
        "item": {
          "id": "7013ba73-0a11-4177-b9d0-ffb4fac344f8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a5747c3d-3b24-49b6-9bf5-14b76488f3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a0b7ce-92eb-4d5e-b1ad-846adc82d215",
        "cursor": {
          "ref": "5a309788-f977-409e-a57a-993c65d5fbc5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f1f78117-d8ce-4d46-bda0-c052504ca1c8"
        },
        "item": {
          "id": "58a0b7ce-92eb-4d5e-b1ad-846adc82d215",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a559c8d7-d87f-4568-933d-88d7e2d9b6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ddc090-332e-4b09-a414-c3fed21e812b",
        "cursor": {
          "ref": "0713f44d-72cf-419a-a7e8-8b604a432a01",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e75eff1e-bce9-4f91-9321-1c35451cd5b7"
        },
        "item": {
          "id": "f3ddc090-332e-4b09-a414-c3fed21e812b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8d1fdd66-2f60-4416-b8ba-075127e2bdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f13a0bd-4095-4fba-b679-295a7daeb227",
        "cursor": {
          "ref": "ae172018-11ae-4bba-ade7-3a9bd1afed63",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b6a3716c-9e9a-4b70-b147-d1189aa00800"
        },
        "item": {
          "id": "3f13a0bd-4095-4fba-b679-295a7daeb227",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "796fbd38-076e-4ab4-a44e-f4fa57a8e17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c06521-5e32-454a-8ead-2f362f350a88",
        "cursor": {
          "ref": "5466171c-be6f-4551-b1f3-810215633043",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3c498f76-84bc-4d98-850b-75f956359b5a"
        },
        "item": {
          "id": "c7c06521-5e32-454a-8ead-2f362f350a88",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "433d5854-6d51-4990-91a6-e161216713aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c42bfe-e5a9-4797-9553-96566a01cea2",
        "cursor": {
          "ref": "843c8d4b-1677-44b8-be5a-e289807bedb8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f2e064b6-bd99-435f-ad81-632759c86dc5"
        },
        "item": {
          "id": "b2c42bfe-e5a9-4797-9553-96566a01cea2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "64a4477c-9b0b-4661-b7c9-460a261e291a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449eb3b4-4c60-4c93-940a-14eda63afe70",
        "cursor": {
          "ref": "1d44cc52-f405-4b25-a282-6f88493a95cc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "95504911-1998-44fb-8fc9-a8e0dbc4794a"
        },
        "item": {
          "id": "449eb3b4-4c60-4c93-940a-14eda63afe70",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "21163db6-fe0a-46f9-9238-68d645753696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06caa8-3c77-4c93-b3ad-f84b605269f2",
        "cursor": {
          "ref": "253d3a59-d5eb-4e61-88be-def246726d60",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "141fd6b1-3c41-45b8-86f5-97ed54894434"
        },
        "item": {
          "id": "2f06caa8-3c77-4c93-b3ad-f84b605269f2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b09cb05b-8268-4221-888c-137c25f60dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a29f74-328c-4482-a54f-10e4ed6418cc",
        "cursor": {
          "ref": "f16caa82-08b9-4efb-bc8f-7afe16ae0651",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33c4d10a-4579-4f73-b6cb-3f8cb2f66670"
        },
        "item": {
          "id": "15a29f74-328c-4482-a54f-10e4ed6418cc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "36a3ec40-9459-44e7-bfff-48f9aadf6afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197d8b3c-52f5-4b81-aa23-39a4b12adf54",
        "cursor": {
          "ref": "509f322a-1bf4-42c5-b0fd-d95da1e7c14b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4fa95aaa-2807-4598-a181-9aa095b1542f"
        },
        "item": {
          "id": "197d8b3c-52f5-4b81-aa23-39a4b12adf54",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "38cde82c-fc69-452a-b258-a2acd8e43fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324be235-ac6c-4688-b393-c48f1afd7130",
        "cursor": {
          "ref": "484c735b-45f3-4b6a-ba9f-a41b4d9078ab",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "adfb66bb-087b-45eb-89a0-711e0ed4ac6a"
        },
        "item": {
          "id": "324be235-ac6c-4688-b393-c48f1afd7130",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "59467597-23dd-49c9-8463-b448ac627f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce17446e-b341-4c44-a985-06b5f9e48e97",
        "cursor": {
          "ref": "ea4e2783-54db-4653-8202-c7139b23999e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8d69507f-dcf6-4f56-a905-938c203c712a"
        },
        "item": {
          "id": "ce17446e-b341-4c44-a985-06b5f9e48e97",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "92f60558-ab69-444e-a0b5-ad124c8356cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee1fb62-aa35-4994-8a60-c79ac85aef8d",
        "cursor": {
          "ref": "9c004ffd-368f-44b6-a8dc-25e00975e7e9",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d15d0d5a-7e64-409b-85d4-4037794b0413"
        },
        "item": {
          "id": "3ee1fb62-aa35-4994-8a60-c79ac85aef8d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "103bb977-08d6-4167-81a1-e38b1ce61861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0b9b0b-8d84-4f2a-a9e6-23320dfacd78",
        "cursor": {
          "ref": "08652051-90cd-45ea-95dd-869c8bf7fb05",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "100d7d84-b022-4225-b07b-90eca36764c8"
        },
        "item": {
          "id": "5b0b9b0b-8d84-4f2a-a9e6-23320dfacd78",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "622abf30-b106-4431-a31e-bc4458159337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d90ff85-828f-49c3-a33a-f5028ac40e17",
        "cursor": {
          "ref": "596a2f81-2fd3-49a7-9778-ba71d82bd90e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0b5e0ba8-c3f9-4afb-8bd4-38380464ca81"
        },
        "item": {
          "id": "9d90ff85-828f-49c3-a33a-f5028ac40e17",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d88d9c18-4b21-415b-a0df-89bec8477772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efeb979-f616-4fe7-946c-c04f065f3aaf",
        "cursor": {
          "ref": "6b9385e5-5b20-472c-b09b-aabcd14ae0a0",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "27712eed-c4e8-4022-8ddd-ea108cc65fd2"
        },
        "item": {
          "id": "2efeb979-f616-4fe7-946c-c04f065f3aaf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cb874ac7-c2b1-4838-b5ea-8ac73bff8127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28fd653-9849-4291-b39f-c960fa10cc27",
        "cursor": {
          "ref": "844a99d2-edec-4b11-ae0a-53e2e1d28cdf",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6d2a88c1-3135-4259-a476-b15c9372f4c2"
        },
        "item": {
          "id": "b28fd653-9849-4291-b39f-c960fa10cc27",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "652a475c-2a32-48f7-9354-a004d299960a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1403662-c7c9-4917-b4ee-08d8130b0d08",
        "cursor": {
          "ref": "64841a94-76f9-4c2b-9533-f4580b6cd83c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "37be5089-1137-46d6-af15-508c92470772"
        },
        "item": {
          "id": "b1403662-c7c9-4917-b4ee-08d8130b0d08",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bd4d2ce6-d915-44a9-80c4-14c61843388c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cc0de7-88e6-40d2-87d4-c024aff0566b",
        "cursor": {
          "ref": "cb3c861a-e09e-4751-94f3-e97ee5b9512e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0b9ffd25-3fb3-4b26-8c0d-68665897c7cb"
        },
        "item": {
          "id": "08cc0de7-88e6-40d2-87d4-c024aff0566b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "44108a8a-5fd7-4d76-99c8-dde7f1a06ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a17537-3a5c-46a9-9c32-ecc9c8905559",
        "cursor": {
          "ref": "b5667e57-64b7-40ba-9e2b-008e7b4c8f04",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c2bf27f7-180e-4bd7-be71-d821e491535e"
        },
        "item": {
          "id": "71a17537-3a5c-46a9-9c32-ecc9c8905559",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a1d2c47c-e128-49bd-8869-a1ec5820dfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6effa2c8-32a1-4de0-a78a-b42a5f766d31",
        "cursor": {
          "ref": "cba303a0-8197-4b77-b343-dad314b5d31d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5a1c78be-254b-4ce6-84ce-2901e14d1bd1"
        },
        "item": {
          "id": "6effa2c8-32a1-4de0-a78a-b42a5f766d31",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "108f2102-77cf-42fe-b173-dc2e1d45eaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2756cbb6-cdab-4b28-a53c-3dd5201822c8",
        "cursor": {
          "ref": "56f9b85d-4a45-49b5-af76-7f4c44efaf96",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3d339848-33c0-43e9-a138-d16095937e6d"
        },
        "item": {
          "id": "2756cbb6-cdab-4b28-a53c-3dd5201822c8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "661e3ace-14f9-4686-80b1-6ba2ca2baeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efde5fae-25ab-4298-99a3-15af4c1bb19e",
        "cursor": {
          "ref": "6feb51dc-d39d-4cca-a98b-d02581af2b33",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ef77771a-6ddb-4256-8551-41a58c49ed7a"
        },
        "item": {
          "id": "efde5fae-25ab-4298-99a3-15af4c1bb19e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "db3a3096-a8c7-473d-9699-f829a020e47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab09e6f5-ec36-4322-9ad5-3f0adc3e5fa5",
        "cursor": {
          "ref": "ca7d63f3-2883-4e15-b8cb-ba04e03f35b2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d87c5783-ec1f-41d3-a9ef-eecc3953e0b3"
        },
        "item": {
          "id": "ab09e6f5-ec36-4322-9ad5-3f0adc3e5fa5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e4781f07-d4c8-4bff-be6d-4f9121f1d38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a9e99b-822e-4619-a5c7-d7700aced50d",
        "cursor": {
          "ref": "2dc1090a-73e1-41d2-ac49-23495320cc97",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "932cde69-e0f1-49b1-8cf4-5388645b9dbf"
        },
        "item": {
          "id": "67a9e99b-822e-4619-a5c7-d7700aced50d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "54f6b28d-7aaf-4993-a364-f148809b1bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0758bce-aac8-4c39-9054-8d91b3f98fec",
        "cursor": {
          "ref": "1feed930-2e04-4783-a567-067f9e992d4f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "526ded08-e0d5-4e02-82a1-cb0582965f19"
        },
        "item": {
          "id": "a0758bce-aac8-4c39-9054-8d91b3f98fec",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1c531592-7fa3-4d0b-adf4-eb819fbd3fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6654ff9-75e7-4e65-b4f4-0d2a9d012444",
        "cursor": {
          "ref": "2ca3d988-41d5-4da4-abcd-66a20e3abade",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a4f0e1bd-bc55-4ee0-aa52-02f7b6e949bd"
        },
        "item": {
          "id": "f6654ff9-75e7-4e65-b4f4-0d2a9d012444",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6b96f8b0-a027-4545-be64-ee5f88f4f316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063d6e2d-edb2-4f5d-b9e9-4a68b8a84d11",
        "cursor": {
          "ref": "313ad719-be40-4d0d-a75d-d997a02abb99",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "62f495cd-6164-4b1d-a411-23035445823e"
        },
        "item": {
          "id": "063d6e2d-edb2-4f5d-b9e9-4a68b8a84d11",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1b8006a7-01bb-48a2-bdd8-5eb3d3027bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a52599d-99d1-4b59-868f-57cad36a5fa2",
        "cursor": {
          "ref": "c0fc62c7-99af-4158-bccd-9445657857dc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ec3baa4c-dcfe-4dd4-a408-26dbe7dd6685"
        },
        "item": {
          "id": "5a52599d-99d1-4b59-868f-57cad36a5fa2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "76f889ab-6798-499d-8678-a0e7a35361ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf861758-7f1f-46af-87f2-f35db47d35d6",
        "cursor": {
          "ref": "e1a61b70-bff0-408e-9230-a49c89573839",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f32bad5c-4583-4291-b352-b0838501337d"
        },
        "item": {
          "id": "bf861758-7f1f-46af-87f2-f35db47d35d6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "36c9c8c0-9260-4e97-bcb1-8f0f5fafb8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df9d7f0-6a34-4fd7-8079-247a622ba081",
        "cursor": {
          "ref": "57864736-7fd4-419e-9d29-4bb7374b9050",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "19412cb5-6948-46c6-afaf-a18b27d09520"
        },
        "item": {
          "id": "1df9d7f0-6a34-4fd7-8079-247a622ba081",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7756c35e-453b-445e-8188-cf77c27148c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4989ea93-640f-4741-83f9-5cba978c2f5f",
        "cursor": {
          "ref": "65eb9731-fc57-4ef8-959c-f68159c8abad",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d204d2de-e0c4-4c99-a538-e1ac6b184f39"
        },
        "item": {
          "id": "4989ea93-640f-4741-83f9-5cba978c2f5f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b12257d0-feb1-4db2-85af-a5d1487d5f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73170da6-fe3c-4c0a-9ec2-bd3aaa548696",
        "cursor": {
          "ref": "590f8ae5-0fdc-4716-9e52-f16162f820dc",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aaebf947-76af-44bc-b913-4952d546242b"
        },
        "item": {
          "id": "73170da6-fe3c-4c0a-9ec2-bd3aaa548696",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bcd8e8a7-2a44-4441-bb1a-297c97e8ad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3636bafb-0b3f-450c-a37c-559c2751e84f",
        "cursor": {
          "ref": "acf161a4-a9ed-4504-8fe3-d2459246fed6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8e4a1a3c-8360-4907-bd49-f6b43d0e6781"
        },
        "item": {
          "id": "3636bafb-0b3f-450c-a37c-559c2751e84f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3c2b95b7-bd72-40d9-b52f-526d93a85569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e50944-813b-427d-a8eb-30715bcb3783",
        "cursor": {
          "ref": "6c8b280b-f6a8-4216-b182-f36e4a8e0a82",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "60a045fc-3f12-43a4-aee9-0f74d764fff7"
        },
        "item": {
          "id": "a4e50944-813b-427d-a8eb-30715bcb3783",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e69e5351-8493-4f9b-bd98-9692f6e56d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ceca93-c418-4014-9912-7d7a99aa0d94",
        "cursor": {
          "ref": "f3ad2e54-cb3f-4a9f-ad2f-0e0ad3b68110",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b1e58588-5980-4b6e-a0fd-16480c2cb889"
        },
        "item": {
          "id": "e0ceca93-c418-4014-9912-7d7a99aa0d94",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "78ab0938-5371-4471-b293-f0f0da778937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62d9007-6602-4ad5-a98c-3c6f645d4f0c",
        "cursor": {
          "ref": "95b71e94-8015-4fda-8996-2ae76aede882",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0922d519-f052-4909-99e6-5b17597f4ff1"
        },
        "item": {
          "id": "b62d9007-6602-4ad5-a98c-3c6f645d4f0c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "79fd30c3-055f-4f81-a651-a07b0147ea52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c655d1-b40a-4eda-b0d1-56eeaf2626b0",
        "cursor": {
          "ref": "8e624fd1-035d-4d76-8c74-8ae517aff032",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7d8a2adf-5204-451a-b469-e504c092a782"
        },
        "item": {
          "id": "c8c655d1-b40a-4eda-b0d1-56eeaf2626b0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f723678b-c6fe-4096-b334-e773966819ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0034388f-be71-4bdc-8122-68d1e78dcc73",
        "cursor": {
          "ref": "f13186dc-0e3b-4d70-bb10-785e162dff17",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6fdc75cb-5d19-4948-85cb-e240fcdb3163"
        },
        "item": {
          "id": "0034388f-be71-4bdc-8122-68d1e78dcc73",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "712f94e3-4f67-4475-880a-8c18cddce91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cb8870-763b-4c3f-a702-0db495a5cb27",
        "cursor": {
          "ref": "4ccd40c1-3d53-4f49-a305-426a297a39f5",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "81b9e5e7-0d8e-4a26-8ae8-f8ef77706674"
        },
        "item": {
          "id": "a6cb8870-763b-4c3f-a702-0db495a5cb27",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9352bc41-5252-4763-90db-681994a514cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67287d28-cd55-4ad1-a2d0-043b94cca98f",
        "cursor": {
          "ref": "05147b55-b0b4-49fe-ab71-ebfe106b6807",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8450d9e8-0026-4342-9a90-685426d07668"
        },
        "item": {
          "id": "67287d28-cd55-4ad1-a2d0-043b94cca98f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ff94c69f-f40c-48a6-baf0-aba6b40547bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4496662b-db28-4651-a358-7036f3905adb",
        "cursor": {
          "ref": "25bd4eb0-8221-4562-89d5-c1b6035f7e6b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6e9ac550-9906-40b9-b2ad-6abd06353da8"
        },
        "item": {
          "id": "4496662b-db28-4651-a358-7036f3905adb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fcd1a271-d5d9-4bed-84a3-e215d4957a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34155bb9-4ea3-4248-b9aa-71926616f6b5",
        "cursor": {
          "ref": "60dae2a7-5cf6-4cd8-9acd-070dd4f939c2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "50bd6e0c-a688-4e4f-95dc-b83b198078c6"
        },
        "item": {
          "id": "34155bb9-4ea3-4248-b9aa-71926616f6b5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9074408a-4f1d-45a9-9dc2-1952d70340cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fa7b7e-5903-49e4-8557-8fd91eca88c4",
        "cursor": {
          "ref": "c1169bae-9c93-477d-856c-9ecee52505c7",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cf253b9f-1398-4bda-ae51-5cb09344ddbc"
        },
        "item": {
          "id": "58fa7b7e-5903-49e4-8557-8fd91eca88c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7767d67b-2619-42a6-a637-3e9de849aca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425ac453-d23c-49a3-bfc7-862161dd7e5e",
        "cursor": {
          "ref": "c98294b3-7edf-42c0-9bdd-5db45ad8e83d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d4f33957-0895-400c-bde8-61179cf8c008"
        },
        "item": {
          "id": "425ac453-d23c-49a3-bfc7-862161dd7e5e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d9137252-2396-4d86-82b8-69a8e32d1b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa6fa71-d618-4015-8dae-455a084cefb5",
        "cursor": {
          "ref": "2ba46763-7085-4ce6-a91c-52cce02a4f45",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b9412442-6d8e-454d-96af-adf5f83f3f3d"
        },
        "item": {
          "id": "2fa6fa71-d618-4015-8dae-455a084cefb5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a853a04a-7881-4b8c-b66b-fb409a6dcaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db326ac-9b28-4ed2-a636-a878899dfc42",
        "cursor": {
          "ref": "ae4b5851-99b8-4039-8303-c313512863af",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f25c5176-8158-4a26-a854-09794e8c820d"
        },
        "item": {
          "id": "1db326ac-9b28-4ed2-a636-a878899dfc42",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f6fc5c8c-2950-4657-94d5-14469f829d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f216906-e1db-4780-9bb5-0c12b8579eda",
        "cursor": {
          "ref": "f084d14d-414a-4158-9232-9e6ae174f62d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "530fc1d5-e146-4c14-858b-d34cf328730c"
        },
        "item": {
          "id": "0f216906-e1db-4780-9bb5-0c12b8579eda",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7f8c1b84-e7ce-4d7a-aab1-392c4cb272be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663b60f4-175e-4958-9b7b-2443d89d25b0",
        "cursor": {
          "ref": "4795ea01-8c0f-4053-b4ed-1572bf0c725c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b29c4f1c-7e1c-4a82-b233-7574d81e44e2"
        },
        "item": {
          "id": "663b60f4-175e-4958-9b7b-2443d89d25b0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6619fa29-e017-467f-87d9-6656b29b9e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9842fe9e-c60d-47e3-acdf-bb89c0c9547b",
        "cursor": {
          "ref": "c8e21a7e-4d94-4c6b-ada2-b0a5d78aa13c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "800db91d-9707-42c0-a31c-4facff4b4b13"
        },
        "item": {
          "id": "9842fe9e-c60d-47e3-acdf-bb89c0c9547b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "620a6fd5-1519-470a-9c13-131315902814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115f2811-8737-4b29-9af6-33812af6da0d",
        "cursor": {
          "ref": "4ffaaca9-cd36-4fdb-8bb2-36e2198766e1",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7bbcbbdd-bdde-4941-9ed4-52cf99a12dbe"
        },
        "item": {
          "id": "115f2811-8737-4b29-9af6-33812af6da0d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a12e401d-e542-4382-aaac-a50c070810d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499ec26e-f00b-48d7-b00f-fa2f4e076c38",
        "cursor": {
          "ref": "84c5f8d0-6652-4270-bf91-ceb4a96bf6a7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "95d552bf-b1da-4940-be89-b6d466ba2e80"
        },
        "item": {
          "id": "499ec26e-f00b-48d7-b00f-fa2f4e076c38",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c4a446f2-47be-43cd-9a31-cc336d7656e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d6c90c-2469-4f89-8cdb-79276a03bee4",
        "cursor": {
          "ref": "dd046ab5-6592-4b1a-b1e3-87d9698f4c25",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "54eb503f-cb26-4deb-9d92-0d585bf7f580"
        },
        "item": {
          "id": "f3d6c90c-2469-4f89-8cdb-79276a03bee4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "354dd82b-7c80-4734-8155-4260b92d55ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a335c61-7cef-473e-a9a1-bc5586953254",
        "cursor": {
          "ref": "ce571a8c-de57-4e30-94c6-e51496d8ec33",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "95def5d0-6db0-44e2-aef4-9c408c705b46"
        },
        "item": {
          "id": "2a335c61-7cef-473e-a9a1-bc5586953254",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "19a47e75-cc65-45aa-9a01-4ff0c4850951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c85b365-7b19-4476-8157-748a489fe7d5",
        "cursor": {
          "ref": "95b3f00b-d475-40ce-bb3c-80d85722de99",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1b180c48-d917-4260-8746-26d98c32dc9e"
        },
        "item": {
          "id": "0c85b365-7b19-4476-8157-748a489fe7d5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8a2254c6-f64b-4db0-8d26-bfb9b5837ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c16510-243f-4bd7-9233-83e2c9da100d",
        "cursor": {
          "ref": "dec5df9b-d2c3-46fa-ab57-baf22a9af638",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0cd6d622-c89c-4b7f-b6cc-1f17e6c9a46e"
        },
        "item": {
          "id": "c7c16510-243f-4bd7-9233-83e2c9da100d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c6ad63c8-3c49-4683-9e20-f90946f934a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fa85f2-2dcf-4599-be0b-05dc2fd512f0",
        "cursor": {
          "ref": "258caed8-c824-4005-ac6d-7d8dcfcf289b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f062464e-e2b7-4595-a190-6dcf2cffa768"
        },
        "item": {
          "id": "29fa85f2-2dcf-4599-be0b-05dc2fd512f0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cfda27a4-d7a9-4330-acf9-457e697e90a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ef17ff-590f-4f74-90f5-d51a209d41a0",
        "cursor": {
          "ref": "85b17912-0664-4543-a967-356d8db34ebf",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cb196304-fa23-42ff-b121-52c6bc477a01"
        },
        "item": {
          "id": "e0ef17ff-590f-4f74-90f5-d51a209d41a0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "da90f903-5beb-4b19-8b01-7700241e7543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90101c5d-5a57-42c4-883a-ee15cc1f1bcb",
        "cursor": {
          "ref": "f029ef1e-9fa3-4b9b-a71c-ea60786d8a61",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2edc9e17-10c2-4d06-bccf-4a0008c2b125"
        },
        "item": {
          "id": "90101c5d-5a57-42c4-883a-ee15cc1f1bcb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "984150d3-e972-4821-840a-7e86b8b22d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd3f2cb-7dfe-4661-92ae-dab277df8613",
        "cursor": {
          "ref": "c52fed50-d836-450c-b3be-a8e9b7fc5fb4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5768f759-2abd-44e1-b4ac-66d20e8a93bd"
        },
        "item": {
          "id": "abd3f2cb-7dfe-4661-92ae-dab277df8613",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c56a8c30-933a-46a2-9052-9c8a7b0f6acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3eea96-c89b-49f1-8117-6e312e753010",
        "cursor": {
          "ref": "cdd15d67-46b7-4bc5-b5de-2333417d45c1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e6b33ff6-678d-4c1c-ac02-bba69dae28ac"
        },
        "item": {
          "id": "ea3eea96-c89b-49f1-8117-6e312e753010",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "00109653-601e-4d8a-8be8-27449b2ad787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c567273-feff-4459-a4bf-d0292ebecb21",
        "cursor": {
          "ref": "4b5603d2-743a-4b9c-a317-70a5e083014f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "49936a57-27d1-41a2-9c59-3409b2c4c9d5"
        },
        "item": {
          "id": "2c567273-feff-4459-a4bf-d0292ebecb21",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "261cef50-4069-4741-b407-0df5e2cf55e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da90da3d-e6fd-4fb3-8bea-4eea1a964745",
        "cursor": {
          "ref": "72d7026a-1ab4-482d-9983-5a02c6dcd4af",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7005271d-be8b-477b-be58-b44092c0863f"
        },
        "item": {
          "id": "da90da3d-e6fd-4fb3-8bea-4eea1a964745",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "96dce1e8-e121-4585-b79b-ca3694baf8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d000c6aa-3a63-45f9-bef6-0333815b323b",
        "cursor": {
          "ref": "d54946d9-f93d-4c88-9119-b832ec5aa0c2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3e241cd9-95e3-4e1c-b918-71689fdf3b04"
        },
        "item": {
          "id": "d000c6aa-3a63-45f9-bef6-0333815b323b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b72465df-1b67-45f4-8944-adcc7f1f9643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cc37b8-1563-4b6d-add9-a54c2203f24b",
        "cursor": {
          "ref": "a8b977fd-8ba0-46de-bf73-09723b1143c6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eac7f4f2-22cd-4385-8ce3-d7caaaeac05a"
        },
        "item": {
          "id": "d1cc37b8-1563-4b6d-add9-a54c2203f24b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f5bd3fee-7cf9-4d83-b98b-b0013f780de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55421ba7-3fd9-40ad-8831-5e0d9e202a74",
        "cursor": {
          "ref": "39c8f92d-5fc8-4bd6-bf29-35b8060b5e61",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a7f90c24-a40e-42e2-a106-ffc2c8546ba1"
        },
        "item": {
          "id": "55421ba7-3fd9-40ad-8831-5e0d9e202a74",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a13b3cd3-2284-47cc-a829-917cded16d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994c1320-d31a-42ce-a222-535e0a9e4404",
        "cursor": {
          "ref": "4eb7843e-c5f1-4a9e-ac79-613796ac9996",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "90fe135a-659a-420b-9763-49b13cffdf12"
        },
        "item": {
          "id": "994c1320-d31a-42ce-a222-535e0a9e4404",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "088fb004-13dc-4809-8080-d160e9aa1137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e69cf1-e988-4c15-b01e-03add8c45d82",
        "cursor": {
          "ref": "5a1a34a9-8fcb-478d-9ba6-0a538715602e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7d53d56e-e49f-44b3-a954-6c78f63b3117"
        },
        "item": {
          "id": "d4e69cf1-e988-4c15-b01e-03add8c45d82",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "66a3d0b1-5e56-42f7-91bd-b9ab7be04e84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8535270a-3139-485a-a008-1aa7453e4fbb",
        "cursor": {
          "ref": "f5a79501-28e7-4a33-8c22-ba34ea2f347e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e1237338-f6f8-42b6-b8cc-151cbd88030b"
        },
        "item": {
          "id": "8535270a-3139-485a-a008-1aa7453e4fbb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d77297d1-32a3-429f-b6a4-b548bc2fc0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7ee6bb80-e30b-424e-b6ad-5c52d7b59e56",
        "cursor": {
          "ref": "59fbab54-54c4-4db6-b36f-43786739d218",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b808197a-2326-451c-a0e0-ee0b8f2dda00"
        },
        "item": {
          "id": "7ee6bb80-e30b-424e-b6ad-5c52d7b59e56",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9983b370-96c2-4b26-8b68-be79a71302e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f5c146f7-bb73-48f2-87c3-1eb266b5868b",
        "cursor": {
          "ref": "96ded6fd-ebec-4c60-a286-ab39e3578ffb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ab4dbd61-3c7c-4a5a-916c-796a395e9640"
        },
        "item": {
          "id": "f5c146f7-bb73-48f2-87c3-1eb266b5868b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e26cdc72-fcc7-44ef-9591-a1ba54280f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fda3e1e0-c751-4631-829e-ea2a9dd4d35e",
        "cursor": {
          "ref": "51f2c463-f7f0-4be5-b070-97b8d1844c7d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cd278cec-cff2-40e1-b689-5ce68d8e4223"
        },
        "item": {
          "id": "fda3e1e0-c751-4631-829e-ea2a9dd4d35e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ec1134b4-78ab-4dc6-b8ef-94fb8b84cd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a249e913-bf3c-4579-b359-88cc1ddc4eed",
        "cursor": {
          "ref": "cc7ce739-8709-480b-93bc-e6878cd54f5e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d5c6577a-3300-45b7-a4e3-9efcc485a140"
        },
        "item": {
          "id": "a249e913-bf3c-4579-b359-88cc1ddc4eed",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e3f68a04-78c1-426f-9bed-fe35eb0a187e",
          "status": "Created",
          "code": 201,
          "responseTime": 9172,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fb1bab-bebe-4afe-9aa0-861b40315b62",
        "cursor": {
          "ref": "57e85295-b09e-45dd-bb45-58e931d855ae",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8a22722c-d961-4099-b991-76a9f4b6d47d"
        },
        "item": {
          "id": "60fb1bab-bebe-4afe-9aa0-861b40315b62",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fd65af5b-9a2a-42e0-94ff-23b71fe525f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "182e36ff-a8fb-4235-9472-4ea1892ec06b",
        "cursor": {
          "ref": "3c48079f-071e-4971-883c-0d8e60caeef7",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d0bfab28-3024-4fb2-a54b-e219d8b52778"
        },
        "item": {
          "id": "182e36ff-a8fb-4235-9472-4ea1892ec06b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a44cfedb-ec29-4184-81b4-7f32b2b39c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "528751b0-9be6-4d47-af55-9e38393f161c",
        "cursor": {
          "ref": "7ee21b53-d17d-463f-8d01-ade8df02baa9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "95115bcf-772e-49a9-8536-41eb06f79a49"
        },
        "item": {
          "id": "528751b0-9be6-4d47-af55-9e38393f161c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ff2205f2-4b1e-4314-8b29-f8cdd40f0fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98b86f1-5aa9-4720-a533-ce8cf9ed21f4",
        "cursor": {
          "ref": "c3d3fbcb-b10a-4138-91fb-7e75dae5f34c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b25786eb-b3be-4b2f-956c-a463bd7ea677"
        },
        "item": {
          "id": "d98b86f1-5aa9-4720-a533-ce8cf9ed21f4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1e634d44-47a0-42b3-a37e-db346b2c2a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a960602-4d5a-496f-9b74-f9ac04862167",
        "cursor": {
          "ref": "3ccf1818-7a21-4c80-a5a7-b175e0e1ed88",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "66ba8fd4-b871-4e8d-8719-79808d62d98e"
        },
        "item": {
          "id": "7a960602-4d5a-496f-9b74-f9ac04862167",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d9a6d477-eb38-484b-964a-ca25ed7bdc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e2e11-ef54-4d4f-8311-43d4710707ed",
        "cursor": {
          "ref": "c9987dc6-2921-4502-a485-ccd1a01a4323",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "81b4f8dd-f54a-479a-b0ed-4d4406094e91"
        },
        "item": {
          "id": "2b3e2e11-ef54-4d4f-8311-43d4710707ed",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5afc1687-1a46-4291-b717-cf79b13aa0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7de3ccd-954f-4108-80f5-d4f5bfb84904",
        "cursor": {
          "ref": "982caba0-71fd-4849-9d00-5b04557bfe39",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c05d087e-b578-4d85-980d-a41c40149987"
        },
        "item": {
          "id": "b7de3ccd-954f-4108-80f5-d4f5bfb84904",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e0aa1f00-dc20-4f91-9e5e-b309c714f1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ce70bf-3760-434a-a857-1509b9d8b3ff",
        "cursor": {
          "ref": "2017c12c-caec-4e51-a7a5-630fae8bb8d8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f78c5ee2-e125-4e98-a1d2-99480d38822f"
        },
        "item": {
          "id": "58ce70bf-3760-434a-a857-1509b9d8b3ff",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e2b095e4-f162-4902-9e65-9774a8174c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77395614-7ff5-4745-9d5f-de1d9ed68314",
        "cursor": {
          "ref": "64f2b815-d765-4d13-8602-2af3bcfb3676",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e99dff46-da98-4191-a83f-1c479fef5171"
        },
        "item": {
          "id": "77395614-7ff5-4745-9d5f-de1d9ed68314",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "39cbbc7e-d289-4a58-b2c7-24ee990c07f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e3378d-6869-407b-baa6-72aa8ba1f086",
        "cursor": {
          "ref": "e746761e-08a1-4307-a7ea-666dd22213f2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7fce43d8-e6e7-4c02-b57d-b2a97ed0316d"
        },
        "item": {
          "id": "03e3378d-6869-407b-baa6-72aa8ba1f086",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "773dc60a-b808-452c-b765-5e2b8f1db92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7f7123-fb89-4183-91e4-306254181c3c",
        "cursor": {
          "ref": "e9486271-6efb-4140-8ad1-aeba672cf8e4",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ca052454-6e1c-4682-9d1f-2f64874e334f"
        },
        "item": {
          "id": "5d7f7123-fb89-4183-91e4-306254181c3c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f2e538a9-cae8-4986-9c40-f2900c60def8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61111550-aad4-4d84-b424-0aa67926280b",
        "cursor": {
          "ref": "ade819e9-0d18-4acd-8766-71328f58f2ba",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4e5b9719-3894-413a-b0eb-84e2ce181530"
        },
        "item": {
          "id": "61111550-aad4-4d84-b424-0aa67926280b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2bd000ea-6def-456e-bd23-3998b2145585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1727f04e-4f5b-4b22-b661-5847e5d4a9e8",
        "cursor": {
          "ref": "08035acb-f82e-4648-a57d-c5cdfca46cc2",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "866c501d-cc38-48d1-98cb-4c2d0d14858d"
        },
        "item": {
          "id": "1727f04e-4f5b-4b22-b661-5847e5d4a9e8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "74000b0b-a531-4fb0-8df3-be3b59aae028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241ba016-7138-4774-ad62-40ab890fda26",
        "cursor": {
          "ref": "492a85b0-d946-4955-acb1-1b0420cf20af",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ce21db44-e24a-4f31-ba91-136e50c2c574"
        },
        "item": {
          "id": "241ba016-7138-4774-ad62-40ab890fda26",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7ad3ab9d-5643-4ef4-b335-d542f2b21d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e318875-451f-45d0-9139-787810ea157b",
        "cursor": {
          "ref": "0694dd87-f299-4b98-91e3-d8b03b9b96ce",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d76a8e0e-af93-40c5-9879-3e0f82488bbb"
        },
        "item": {
          "id": "9e318875-451f-45d0-9139-787810ea157b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "63fa849a-41b7-46c0-bca6-86db1bc53183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd6535c-6f4e-4390-ae3b-3212b9b3e133",
        "cursor": {
          "ref": "31f50883-32a9-4211-8e61-ee8ebff6ca07",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "47c447fa-7169-48aa-866d-44f18dad2831"
        },
        "item": {
          "id": "cbd6535c-6f4e-4390-ae3b-3212b9b3e133",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bfe6a47d-a045-4303-b2e1-6b2be1af2165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4bc283-ff00-443f-ab49-962c1ada7787",
        "cursor": {
          "ref": "8697fdce-4631-4654-8c00-951199ada645",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "58a34c56-5e3d-4a12-8bbb-320b366b5ac5"
        },
        "item": {
          "id": "9a4bc283-ff00-443f-ab49-962c1ada7787",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c3cb7a1d-59ce-496d-90f7-eabd828483c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4b8d95-bce7-46a3-ad58-a3a46da5d69d",
        "cursor": {
          "ref": "921c9fe3-3966-4d7c-9356-6c36d416b7a0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4596dc14-3c8e-43ca-9d14-a4dd623cb79b"
        },
        "item": {
          "id": "0d4b8d95-bce7-46a3-ad58-a3a46da5d69d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e07548d8-4ed4-4dd9-8f30-813e003bd1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66949ff8-55bd-4466-8766-e4e10e34367b",
        "cursor": {
          "ref": "001cb772-81c9-4a67-8903-24cf41c1e19e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8b026c32-67ba-4d88-90e6-190aec255b7d"
        },
        "item": {
          "id": "66949ff8-55bd-4466-8766-e4e10e34367b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4aea0a07-2900-4f5e-886b-5b7896641c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7c7f72-3877-49bd-9b18-f15756634cb2",
        "cursor": {
          "ref": "23a7250e-f95e-4657-852c-f8d4094a6f8d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "81a57916-3179-4053-9646-d7b6b82312fc"
        },
        "item": {
          "id": "6a7c7f72-3877-49bd-9b18-f15756634cb2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "41f538d8-cf10-40f8-9732-7929a0108ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97431d9-e956-49b1-9d34-6c2f8cdde81e",
        "cursor": {
          "ref": "8152923a-f763-49ab-bef6-b29f3dacde81",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2a963ff8-f373-4c4b-905c-994c3ef47d67"
        },
        "item": {
          "id": "c97431d9-e956-49b1-9d34-6c2f8cdde81e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d4fad4d4-1f59-449c-86a5-cb46e996f7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ed0053-b77c-4fca-945e-c7cce6a31861",
        "cursor": {
          "ref": "d3ac7bc5-0cea-4bfa-847e-d6b974f436f7",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "47120793-0cd3-4966-9296-135fb4464b3a"
        },
        "item": {
          "id": "84ed0053-b77c-4fca-945e-c7cce6a31861",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "af583405-41df-42af-8114-dea505d36b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc76beb-c0a0-4c06-9c92-3aeb50381840",
        "cursor": {
          "ref": "1ca6b1c1-d980-4654-9e6a-fd435a2394cd",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "39a5db4c-750d-4d4d-b15a-99058ffddce0"
        },
        "item": {
          "id": "4bc76beb-c0a0-4c06-9c92-3aeb50381840",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "42cf405f-2ba5-4e10-a8c1-ac0c7e3c398c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020b257d-0673-43b9-b3b9-e6a79d2a5b04",
        "cursor": {
          "ref": "02dc4f02-c5a3-4cbb-b8db-cb2134cdd2d3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3d332cfe-265f-4362-8bb9-1c812d6f7818"
        },
        "item": {
          "id": "020b257d-0673-43b9-b3b9-e6a79d2a5b04",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "72138876-3007-4f25-b907-a3c4b2eef876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c110a16c-6111-43b4-8eb2-c9fb05bcdb4f",
        "cursor": {
          "ref": "79d8a57b-359b-414b-b0b1-19165a1ef263",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "928beea7-33c6-44b7-8858-cfa404f295f1"
        },
        "item": {
          "id": "c110a16c-6111-43b4-8eb2-c9fb05bcdb4f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "981f5a6e-81c7-4dd2-b8bf-e44bd49495a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b48530c-d137-4ac1-ad95-2fd0aa7c83d0",
        "cursor": {
          "ref": "7c195ecf-5452-4e9d-98e4-8e7c2bbd992c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "670b8aa0-85fe-42ff-b927-b31bc12d2602"
        },
        "item": {
          "id": "8b48530c-d137-4ac1-ad95-2fd0aa7c83d0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dd7a5ebd-bb2a-4b97-8361-893bbe88889c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbaee4e-2b61-40ca-81a1-e5d3307f75c9",
        "cursor": {
          "ref": "b2dc8873-30c0-4914-8f90-a21ab885545e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9cddc449-18eb-45b1-b445-6c798e61a1ce"
        },
        "item": {
          "id": "ecbaee4e-2b61-40ca-81a1-e5d3307f75c9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "74f648ae-677f-4dc4-97be-517dd3071233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f290dc3c-d84e-4ed0-9de7-e1d22ea05889",
        "cursor": {
          "ref": "1b66f8ad-82ee-4a50-8994-d10b3988c5ce",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1cfe7bd6-7959-4b4f-8c70-28b01658087a"
        },
        "item": {
          "id": "f290dc3c-d84e-4ed0-9de7-e1d22ea05889",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a822d596-d283-4c95-80fd-7f8a5a57e8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20677450-2e48-4cdf-aa70-19d20561e1ca",
        "cursor": {
          "ref": "fb80b9ed-68c4-4624-9d49-da51ad8cf39d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0a2787c8-9da6-4275-8967-d138d44da4fa"
        },
        "item": {
          "id": "20677450-2e48-4cdf-aa70-19d20561e1ca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5b47619d-b1ca-45ad-bba0-cc90d7a15ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44b4af0-fd7a-4be2-b8c2-bf1627bfe663",
        "cursor": {
          "ref": "d159a14c-d586-447d-8b76-e8030380697f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9efea87e-f131-4a14-a87c-d0c41d0814fe"
        },
        "item": {
          "id": "c44b4af0-fd7a-4be2-b8c2-bf1627bfe663",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d75c7c3b-5279-4440-b5cb-7ebf4043de47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1e944b-742c-440d-b6ed-1bee9e153c34",
        "cursor": {
          "ref": "06865dbb-8246-4c0c-823a-c028c0857093",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8937d98c-caa9-412a-8246-df7e28778470"
        },
        "item": {
          "id": "3f1e944b-742c-440d-b6ed-1bee9e153c34",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "931d225d-8a94-41bc-a9c3-7e716c53e36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbf26fd-8c5e-4108-8da5-83f7aa293745",
        "cursor": {
          "ref": "95dbf129-0fe2-43f4-89ee-09bfb8030ec6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f2041bef-360e-4df9-a5b2-b50f099cf34d"
        },
        "item": {
          "id": "8bbf26fd-8c5e-4108-8da5-83f7aa293745",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2b0ee883-5e0d-4a3e-86b3-29aaeffdb3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e35a4b-2bfa-49dc-a535-23c413a4510e",
        "cursor": {
          "ref": "0c4a22dd-033a-42f7-bd87-3526cab3574e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "76318832-d830-494b-9712-0a1254723b08"
        },
        "item": {
          "id": "87e35a4b-2bfa-49dc-a535-23c413a4510e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "836fb12e-28e2-43d2-a4ff-06c7c89eef2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754b7cce-dd2e-49ba-a32e-d34d6210937b",
        "cursor": {
          "ref": "c187f7d9-449a-4263-bba7-3c3b51237a03",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b75cf8d9-9e0c-44ec-9462-1642c8fd4304"
        },
        "item": {
          "id": "754b7cce-dd2e-49ba-a32e-d34d6210937b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "552b851d-b76e-4068-a244-ac126851e572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d13995-29bd-46fe-8340-3c23b31e21d0",
        "cursor": {
          "ref": "9e5720b1-a206-4529-822b-003a066be1b7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1717ce60-4c2f-4c5a-bda4-d444f57adcb9"
        },
        "item": {
          "id": "e9d13995-29bd-46fe-8340-3c23b31e21d0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc30b065-02ac-4b7c-abf3-0411ba9263fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2383f43-3f0f-437a-8b34-d66f7cb208ae",
        "cursor": {
          "ref": "538c2067-b0c5-4ebc-836f-8ac4f5718e5c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d8672690-8909-4fe6-ad18-837ba16e9b3b"
        },
        "item": {
          "id": "e2383f43-3f0f-437a-8b34-d66f7cb208ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7006335-3727-4d57-8346-6a3d09ba3bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f338f84a-4e71-4910-9cc0-33b34ee70239",
        "cursor": {
          "ref": "bb808dd1-ba3f-49e4-b2d9-93a059cc694f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6ac51207-163f-4a2e-89e1-73568a27bfef"
        },
        "item": {
          "id": "f338f84a-4e71-4910-9cc0-33b34ee70239",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6510b649-55d1-4829-9af6-eb7b61514a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533da3f1-5724-4293-9e88-0c913759b3e3",
        "cursor": {
          "ref": "36ecaffb-220f-4260-bf19-95242b958121",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "22f303aa-eacf-4aa4-9356-286538228d0d"
        },
        "item": {
          "id": "533da3f1-5724-4293-9e88-0c913759b3e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b39e9328-2e43-4263-96d6-2a7af56ff9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554a45e9-c227-4fb4-b36a-d00a65c2ae4f",
        "cursor": {
          "ref": "9e343e60-810a-40c5-86f7-436ede9c01e4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8e270c02-6943-4c8a-af85-f94e84afcb95"
        },
        "item": {
          "id": "554a45e9-c227-4fb4-b36a-d00a65c2ae4f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d62a6707-4113-45db-97d1-6b519710d534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f9fcd9-420f-4242-8abf-6f042e49119f",
        "cursor": {
          "ref": "663ceecc-92a4-4d6f-91ca-f21ba312bdb7",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1e59d4ba-d289-4fd5-ac2e-041da971aa91"
        },
        "item": {
          "id": "83f9fcd9-420f-4242-8abf-6f042e49119f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "129f9b55-17fd-4ba2-8c3a-778a26585872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d6f1ef-a247-4dac-935c-aee6305304ec",
        "cursor": {
          "ref": "d751e3ee-73b4-41ef-af32-9dac67afb912",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c2935102-b2f2-49c7-8c69-a005ea2eab5c"
        },
        "item": {
          "id": "49d6f1ef-a247-4dac-935c-aee6305304ec",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "62b86b85-e417-4e87-9fec-2cc657f00771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107ff0be-f5fe-4a1f-a65a-1a4a8014cb5d",
        "cursor": {
          "ref": "01d82cf1-d555-423b-a19f-11cdd6549e71",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9d8ebd7a-18bd-40e1-a67d-5b7aaad8ad3a"
        },
        "item": {
          "id": "107ff0be-f5fe-4a1f-a65a-1a4a8014cb5d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "646b8f90-1b27-45b2-8958-35fe6aa8012e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94c1221-264f-4a64-af79-67bba47263f0",
        "cursor": {
          "ref": "3349250f-e265-4952-b57f-9752b279bab5",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "13d9b64c-9fe3-4eec-be26-ade82a421205"
        },
        "item": {
          "id": "f94c1221-264f-4a64-af79-67bba47263f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8f2a6125-d4af-4e79-8cca-1bd58d42cd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eb994d-f6f4-4351-aadd-e8a9ca0165eb",
        "cursor": {
          "ref": "1531984b-d0e3-4256-9aba-469e2b78eaee",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "63dcaa4d-004c-4198-9b6d-9fa3218c8d03"
        },
        "item": {
          "id": "b2eb994d-f6f4-4351-aadd-e8a9ca0165eb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "60a52bfd-d0eb-4b47-90ff-2743b5dec39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7192ca46-fba0-40f3-829c-243c27e1b6d3",
        "cursor": {
          "ref": "48042607-4a3b-42ab-9196-3d5ff284955f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b2101355-a3d9-444b-b85a-b8b2642f08f6"
        },
        "item": {
          "id": "7192ca46-fba0-40f3-829c-243c27e1b6d3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2e96426b-99a4-4572-9e1d-8b8868c9d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499f37b8-9d81-4b19-8cba-a029705ed5de",
        "cursor": {
          "ref": "c6058307-568f-427f-9c9e-39000f3b9a39",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a48f1ad4-dbf8-4571-a3cd-fe9fd2dd2058"
        },
        "item": {
          "id": "499f37b8-9d81-4b19-8cba-a029705ed5de",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c3f26a48-9437-4084-9f2f-38686435f2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30c31f7-4351-4686-9b6c-7ba494510e0c",
        "cursor": {
          "ref": "bb0771a5-573a-4701-9a2c-9de5b60b4e21",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "390021f0-7daf-415c-afe4-f068b5e0736c"
        },
        "item": {
          "id": "f30c31f7-4351-4686-9b6c-7ba494510e0c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "51b450a6-863d-4ac8-8917-06902dece185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f53cbcd-dc4b-4cb4-8e5a-2418efe0b904",
        "cursor": {
          "ref": "24298f77-9d95-492c-aade-0b5356f30d23",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c44e5af2-07a8-4941-bdfa-bf2a1604a85b"
        },
        "item": {
          "id": "9f53cbcd-dc4b-4cb4-8e5a-2418efe0b904",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "614087ea-4d72-4cf2-a846-3ce650f020ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fdeeb6-9694-445a-8ba4-302c83dbe99b",
        "cursor": {
          "ref": "552ab01d-1aea-4cfe-acfe-49546264c15c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ff50e063-d4fb-4bef-a430-a12d69304405"
        },
        "item": {
          "id": "c6fdeeb6-9694-445a-8ba4-302c83dbe99b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d8e20f8b-9f28-46a2-803a-3096fa8c8103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a664ac1a-3ff2-462d-b7f4-c259f5315902",
        "cursor": {
          "ref": "9f0c66ea-e440-491b-a2b7-b7603f29442e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7b5b607c-7f0a-477b-90b2-224f4548167c"
        },
        "item": {
          "id": "a664ac1a-3ff2-462d-b7f4-c259f5315902",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f21d6677-b755-4a40-8c96-8c92423fe223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da69fa4-c965-4232-8c67-a9062e5e2507",
        "cursor": {
          "ref": "ca8eda44-98f4-4840-b23c-651768c44a37",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8faca435-f0ff-4db1-a9a3-f2b0801efe5b"
        },
        "item": {
          "id": "1da69fa4-c965-4232-8c67-a9062e5e2507",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ceb9a31e-05fd-4b9b-9f86-40bcbe5044f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f689718-e799-4fdf-9997-7a79c7508b5b",
        "cursor": {
          "ref": "dcdc77b1-ec52-4a07-9d7a-eaae8d5f26df",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c4a5caff-27f1-4cae-83b7-e90b6809bde9"
        },
        "item": {
          "id": "5f689718-e799-4fdf-9997-7a79c7508b5b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "33ca16cd-2af3-438a-8e4f-3e3b368572a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1304ce50-31aa-4f5c-bfd7-cbb445445992",
        "cursor": {
          "ref": "a193e688-d3bc-4c18-a4a6-a65d33d760f3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "70932552-6b39-4fab-ae78-32ae220d09f7"
        },
        "item": {
          "id": "1304ce50-31aa-4f5c-bfd7-cbb445445992",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "30e85233-3119-4325-86ea-7703b7907e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85cc142-2a8b-47f3-a647-ba5c72f3f938",
        "cursor": {
          "ref": "f06394fe-2026-41af-9c7a-cf0cc899d11f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e3b26d5f-ae6c-4664-983d-3b68d646232b"
        },
        "item": {
          "id": "a85cc142-2a8b-47f3-a647-ba5c72f3f938",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f5262907-d67a-4c13-a835-f6c14a65a9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8b0774-4e01-4051-9cf2-3368e0851bc4",
        "cursor": {
          "ref": "1b612b15-4052-488a-9056-a83bf7a7d326",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c7fb2b52-a99e-408e-9d91-3e33c2a26fad"
        },
        "item": {
          "id": "0f8b0774-4e01-4051-9cf2-3368e0851bc4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1b7f0c58-018c-4708-ba1f-8d38aa259ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cc29f2-d88a-4f8e-85a1-ee3258f00d73",
        "cursor": {
          "ref": "3ef94a35-6161-43ee-a696-c7976023b289",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "485c6c54-ef49-4388-a99c-7f73819adcab"
        },
        "item": {
          "id": "d3cc29f2-d88a-4f8e-85a1-ee3258f00d73",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "78fdd745-bacf-411d-a13a-f40150255a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637b66db-e3f2-4609-83ec-4513f17eac52",
        "cursor": {
          "ref": "52f910c9-6c5e-45c0-8ec9-d1b62143ddaa",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a1a6df0b-48c5-42b6-a743-d934da0b324f"
        },
        "item": {
          "id": "637b66db-e3f2-4609-83ec-4513f17eac52",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ebda3908-21e3-4823-8e43-20872a8f8b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44efcee1-5c30-43a3-b018-7264b18dac19",
        "cursor": {
          "ref": "74e4b5c8-50fd-48d0-be0a-7991c632cc9c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b9ee4da8-1fec-4421-9e43-704a7ad4eebb"
        },
        "item": {
          "id": "44efcee1-5c30-43a3-b018-7264b18dac19",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9cf19d12-15d1-4bfd-ab09-856eda0e2b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9eaa38-3754-4ab1-91ae-526662905412",
        "cursor": {
          "ref": "97f988ff-5c26-4f77-87ae-91cef446fe9e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "33e29c2d-5bc2-4da8-8b32-277b01b4fa58"
        },
        "item": {
          "id": "cd9eaa38-3754-4ab1-91ae-526662905412",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6bae5475-69a1-4f93-923a-4a86a0bbcbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e4621e-7292-49b6-b3f8-5765db351590",
        "cursor": {
          "ref": "a4f500f4-cdc7-48ac-86b8-30e8af331878",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dcb8da0b-5da1-4971-9348-7266f31ca01c"
        },
        "item": {
          "id": "69e4621e-7292-49b6-b3f8-5765db351590",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "92db0b49-e821-4866-99af-f8c9bbada20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6e0a63-d973-476d-831d-57be1fa4d542",
        "cursor": {
          "ref": "d7e56158-6ede-488e-99d3-32482320d877",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f59a2739-1360-4c0a-9445-52e7bfb10d97"
        },
        "item": {
          "id": "dc6e0a63-d973-476d-831d-57be1fa4d542",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d8641154-6348-4b2e-a085-cdc5987fa9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c32d0a-18e2-421a-b86e-4b68249966c7",
        "cursor": {
          "ref": "1c575eae-3dd5-4c7e-ab3c-5f599440397f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9c95d0b6-9355-428b-8721-c6554f6c5689"
        },
        "item": {
          "id": "b0c32d0a-18e2-421a-b86e-4b68249966c7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f5f58dee-8d39-4ec3-ae97-54b5c141d7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc45d86-e72f-43a5-83eb-44fe5ccda96e",
        "cursor": {
          "ref": "5b0fbfc8-fc07-4668-8b4f-059e7c84f167",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1f1adb23-4de8-4b0e-a46e-7c1ab19d94f8"
        },
        "item": {
          "id": "ebc45d86-e72f-43a5-83eb-44fe5ccda96e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "03580231-bfb0-4132-b97b-86603b11dd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcdb6dd-1a45-481e-9456-f1f891a86883",
        "cursor": {
          "ref": "93dee784-6716-4bad-8927-d39745c08dd0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "311a4421-69b3-4cae-9f83-f2b1bfe73742"
        },
        "item": {
          "id": "4bcdb6dd-1a45-481e-9456-f1f891a86883",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0ed0d826-a5c5-4278-8f8a-442351dc1dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6e9f2c-068d-4cdc-bf11-927658e9dd72",
        "cursor": {
          "ref": "1d227e99-06ab-4c7b-a823-049ea9b4c65b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dc4c8bb3-300f-48e7-adbb-becfca81c69d"
        },
        "item": {
          "id": "cb6e9f2c-068d-4cdc-bf11-927658e9dd72",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "01314203-c3cb-4044-8b4e-e46e561c1f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9a407f-0b77-48fa-99e1-bb0c7cde7da6",
        "cursor": {
          "ref": "9fb51081-b556-4fa7-853a-375365f3bbdb",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "87f5ab3a-32ce-458a-a541-e8e67ce885dc"
        },
        "item": {
          "id": "ff9a407f-0b77-48fa-99e1-bb0c7cde7da6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a2145052-a188-4533-8d85-d3ec4858089e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70510ef8-d384-47ae-b347-796e8f1634c9",
        "cursor": {
          "ref": "03d4f737-4aaa-4ba8-b2b8-a345db60e77f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ad959a99-06d9-43d2-b4b9-d31b47725652"
        },
        "item": {
          "id": "70510ef8-d384-47ae-b347-796e8f1634c9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "024f24e6-5d10-4e54-b130-e8904d1b197e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed10d3a-80a3-4441-89ca-b85314c62cb6",
        "cursor": {
          "ref": "47ff486a-a461-4e5a-8c29-070bb9152cb1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dd400d01-7603-4886-a80a-dd7ac04e509a"
        },
        "item": {
          "id": "3ed10d3a-80a3-4441-89ca-b85314c62cb6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1f20f9db-2fb9-4fbe-b089-0c63b3f9f2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f96eb44-3901-49b7-bd18-df5ae3484337",
        "cursor": {
          "ref": "0b7c256d-614e-4302-8def-25014fe699f1",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "152a10c7-e5df-4ddb-b954-fe6830487d4b"
        },
        "item": {
          "id": "9f96eb44-3901-49b7-bd18-df5ae3484337",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a04dbd34-674b-46fa-9c9f-ceb8bd275991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db20a42a-b77a-4d0f-8acb-6501051ddc4d",
        "cursor": {
          "ref": "2fa5364b-9117-4d29-947b-8e252a9dff40",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e9545a9f-a85c-4a4b-9025-a8c9bf3fe974"
        },
        "item": {
          "id": "db20a42a-b77a-4d0f-8acb-6501051ddc4d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5ab7831f-ba92-4c28-92b9-62f9221db995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a673e7cc-dc02-44b3-bdf1-fe2fd46bd520",
        "cursor": {
          "ref": "8fa4dcc3-f723-4b51-8d54-6aa9c5346d78",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f4f1e56b-9802-4a1d-92e0-96ab8460e18f"
        },
        "item": {
          "id": "a673e7cc-dc02-44b3-bdf1-fe2fd46bd520",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "13eb7fc6-343e-4115-b154-49363e430d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b678eb9f-d7e9-439c-888f-a4b0289e3487",
        "cursor": {
          "ref": "3f5cf644-d5b8-4482-8cd2-ae31354671f6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8f57c70e-9ffb-40bf-b49a-12faa27c8dcd"
        },
        "item": {
          "id": "b678eb9f-d7e9-439c-888f-a4b0289e3487",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3704876c-5870-41a2-988c-d950bc2ca6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cd86de-54c3-4464-b75e-527675539cd1",
        "cursor": {
          "ref": "0918c776-6854-4769-8f7a-c5b23ed7f025",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "89903d81-3474-4cbe-9715-eb6d66eacb94"
        },
        "item": {
          "id": "58cd86de-54c3-4464-b75e-527675539cd1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "345b8fbb-29f2-48c3-b1ae-c60817a583c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609fd5c4-824e-428e-9755-913aaba15079",
        "cursor": {
          "ref": "d4c65899-c7d7-4f9f-96dd-7e6129e5687b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "930843ea-f1c7-4154-8642-ee9f87e38698"
        },
        "item": {
          "id": "609fd5c4-824e-428e-9755-913aaba15079",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7699e211-1a26-419d-9e58-f9dc85263977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bce63bf-66e9-4658-9b32-9621cbbc4d35",
        "cursor": {
          "ref": "b6637ceb-8780-401a-9e9a-71e47c36e844",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8d969859-649e-4de7-a663-2a3ed7d06dd7"
        },
        "item": {
          "id": "0bce63bf-66e9-4658-9b32-9621cbbc4d35",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b530a6e5-fa7a-489b-a903-87f17240c5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbb6da4-9254-45f7-ae4c-7d27e4c5cb23",
        "cursor": {
          "ref": "24d6487f-99e5-4233-9eae-5c7f2b084109",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8e6586cb-d9b8-4545-98b8-9b77597b3f3d"
        },
        "item": {
          "id": "ecbb6da4-9254-45f7-ae4c-7d27e4c5cb23",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1a1d4a26-62cc-4da2-ac63-d63c390ffe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13c461e-5c4d-486a-94d4-a69d759c1b78",
        "cursor": {
          "ref": "f6597ffc-2415-4ed6-b36f-a1fb6f087e33",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6b5e2d7a-599d-4658-9123-936713ab5c9c"
        },
        "item": {
          "id": "c13c461e-5c4d-486a-94d4-a69d759c1b78",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "966ecd5c-e15f-47cd-bff3-413fcef60c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984eeab1-505e-46a9-888b-7d8144407cf8",
        "cursor": {
          "ref": "38c8d144-f395-4566-aa3a-d8249d487fc8",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ec3d6fa4-c5ea-43cd-926d-3f847c52b8d0"
        },
        "item": {
          "id": "984eeab1-505e-46a9-888b-7d8144407cf8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "95576d91-e3f0-4275-ad66-4a9987f955d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1126707e-748b-4539-9a92-ecff3e106985",
        "cursor": {
          "ref": "b7c04556-06b3-4b3c-89b2-f08d46072b18",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d982f702-eff8-4654-982b-02290e7d9dca"
        },
        "item": {
          "id": "1126707e-748b-4539-9a92-ecff3e106985",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce807a40-a951-4c61-9c9d-2e864d4cee86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81b7c32-64e9-4ca9-952f-bf0d4113ec4f",
        "cursor": {
          "ref": "c01d825d-e42c-4ad2-a667-1c9b5f661375",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ca726dfe-7e1b-4e78-8711-72053dc457e8"
        },
        "item": {
          "id": "b81b7c32-64e9-4ca9-952f-bf0d4113ec4f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4eb8ba57-3c62-4944-a819-2ea74297cbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1771fff5-2ffa-40c7-8028-3009c59413af",
        "cursor": {
          "ref": "5a900045-99b9-4486-8651-b12c731ac6ef",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3c879ba8-9d01-4eaa-89fb-4385dc266f2f"
        },
        "item": {
          "id": "1771fff5-2ffa-40c7-8028-3009c59413af",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d104e64b-7425-4c42-947d-fad153007437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9c0eb6-b8f3-475e-8959-30620b26321b",
        "cursor": {
          "ref": "0f67f31b-cd9b-4c5f-a0cb-9bfcf4163524",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e99fd4cc-a6ac-42f4-894a-cdb1d592da5e"
        },
        "item": {
          "id": "7e9c0eb6-b8f3-475e-8959-30620b26321b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5d934c3f-02a3-4402-9e76-f0dfb47371c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfeb75d-a6a8-4475-b9d0-05fa8a4296fa",
        "cursor": {
          "ref": "dc64f214-e093-47cf-9fb8-f9540da34f06",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b9ff40db-a5d1-4f29-bed2-992e86e12338"
        },
        "item": {
          "id": "1cfeb75d-a6a8-4475-b9d0-05fa8a4296fa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5ac57713-7c06-4130-a2a9-d6b6be58dfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61029932-f525-4375-9d41-b8fc7ca24cf5",
        "cursor": {
          "ref": "9cf5f659-6256-4ce6-8899-dab32403f15e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7ed7ebdc-9527-494f-9628-800e529867bb"
        },
        "item": {
          "id": "61029932-f525-4375-9d41-b8fc7ca24cf5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cde20310-e29f-4d87-88c9-97a1f80528a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5e86f4-2b35-4aa3-9d7b-2d80887490ea",
        "cursor": {
          "ref": "f7913816-0200-4619-926b-e1d119def506",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9951f8f7-0cbe-496d-96ae-606ba06484e2"
        },
        "item": {
          "id": "6e5e86f4-2b35-4aa3-9d7b-2d80887490ea",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1ca2e184-03bb-47ad-941a-0f109fd98de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b964e7-150e-46fc-90cf-2c1f1613dbcf",
        "cursor": {
          "ref": "446db7da-24ae-44e4-bb9e-2fe13430872b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ea60fd85-daec-4dde-b64f-72b570cda605"
        },
        "item": {
          "id": "06b964e7-150e-46fc-90cf-2c1f1613dbcf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6a9888e7-1f49-49e8-b1da-02a18e885db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021cbada-7c68-4b54-9d73-d6753f94d0de",
        "cursor": {
          "ref": "cb670db7-2734-427c-b67b-eccda800ad6e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c4fba446-204e-4dc1-b36a-553dfcffb4ee"
        },
        "item": {
          "id": "021cbada-7c68-4b54-9d73-d6753f94d0de",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c144b374-8f9b-45dd-82a8-9278bf920f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc9ecf9-5c95-47cc-965c-e2b565d9d031",
        "cursor": {
          "ref": "d4bdac50-9e93-40ac-ae27-a1429e2b8330",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8d40618a-677d-407a-9cbe-0204cacac0d5"
        },
        "item": {
          "id": "0dc9ecf9-5c95-47cc-965c-e2b565d9d031",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "48dcd447-6edc-480a-ac9f-e588391526ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3dd6f6-8a5f-4baa-99ef-50fd5854c7d2",
        "cursor": {
          "ref": "dc11bef0-9c2a-4306-90fc-774bc4242adb",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7246d15c-3c29-409d-a705-3d888409e7d9"
        },
        "item": {
          "id": "7c3dd6f6-8a5f-4baa-99ef-50fd5854c7d2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5bf41738-c7fc-4fc1-afbf-bdc2feddbc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33400029-dc88-4cf2-9a39-75f907f66e70",
        "cursor": {
          "ref": "d42b5b2e-ad64-44cc-862f-59f467e54961",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5e254a8f-f1df-45ff-bb02-55c2c94ba6ac"
        },
        "item": {
          "id": "33400029-dc88-4cf2-9a39-75f907f66e70",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8401881f-104d-402b-9020-f922f143a44e",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "5b7e28fd-0606-4cda-ae38-5d774e5fa40f",
        "cursor": {
          "ref": "283d66c5-72e0-4b1e-97eb-aceae06c1d3c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bcd6e0da-fa04-48b1-af8e-012326b29030"
        },
        "item": {
          "id": "5b7e28fd-0606-4cda-ae38-5d774e5fa40f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "09180400-9e03-45d0-b66e-ca303827f35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685017e8-92bb-426e-851a-d0f35da347e8",
        "cursor": {
          "ref": "dab9f709-4154-43a7-a762-ffb3be41d25a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b54467ce-db00-4f7c-8d11-41c65ed8455e"
        },
        "item": {
          "id": "685017e8-92bb-426e-851a-d0f35da347e8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "25096e16-2aea-45ba-8507-3b07d863dc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028a4147-2549-43d2-9874-85914d5ede4a",
        "cursor": {
          "ref": "dc264204-65cb-4ac5-b640-d1a78545d2f1",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fbd2b467-667a-4c67-af77-74b19b17eb7e"
        },
        "item": {
          "id": "028a4147-2549-43d2-9874-85914d5ede4a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7132814e-70fd-4b1a-a505-cf1929a967e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60054983-67c3-48ce-a071-f01a81c105cd",
        "cursor": {
          "ref": "9f890f18-664e-40fc-a878-7a68905bf975",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6eab0b45-a2d7-4757-9806-5399b9d591f1"
        },
        "item": {
          "id": "60054983-67c3-48ce-a071-f01a81c105cd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "980e6870-ad43-48cd-bf34-8e9aef4f5c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81fd0d0-edff-43fd-ad04-a2333946d8e2",
        "cursor": {
          "ref": "9cfda716-7fc1-410d-8656-0c01d0a04b46",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0edd73aa-2185-40c4-b359-9eff38ff7de9"
        },
        "item": {
          "id": "b81fd0d0-edff-43fd-ad04-a2333946d8e2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2bb407bd-e5e3-4e6e-b5ba-8787d2d5f5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9178a6b0-ded9-4a20-86e2-3d1dbb03efa5",
        "cursor": {
          "ref": "098ace1f-2f0e-490b-b797-a36092993c86",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "984cafef-58f4-4e4a-b751-dd8062d756c4"
        },
        "item": {
          "id": "9178a6b0-ded9-4a20-86e2-3d1dbb03efa5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "183f3b37-3c9f-4c49-be63-c412e27a429d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4319d934-45d8-4f80-94a2-decb9b1aaff2",
        "cursor": {
          "ref": "f83ac608-050a-4832-9b71-6b7e860b1182",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "32328926-0e30-4718-96b8-019325d63a70"
        },
        "item": {
          "id": "4319d934-45d8-4f80-94a2-decb9b1aaff2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8da906be-dcf6-4473-a7ef-a6b9ab4cfa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a6733c-734b-49f8-ac83-7e47f2c8fb00",
        "cursor": {
          "ref": "fd09a073-1856-4f48-adbc-b265546ae423",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e7a8f54c-2ec4-4b5a-bc37-77c3178fbbd3"
        },
        "item": {
          "id": "16a6733c-734b-49f8-ac83-7e47f2c8fb00",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "588cfc9b-ec4f-492d-93ab-7fea82574ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08904780-f18b-4949-800e-f5c70cad1655",
        "cursor": {
          "ref": "b4306f14-8123-4a03-bd30-343d89ae7093",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a4e87f57-026b-44df-86b0-ddc2c7878593"
        },
        "item": {
          "id": "08904780-f18b-4949-800e-f5c70cad1655",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "798d12d8-d0f8-43a6-bd6c-97adac9337ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985c0d50-9c6a-439f-93cd-77840b8524cf",
        "cursor": {
          "ref": "75b7d025-b966-4c79-9db0-e44bdb19de5c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "16d32212-08d0-454d-91c7-5391cd2d6ccf"
        },
        "item": {
          "id": "985c0d50-9c6a-439f-93cd-77840b8524cf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8f3b0f44-3340-4b09-ad43-4b72f76ae99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df24a55-6d62-428c-96fb-85ab48c55b8a",
        "cursor": {
          "ref": "a3f1ccf4-0203-44ce-beb8-4e565b7ecdaa",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3bc303b1-7c9a-48f8-90c5-5825360599e3"
        },
        "item": {
          "id": "9df24a55-6d62-428c-96fb-85ab48c55b8a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "abc8209b-2dee-49e2-a8c4-0915cf2183a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a867165b-63e7-4430-875f-41d430222ad1",
        "cursor": {
          "ref": "6b847905-93b6-4a44-b88b-6ec0b0693c6d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "44bcaf25-1d17-4d04-b6d4-1a898b49ba24"
        },
        "item": {
          "id": "a867165b-63e7-4430-875f-41d430222ad1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b98e8604-96b1-45db-a7ec-6c18a096c04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2252c624-c276-4b8a-9fd5-f483ba76bfdc",
        "cursor": {
          "ref": "85f0abc2-028b-449d-81bc-164b671bd022",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "632ee1c0-ce00-4b76-9d0b-a26c130b8e5d"
        },
        "item": {
          "id": "2252c624-c276-4b8a-9fd5-f483ba76bfdc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5a0108f6-357a-4fd6-b502-d0e9edceb053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a000fc-055c-42a2-8bf1-3b4d41cc28d7",
        "cursor": {
          "ref": "6cecf788-af42-4762-8915-9b2dad44cd9b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "75cc8616-0f87-440c-9421-c9ed5b23aa06"
        },
        "item": {
          "id": "e9a000fc-055c-42a2-8bf1-3b4d41cc28d7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d4ffa730-3e7f-4e3e-a8ab-d16db753e9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09feb5d8-f360-4ded-a20b-e36157ad29cc",
        "cursor": {
          "ref": "2ded3b1b-000b-42e5-a228-5be35b75db14",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "48d963d1-ceef-42d0-9d5b-1d3381947fac"
        },
        "item": {
          "id": "09feb5d8-f360-4ded-a20b-e36157ad29cc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3978d608-8d10-49db-b139-55381a826a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43209edc-ee36-433f-9d8c-eb83c2ff9513",
        "cursor": {
          "ref": "f9367a37-df59-461d-89fb-2d868fed6cc0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5aba5068-027c-4176-977e-fe2b75dc8167"
        },
        "item": {
          "id": "43209edc-ee36-433f-9d8c-eb83c2ff9513",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "501f0463-b00a-45c7-8c24-644a71607bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca26be2-ae6e-4d9a-98ad-cc5e1cc38eea",
        "cursor": {
          "ref": "5fb95e04-8a99-441d-9366-fe32e3c16d15",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d8827dbf-dd0c-4b2a-bc82-a4575ffd484b"
        },
        "item": {
          "id": "8ca26be2-ae6e-4d9a-98ad-cc5e1cc38eea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7c2ed67e-4d05-4e39-93e8-173e5789b8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5f1d71-5c7c-4b36-aeec-3b2ba448c100",
        "cursor": {
          "ref": "f9c0a548-9039-49af-b20a-1dd722eb971d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ede894c6-46ce-42dc-bfb6-5da169fcb10f"
        },
        "item": {
          "id": "cd5f1d71-5c7c-4b36-aeec-3b2ba448c100",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3b466f2d-84df-48fe-93c1-ffb37caca5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2a40cc-924f-429a-a3bd-61774a04e546",
        "cursor": {
          "ref": "d6d2793a-d101-4dfc-b753-404868eeab29",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1bbe4569-80a1-417c-9030-4850f249a636"
        },
        "item": {
          "id": "2a2a40cc-924f-429a-a3bd-61774a04e546",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7125861e-48af-4fd2-8fe0-017daca7d3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dd6caa-d556-491e-a239-3c617ef220f6",
        "cursor": {
          "ref": "9434405a-6931-4c65-b3dd-33273b2a162d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d1a0f7f6-e853-4168-86af-f53286123fe8"
        },
        "item": {
          "id": "29dd6caa-d556-491e-a239-3c617ef220f6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7f9bb19c-e97c-4c78-b5c6-cb35a17170be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490a9bab-5a56-44bf-8e9f-29ddb7710aea",
        "cursor": {
          "ref": "1c4aad9d-a521-4d71-b8e6-6394fc36d69a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "75f7642e-d773-4887-a670-170938f0f7f0"
        },
        "item": {
          "id": "490a9bab-5a56-44bf-8e9f-29ddb7710aea",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "60819790-ffe9-41f6-a26c-1372dd8b0109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ef92c6-01bc-4f95-9f82-904bb4838920",
        "cursor": {
          "ref": "449cb398-00c1-4a9e-884e-f5cb6e580be4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b14191c8-458c-413b-a9a9-9b867dee8533"
        },
        "item": {
          "id": "83ef92c6-01bc-4f95-9f82-904bb4838920",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ec84ba8b-be39-42dc-bba0-ccc565bd72f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddbe6b4-a7ef-4859-a0f9-319765a58aed",
        "cursor": {
          "ref": "ce36e12b-750d-4f0c-ac4f-67422566fcdd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7f36072e-3edc-4dc3-915b-b1360e3b4fc5"
        },
        "item": {
          "id": "1ddbe6b4-a7ef-4859-a0f9-319765a58aed",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c9b370eb-ae88-4f11-af03-c1ff2aeb0109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30144868-5b38-4647-9735-86fda4f1b594",
        "cursor": {
          "ref": "c3b3f40a-678c-418d-82e9-f57aa223d04c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aa4574a0-41e1-43bd-9876-0213f8516086"
        },
        "item": {
          "id": "30144868-5b38-4647-9735-86fda4f1b594",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "037ed220-f386-4c0e-a6b9-ba20a99f66e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58013f59-49e9-4cac-83c4-c8a99a68f094",
        "cursor": {
          "ref": "9605c75a-f05d-4ce1-bb77-063ce5fad23d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "121cd656-06a0-485e-b613-b5354260539a"
        },
        "item": {
          "id": "58013f59-49e9-4cac-83c4-c8a99a68f094",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0a7dea45-39ff-422e-b829-cc71cb3716e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bfbb9e-8d81-48b4-9a5f-58a5da36eb05",
        "cursor": {
          "ref": "f10756cb-a06c-4826-90c3-50dd402a39a3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0308a2c0-2b25-499d-b7fe-59018b5568ba"
        },
        "item": {
          "id": "b5bfbb9e-8d81-48b4-9a5f-58a5da36eb05",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "125c3a5e-eb79-4240-a4fa-1dbe9f8bbd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f1397-2b6e-42e1-8cda-49528fd8d6ad",
        "cursor": {
          "ref": "58d9b0d3-667a-445e-9abb-771f51dd5363",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "da2d7354-f691-4c89-88e4-31aff507de71"
        },
        "item": {
          "id": "796f1397-2b6e-42e1-8cda-49528fd8d6ad",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6637dae1-93b6-488b-88fd-60f9e420ed9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ac225a-6608-43ce-b882-73394e7fdb41",
        "cursor": {
          "ref": "aa7db28e-fe56-4d74-b5b6-2e53b1914cd0",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "18581733-66ae-466d-87d6-8a3a496f5b86"
        },
        "item": {
          "id": "88ac225a-6608-43ce-b882-73394e7fdb41",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea1381da-7e07-4ebc-8e25-045da0ca0828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da23d06-02ea-4c87-aa41-8c40a6acba02",
        "cursor": {
          "ref": "f263eaf8-8ce6-4f19-85e2-77fa50d10fad",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4b207339-1d54-44e7-9401-261178475a67"
        },
        "item": {
          "id": "1da23d06-02ea-4c87-aa41-8c40a6acba02",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "707e1ced-70ef-48c4-9032-7fb4d5b72eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39f2eaf-145b-48cf-bc14-7ebe943f09c8",
        "cursor": {
          "ref": "ea649ee0-a3ec-4465-8066-5b3ed3de9ee6",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bfb31dc8-d2d7-4791-86e1-3b5691f228cf"
        },
        "item": {
          "id": "a39f2eaf-145b-48cf-bc14-7ebe943f09c8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ce357a1e-f16e-4d63-900f-5b76927cab9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb38dafa-e479-4a80-9412-1ffaa2f88025",
        "cursor": {
          "ref": "bdc23bd9-65d5-4b04-822e-d5340f4256eb",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "027da201-240b-428d-b77e-305d90f3e8ef"
        },
        "item": {
          "id": "eb38dafa-e479-4a80-9412-1ffaa2f88025",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8fba9519-4c59-4dfe-b094-39d7b12324fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6a3c05-bc4b-4402-b799-42e8cb407be3",
        "cursor": {
          "ref": "50825fc4-1d20-4bdb-8ef8-9679f943c28a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9d1b549d-5d24-49bd-8e8f-a8d0fc8ad7e8"
        },
        "item": {
          "id": "aa6a3c05-bc4b-4402-b799-42e8cb407be3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e600b48a-7eb6-4ea6-8817-163047090cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bc445d-87f4-4707-a1b1-f2522b5ccd30",
        "cursor": {
          "ref": "7d63a934-f9ea-42bf-a5cd-2daebea68feb",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c5f95870-a511-4513-9780-9a836bd05d90"
        },
        "item": {
          "id": "f5bc445d-87f4-4707-a1b1-f2522b5ccd30",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "981942c4-806f-486c-95af-885035daf3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1936bb-564a-4752-9a17-299bb0608867",
        "cursor": {
          "ref": "67a8c73f-131f-4509-9f5f-8f8ee2bc39da",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f08df7e2-aa34-4be4-a3bd-71442e094138"
        },
        "item": {
          "id": "ce1936bb-564a-4752-9a17-299bb0608867",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "458f1569-9215-41a5-bca7-4602c67124e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6839351-3ead-4bce-9f1b-a2c974e252b7",
        "cursor": {
          "ref": "d91ae1c2-53d1-4908-a0d7-2a09c1585ba9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a2a802ec-f80f-4ebd-a6ee-4f6a5fa39509"
        },
        "item": {
          "id": "b6839351-3ead-4bce-9f1b-a2c974e252b7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b9649c24-36ca-4153-8fa8-05e10b5ac5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53961c50-ed33-49cd-91a5-1d3f8b30072a",
        "cursor": {
          "ref": "8fc43216-db49-4580-8d95-2c8c49ae203d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b9e9172f-feea-4813-ad21-cea58f92fb3d"
        },
        "item": {
          "id": "53961c50-ed33-49cd-91a5-1d3f8b30072a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1316d5ef-77ad-4e8a-af7a-d529c55829d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f116d26-c957-4db9-8470-7240ce054058",
        "cursor": {
          "ref": "a07f2f46-25ec-4d69-9ee7-b8f690a24c55",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f9eb6daa-8803-491e-afc3-f574832f6611"
        },
        "item": {
          "id": "6f116d26-c957-4db9-8470-7240ce054058",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d809c936-33df-4a65-ac20-1b09832a6780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2a22bd-2ae7-4b01-8736-4658c62ced95",
        "cursor": {
          "ref": "f247a63e-4b11-415a-ab1d-9fed062dcb49",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9fb6d098-8406-4026-ba34-c852e848dbb7"
        },
        "item": {
          "id": "5b2a22bd-2ae7-4b01-8736-4658c62ced95",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "41f9490c-f2af-4181-9ece-29542dc41870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22ab98e-77f7-42fb-86d1-c5bef15ec493",
        "cursor": {
          "ref": "81e26ed7-8d98-415e-8aef-afdbbca97b62",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c0b2abfc-6880-4723-a5e1-3314c69b2904"
        },
        "item": {
          "id": "f22ab98e-77f7-42fb-86d1-c5bef15ec493",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4b64a31c-40a0-4c2f-997d-8a87b89c4935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d405e0-d3ec-4194-bd76-47dcf96f55b5",
        "cursor": {
          "ref": "0b35e98f-84c8-4a56-a918-ffb9bcfb636a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e7e8fe7e-ee31-4ab5-80f9-67939580a5d5"
        },
        "item": {
          "id": "95d405e0-d3ec-4194-bd76-47dcf96f55b5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c891e90b-a9c6-42bb-a292-d12618ef2729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867238cc-309b-4a8c-83de-907c047b4077",
        "cursor": {
          "ref": "20ff66ac-5995-4894-900b-56a59fb2f3af",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "264b925d-9592-4ab5-8b3c-3fd36eaeb487"
        },
        "item": {
          "id": "867238cc-309b-4a8c-83de-907c047b4077",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "da2706ff-c7e7-47b1-9d11-10aed6bc4d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e088a73-f47a-48f2-9aff-daf1379c1562",
        "cursor": {
          "ref": "117525b9-f53f-41d8-bb63-bb33697104b6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d0dba1b2-13ba-4d82-a0eb-9f05298c9517"
        },
        "item": {
          "id": "6e088a73-f47a-48f2-9aff-daf1379c1562",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "67582fae-805c-486a-8f5c-d316198d8a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6ba35b-ccab-4210-a1c1-196611e1a636",
        "cursor": {
          "ref": "39d684cc-d72d-4502-83ba-35bb22f7d32d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "94195daf-1098-4fc0-b710-a4bdbdaaf8c8"
        },
        "item": {
          "id": "1a6ba35b-ccab-4210-a1c1-196611e1a636",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cb8bc0a7-bfce-4474-b83f-156b387ba9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b63919-3e13-4c40-8d7c-073432e5ebaf",
        "cursor": {
          "ref": "3d40ccb2-37ff-4575-b88f-504cbfd3f030",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c967ce21-94b4-4b68-a471-608285a1db75"
        },
        "item": {
          "id": "76b63919-3e13-4c40-8d7c-073432e5ebaf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9d9e2cbf-b6b9-4d84-a2ae-9584818bfbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf937258-e018-4ac7-a9cd-08c7df1e5a0f",
        "cursor": {
          "ref": "82bb1b97-cd2b-4790-966e-177f3dceef80",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3c83ba81-fad5-491a-926f-43452156b81c"
        },
        "item": {
          "id": "cf937258-e018-4ac7-a9cd-08c7df1e5a0f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "61aafa55-e3b4-4f8f-aaf3-6c66a812f884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ff91b2-fed7-4470-bf25-856a7f5385bf",
        "cursor": {
          "ref": "7e500430-de4c-4a68-9214-2f3e2c5bd050",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "480eb1cd-bb16-4d95-8aa1-96b5180261e6"
        },
        "item": {
          "id": "d9ff91b2-fed7-4470-bf25-856a7f5385bf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "34af3786-2e52-41e1-b60f-bdc563007502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9206df64-f511-4787-8d6c-eff9cb82da31",
        "cursor": {
          "ref": "a1212ebc-05f5-4d00-8719-24dca60fd190",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b46d52d1-e4b4-4781-b0d5-75fb097f98e0"
        },
        "item": {
          "id": "9206df64-f511-4787-8d6c-eff9cb82da31",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dc04d211-7653-44b7-92c5-2549ba683894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf9db4e-f1b1-4be2-b76a-eee6aac1e104",
        "cursor": {
          "ref": "ef701964-a88e-49f2-931f-7c21599929d1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8f1ea843-a201-47d5-8028-51e185cb39a6"
        },
        "item": {
          "id": "cbf9db4e-f1b1-4be2-b76a-eee6aac1e104",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6f5b9b8f-2654-4513-93ca-540c78b9bbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee81157a-405c-4cb0-93f0-d9d93eb95708",
        "cursor": {
          "ref": "17e32586-04ac-47ec-87b0-d1e013a769d0",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cf107371-7e83-41da-9fb2-82126564596a"
        },
        "item": {
          "id": "ee81157a-405c-4cb0-93f0-d9d93eb95708",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "01e885f8-bc1f-4bb7-9f7c-45ecb83d2213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f8f892-0ee3-41fa-961b-addc5b8dd80d",
        "cursor": {
          "ref": "7dbfea9d-ae21-420f-baf2-8393218a0892",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "66a0b485-9688-4bb5-b698-bde24df3c8a0"
        },
        "item": {
          "id": "79f8f892-0ee3-41fa-961b-addc5b8dd80d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "689d80c3-c45f-45f3-b53d-393272368a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22532803-fb1e-4598-ba4a-f15f3ad044de",
        "cursor": {
          "ref": "2ce9f3c8-6125-4662-8b74-f6d87ead01c5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "121e7e94-3a8b-4a9f-bdb5-3b773be88062"
        },
        "item": {
          "id": "22532803-fb1e-4598-ba4a-f15f3ad044de",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0a742c09-1397-42d9-922b-ae136902e02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef56dc3-a7d1-4b24-a52b-eebeae47e891",
        "cursor": {
          "ref": "32cb4fbb-d42a-4911-b2d3-95cf46f637e3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b39636ac-5789-4855-8477-e40c57ef4cad"
        },
        "item": {
          "id": "7ef56dc3-a7d1-4b24-a52b-eebeae47e891",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5de94b77-ef01-4a8c-9b24-7bccd0c7e570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57399897-1fb9-4d70-95f6-1c4f7073b57d",
        "cursor": {
          "ref": "9875611f-d650-46a9-8128-dd6bb9c402e0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8ee66a82-3282-4c56-aeda-163237d8192c"
        },
        "item": {
          "id": "57399897-1fb9-4d70-95f6-1c4f7073b57d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b6d6a806-4896-41dc-a1ab-4bab491c84a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640c49c1-1709-4711-bbad-472f88e71848",
        "cursor": {
          "ref": "7b9b5ce4-ed22-4d3c-b280-c60d33d5531c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "35b7d2fb-f7d9-4cd0-983e-308cd2fc6b4d"
        },
        "item": {
          "id": "640c49c1-1709-4711-bbad-472f88e71848",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1d0630a2-5102-4cad-a5ff-8326eae72108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2ef2b7-d8e7-4dfe-a8d4-82b6c921d9a8",
        "cursor": {
          "ref": "26aa7433-669d-47c5-90b7-554621e4e6b5",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e2963c4a-0101-476b-96bc-59bef9f7e301"
        },
        "item": {
          "id": "ac2ef2b7-d8e7-4dfe-a8d4-82b6c921d9a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1b5d2e79-ba12-48d3-ae9d-4821b65f0a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f6bacf-b787-4ef0-931d-9bbe90bdd2e7",
        "cursor": {
          "ref": "74af94c2-4ce8-41ac-84b1-d0970246b033",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fe3ddd9f-3ec0-4e2c-ad24-3dfa36a2ee37"
        },
        "item": {
          "id": "71f6bacf-b787-4ef0-931d-9bbe90bdd2e7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "88e7c4a5-e265-4f62-a12e-088733759d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd9f374-7d4c-48e1-9824-6e73116fa1d3",
        "cursor": {
          "ref": "3f080f28-ac81-4038-9f50-e21011a30a01",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "27553ad1-051e-41ee-8972-9af62135743b"
        },
        "item": {
          "id": "bfd9f374-7d4c-48e1-9824-6e73116fa1d3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "db9f8420-c69d-41ea-99c8-a0ea2c9d4410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7026be57-9508-4fe4-8ccb-c9454f5a1800",
        "cursor": {
          "ref": "d9ef46ff-ae2a-4ad1-92b2-78fdf6fa7d46",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5d8f9412-4662-420b-bb75-757edfb739fe"
        },
        "item": {
          "id": "7026be57-9508-4fe4-8ccb-c9454f5a1800",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "37560606-be3c-4ad3-8a43-d92757efe98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eb5ce9-3bc1-46a9-a550-e7b8641d50ed",
        "cursor": {
          "ref": "ddd1fbf8-86ab-44d6-95ac-b8dc8efe78d0",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "43b925cf-c82d-48b8-821e-851d1c1940bc"
        },
        "item": {
          "id": "71eb5ce9-3bc1-46a9-a550-e7b8641d50ed",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3c31cef2-939c-4678-8082-ba9bd6ecfcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd44a3e-65d6-483c-93be-eab154f270f8",
        "cursor": {
          "ref": "a4ca3dc5-ca5c-4013-863f-753cacdd3259",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "61cd0eb8-1d28-4177-860f-38d38b4102e8"
        },
        "item": {
          "id": "0dd44a3e-65d6-483c-93be-eab154f270f8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "37829555-6f4e-4100-ac39-e0fc5f927563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3268356f-8d92-46cb-8048-d2468d588094",
        "cursor": {
          "ref": "f08db48d-555f-48de-8f56-7304ccca88bd",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9f03a745-26cb-4398-bec0-623f77ecbc6a"
        },
        "item": {
          "id": "3268356f-8d92-46cb-8048-d2468d588094",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c4c4b3a1-dfdf-421c-8cf4-9b12925a13d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1710650c-99bd-4dce-b87c-a2c9bbce780c",
        "cursor": {
          "ref": "21d6c605-6f1f-4f33-94e1-c540a09a0e6e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3bda42a8-5f17-46d6-92de-63ccdd1efcdd"
        },
        "item": {
          "id": "1710650c-99bd-4dce-b87c-a2c9bbce780c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3f427eb6-74c4-4353-977f-1145dd04944d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaeef2c-1884-4e67-905f-02597f19187d",
        "cursor": {
          "ref": "aa3e7d47-dacd-4493-a136-5aedfe07a4cd",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9531acb5-e8da-439b-abd3-8ba68cd83ed1"
        },
        "item": {
          "id": "ddaeef2c-1884-4e67-905f-02597f19187d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a5fccc13-1517-4787-a868-b8c0fc134700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af806b0-a7e9-4623-bae8-95a8f64975aa",
        "cursor": {
          "ref": "7fc7666d-eacc-46f9-91d3-f50249d978b4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "765046cb-414f-4e48-b1b9-c21b9c6f43c3"
        },
        "item": {
          "id": "0af806b0-a7e9-4623-bae8-95a8f64975aa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6b509db8-1f1a-4575-9dd5-0b92267cffc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf07d45-8d89-46db-ae6d-6449394ab130",
        "cursor": {
          "ref": "316e2c16-41e8-4c59-a391-b5548cfda70a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "13d028ec-b4f6-487c-87be-5781e0bac099"
        },
        "item": {
          "id": "bdf07d45-8d89-46db-ae6d-6449394ab130",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3c028da9-526e-43f9-aaf6-f10e50311e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d88ec3-e132-4873-a588-e3d662076d11",
        "cursor": {
          "ref": "750c8eae-60fb-4da0-8f3a-e98c10d28a4d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b3304eb9-2f29-452a-ba55-3d26a4e80909"
        },
        "item": {
          "id": "01d88ec3-e132-4873-a588-e3d662076d11",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "011125d7-57f8-4cd5-a9c1-fe9adce68754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e83dbd-3e95-48a7-aae0-fc68a01c0dd2",
        "cursor": {
          "ref": "3ae44076-5938-47d8-87ed-8349a38f4d53",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a572b157-e3a2-4a1f-89db-c7cba1e25757"
        },
        "item": {
          "id": "f3e83dbd-3e95-48a7-aae0-fc68a01c0dd2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7b3938e5-030d-4e4b-a021-052851846b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6cf3e8-5913-4b3b-8e35-3e66b43a158d",
        "cursor": {
          "ref": "ea02596c-0666-443d-a26b-15fe570a0cec",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b0965357-d532-4e93-8f3e-45446269306e"
        },
        "item": {
          "id": "fa6cf3e8-5913-4b3b-8e35-3e66b43a158d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "87c74823-5346-4dec-a37f-3bafc574249a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301c47ce-c4ea-4ba3-9ba4-cf51a6797550",
        "cursor": {
          "ref": "f991b100-e8f2-4473-bb0a-4d00c00ce6d5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5c61bda3-a049-4a7b-87a2-53a8bb8438e6"
        },
        "item": {
          "id": "301c47ce-c4ea-4ba3-9ba4-cf51a6797550",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "784aaa10-fbed-47e8-b94c-8397464e7091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc97114f-5f0b-4b52-ab9d-2564205e6dac",
        "cursor": {
          "ref": "6ba037a0-0bed-450c-a436-f784d072120f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "de7a908c-000c-4250-859c-b173a158035b"
        },
        "item": {
          "id": "dc97114f-5f0b-4b52-ab9d-2564205e6dac",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6d3764ca-730e-4120-a65c-a9911b4b6586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efae3b8-7899-46d9-b8ae-6a4ddded6d06",
        "cursor": {
          "ref": "3e85a2dd-c689-401e-aaf6-c1bf12ec1870",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6084a3f6-90f2-40b8-bf83-97451a8ead7c"
        },
        "item": {
          "id": "0efae3b8-7899-46d9-b8ae-6a4ddded6d06",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ac4813f7-21fd-49e1-9ba6-371190cf6f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a87e9d4-b94d-4571-94d6-501493f5c78b",
        "cursor": {
          "ref": "a8f8a95a-7f57-4330-a61f-80596759833d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8fe56917-5272-4d82-a65b-3c4a9f226a55"
        },
        "item": {
          "id": "6a87e9d4-b94d-4571-94d6-501493f5c78b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5a79eb67-bba1-4005-804b-471d847b96e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa04ff58-6bc1-4794-8e0c-980e1b104758",
        "cursor": {
          "ref": "cee71c8f-80fe-46aa-8a36-3e0351a0c18e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "62015078-5332-4df0-b3a5-9c66c264ff9a"
        },
        "item": {
          "id": "fa04ff58-6bc1-4794-8e0c-980e1b104758",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dd37e4e3-82ea-4a56-8abf-bb8b9e5ca46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cde5f8-5cff-4471-a6e3-9f637b316b20",
        "cursor": {
          "ref": "442bf22f-773f-43db-88e9-77a051bea03a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4ea99150-0f97-4c57-9bf0-072ff786a7e7"
        },
        "item": {
          "id": "25cde5f8-5cff-4471-a6e3-9f637b316b20",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d9f9d2a5-0d6d-4b00-9424-9e4d56074215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8083ae-f34a-4671-a239-ff8f2c4f69ce",
        "cursor": {
          "ref": "c2d2a00c-aedd-4e13-aafb-079d4e275a89",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c762e16c-e793-4725-82dc-c1e053ef8b24"
        },
        "item": {
          "id": "5b8083ae-f34a-4671-a239-ff8f2c4f69ce",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d120e1f9-48d9-4a67-81fe-b5adf89597f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cf2e83-bca2-4f33-91fa-c09d11387400",
        "cursor": {
          "ref": "10015527-3257-40d1-b167-71bd5cc50115",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "391d75bd-ebe6-40a4-a50a-37be3ae37b9e"
        },
        "item": {
          "id": "46cf2e83-bca2-4f33-91fa-c09d11387400",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "678481e5-f65c-4626-b14c-46bd22778924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ed7c0d-09bc-4c79-8176-3206bd97901a",
        "cursor": {
          "ref": "eb942f12-0c2e-46f4-9103-f505e2ae9a52",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "58814275-717a-4414-be8a-2bb61ab5d1ba"
        },
        "item": {
          "id": "67ed7c0d-09bc-4c79-8176-3206bd97901a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "51a7dbb2-8ea9-43e2-a371-daae8ae86481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd64238-df2b-482f-8e67-137496c4daa4",
        "cursor": {
          "ref": "d95a41ae-aeca-4ce5-a372-886b1099085e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "03ad761b-5d0c-482d-9c10-347e7c128c82"
        },
        "item": {
          "id": "fcd64238-df2b-482f-8e67-137496c4daa4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "788b41c0-511d-4c6c-b485-e3a873468792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f384c7-e9f1-431f-8bb0-d0d9927095c0",
        "cursor": {
          "ref": "eb5ea7fd-d0b2-493e-ae94-dc5f248dc325",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ea8faade-e52a-455a-a50b-12770becb93c"
        },
        "item": {
          "id": "a7f384c7-e9f1-431f-8bb0-d0d9927095c0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "de1fb9cc-ee12-4592-a993-7d31c7898883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963d20a6-e542-4b31-b61e-516dc3315710",
        "cursor": {
          "ref": "34caa55f-6bd4-4773-b185-37819942b52b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "455e1ff0-99b5-4de7-8e02-7c09fad5c070"
        },
        "item": {
          "id": "963d20a6-e542-4b31-b61e-516dc3315710",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "171dcfa5-13e2-423c-8cb1-6ab779581d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59b3c0d-bd56-47ba-a677-4c4a2f383952",
        "cursor": {
          "ref": "9ff579bb-9be2-4f93-a68b-7bb635174f95",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2719d1a9-99fa-4e16-ab16-92286e5a7fc4"
        },
        "item": {
          "id": "b59b3c0d-bd56-47ba-a677-4c4a2f383952",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "12a83b33-4a18-446f-a846-0ce1bb04e3f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e171921e-54ee-42fa-9ca4-05108663ceaf",
        "cursor": {
          "ref": "64052a99-25fc-4011-8130-6304d2202bef",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d4740220-3119-433d-930c-38cb1b20f1fe"
        },
        "item": {
          "id": "e171921e-54ee-42fa-9ca4-05108663ceaf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "247646a4-d866-46a8-ad6c-db90bd893611",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de95aaf-216f-4a55-8018-7d0f79ee740c",
        "cursor": {
          "ref": "e12ed0c2-d0c2-4084-b026-6b3c20452d96",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a5e69d2f-55be-4100-8eeb-85a9595327b1"
        },
        "item": {
          "id": "3de95aaf-216f-4a55-8018-7d0f79ee740c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6ab1bb76-badd-4082-a55d-a4ce621eb416",
          "status": "OK",
          "code": 200,
          "responseTime": 2483,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8fd760-7c73-480f-a810-3bbb725f12fc",
        "cursor": {
          "ref": "022de78b-e40e-4eaf-ac2f-99454a765733",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "61a548a1-d5f6-4b63-9d53-19cbb355b4c7"
        },
        "item": {
          "id": "8d8fd760-7c73-480f-a810-3bbb725f12fc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0002bfbf-44ff-42b0-b99c-f6cacdc3218b",
          "status": "OK",
          "code": 200,
          "responseTime": 3427,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca7ceed-0e97-4baa-8ddf-04d1e389f129",
        "cursor": {
          "ref": "38e5ed1a-ae21-4853-9cc4-b0858a0acd68",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "85c050b5-b809-4623-a544-ad58c03a46dd"
        },
        "item": {
          "id": "eca7ceed-0e97-4baa-8ddf-04d1e389f129",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "81747a37-5969-4781-9050-db5e30a6fff9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca7ceed-0e97-4baa-8ddf-04d1e389f129",
        "cursor": {
          "ref": "38e5ed1a-ae21-4853-9cc4-b0858a0acd68",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "85c050b5-b809-4623-a544-ad58c03a46dd"
        },
        "item": {
          "id": "eca7ceed-0e97-4baa-8ddf-04d1e389f129",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "81747a37-5969-4781-9050-db5e30a6fff9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992c4325-e429-49d2-ba51-4789fed0d64d",
        "cursor": {
          "ref": "2ec32376-e22b-4500-bd90-90e2e1ef09d2",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7bdf8844-9e63-4dd2-8354-490166078abc"
        },
        "item": {
          "id": "992c4325-e429-49d2-ba51-4789fed0d64d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "32e8a048-cf46-4264-8d39-c13c75b3b25e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68912c33-2d7f-4a75-957a-fd39a5a59b0a",
        "cursor": {
          "ref": "8bcd6fae-2218-4b7f-a9a7-6d595639282f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "66c4b420-3f94-4a0a-9f04-2ed9e7b5eb63"
        },
        "item": {
          "id": "68912c33-2d7f-4a75-957a-fd39a5a59b0a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b10f217d-fcd6-439f-8662-b8dcfe53451d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}