{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "09454076-8daf-4a86-88d0-67ed74aadfff",
        "name": "Clear Cache",
        "item": [
          {
            "id": "03b551d3-4d1d-467a-b36a-65538601a164",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c304d6ee-2d2a-4630-b40b-b220b973d3f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9783a039-a4a4-4644-b9e3-74c235d760d6"
                }
              }
            ]
          },
          {
            "id": "1f6d38ca-fbcc-4ba2-9c5a-4d48cd7b90ef",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d722d28-129e-46e5-bfc4-1ec3e5445503",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "371ccb1e-29a3-475c-999a-69ea6def6c27"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d724685b-36a6-43f5-9ea4-f07878ddf452",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e8f75672-a2b2-485e-a368-b7598383ca10",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c67860b-146e-4a53-aad0-5db70fb97c35",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50a0ce2c-9944-48d2-9ec0-65d03c2d5605",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1b7e5e9-dc85-469b-b4d1-cfe51098c785"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10b7c07d-a25d-4f6c-a329-8fc0a96f6e59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17000625-f10a-4a57-8736-8928872162e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05eb102b-9a11-4c59-9509-06aced57c4cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9873d580-6e09-4bd9-8763-3c831cd3643b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49e6f46c-a4b1-4fab-9d59-294364bb5601",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e670856d-2d7d-4aaf-a40a-8653869b2671"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5c08269-c080-4671-b67f-81546a450958",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ebe0eba-b4c9-4103-8d6e-8861bb59c063"
            }
          }
        ]
      },
      {
        "id": "e27864f3-982b-4963-bb2a-83c4aef30a73",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4e751fdb-0f84-4c9e-aa20-7fc9cba1a79a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8abae348-dfe2-4413-95f4-a0251be94359",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea9f8069-bd46-4b54-bec8-5950fa18383a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202de9f6-9436-4f43-960d-f8a1df6a9dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e954e26c-e214-490c-b016-c07915a3786c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecee1e7-8578-4d84-ab48-86a59f02345d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2389bf-5d32-4b55-a914-8db404fbe655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9002a74b-afee-4825-99ef-16c0443c2b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa3fdd6-346b-465b-b490-a4bcbe034680",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5e64b7-575a-480a-8550-60bb12ddd995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfa0553e-1efb-4db5-804b-46a36b49bae3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e31e8fae-dc48-4522-9c52-9450832ef335",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2107d6e4-9eb6-45fc-aca2-cd229042cf17",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0f9b8c-be05-492c-ab83-cec7d117fcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96e57620-eef2-424c-9aae-6c66562830ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242ba697-4c39-444b-814e-c38166545b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ea1fe2-7aa6-448a-bf3f-df907e9d51fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81c3896d-d625-48f3-bcf5-01636ab6b000",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4bb4f80-426f-4193-9523-64ac8a9f0ba4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da8540d8-c49a-4685-b55c-c25a94ac6824",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "57aec25e-a6e1-4832-9412-35f19baf38cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "757f7d87-8e31-4e3c-abec-cd46f8a1ce8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "670bd352-84cd-4269-825c-4bf27a2a617b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef803c8b-22aa-4f14-9d29-d0da1dad10f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83d7a51b-65c9-449c-9550-b227f174240a"
            }
          }
        ]
      },
      {
        "id": "820bb71f-412e-4e19-a1ab-8097e0de7ed7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "758f549f-c499-4ebd-ac1f-9e5616379158",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c80c1c24-d39c-4c79-b7ab-4a9fd1dba925",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7d34edbc-eab8-450e-a679-7d7b217f4873",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd9a5c4-b0a5-49fa-8e85-92fa1507cd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b2a60c-7686-4e26-8f28-92ae57d4f265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e83a3c-34be-455c-828b-89d8ee407ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c261378f-5c5b-4db9-9872-1a17af92a456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e958ea78-21b7-4fd3-a5e2-fe6b8f27a760",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d80e28a-750f-424c-a3d1-65096564fd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c0c367-a4d1-4258-982e-6e72aa4fe706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd5c61c-0258-4939-ad68-bdb871903470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a0d431f-099f-43c6-a776-5e88b69b080f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5565e5db-2ff3-4f96-b95e-8c89502075f3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c33d91e-02ca-434c-b4de-abfe48336cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fbaa38-3ba7-4996-ad3b-410fc8b9ea91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06253e52-8835-4f25-981f-5fd6034b815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fab223fa-720b-4102-a704-bb591e1870fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1636bfcc-112d-442c-bc40-5cfb41ffa8c9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfdbda1-a4c5-482b-a27a-c10ae88799f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa84717-2c48-4fb0-8d07-479a76ed81db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6837bd6-d492-43d6-b626-fd2d30d7dc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb1cdffe-e1bd-41e4-adf5-0c8ff91d7866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9694b6f1-b58b-490a-aed6-6fedfa46741f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f0fa01-2444-486e-9a22-a849e4eda626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7900f4d4-6d0c-470c-b9c8-c22ac2aefc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10413819-79bf-420d-b483-168ef18a761e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "220efb69-5903-4f53-b27e-063b9d6f1cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73a1fce-b2b9-466c-ab88-e64ed031df76",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7cb5eb-0d74-4c3d-a69d-cca40553cceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74443382-bea4-40b0-be13-c468c7ace58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf27315-e43a-4548-a4fc-aacb424349ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d93ea8b-a6ac-436b-8328-dbdbb097343b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8d1bde-dee2-4717-8524-c6e641ab8ee6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87debce-89ca-4cb2-9c9b-349a2dd49d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92a3d19-014f-4791-976b-fc4d343fc8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54486f91-54a5-4899-bc78-efbebb5aea27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8bd10a1-32a8-48fe-a8bf-5a4af916b7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280f8ce6-7f8f-439d-8f2d-fa6275257c3f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0d627a-1adf-4830-9d29-03d895ea52bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a88bdc5-eec4-4608-afa9-abd5e7ca699f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f23d46-1729-4e2a-9c12-5149a00546e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6a20cd6-d71b-4063-9cf2-f2276ad19bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11a52e9-d793-4039-a245-d33e64717a5a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e544edbc-727a-4876-8a64-c5e4384e4e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab115d8-c808-45ca-89c3-2759c317de73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b225d3-7004-4184-8abb-327a7fdbfb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53f31d03-4cda-40c8-a4cd-e4d273d10d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f13969c-58d6-4699-a114-42b76c6edb3d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68d740c-0a46-4d66-adbc-6ab1fd1e8cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff050710-e190-4d6a-8714-8e9601acd437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b88a56f-7fe5-4735-974b-fb5402bea066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1d9b546-2188-4ed7-b7ef-109f95753a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64fc8a9-1876-4aae-a35b-e2862a889055",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee13721-9264-40d0-b4ea-1b021ae29596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22af8d86-8d38-4f9f-b650-906e51bed702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd53312f-3ea2-4904-a6c4-6ca9f78b2ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf373233-8f80-499b-817f-216edd520b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c02ee3-e945-4378-bf67-86e4ee6f18b2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc4a479-f631-4786-8729-07b3ab9c7a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca22e22-d6ae-41cc-950b-30b4897c6d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e3de46-5f95-4138-9843-e5ab54c180f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "983e3565-59e7-4b7c-8b66-b64ca3300a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd050e5-3bcd-49fa-9606-e8d995c50596",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d396d36-e856-47a9-ae8a-a802ca745a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b002b8b8-216e-4fd4-8d15-4d15614f586c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0af9d4-83d1-44c2-b98b-3905ad21f6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f3cf84b-e5d3-4a0c-a144-b74202387a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74ae3c5-1d21-4f1a-8461-a58ec6e63e02",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8bb7f4-e079-484d-aeab-71b85e1d7e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbf6fa6-118b-418d-9743-26c97dcd4b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953226a2-f428-4604-8146-6ff056f7af1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f275b48c-84a4-4fac-903a-25cbee034d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4774c41a-b3a4-4247-95d1-9eaed2f1abd1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f32637-de47-4244-b688-093108452d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ad39ed-4f9b-4e4f-af4f-efadec1df19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2580257f-5323-41bd-93a9-7b7635f2db99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a085114-9688-49f1-a828-96d59aab8a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037b1cd5-6bb9-4a9d-9226-ddf6330271c2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abd2612-e729-4fb2-906f-496150563c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8684166-6b9f-4081-ad30-0c1f0d985807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa51bcd7-8b76-42b2-851d-e8d37fa23f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cf373d2-4666-4797-8cd0-d01588b43fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9200ed-e879-43ca-838c-5eefe4f2dab3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3f5f0a-d237-429e-9877-cb14fdd2275c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbe84a4-ec1a-44cc-aecc-8a1a23c7fe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d51e218-04a3-4335-b982-0584c0b087f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7de39962-0e4a-4c9d-b7dd-488508361b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c583611-ec64-4ad4-bb69-97a00a2f4e47",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11d311a-1c95-43b1-9a97-f335bc6974ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b223ec-c17a-43e7-b4e8-e303ef294be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a418a21-1378-4412-babb-821fa46bbbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb2565d-aa75-4cec-9932-b2a027619135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb21ab2f-574e-4af2-b309-980f96c4598f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3deb5a67-d0a5-4916-a601-ff38f787d1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086cf631-a402-43ea-9b43-f6486c67028e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2232e2c-d8c4-49f3-8062-a6656dacdb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af77dcf-26c2-4874-bbba-259cf80163fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98489cd2-4723-4126-852e-4bd883952b81",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff9e1dd-32f5-40f9-ba8a-1a1572478c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe290c6-ee41-459d-8840-aacb7b0518c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b64d3c7-d484-4c1f-8d0f-3f1cc74e4d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "643ebf7e-3d10-48f7-88c4-6c8cba267503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e187b8-afb7-45c2-abc9-6e7b657f1d31",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a57fa0e-636e-465d-927e-878d58e4e3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14982abb-8120-4a57-991b-3f99987fc7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635f59a1-20ec-447a-b807-fd9a308f3ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c235dce-0b2a-4239-8cfe-8e8918def717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74f66d4-4edc-4f5c-a799-8c9a6e6022f7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f16bdf-93d0-454b-8f1a-e913353dde61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7957d6c-3521-48d0-9242-711c01c89ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aabc8f-e7a6-4891-a40c-efc3a6641f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31e4d50d-9fdb-4ff9-a6ec-c91a0897e0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb5ae50-01c3-46e6-a384-1e6659ee8692",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e037a0d-8fc8-4c7e-b6a8-959df7154bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3e5f0f-352d-4d22-8836-1e9ba0c2a1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93277b68-9007-4812-99eb-ab9f1b23cd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4cb311-c42f-45eb-9706-951c31ec4aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288081f7-920e-4369-a4fc-42d6ce755535",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa5c966-aa66-4b7b-b379-5dbad985670c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291f4565-ac64-430f-a095-103171d2c241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4e2c48-4f5d-49eb-a2e5-63d31ac524b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "80ad93a6-6d41-4981-9419-ebab38d9e430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19acefca-b7c2-46f6-b5cf-5dd49d184423",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4d3325-d6d3-4e51-b807-f9c4c38ad33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13072a4c-8a1e-4ac6-9017-6001b106e6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ba5e63-d676-413f-8ba6-6739902451ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27948031-4b6b-4d89-bb11-fc7cf2dc10ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c257af2-770b-444e-bc9f-db79178ffe1c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9344131e-b06b-406c-93f6-7edc9d1c73ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf89885f-cb86-459f-b344-3d9cb218964d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d3c3a7-4876-468b-80d8-a7cdc8ed3353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56640ed1-020d-4a07-95c1-26089d542a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882c7b36-bad5-4e86-b6b4-a0193fbc654a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0610ed-6d4f-4ba4-a6c2-390f7c114ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004eb973-4473-47eb-8ac3-78d5c5470454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54af2db-26e6-4072-99f2-c2cc706cef41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ffefbc-e36f-45ed-a3bf-cae1563f10a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4813b1e0-734e-431b-828b-09d2caa2f85b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66842312-f0af-4e96-a574-e98ae3260f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7760e56c-b7a2-4325-9c5b-68e7e44ea79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5be81cd-8970-4c86-8185-e0c1d1bd37be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b53585-c354-4c59-b10a-fdd36a56b77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b382af22-ef11-43b5-8c0d-0712380c1b38",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19855d70-e9c7-45fb-aeba-9f4c9240594c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c04e32-9415-4020-8e03-2bf774c134b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3d43b2-6491-4e7f-9d41-1e5d28c9ab59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fc6cd2-90ff-4a35-bc7f-10aeed706995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afab263f-5180-434e-a144-06907aa1de98",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd02901f-79b4-4be0-a87a-2a234bdc1d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfafdc05-e06b-450d-98bb-97fb40c2222f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04da7eb-953c-405c-83b8-76b213d0bcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c286dae5-e5d9-4e39-9a3e-3e5780324cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d66d060-f4e5-4e6c-9bea-1014e3138bba",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fce731e-e77a-4622-929d-3aefde0f04e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da6d324-18db-42eb-825a-6da53bcfb1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a996d9f0-b03c-4d02-84a9-85cc40505800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a279d1f9-8ec4-4b9e-ac38-ef7811a898fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff24cff6-f28c-4f61-9879-4a666def63a2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1924a83d-0659-4d26-b764-69f1473f5154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e1f201-cc74-4faf-b43d-f469c9f67bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee121a6e-ae96-4829-835e-2776c7e72845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "addbdf6e-ffcf-44a8-ace4-f46657f647dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0662c3-7d86-4e18-8818-781ef8ba1ce1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e9a814-2945-42fd-9104-d8b4811daa6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc2cf5e-5608-45a8-8622-4e259030bc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943ccb70-0c85-4daa-9be5-cb6438fed366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d382995e-657c-41fa-9771-2d96b832831f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09c645c-eac1-43dc-9236-409d38fbd5ac",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b4d061-bf89-44bb-b7ff-503d978b3085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b57413-7696-4baa-b21b-acc3a62520ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c402898-fa21-4fa8-8945-2a7707d89da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3123f695-9996-4f37-b854-5de68023ca24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdf790e-9835-4fc6-8f0c-86f5b0b33023",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65419cac-8819-43cd-a485-d43f128a5642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939e1d00-dbd2-48bc-95fd-25a090c3b0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a281d5ba-dd84-4dc5-8ba2-c98dfbd7fc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c08232a7-706b-4400-9996-a49e98614bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da89a30e-9431-4fcf-80ba-48474a9e4e21",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b292362a-c617-43dc-9b62-47e7418e1820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "042fca4a-7f25-4177-bb09-bd79011afc36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963ed3eb-4d28-482d-afd6-82cee6c5e437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7db2d329-cb8a-478c-bcb4-1df037379674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4286ddd8-0c35-4e86-8509-32bee99cad48",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eab1ed7-76bd-4545-a34f-a10f330167d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d0c538-4e47-42d7-9951-109c76a551d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4e252c-9be9-48b5-8054-a67080d81b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7677b12-39eb-4d8a-af5f-0979da6f7ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665bb118-c0f4-4f9a-a6b5-a49cbc9f4315",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04bb618-bf33-43e2-9d90-b36d69fc44a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb0c655-8850-40bc-b015-278d87afab35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472b46db-b855-4d4c-be63-678ea4258b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c1eff0-8fd1-40c7-9791-ee3a9c0e0ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1778fa01-ed78-4555-b4e2-4e0f4feeac03",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4915120-0557-4c53-8c79-74b41683e601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cdd06f-1667-49f1-a8b4-ee89e1bf3354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad6d7a6-8f53-48b8-ae8d-9968c7cbbf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2679e72f-484a-4b39-8b5a-732fe782e25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb14d48-1e56-4043-9d5c-4a5d298d3cdc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f23874-d55b-4089-a99d-a2db0054ec1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd81c57-6b2e-4357-9056-6706f1d15f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92d428b-684f-43d7-974f-101abc6200c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc0c52d-7955-4be5-8371-d959179286ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a436a815-e6f8-4d56-aa87-618c4c9a7838",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a49c8a-6066-414e-a6e9-ff69e2ca2efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0773145-3cd9-4cf3-8bab-3e0ae13116b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c270a6-39ab-44b0-9d70-4c2d5bd72f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a84dfec6-3078-49ea-ad32-ee41d704142c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9744a24d-b2ef-4dd4-9331-48d214327226",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88bd8d4-d5cb-4dd4-a11a-cc693c09d41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7c2249-eca4-47d8-bdbf-6cc51e39e1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013afc32-5328-411b-a0d8-436c8f672057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "085988d5-9b73-4102-9e54-60b6d717fa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89cb588-329f-4e82-8540-97e1feabc9a9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968f2d7b-5fe3-4a6e-8ffe-75a7df35ee10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ca86d6-252e-43c4-b9ed-9cb1c1d3af11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7e8b94-bedf-46cf-89db-a1308ca619e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "98d6e056-bb29-4e82-844f-b66b7b2e9ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5192e3-5150-477b-a88c-be82389d1144",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8153d039-0927-452d-9c05-36ed7ad43407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c5d2a2-a266-4804-b76a-e57925118e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ed8254-52fc-460c-afa0-7e4884cb476a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0973f011-3804-4a3d-b401-0edefe64fea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904ecedc-17f3-4049-889c-cf01efbd34e8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4456f4f-e385-49b1-9743-2052a7aeb441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9a3e12-342e-489b-ac6c-15b33f801c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673bf3ff-f587-4d67-b0a7-535701231f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbee98ee-a97a-4604-93b2-cd802f77a6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c39872-546f-4559-b62a-7338d40109d9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ddbb63-5bb6-4b81-b85f-b9ef18f4a218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01abce33-66f8-47c5-ab7e-9e05b6ec0f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7012cd9a-ba00-4fca-bd13-3ff3e293e9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d22fd9f-5575-44be-81ad-876fcf82fce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbede3a6-522e-4ffe-9568-3a64a5c86c2a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d01cde-4cd1-439b-82d5-cc4777871e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8c9678-dc24-4296-a893-c8804acec947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b67903-343f-4e9d-8b55-7971d83cc177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26eff1d2-ad52-4421-a0c3-56908b2c17bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad17540-2418-4a41-956d-3f15df21f104",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd3a2cc-93ff-4e92-aae8-a07359816a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6445d95-e380-4f9d-8ed8-42688bd1b45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0073f6d6-3c20-44ff-8916-50843f9e5520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a48002b6-92ff-46fe-b51b-a02cb6979363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a21bfdb-7fb9-43ac-b510-0853e9a4da08",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c748dd-895f-49ea-8ddd-c8a328a93559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140ba783-8b24-4306-a095-251fc82ee65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13241282-704e-4755-87f0-f5fa5a38103b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edbf795f-4a2e-48c5-9bc6-29e7f223f377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801236f4-0a64-4922-bf38-dd70b3df0161",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40bb1f3-1af0-4233-8075-cb2e0112e8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea48e5c-f3eb-4811-ba30-82d9016f1701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580403ea-a9ee-4308-9066-15d60d7f7576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58649b45-b54b-4430-a49e-dc2cec35b7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f89b8f0-19c7-4739-aefd-275d3363b1c0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a75bcc8-bc04-4447-808f-9abfd3d588ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48626f5e-2e0b-4779-a40a-99b09b87154c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b5b88b-64c2-4ff2-9de4-07cc8aa5d176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "00a164e2-5a33-416a-b0ce-2adac3ee710f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f15ce1-4f78-4619-b341-48175f51e018",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e7659f-0938-40f1-ae7e-4d2ae56c72f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048e805d-2a63-467c-9436-4b0dd5af456d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cc2081-0662-4db8-a8b3-795d774bc4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fe45e0-2164-445a-a558-8a5e023e9375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2df9cc4-bd09-4e22-8418-a57a0268ac24",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cef6b93-bebf-41b3-a3ce-7c06d82659aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a67410-592f-4616-a33c-155a2815e81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f66f067-12b1-4bdb-887c-1269f503b3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2323e2c4-10b5-46ef-98d7-5ef84792f3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e3d8ba-b5c8-49fa-9d58-6e73b7e211e6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675a95fb-a696-44a8-831f-8912ad2aa56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10286311-9828-42c3-b5ac-ed232d67f861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c5962f-e645-409e-a879-87f4241d261a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da2995a-916f-4516-9b08-3ab6459c68df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de65a4ab-7c6e-4091-af8b-be986735927d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e9f24a-46e7-49c1-9470-adb7e5d8dbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22b9a9b-6712-4e20-8ff9-0745d4793f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed65e55e-0f5a-4707-a067-1355691c4395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "474bcc4f-df48-4ad0-94e9-75b2b9cb4832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da4d8ea-0060-4bf0-b371-bdac640a2a1a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69373332-1ed9-4326-8361-d455d27d6adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b186c3-91bd-4f9c-89d3-73d1b275b343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56400087-c352-46dd-bf07-f0a66af3a25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e60aaa3e-a367-4fa7-a9d3-03215e0e2026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b2f106-227e-400b-a389-c44c1e2dcbb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5979b62f-0bd2-49d2-84d3-d7a3cb52745a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec86d7d2-e4c3-4ba7-afeb-134c790d091c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edef4dfb-6117-43d6-ba61-8dbcd8b10b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "961d38db-c4c2-4b29-91a0-cc21cd8d9e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15cab4e-179d-4f00-9b83-ae0dacceb585",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df325976-f02f-462f-a197-8ba909b833ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67a4623-3a62-469f-bc01-52e0a5da75c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966e9213-2e72-41ad-951b-71f57c7e45fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "938d6986-f410-4fa7-b870-4d9c28058c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5324ac52-b8d2-4ae0-a27c-00e00e887371",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01623a99-4ee9-4ca5-9a51-626813af3b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ff02f2-1357-4a78-abeb-0d62db2eca82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205ad4a8-8433-4d7f-b315-9d9e4df1700e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e89f5afe-37a0-4aa3-ad41-f14d5b7120d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aefaa54-b6c3-42d3-ae33-163b36201efe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482b7b04-6f88-4234-afcd-30f1d15619da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19f63f7-2167-41ce-9eac-f1342c35bad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565f9172-8d03-439b-948d-5979e000e57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f738c17-e58e-45f1-898c-8b41163f0058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682073df-3231-4411-8830-9ae40b6e0440",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eef7066-b79e-4c39-8c28-8831a042ea8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6abf57-90ad-4532-a41f-0fddfe67e58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3bf26b-b6c9-4e24-bdaf-c2e85c1bd951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3818702-e17d-4028-9032-9e5fac7de826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef2a858-8dd7-40a8-ba2f-840e2ef33fa7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af1cf76-e2bf-4dde-af51-eeb8a8ffbd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bd53a9-e50b-4fb0-b2d3-544e8cd4857b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3f5adf-f976-494c-9caa-284c762ba9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f886cc-6c72-47bf-8b72-4df82bc9290a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d44999-b505-4bd1-abb4-ef845213dded",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44597d1-b40b-4574-8959-3446a6c51189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14333f72-9ea3-4855-b585-5cad61bc7573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1023b31-6120-4a1f-b067-188789e51203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d2a8b2-3eee-43a5-aa71-d83b08569add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a93cc2-fbcf-4476-8ef3-83e955750637",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634b3dfd-c950-4588-a9d1-e1e4e033b13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01f73f1-e3ab-41a8-82b7-36dc05954157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9915d8b1-cae0-4746-8979-4771f32bbf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24940cfe-5630-40f4-b11e-88e7eee29184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7332e03-3b05-4d05-b9bb-3babda3c609e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa20d16e-a1c7-4190-8830-ed3b9faf4475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62379295-be69-4bab-8b4e-889256af8e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a556c02e-e2bb-4412-a2a4-c90232d9d560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e30fd2c-c8e9-4f51-a2d2-434923b938e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacce961-cdcf-4eae-99e0-ccede32b2b28",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b758ed-bf9e-4b8f-a3e7-c117b9f65628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c6674c-630f-47c6-b930-ab19d41228b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51256f04-3970-4d7f-98da-195bc04a4f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a99ebb-5405-43b9-828d-e02cf483a43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb32575-507b-43a2-898b-7dc76efa4f4d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6272a7a-6e31-44e1-9050-3d3b942b847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f72622f-5245-40b0-8ab3-5913bda0ef18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab3c3df-ad16-4543-89c3-8ecf79c31270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "692172d6-677d-498d-9cae-a612fdec661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48f7d04-a441-4724-8419-5369e5c3174c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d88236-409e-467a-97a3-244be5f9f5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b76a9d-014a-45b8-9777-1fac5a70874c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7452d1-9bf5-47d5-b2b6-e3623b02afa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5150a8b8-0ff2-4511-95fa-99cf31eb849c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b217c7-e56e-443e-a86c-133a4386e120",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf62ce99-451d-4967-878d-b6bf33a3d203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f1898d-b81c-4fd7-91df-884d3063a92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097231d0-aaa0-4fe7-add9-28be280a9791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15200c29-5b19-422f-817f-a1e92f01b623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7568af-58fa-4d9e-b82d-4708a0c19369",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ac2313-056e-448d-99d9-ffeeca2aa6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5027cef8-f018-402c-9004-59116fa13b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3577b5fd-8458-441d-ae20-507c8232c855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2207d467-181f-4373-af96-c5b4a32c0662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595d5808-70ca-4856-af90-425f35913ea6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329b434a-432c-4e03-a063-28faec22a19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e6ac64-68a8-4926-95c2-96d38c0f0264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901524cf-461c-4442-80da-d960aa7d82dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e2e7b8-f108-49ba-be46-d0298fc84422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccca84a-a34b-42e1-a803-3dd43421d7bb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c8a677-04ec-4aa8-89df-da5ea7e188e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057f961a-13c8-42d4-b16d-04e48587c06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6b981c-3747-4866-b2a3-632346978584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c97dd4ac-bfee-4dcb-b4cc-66618fa73176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7375f5f-971a-4616-86f3-b6cb15ad07b3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7904e01-aa56-4107-9ec7-80b17ad8525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45149e03-0fbc-4064-b3c3-697b6913343e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51084c8-d935-4822-b77f-a26c906f4035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "930c10cc-feab-444f-bf93-4d13a41e5d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13a1024-9ad4-416f-97b2-3cbdde8fcdfd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc934f4-e5b4-4c15-9118-71b7e8248e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f741912d-357d-46e7-b153-c23b1201a863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4797d35d-ff00-425c-82bf-14d3b7d42bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3825bf0f-2cc8-4a51-9dde-8ad7ddf4d130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facbad33-a54a-4d8f-91b8-fb3838242f75",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37077132-e224-4754-bd92-70580018307d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed619ac-c6b3-4a35-9e6f-4807e96588d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702df1db-4a61-410b-996e-e369cbfb1432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6c9f72-4196-4320-b183-909d8dd95075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeec803b-bc54-4c8b-81b3-6bc34de2f94e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3eaf354-2192-4acc-9e78-6cc1ffdb8f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36217b2-39b0-45da-9b48-b36b1fa0a187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e47014-f057-474c-a5f2-43f149f5e07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a481d0b-5b27-4517-b762-7e139145a8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a96c00-c674-4f19-9a1e-99e8afa72b7a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488aa312-e3b7-4c06-ba8a-a40df15f1b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee14819-f2e7-40af-a255-9aed80ee1a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6046513a-f8d4-4592-b1bf-960c545600f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3eff1fc-1687-441a-a130-a687e0c2b495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4ab014-173d-4c52-81af-531c012b3c2a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f779aa72-3bfb-43ff-837a-45dc14cccab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138b7d8b-c882-438f-9dfb-987812564a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fa95e7-bc92-4050-b45b-4ba32628b746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cc27c3-d0a8-4752-854d-0161ff96a940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cbfd93-23fc-4f7f-b116-875b69e6ec0a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868f0e01-e8b4-49a9-8867-7c32fabc4e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8319a6-2a49-4b75-bd77-b97f3d4aaec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ed018d-125c-4ea7-a027-f4ff7502d385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7775d9-2d5e-4ddb-9bfc-77d9b6a1c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51514e9-a671-4669-b5b8-6abbed65fa71",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaed35c7-c917-4788-817e-6b9734a5c884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ed2e1c-139e-4f46-abc4-6ff5aaf75d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663abd4f-b3c7-483c-a37d-d07125131395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7715f81-9450-4eeb-9fcb-a855308339aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfc88d8-21fd-484b-b9ad-7b85aa6e6ac7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f60b3eb-93a1-4a01-987d-eb53e86f90d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0a1abf-b124-4869-8570-8cd3b7856a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b60a93-a0f2-4648-8cda-34508e6efd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db1251a-d0a9-4379-97eb-f65be2c31130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d04054-6e66-448e-8d0e-2e7602d65ceb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740ff3a6-684e-4b0d-8aba-6a37cece2fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fdefa8-7a1e-4829-b2e0-85c315591a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614fde43-f259-4562-a13f-5afc274dd4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "958992ae-41d3-4e01-a549-7414d1078b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efb17ec-74fc-44fa-94cc-8ac9d29ed479",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b72dad-3ff0-43b6-81cf-1570866c01f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f58b737-35d0-4a6f-9a64-ae38a63b9286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22569dee-2f66-4325-b582-8881f1bc767d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b121003a-427d-4ac8-9a13-a4bcfd6d8e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8378ff4f-e005-47ba-b979-61fbb30d244f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949ae004-58da-4b7e-8fed-e706c2ed187e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b28a4ba-2d15-4b99-ac88-16bc7b031f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df92858-6117-4711-9d5b-b6c06715c6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb73168-3e5c-4a55-8089-7e1c684ec914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107b6346-d634-4fd2-b2ed-68c697ab5b49",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557ea2a1-9e41-4b39-8fad-89e9be781503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e36175-f090-4045-975d-ecd954ea46bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c3749a-b2b0-4f74-85f7-25a489efe23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8762285e-f8cb-4e28-b85d-7db229281bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c8555e-1af3-4470-81bd-1b22d1373c25",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48da967c-4ca5-4e0b-85f1-6a1977f0a0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacd2d03-f223-40d0-b4c2-e0fa2b9428ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01228911-87b8-434f-87fe-5e8ea90437eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e6a912-0617-4ed8-bf41-d07f7d40125b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dd4888-e6f8-4d9e-9e68-8bfa7f3bfcc7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c65c363-d981-46de-bc29-4df37263143a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd42280-2add-48a9-ac14-ac77da2dae5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e0ab4c-9548-4c3c-9589-f1ad7e21d958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52d4f60c-b12d-4563-8f22-4eb3ddc046fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485b6a6c-7e95-484a-817b-52e32ce6fdcb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e014c33-9489-4cbd-878e-1753b16b72c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417ae89b-cf68-42b4-a623-a2067b3e8109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe47ea0-45a5-476e-a80f-bc8a0c83c922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f96c938-e400-4eea-8618-e4cb2f03f254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db366c-90f4-4eda-a6bd-06a47cf21a30",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3b35ac-93a8-484f-b13e-d8a9c56ebadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473614d0-0597-4e0b-9013-f491fc05425d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2f9c42-b3c9-419d-b245-ba54eda5146f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03233714-b74d-4b15-af90-3bdf86c8c7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528a4d45-6c11-4de4-b5a6-2bdbfd54c2c7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b197508a-aebc-43cf-a5d1-49e6de9580a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b442f0fa-34a4-45ad-aaa1-2092ffdb69eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3682284c-073e-45f6-9db0-906188766bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "07320f45-091d-4169-aaea-4cce11df43d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bb6c01-034f-4fc6-ba66-2b0ab540d9d2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34461bbe-a50e-4d1a-8d29-f0530c1b9b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4380fef-b3fa-4015-a3e3-57728fe52e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7aa9fb-bc09-4b32-bcb1-3a1a81066685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcb80fb-dfb7-48e7-b4f0-b1f2e63a5a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feec81f2-bfb0-4a7f-aa54-aedf1302feee",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc31e59d-dae0-48a1-b02c-36e40eb63c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8c1ec2b6-1a86-4d36-819a-af13a9edb025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1931ed-e9c9-412a-b0f2-4aa2a5c66997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbd70a3-e4a3-4698-b188-489d3ee6e1c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abf31d65-d757-4492-89eb-3eb728ac6841",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "012ad6e5-5da1-41af-8500-177877a6d6fe",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f27317c-ab93-4b4a-9151-1bb67db2f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01acc495-78c0-458d-89f1-bd51e4b10d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d44dc2a-1c04-4a47-b8bf-1883e0403a76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d10a3ee2-f938-49d9-a091-3064a419603f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "191d135b-ec7d-402b-b21c-ac8f21d70db1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2ade4d0-5a00-4bbb-94c0-07fcde07093c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "105bf512-f633-41b2-b309-57aa6d98e157",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2832d4ba-fb21-42cb-ba2c-43ef07ddce75"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a4d6877-2208-4489-9b0d-9598927e6b7d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d712d734-9829-4de7-96f2-f0992e25392e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96f6dddf-3695-435b-a08d-321ebaee46fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a44f8ef-646a-42f8-aa8b-731463c01e22"
                }
              }
            ]
          },
          {
            "id": "1fd7e162-fe77-4d97-ba1a-2c5749278bd3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a873672-3a6f-4a77-9c78-e6f007060edb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31d9fa82-309a-49ed-88f9-7e6fa25e0706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d8840ce-a574-4f55-a95b-4c2fc4ddc30f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd486f4d-92fe-414b-be3e-9114a1dbef3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "06a58351-ecdb-44e6-a4fd-081bca079f42"
                    }
                  }
                ]
              },
              {
                "id": "99529209-50d9-4470-b212-09e4aeddb5a3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c2a4675-2a7d-4553-9d47-30b2d598a40f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab94e9fb-20de-4191-b04b-e15dd0d9802c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d8d0bf9-fed5-4001-9269-6a26252856cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6f32c29-2713-4bb0-9b95-4fd83c64e6ea"
                    }
                  }
                ]
              },
              {
                "id": "4e61a8fd-5381-427e-9a4b-13519cf6e9d7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30e23b84-da4c-4745-8bc0-e0a147051243",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4e68439-b126-454a-8545-16ee14b9bab8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7849205-6ac2-4772-a5c4-76e0b3a05256",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "950de0db-9796-4899-ac27-667ff029d6bc"
                    }
                  }
                ]
              },
              {
                "id": "18c679fe-c120-4b9f-b776-600f5161ba47",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05822032-7f8e-41e0-9874-f88c5cd93913",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8aabfadb-4a7a-49bd-a0c7-bd1981bc837e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8598076e-d4d1-42c4-a081-5e1809e71a7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "067d65dc-f820-4d36-9fa7-876ea26de614"
                    }
                  }
                ]
              },
              {
                "id": "7052d8ab-4f0a-4d86-b360-f4eb570ea158",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc6bcf3c-a361-4ec4-9217-db38b3f5f96f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f8d3aca-4a1a-4204-a40f-d818fd26cd48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd356ac0-a7f0-4673-8a71-edf6f45a03aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "684bc99e-41bc-4b29-a22e-9ca89dde1bac"
                    }
                  }
                ]
              },
              {
                "id": "785c08dc-acaa-4fe8-aeca-9fb0bdce5b0a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1b2dbb1-e5a2-4ec8-8cca-bd4a9de0e41a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76193513-f0ce-4bfe-a51d-6e4f497e3fc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34db74cc-3e65-4f3a-81ca-d5a2515a02e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f486d1dd-8229-4c52-883c-82e24a2f29e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e306884-4383-4832-ad61-db4c029009db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b98a4095-835b-4e49-8fde-5539f01887d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a97f56b0-743e-46d3-9b67-d60791bf15d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30157aeb-3df2-4644-8363-031b18b0f796"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b13791b9-0041-489c-955d-02118055b33f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "98337517-3706-43ac-a6cd-323d4b331d32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9db5c83-3deb-4266-a044-dec6c2ee4a48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a45f95fd-5ba6-42f5-b073-3f51c9d2817d"
            }
          }
        ]
      },
      {
        "id": "83865596-fdc1-4c2a-a7d8-cf50c3fe4869",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b2d39096-24c5-47f2-ac98-c36f30686a41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50780b0b-79ac-4201-83bc-ef738e7ba262",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6cf8e997-b507-4643-b2ae-22bfe1e2a483",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb16187-b8f7-4cc5-8509-1c1c55998092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26415764-4b6d-432c-83ad-5283da9ce40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eb1be1-336d-4929-91f6-9326ed3878f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c598423a-7aa6-4fc1-835b-b65b7a496e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f842f319-d562-493a-8536-f31afe4d1fa4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb6029a-11e5-45dd-9309-08b179c32bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4aeb17-b429-4d25-acde-040e84796373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66a651d-2934-4902-bd15-95c264f273e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9a0505-5fe4-45d2-8a20-55e70ba4cb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f982098b-9a45-4644-8325-7e2d8b24ae27",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c4eda4-87ad-43bf-ac04-12f104da6845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24ad901-cf0b-4b14-88d6-0790ca491d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad7f3ca-a746-4e75-bd34-286b0b7e921c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b42ba877-1b6a-4e84-a0df-693959a7f4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85c507f-a548-4f55-80f8-f6277e3fde45",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c222dca7-7fc9-4230-b0b0-cc53ce1c3ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e024c7-e2b6-445c-984e-028f49124903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed65474-d36f-486c-bb3b-2dc926dc8c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9c8eb2-c1c8-4864-81b5-bbf58e0ef74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ee2129-2cb5-405d-ba9b-9ecea4e6fe31",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407c6de9-c2c6-40dd-8a96-fe357a13e1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d092364d-6131-426d-8166-d9374f6b38a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b72ab51-135d-4b9f-8e22-487ec85a4a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e350ef07-3dff-4cb9-af80-8799795dd22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf3e0fe-7056-422a-8fed-61facbffa2ef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e22a491-472c-4caa-80ec-21e17cfce53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8792a5d-d03f-49ac-bc7d-be5328e2570d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded93a08-c522-4a39-90ad-93314dc6133f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7a660a-0443-4bea-8b5d-28410ac664ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e2e359-2ff3-416b-b491-860bd7720615",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e6396b-cc5b-41c2-aee4-4d5fccbd7de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2851cc94-88af-42c7-b406-ae3bfaaef330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5df47b3-fc03-40e5-b131-9a3a9f9991fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "831f511d-1612-4185-8bba-76d0c469c684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d023ce50-58ab-4c6e-a7f1-a735b6ba0a56",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3682a5-702d-4c5f-b147-40d0132341f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4301502d-892a-41c1-afa2-536f42b38a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df92f3f9-d8b1-4df3-b48f-26c4ef4df222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "064d2bba-2de2-4b46-9b31-565fff21bc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db37d023-3dd2-4b84-ba0b-9d22ae125d85",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8185ece0-66af-41fb-8e11-20df6983806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aad1d8f-e4c4-4267-9597-79b8051bb463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec598b7f-c94a-48f5-bbc6-484875d63117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72db28ce-7bc2-431f-b7e8-92d005a2380e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed7df4e-5a7e-403f-b4aa-d4009286341c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242f4143-cad6-427e-857e-d3b861c0b34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b7de5d-80f5-475c-822e-836892449a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec2ec28-3418-4c6f-911e-39892fee2f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce90580e-4ddb-434a-9bda-856fa79eadb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed340e8-6ff0-4cc5-b37f-f1ef1998cc7c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0213b8f7-b74d-47dd-a715-672600936280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946a8a8a-3053-458b-a7d3-f02c2e80c8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcf94b6-613d-486a-9b62-1a6cedb06267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7645cd5e-0006-4f11-92d8-7b79029878d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88230fad-778f-44c3-8316-ec6b52f193b2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2867472-a072-482d-8a64-b0abf9a86049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22158c0c-7980-42ed-a1cd-6f149dd34018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6beabf1-62cb-42eb-9dd1-6ec68ab2f3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "858ea27d-2309-42cd-b9ef-451448777188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca65cf4-251a-4792-a4fe-101ed296d077",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82856c11-3507-4040-b7a1-ea692e29a51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cef80a-18ab-4cc9-bd0b-4dcd42e2608b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d72d3ff-37c4-40e0-853f-38034a1ee8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05eb01b-3efa-4006-9db6-cf833cd1fc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ff8212-d5ff-46f6-9584-6e34756c9337",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49355de-1114-48a5-a2e1-c1132d203776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25efa456-a84d-4c3b-8599-9cc40ae1ce8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0a7ec5-fe70-4c48-a2f0-1fece92bd056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc61b5e2-1d39-40d0-8560-6db0cf1ebcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ea8f39-edd3-4581-b096-fb29fe9322d0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e35fdb-b2ff-4634-8129-ad96f95d9e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cfbd12-bdf2-415c-9f2e-75a46dc5a67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4a7a5d-a5a4-4f16-9e02-13720c4df271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a077a5f5-01a6-4ae3-9dce-96b924fe056a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e7594f-0475-4785-b44f-0713f5057e4a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccbf04c-0ead-4b85-be71-eaf0dd7c4c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87c144d-b6c6-49df-a534-2b262e855176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbd0d92-f7f1-4b4b-bb17-a9b744a9af2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc8dd41-a5bb-4402-9f1e-d0ffc9836724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f63b52e-476d-41f4-8ade-5790800ebbe1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d78b66-6219-46cc-ac14-93eab1ea82ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afe794f-fc41-45ec-923d-84ea5e35d70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfeadf9-d9aa-445b-81aa-29e85b321b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "240e7a54-4df9-4ace-b19e-aebf5d26fdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6690b485-c84b-46ea-ac47-821eaa9fa74e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65898f38-04ce-463c-9155-7f5341520273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3029b751-b447-4e75-9c0b-1cc43469efa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef751f8-3d8d-4b2f-b192-240e87751ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe6c18a-60f7-4f88-b24e-9ae0307bf249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdc9383-1364-44bf-bc15-9b4865aa6f34",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa13b127-32bb-430d-bc76-8ab961ef7685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c500f3c-16f2-488e-b572-df249073fa30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c19ee5f-5eda-4ef1-addb-fb4f588c733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1e621e-fbc7-4799-818b-7f7d149c3a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897182ed-71f1-4f5d-adff-2f7bcbe2818a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57151ace-7fb4-4689-a499-98f3e9b4a3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c494ced7-b3d7-4df8-9a34-2d5d40e8f841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d8ce42-1df2-4aab-9c29-b2d1062a14e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb635fee-5293-459d-bc53-95f2b465cbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4f5445-6fb4-4f0c-af59-fe5ca9289ef2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80634f1-7ef2-45b7-a6a2-9d8c47001ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdd3c07-5f57-4060-8f55-2367a87ef5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7106b51a-0d46-4660-9402-6642ed51de5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a7bc8a-163b-4bef-a062-8ed952d49ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681459e7-1763-441f-821c-7af83a13a341",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3d70b4-c85f-4ffa-95eb-5fa986a6aa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a4b31f-9ed2-4018-8516-3e19ab4d4a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c75de97-00ca-446d-966d-4c2b0b2101c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f16891-28fb-4496-9541-10c37835b3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e235d2-cc82-4689-907b-2a80a2f8d339",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99579ec8-71aa-473e-af24-5e4c86e5ad8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02c5563-fb5f-497e-92f4-24a0583856ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40999e6-1918-4184-9e65-6d9ca33d2808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f46c18-e53a-4479-894f-b8992e069f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1a80ff-495b-46ab-816a-f31fe00fddc3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abe5ae4-17b4-43c5-95a6-eaec146e1a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2eee4b9-2c25-4fec-b65a-e2eff40b099d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eece953-bd35-49ee-93e1-65750cc2ada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bc693b-7451-44e4-b73e-8a9e50103a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d078f0-960e-4413-babe-33866e94cd12",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db7bad8-2aa2-4632-9d30-4b02f705fa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537d40b3-708b-493f-8db6-1f2846769b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709aa9a1-120e-4054-a4b3-01a17d1d6dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7c0e49-0d91-4753-9822-4da618edd9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483ab61e-5746-4a90-9657-e1b0f3dcb813",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb34c779-f97d-453c-8795-a2d0958c769f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62183c13-37c3-4c99-9273-bb9e71dda376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67351ba2-d9a3-40d1-af1a-0d0681f2db31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdc76eb-189d-4b8e-9d7a-3bd19779f92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571d0f56-62ac-4240-b07c-e757717b5e4e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e239ca9d-0af8-4f9f-88f0-6f845191c3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f79678-7d5d-4c44-92d9-39c71bc78417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e41e366-5882-457b-a1cd-53bd4b1c1ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6bdad10-e780-4466-a3e9-7d6f861421ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a4c977-ea49-43cb-ab3b-fa63988c330a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917b78e0-e50a-42b4-926f-dbb055e9ca13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdd34f7-4603-4657-a786-61ef09fd13fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124fe8b8-b2ba-4a79-885d-ef04f37b6752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da62cfc-8c67-4b82-a45a-47f334b001d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f17e8a-dcd5-4b8c-9696-3668a2eea3c3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dc9a3f-15a1-4da8-90ea-84355317748c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d85920-11d2-435c-bd94-ed779a2e3b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722937c5-1762-441d-9b60-3f5b634a3b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c182e70f-977e-4a37-83f5-5bdd5075500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858e8970-9c21-4c35-a4bb-59fd8c8160a6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899330a3-c3ff-4935-b6e5-b353f97206de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042086ea-04e0-4069-b74d-22b5bcc2e9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e0b4ef-9654-42d6-8d96-31e5b062c5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33fe4a07-e451-4e78-956d-3bd15b66c8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1851a918-1b3c-4096-8ab4-f9aa2e8df270",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72ccebd-8eb4-44b6-8ae9-a47c73d6f77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38db0d55-fe7f-4f3e-bbe8-a31937b65844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7fb6be-a689-4951-b1d7-949c4d2369b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e27a0f-b61d-498f-b86d-e12c0b1ca356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2c480a-225d-467f-99de-fe8ec0cad004",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a9b424-5802-4466-bbaf-91a303b36374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70947f0b-98ea-4c92-832d-35e77b7752ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7124684-9169-4d55-93c7-51d58bf52b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85139a5e-ee60-447a-84d6-432787247adf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10cea30e-91ef-48ee-8f8b-250b9ea1aff8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d45054cd-69a4-46d6-adea-1ad163f3324e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7296d03-7c4f-41ab-ac49-b671bcad0e30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e2053182-bd5d-416a-8ab3-32a323a22487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5d61e6-f1c2-4bb0-9487-1b7e68d03b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebc2a8ee-c48a-494d-8581-5315f453b0fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f372a5de-c5a0-48ad-9122-66c7f4f2b032",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "162e92c6-e49e-4f67-85af-4004c7165bee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b4ec687-88ac-4516-bc73-042353f3c2a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f26eb204-cb23-40f0-bdb3-790017216e33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bbaf417-2ad7-4282-842c-5f4b2e3a5cc7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4745e360-59c8-43f0-a752-7fe28be42b09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0799e09-bac0-4b6b-9122-7babcd986224",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a875fc2-ca28-40dd-8371-18f861e33a7a"
            }
          }
        ]
      },
      {
        "id": "35428204-40a2-48ed-8390-0ef2a8903c69",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "18424bc9-050d-4477-843b-81948fd7d3b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65a79aa1-9520-4e2c-9aba-74aa86e8fe40",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1259232-e6ef-48c3-b64d-7a4f5bb6449e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58962fe-283c-461a-9e83-767401123a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec77cd01-084e-4aa6-b4e5-a1f009abd53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10a118e-bd50-4889-be9c-640227328774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be5d5f6-ae47-4448-86f7-ca036fff7c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53da634b-19c0-4bba-80f4-32c5e0cab813",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a3d2a0-b166-44f0-94be-468da76f3264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14302296-91b6-4a02-a7bf-11e782f6b221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9511b716-b8fe-4230-8369-c6b00bc2063a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d3faec-5c20-46a1-84f7-f3c691d57df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46033382-b709-457e-9793-f9fbdfc6192e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90563c10-0467-4093-ad76-5111b0905987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf796d96-5012-47e9-bc44-05df8cf9a5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dce70d9-610d-4f92-917c-ba36341b3105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e41e292-6d33-43a1-9ec4-d24da0af1741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608838be-d6a7-4418-9eed-ba1a1c638795",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ff0a0f-76b1-4026-8487-70a3c1bbb9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dda2154-911e-403d-9114-343317874a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efd8c16-6a09-49a8-806f-10882dfc6bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d15b65d9-d3eb-4405-8082-98da54b9c45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c8395d-5638-4b06-b481-d3c16916fc53",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e956dc85-70c3-4b45-835a-71297e0e04dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a0d4c8-64c3-42fb-8397-869b590ec619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f667486d-9aff-40ca-8639-9e416c43b6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81fecffa-1712-490f-b887-23deefe665ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d52a04-a915-4e10-bd8b-a8e43454275f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d945186c-4978-4dd5-ab4e-ce3e678d0abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d3b70a-4d0a-4392-a8f9-92e1cf51ac7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f535f0bb-bc06-4009-8dcb-47b8891d6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1e7ab8-a959-4fce-aca9-60f80bdaaa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5b30d9-b168-4f15-bfd8-269e57255484",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2dcb09-c1ee-4a8f-a641-928bc3acedda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc14feb-db2c-40a3-bbfb-5b76f57bea17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c29a8be-1b45-475b-a436-e559ebfd0830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d22738-47dc-443c-8286-ee8b61591a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4603622a-c487-4d08-a29d-dcda19fa9c17",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d0ce36-4608-4d89-b51c-ec9a7bf2152e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5287b15b-cdbd-4cd4-9330-6c792ec95fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0289c18b-6706-45c6-90be-1aebda9bd54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f132d5-d5f0-49b7-a891-44b1bd19ffab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c6ecce-ad5b-4d2e-b685-2e01f254eb64",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2edaa1-67fb-4b80-9e5d-fa9385e34d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103791c0-4b27-4ce3-b234-2da979482c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9389316-0027-4bd0-88bc-ec5d907536a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0e142e-8892-47bb-8340-ca44a65ae5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00b623a-6761-4b0b-97b9-2f17e206b274",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1086e81e-ce70-47cb-8fc5-8fc20d82f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede7d2e5-1bb1-4835-a3a9-f4d87311b5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a76e2e8-527a-4a45-aecd-86b45c4dca4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb38668-4a25-4b41-b3ca-0814d4c538ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fd0a57-50ef-482e-b0b9-a20faeae8e06",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1d7f96-6006-4ce3-ba2e-3b8c5662c15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d783c391-a976-44e3-abf4-0ef243601450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49cd924-0523-4670-ace4-ea9aeef1eec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ac1918-58e7-4b84-a333-17e061addb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c9c332-d617-4e9e-92b8-6a292ed26357",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1a2300-95a8-440d-a8c2-a49f3ee5755f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c350d4fc-cb49-42cc-8c34-32563efd04b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e94075-809e-4c0e-9058-d425f9c03b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cba7ee6f-9177-4c65-a43a-ee78a6aaba69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe33ba9-ae7b-461d-8980-2733f99b37ec",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69691898-0d9f-4eec-964e-6ca124349098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d031d8-22a7-4d88-9829-2d182dca9d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76206428-0fc4-496d-9924-7840df68061b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b8d496-d1f9-418e-aa1b-7d791acbf88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192e9037-8eb5-444a-bdb6-345ce47932ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63707e9-f357-4e39-b8a6-b1a21820859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a61fefe-0f16-46fc-a7ce-99dfd9d1c574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155a5e11-007a-41a5-b48c-adb09b93143b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22841b62-7de5-41a3-9f0e-55bd7ac55c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293cdf28-2dff-456c-a41f-75f95a3c5f70",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749cb3db-6ec1-463d-9d69-4edcb1045f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea74194-bb2b-4caa-a255-7ad22bfeff8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9b8db4-a834-480c-99db-b5a7c8a3cd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f78f81af-e418-4a23-a237-f571ebeb0aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ca31eb-a98c-4a14-ac8d-5d052fb9bfe9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3ad529-f64a-46cb-a1a6-239ab698f45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ff29f7-b8d6-4fb7-803e-f34d9dbaddfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a340b06-2012-442c-98da-0019dfa8ab72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "969fcae5-6717-476a-b9c9-77c6fb058c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a5845e-5759-47af-91ad-5877aaacde90",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e15ad7-d6d2-40d0-9932-fb48b7829b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0ba18e-2a32-44f5-88dc-c0a87fba83a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dc6b6d-9fe1-4c67-aaf8-3ebbfe5f03cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d1cf41-d020-4783-9208-9f1f643365fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ffc2b1-e3a9-4806-8227-e4a8d01e5465",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ab375d-ddc3-4846-b665-90b0c8454a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27784089-2efd-41e9-9e29-9a18bbe31e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41af04a0-c901-421f-8eb5-4e618a024ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8bbe29-9d41-4d77-a8fc-dfcc58cd8172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18523e0f-57f4-4923-8aa6-ed4faf990586",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b940fdf6-4c1b-405b-8ea5-40c63dd951b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba00914-11e4-4f04-ae68-bdd0645caf37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3eba15-0eba-4c0f-ad6c-ae8933f39cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3652a1-6f1b-47aa-b276-dc92aa21bd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8beb315-5c0f-4cb0-b720-798a94cf2a62",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81835508-b265-4992-baba-8600596f94e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff898f17-cb59-4db2-abdd-f3fb6d6a1e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b242eb-eec3-4d74-b76f-597aae98068c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb070a8-2580-4af4-a343-63b6a6823405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a09040-48d6-421a-815b-153db4d4540f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1caf18f-4d00-43c0-bbc5-ec79ba6cbce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8917206b-37ab-4b54-a5ae-ab3f863a3be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fba8ba-fcfb-455f-8db7-6a04622d6107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2740e2c-e3c2-44c1-857e-c158eca6bc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e47e855-b325-4d0d-bca8-cc2e4ac73e21",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b8f74c-9eb2-4def-9581-ca33093bd95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f890dc1-518b-46f5-98d9-d4ccdc05ac95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aa8979-707d-4f71-bca3-f708d5585891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acb81e96-2150-4b7c-b21b-c708d7b5300f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096b06a4-9419-4023-a5ed-7688ed2ff809",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6a3f74-f587-4ef8-8110-bf1bf79a1991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a23de35-e63e-4291-94d4-e12c8523f7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fb83cc-8ad7-41c3-b5a2-4422d393f0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcead0c6-d0d9-45aa-ad0d-4e9b7d226157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72bb0c1-b714-45f3-a51f-2e7efc4cb0e3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af227b33-f4d3-4a3d-aa0a-5dea173f0fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be6bb2b-b10b-454d-b668-0ebb7a98b7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a26f83-78a4-42e6-934e-e39e1d31dd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "614161f3-c3dc-414d-bb06-1edf823bc29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5739f303-5250-4438-86cf-849a637a77c5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d05a66-c9c5-48ee-8211-5678becac0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16feead7-f282-44e2-9349-64fd7ecb7b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d459972-788b-4643-9a77-9fc5fe4d00df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7285eba5-ed04-4a3a-bdfa-7a6db6df112c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e642762e-d0ef-43ca-b070-a6e11cfb07b6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f784b9-fd56-49b3-805a-a46841bb5772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5743b8d7-3200-47c2-b388-18aa1b624ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98488df-77d7-4bf3-bad5-62766c129e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed725c8a-733f-4159-aab4-08b0b56033a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe17ac3-20dc-456e-b5a8-93a8f72f29cc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5412b3b-ede2-4b23-830a-38aebd2aa64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca29f984-a0a3-4b17-840b-3f9d80a9382b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2e5f7a-8b33-432f-91d1-856167b7efb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a0a06f-fff5-4ae9-b34d-27d3722b7c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ab50ef-335d-452d-bd8b-1523532bb666",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e95ea70-b4bc-44e6-9bc5-db1f4a8259f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd57b2de-f104-49d1-baaf-c533a03ffc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6d858a-5286-4501-b5a9-8c92d96b272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac7fe28-8fb6-48e5-aedd-63400eb4c97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2c9b64-b09b-4453-b380-dfc24b8f15e3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e89194-5caf-458f-b803-f2f22e59d4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6e4239-0e60-4e30-8eff-e157a6fcef92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c1c65d-f867-43d7-8429-c3736c192923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a871ae-efb5-4d31-b09a-fe96abdb7b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f450e-8e60-41e3-abf3-12061d1313ad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03ff99a-aef8-4c25-943b-5ed9e4cb74d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f161f469-2808-47de-a4cf-474e1852ea3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7387aa39-8513-4f05-abeb-db792b3c5885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86850eb9-e41b-4984-b4c4-09209ea6b1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09ba714-625c-4e71-b511-bde184ba1dc3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a7b954-8dfc-4118-aa22-0fc983346cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c879f91-283a-4177-98e4-1f6933a2285c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0e5df2-a54c-48ce-aae2-2256407fe99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3727d4-f7a9-485f-b39d-f0c608fd6a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d58b00-9e2a-4d4d-8dec-67db8c5808c3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5c9074-796f-48a1-a49a-2561f7cd2ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fff8cb2-a3b4-45ba-8fac-6129e58d941d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9aa27fd-a977-4c87-b841-1ec407359808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "015177f9-af94-4813-b308-60a60ca33833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c660ea-ad84-4096-916b-401bf5613426",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b6271b-d0af-4aab-a5d8-757452d70945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccfccde-cbf4-43f8-b6ae-928a9d77b9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40a7318-e360-4c24-b3ba-dff657326cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e51c2d89-0e2f-498a-91bb-f33a1a3310b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9769dcb-148d-42de-857a-147a47062561",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc686933-b4c7-497b-b04c-35da7fe683b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dae1ec3-f36b-400e-9ca3-ccc60f1f3d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b664cf-3b3c-4b41-8cfe-2793bd231977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb37316-8b2f-4b7f-8f0c-46935189ba2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f641823c-55fb-4e8c-bb33-fd46e7b58253",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d777c13c-3528-41dc-8657-661b2938db6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0b02f4-3364-4c16-9106-1c13464c0f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e95577f-bbe9-4e4c-9da2-534b0e27211e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "758c0753-60ed-4f53-ba2e-8e16ad12687b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aa9b5d-b759-422f-b8b4-b6ccae708273",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09b5135-ba3d-475e-9298-a110145e822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31321d01-6cd4-4260-9133-3551b7a0cb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddb25e8-9dd1-44de-8a9b-98f9a513c4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be8605f5-a6d7-41fa-9349-db6b79cd4737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00694aa-c49f-46aa-b0c2-4611b5656fb6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8aef9cd-ae34-4e54-80d2-a105ba516e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6268e5-eb68-4727-851f-d92840398724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43f0545-955e-4a2b-895e-2bc6b3891aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f54293-06ae-421c-8fd9-2b7a8ee4cb58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9335f204-75dd-4649-b029-4cd1f6c01ccc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f7fd168-bdd6-473d-bd70-02e86c9f47cb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0c8515-10f4-4349-acb0-8472011c23be",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "45c7c54c-d4e4-400a-8671-6c103443057b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe83e40-31bd-48d0-b6b5-7c2b4b76da4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95f1ea71-9745-4e34-8c51-74d02ae3fce5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68adac9d-52ee-4b29-a42a-4afdc97421bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b45468a3-ed33-44ca-9eec-ef90ab6bee23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c071b2f1-efc8-45fb-9eed-6e1ac86693ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d4153ef-c91e-491a-9e3e-43e22066b11a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e394bf7f-23ae-4533-9aca-54b07ff319d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8477befb-6dff-4273-a0ec-5882f07b9cde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83b07fcb-ac4a-40d9-9048-253c38356019",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5cce289-f759-45aa-8d3a-c37412e6776f"
            }
          }
        ]
      },
      {
        "id": "24471f72-0091-4624-96be-da3a4794a0ce",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b9ecd192-9d10-4234-ab6c-58269de390ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "634780f2-ee54-4711-972a-c8b1c93491b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38558051-3dde-4b49-b370-5581f82d75ec",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f46acc0-5d37-4025-90db-0b6396c4f2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abc181d-35af-439a-8f0d-8fe19c48a082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e66146-7d26-4fb9-be11-8de25b0d6077",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1668f4e8-c2f8-4127-baef-0dcd4e8cce5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df07a2cd-d27a-4dc9-92fa-0517471c7ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973ff7d1-8a0c-4781-b356-d7d2f58cb067",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f721f2-89fe-42da-b5f2-52735bca5237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d07116-1109-4c28-9543-d83fb95eaedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebdbbf3-dd08-4bd8-8ad6-5a3ed4c32414",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078ca44c-69b5-4bce-a62e-4aa502f6f34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5b88c3-44b7-4c71-a041-72bf7d083372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec6eef7-821a-499a-a105-26a7b77f0f01",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e05b559-02f9-415e-b0e2-fedf59d27686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9bb359-0e4e-4ad6-8198-62ad0f8e9c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b02ea2-d4ec-4867-9fca-9937dad44354",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ef7efc-d852-4c06-8635-1d0056e9aec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffb2bec-2dbe-4a61-b053-f9df180fb68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dfbee9-8274-4e20-b007-c91a05bb8857",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a5b5f5-29d9-4dcf-b2d8-e2affc1fa291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f2c212-aaf0-483c-9469-393b0ceb631e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063daf8d-ced0-416c-ba78-05bab39a7a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d164a67-8e2c-4a75-9872-917b03b098f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae00dc0f-6e39-4cf2-992c-2f5ab344241f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fad614-302d-4a51-b4b3-a4a3cc059ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a60db05-b30a-4ae5-9af7-4901abc479eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3183f1-0d80-4434-8751-2f128a6e0a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd1d79e-c428-4bce-a067-5776b3e35cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce84108d-79cd-434f-ba84-5f835c435d2b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8cbdef-4ecf-4111-9173-7587b45c9973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ffe7e25-f1b0-4dab-b910-e382de94bac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf712e35-55ea-42fc-8f6e-7e8e33635776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc36983-21f2-4c1c-acf6-6207789a0b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d2bbba-e4e4-4882-8c19-f77885bb5002",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2abafd-c32a-4158-a2a8-85c6877ca4d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93de4f9-751a-4d30-8fd6-73871034c1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e94bb2a-b250-4e3e-8490-4b6ebdbd16f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b453604-7c10-4c18-b984-7d16c007c40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639264ad-fd12-4322-8fd2-661705c887fd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2860c8-1e66-4506-98cd-94fc74a09d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1250a2f-0c91-4580-bd97-313dd660e390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0374d78d-2801-4fa3-8bbd-6d6fceaf6b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ce8641-62d1-4124-b3da-f547ffba4479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e148933-b9f0-41aa-acfc-9dfa792c45d9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b261f81-0d95-4897-94d9-d44a6085fefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c671c4-5f4a-4ee6-a9ef-a291b54f1ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d461c19e-684e-4aba-8ccc-370c1a3e341e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4603ad5c-a201-40bf-ba11-cf09a4ec1cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008d406b-3e46-438f-bb7a-4060d5ebb25f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca71569-d082-409a-a7ee-c854965f59a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e848521-bbc8-43b4-8fcf-27cc6580ac21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33038603-1279-4fa5-bd33-0aee4f273b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b41b33-f376-4f05-b3b7-78733f8f72a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e84c6f3-b92e-4372-8910-bd9979bf9144",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939d2bbb-9557-4623-bba0-5b5f51ac81a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b67a01a-9a08-4d93-8eaf-ccb82ae08498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf37aeb-581f-4bf2-8ac4-28b7dc26df20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae479e02-f4d0-4db0-b87f-45fd4a1575cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9080975-4ebc-4f16-957b-314249fd8d92",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65db6429-bc48-44d4-92dd-80b821048681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe6e4ed-5c61-4d8c-95ba-2c8e2b22d5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c55752-00e0-4e8d-9a87-05e87dcf2aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231a4ba8-7044-4631-acff-825204195434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3addd-1a3b-47df-84f1-d1b7c94036fd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713c36ab-1e3e-4fe2-89dd-b4d7907a1ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d2f1e02-1273-43a0-8b24-76b1086f4312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d105d4c-b595-4ea4-b5cb-a54ffd48292f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03f529d-033e-46c2-8951-fe34021b8927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490ac88f-161d-4082-a15a-361673cbcee6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875be2d0-da67-4af7-a518-931f0b1783d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe7cd3b-c968-4410-bdd8-69770484d5ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a86824-d125-4768-9a8c-3e3349a78810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01aa41a8-5c74-427f-8874-e5f3fc1f83cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b897937a-0b40-4128-86bc-5079e3944daf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdbebb8-3c35-4459-b585-b5ed91ff2be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817f9f23-b756-4ff0-bba9-208e416702c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52307436-730f-4385-82d3-bc26e5d85748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6408c73-57b1-479b-8442-31af7d7b3e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ce0c11-e897-45f5-b1c7-70bd2cf1b00a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f88002c-7387-4019-b2a9-b42a697d800a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91823fcf-7e50-425e-9e75-05c854f78dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed5e61c-73aa-45f7-84f8-a6ce5382da80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86a77fd-af35-47db-b309-f99c11767d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7bebcb-8f3d-40e8-8c70-07c240c63062",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8874ed6-cd35-4f22-80b5-a9f7562d7e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3509a321-00cf-42ca-9cd8-7a4a398c716d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45bc600-5d44-4a4a-927f-632cd392a72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df14865-df63-4a4a-a9e9-8281e0ee3fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa53cb6-a1a0-4cff-898a-00ec46c24fef",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8420f17-3a7f-4408-9f79-3a9effe6a80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b583bd-6881-4489-96b2-44b808be11e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b126ba7-de7f-4b2c-952b-56447e24b663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd918c52-4d50-4a4e-bed9-5c1c9cb7ae5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e92f2f4-2f87-4d6b-bf8b-89f2d0ebb037",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdb3802-6c69-4505-81b7-8035a854513e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae380316-78cb-4533-8760-ba2dfe3ed33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb1dd56-3e32-4543-94ae-fa6564937797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6acd627-1eff-4a00-bc45-67d9a609a185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4054d0d-f6c2-4a5b-8c15-f21fca050df8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5be2325-06aa-4522-a132-d06647065b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0472fd84-923a-48f8-a130-282d58ea47d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed64f83-eb6c-4501-9d8d-4bfba2f9e8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab88ab24-d3b4-4aee-8e13-8596a9cc3816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f3dd4b-d997-4dcf-b087-d53f35d9661a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1638e74-a6e9-482f-a905-7c637679cb4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a2b57d-9129-4d34-8694-007f8c25cdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42578ce-d2bd-4265-8d3d-2a209e2158dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e531fe0-84a7-4e86-9001-0b6d6e5002d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015bbc8d-b38b-4742-8fb6-d28c97771e6e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404e2839-c0d2-4e6a-89f7-74b09901273d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d3dac1-c2c9-456e-8e45-1d5a8fc772b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c7d032-1a2c-4814-a5b6-c250099fdd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df404bf7-97bb-4c11-9b72-22dd5f1dd195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6512dbd1-b9ac-4d17-9625-359be35fdb71",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd53a706-bdb3-442a-bc88-2f5ba7e33972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "512a9b1c-abea-4194-a9f4-04a3c197bf9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b79315-2683-4aa6-96a6-e00f75281043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c851ad-4406-4248-8663-1dc531f90d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a7af99-059e-4ddc-9be3-88f753abee8e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54d2774-c20c-454f-805b-7f7f21195a7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cc6d8d-1ad4-48ad-9b92-da19a30e7e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db99fe03-ee7f-46f9-8165-872dcb131340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30f526d-882c-46a0-9b86-52db31dde24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f698dfa-4f9e-4781-9b6a-0a2445bb834c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba8272f-2ee8-4ce6-8faf-f3e783a91473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788fe27f-63b2-40e4-8af5-941869c292da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b356619c-28e3-45b6-ada7-aa4009ec05c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcaf369-6a69-4f9e-b0d8-45ff33a4ce81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dd209f-acb5-4edc-8288-f5cb4dda7bdc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cca0e0-d8a1-40ac-ae03-b50e22f06c6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d299c65-842d-430d-9275-bd1322642a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aca0049-38b3-4d54-b2e9-fe218fbce121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1493597a-f5f4-4f6b-9a6e-58a9b06b428a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7ea2c2-b132-48ec-bd02-fa7c6f84385e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c26b064-d929-425c-92a4-07f46d2f0c1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a412bc-1261-4b13-8117-62637a96b52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6538f6f9-d006-4de3-a572-eb0e00c93f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a163f66-69b1-4274-95d8-91b5d7ee11ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474090e0-b4dd-46e2-9963-b01d0211eca0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2904c83-1066-4633-8f88-3dd56f9edfa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdbee13b-3b32-4f29-9c72-aa66c985cea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fbb305-52f1-40e5-b055-92142426287a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e490f9-4a5f-4b80-80f2-88fc2d560f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbb767f-0750-40cf-9892-ecd06030024a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b530b2-8cd1-4765-bdb6-aef1bd1ff309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2538d129-cf66-421a-b17c-c55d9496fbd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209ade82-0ca7-4514-9fe0-9a6ffa6b7322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf1f25d-9dc9-4f9d-ae80-1207943f729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a271a61a-70d9-42a2-baa9-a9405afe814e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0b9e50-dcbf-46a8-ae63-7e9f7fd8c53e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63cfed63-1893-4b9e-8dad-bafe21d20e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d2f2fe-1d9d-4760-af90-e4bc4beacc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad49f60-a0d0-4c62-a483-f309b8992d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2868d72c-1464-4e3b-95b3-c188ab0c7a1b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117268e1-0d69-425d-a6c6-9a56fd2bc6e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa5b2ecc-8226-42db-a048-cc252d4ced8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caff1569-8052-48d0-884a-144d121d5cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e21a54-e203-4cbc-a54c-fe9097017eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27887eb7-64e2-47b1-8162-241995a5f674",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a93fdb-5a1d-4903-8831-bf03c1a31fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e170f2b2-c33c-49b5-9e85-0c1fd87dca21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd968e7-7651-4118-9835-44fbec0be323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a744b506-ce06-4965-a632-15d80b13d5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757bb606-3734-4f47-be78-e2762815946b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f73dd30-cfd8-4175-90a5-6a46df1b2a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b5988d-ab85-4f1f-8ef7-8b7c787868d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce8aa6f-73dd-4fcd-894f-354c53a97e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bc0bd9-a060-4b88-8ae1-d94e88d1769c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c8a26c-f3ba-4daa-8eac-1989b77c7939",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b991337-44b9-421d-bf02-e380685da407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f417c41-5d6e-4b5c-8e6b-d0fc50629f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05ba7a0-3b4a-45f1-9b5e-f63990cddfaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b243b60b-3e4f-4a40-bddb-4b8b6dc3500a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4fcfff-9d35-4933-a49b-15d140efb4bc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25274613-8f27-49db-895c-fb157202dd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289c7cb0-7e3b-465c-a3bf-66297dd99669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c23b46f-277c-460b-b392-40d05a390aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04fb3e0-5d63-44cc-a986-cda1e76410aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf3e839-6b72-4530-bb95-c54597c2f16c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e713662-2be5-41b1-8458-10e60760c1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7538dac5-e718-4f48-b2cc-e78eac644c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27249459-c940-4280-a523-ee1af5b5d408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3004f388-d0e2-4b11-ad5c-abe29388367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a055a09-0d54-4052-bf54-8f306cc7ebda",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6894ea80-9d18-4c00-b89a-1a329ee9c640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dff114-cc1f-40e7-a22e-89be1548bc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e2620d-c988-491a-b4e6-6a2c254abf98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22854079-c0a1-43e1-97ff-5227a418c771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a561b5-9afa-4978-9c5c-964ead46e5d5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c594a3ae-27ba-40db-9c3a-9baf92f57f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfac78ff-edb0-471b-b680-1fe3bb3edef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cbf3b8-71a4-4ce7-8225-fb073d662353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45d7039-5adc-4bd6-8018-2dc1564c50fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b867803-ea28-439c-8f64-1f9e4dacd8bf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30f82b3-daae-4ed7-a993-16c495f48f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942c2236-d042-4b44-becd-0f7808ef746d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8216de72-df4b-485d-abed-6b1b26f7347c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6370be-5d1f-4e3b-a462-86f023127e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6a0666-a993-4970-98f4-8eef0a3ff8c5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72796875-2dcf-4bdb-b43f-d7dafd4d0a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b6cf45-d9e1-414a-b4df-4db9b0198fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048783ee-681e-4d40-96ee-9ab3958cce75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdfdcfc-773f-4750-80c7-2effe471afd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6619bc-2a62-411e-a858-178d81c1e3ce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea0f192-0f69-440a-a507-e21a5984bb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40beee1e-72ad-4542-85b1-67aae486b7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4f2d89-717a-4968-a9c4-77092eff8d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dc2092-03f8-487c-9580-b1d38aa7b59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9aad1d-e3e9-4ba9-9335-59b0a15f8804",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ebeed9-b890-4e9d-9ebf-03ca456a9b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0ecebf-730b-4ff8-9799-5096548acac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8411975e-5782-4490-a70f-7cd55fa75ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6147d87-442e-479e-8245-60ee36ced150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0424c3b-d148-4bfe-92d8-efffb9b166c4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b573585-f06f-40ad-876b-79d88c7f860f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cd94fa-a871-430a-9098-b638f65fc893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e76b40-cbac-404b-b8b0-079d80fb0919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62be440-18db-4ed1-af74-344c8d3e6fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33ceba6-a421-4b61-ba56-521990f82ef8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24566ef0-bc8f-45a5-a65c-c428fc32e3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2e3c80-2851-44bb-8d53-0fc1b0d7140a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eeada42-2343-497e-b0d0-96dd4ce7ba24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6ee7d3-e85b-4e0f-827e-f066d3a89cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad558d01-28da-45bb-8c15-7b104bcef94a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b211023-f49b-468e-b41e-cba24a3caaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42d3107-cba6-41d6-9592-d8ef71c47ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f125c436-53dd-4bed-b7f2-84fa27254480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccbc2ce-43da-44be-84f3-cd42ff903d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf2ef10-cd97-4ced-96dd-894b1afdddc9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0be4ae5-d318-4353-a628-63d8a2211d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67c1775-c554-42dc-8dfd-9750db152376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd82d99-cc74-43a2-a135-b8068443b976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b423211-43d7-4af1-ae90-f491019e0975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d7bd9f-6dc6-4cb3-a69a-694b64238f81",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f689991-9749-4be6-acff-3243d6b0ff27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd10e810-47a9-4e7f-a52f-bdb845b66f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b05d5eb-257f-4b21-9946-c66c12aad51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d0c87a-d135-4d24-b1a8-c9b27ba40461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597669d9-81a1-4bbe-8924-2af9313f7a27",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efedf6c0-2d74-4138-9d84-3d86938ea36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f43431c-a572-493c-a38e-3dcc0ff19fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75739dc3-cee3-4fd8-9acf-ee95c00aa31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8841713-c62c-4b48-9427-2e804e861d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d95679-1808-477d-8667-e9269fb3f034",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af62f376-17a6-4f65-9ba0-7111732bbd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d5454c-ff38-40e6-8c34-a9317b131a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29960cc-7c11-4512-a503-3840d22e3017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c06ff9-f019-4a24-9993-79afbbf5b69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c693dbfd-0b0e-41ef-9846-b289afa042af",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f88ba4d-6621-407a-8443-c1fd2420de30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f316049e-2219-4461-b252-14bc6f311f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb968e1e-af62-4556-acdc-501597757a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2cef1a-8455-4db7-b9b5-2a85ec58ea70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90725a51-b4b6-4e80-aabc-9f0204a5b077",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987441c8-d88d-417c-b194-66f604bdb133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43075f5b-b97f-4239-8390-f4de230853ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dbf99c-2b1b-49ed-acd5-e234429eaf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c79017-9ea6-4992-82f2-18bfb4391541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8d1555-85c9-496d-860a-cd083f808782",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f64fcdb-4fea-42be-9bfa-98185d399528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4491eb-4c5f-4b15-aca2-b261687c86d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004554dc-5d84-42ab-94fc-d08e51338e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf1c984-c817-4f9c-a507-9a9fef8f3ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f75336-c210-46cd-af83-f50067edf505",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d929e6-aa45-4cb1-b0f6-a2b168c4d707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a2aed6-dcea-4586-957a-bd2091c5a021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b17de4-e19f-480c-b8ad-63a853be68fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b20ee42-d1e9-47b3-9999-daf922d94557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc0199b-a3a7-427b-b64b-1abf51536b32",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff2ecab-1e82-4850-8cea-d4becae93de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74239bd6-9fb7-4a65-96f1-5d11f49d4f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ef18a2-0e37-41e5-8d6a-9960efab5bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b816330f-14e5-48de-85a8-cf8af12511c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d474c9-8db8-4957-8cd3-9832dd13f95c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f61843-0478-4822-af0c-a2bc25b02669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b5a278-92a1-427d-be2e-5acaa7d7aaba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dfe835-4234-4ff9-8811-3e16d369f5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9a493f-01a3-48a0-b86e-d3deb2b80a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5181ebc3-f9a4-4dc6-b809-807aa3ca9dc5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79853519-61aa-418f-b8a4-6edc49334025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b12b6c-8f03-462b-a7d1-a364ab21927c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b095777a-9784-42e2-84dd-e230698dad71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074579e6-40cd-461f-8980-c13686e73d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1acdc3-f359-488a-8673-83dffbc08534",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fc3839-3fb2-499b-b130-f64b972b9f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bde5a8-2e34-4d89-9a98-7cc56f8beb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b27d59-6370-48ad-8c55-c5ab125165ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf89faa-5b87-4e50-982c-f7776fde616a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8f4e88-2724-4555-aaf5-fe4ef0a9390c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4818be42-f213-4994-a0c8-d20effd18554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7009af5c-669a-4e43-9c0e-27a4f2ecabf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bda43a-b525-426e-96ab-fd6308fc4619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e82fc2-1db6-40a8-b42e-b77605ce5d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3973f7-afed-422e-a9e0-37db5c857d3a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d686944-56bc-4600-84d2-e514931efc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6da54a-d7b1-48ac-af2a-e173d64cd084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dd304c-1e7b-4e5a-930c-566f2193b6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0541ec04-14e3-48f5-a4f7-3b338726dd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c09a6f-3420-4e76-b591-c3b86783b5a6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb2a95e-30d1-48f4-859c-cef37dbe8fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b44dbf-a043-4abd-be06-22ffcbac44c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3c2dd6-f7be-46de-9c4a-21c3e3cd3047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df58c87-a514-4647-9e9b-96f07ed0a5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574565ff-a1fc-432c-8533-2bf0c4f52ec1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d508e1-96c9-44c8-bb84-1ae4af026ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4abd728-e87b-43c0-a2e9-d6f78b112499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8112f41-1808-4d5e-9582-82e3de99ef05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa87d15f-9460-443d-9119-8e10ceda3f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6094d4-fd52-44a3-852d-626b722f8472",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df02293-6f29-474d-ac66-a6706814d9d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e717754d-0790-43cf-af65-20bf7f888583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef33fee0-0bd0-48ea-a6d7-6226c35e09a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceebac4-637d-4b39-9efa-fe2f9540f2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48da4a34-0eaf-4460-84fd-6fb5ef3d0276",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00f4526-b27a-40c3-b8fb-3e18f6ff3ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5900ee4a-69b5-4ddc-8f55-6d4063583b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15230d58-bcb3-4fc0-af3a-0e88cd978165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a69ee4-d803-4200-8d51-e2cae699b76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5369045-5dae-4e8f-9fe5-7bd8166984c3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86266a81-32ae-4a71-9a7d-2e859b238121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f5c5e1-645d-457f-87d7-4889d8a1be96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedc0b21-51b7-44da-aa61-d8677e465679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1eb6162-65db-4365-9322-dd702d403b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04b0ed9-f847-4cc6-a4f9-8ff33fac8d80",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d83b51-7911-4eb1-b29f-dea5de3443eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f419eb0-f8e5-4fe2-ba1c-59ea64d010df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8077de4-06b2-4b3c-83bf-6133af26401f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c15914-4bbb-4715-bc34-68b3acddb06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6089203e-314a-4547-b019-167bd1d4a9dd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bac9b3-0ccc-49f7-956f-e309f83dc7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485a400b-dcb6-447f-88d9-506e19e37055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1745f1b-cdb9-4aea-9244-b2665a78174f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d3fcc7-e689-42ca-83b1-b6bb05919381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5779c30-32a9-4c60-9d74-d7b03a45a4c9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc3e7d0-d7cc-4356-a8f4-45fd94c4c90d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd8ace18-cd45-4239-8c77-6663c339fff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c8e242-ce01-4cf9-8ee2-c91e81d8ee53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9abd8b-b520-45e6-89bb-eae273df4199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f79523-11cd-4e36-ba3e-f575ee2ceeaa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9032852-3492-4fe2-8537-a83ae618d068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23c7779-15aa-455d-a311-508b00b1f47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb8bb8a-dc92-49ad-893f-e719b8947e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04215ea7-e04d-4ebe-92cc-4cb6d514339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcb65f8-9e8c-4ead-879e-2dd712babe1c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0114e8a-bc2b-4e15-928c-37af2d454884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf69166e-3c41-40b8-8e7a-0b5b5449cf4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e626c80b-29d1-47a6-95e0-1da138a35df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cfc546-b6f5-4316-901c-a517ec475970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96e401a-a21a-4c7f-b7a0-7930b7bc327d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3543273a-3f03-489c-ae2b-d7cfe48814e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5310eb98-98a8-4a09-a4e7-a372106a3d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaa8c97-bfae-4f23-b241-24f28993e9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8657a148-6f16-4f9f-bcfa-7dd8f2f880d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35853b8f-aca1-4494-bd4b-244fc676c4fe",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f7a47a-e424-420e-a27d-7e2834102a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236a4873-d329-49d0-bdb8-cf23a36223d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea154603-2a52-495e-8c15-a8cc51e7bf0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c30367-762b-4264-8208-49fa635d5ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d2d5d7-e6d3-4f53-9a2c-3bc9894ec355",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd76a5e-9c4d-42e7-a90a-b583650ccb5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "240c2c38-7bfa-43c7-ab8d-35d9bd378335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8719276e-ab04-429d-a2af-8c014da3d786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06bf5bf-11c7-4848-894c-1f1b2781db87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f023fc9-60d6-4a43-b699-3896e2a6d8cd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b141293b-3967-4811-a507-efd0c991ac2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c1549c5-97f9-47ec-9050-6813713769ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3659c3e1-7612-42c8-b16c-7bb08b65c558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269d4c09-4acd-4259-ad2c-a3ca3a7e2af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c32b9a-c127-4522-9d38-a541c1ce2fb5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cdb377-b30a-4cc3-b81c-7ef7d3d605c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8a2322f-836e-4bbc-a11c-e098b0eee32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4125e1-486d-422d-be50-446e2b1ec85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07291809-a9f4-4915-90fe-cc13d10a99a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254d3b1e-3e97-496b-8a9a-b0803022a016",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2a4770-0bdf-40fa-a66e-1e798b2203e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06da9432-48f6-4d47-839c-dfe5829fb8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4837e73d-5ed7-46ba-8082-7e739cc9f968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1f3c56-6c30-48e1-b9a3-2edf139703e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bb6e1d-344e-4d79-a07e-1764e4ce3282",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049a644f-848b-4613-90d3-31ae6491c16c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d02fca-7c92-417d-be8c-db921efbec27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5045d0-0796-499f-8245-648ec2b781aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e0dd31-ed04-4a34-888d-d76d8e9eb64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53fcd04-c97e-49f4-9991-3682676d4cd5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413f4735-4a75-470a-ab3c-5068b3fedb09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b9e2633-04f0-4349-ac2e-bf8bcafc4b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136a8fc0-eb5a-41ae-9b62-30352b89be88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef6b9dc-0b57-44bb-af63-4e48d9c97a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5408e90f-a0df-403d-830c-e0928d3b6390",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdb10dc-7ccd-46d5-a62b-6f7da1dabdb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1846bdcf-3151-4dc5-b445-5d00298a83ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e30552-a8d7-4ec7-96e1-fc8a8b7c6e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37050034-3c64-4af8-85f6-c5d696d54044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52b7121-0767-4a7b-8439-ea703ace0f8b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404fde3f-504d-4819-8323-2ceb32894dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50014632-e878-4d0a-aa53-bc413c802eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036edb55-d5fa-4d46-b3a0-8b8651e1c7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfffaad1-e5a7-48a0-9792-760bb19e9cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7368f3-3899-43b3-933f-db2d04474393",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db15046f-44b0-4664-ae2b-b9bd421d8301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b2d8c3-10ea-4376-a644-5226b254db9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480acfaa-3048-4c72-b2c9-bd71b09f7b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed4a00e-27b6-4500-94fe-9eb41e89874a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bef9ba7-2307-4c79-b19a-3e6dff188207",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d6cd22-8dea-4203-bd03-b25de129f565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee51b653-1fdf-4e37-8fc7-3b249e469e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d30c26-6d2e-4292-8cc4-ff33132f9cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d862acff-9e04-4c27-b828-8a4d2f7bd53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50660da7-9b67-4a8f-ab78-d7156afd7627",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e01e48-fdd0-4245-bd2e-3113c41d4c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3b5ab3-db9a-4b77-8b30-1b6f9d55d333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5f0c1f-90c3-4cc0-83fe-f014518c5372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f9d0f2-65fb-4ff2-8c77-436d2443db62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c103f71-4fa8-45e4-a158-cbfe645a33b2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da52cebe-d097-4459-ad5a-74ca58ef3a88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c15647dc-20e9-4c3a-8426-a48638811153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa096a0-3e20-41e5-9952-192d2df4e470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62ad082-da37-4572-b71b-699893d6b247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59318032-3914-4015-b20c-f53e2ae87922",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4223628e-61a2-4158-895d-aa3638422373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d9963e-4ddd-450c-8a3a-682504b2ed15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4851b0-e6fc-4440-81b3-2a76fe764288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353d0704-785e-4d21-a420-920e7057e292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fea590-cd74-4e9f-a692-d0131ebbe1a1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfde7296-e9b3-4070-9de9-9ea5dee70e59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58492f38-bac1-402e-902b-adf18b85f234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c574b5b0-5086-478e-bf5d-5f40b156c44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba192a3-0b40-4192-be75-439040844255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c850e08-fe32-42d5-a78c-158a4627de4c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d20b310-4aa0-416f-b246-b3e6bccadc97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0625cbf6-37b6-40ae-a6ae-351483508d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c60c48-8e96-4279-8f90-0a5f9c7d8e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815bc9a5-8ac8-4464-9c30-c63a90076353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f556a84-89fc-47b8-84fc-1b033bc2ac33",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab74c7a-9254-4cae-99d7-b6a247c1bfe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b68b7492-820a-4f65-93ba-f0ae9a074aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd39f4d1-7772-4876-b72e-4392601241d9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d9d22d-7ea8-4401-8aa3-44ea66010738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6248eb6a-5ac7-4bfd-a448-78d5314e3fc6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c83ef2d-4728-424d-a77c-b364fa36d907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4dc983b-7b40-4559-8791-d5e9bcb4e3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265260ae-67b2-49b9-8036-57016db9b71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ac8dc2-f87d-4c09-a529-07f8c5a57b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b814bf3-5dec-4412-981d-bcf611ed4e29",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783fe9e2-0331-470e-b964-3a7c2cab82ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a15673-f5b6-41f4-9a0f-6af5b6dfd8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3578fa-8de4-4287-94a8-d54e9037d3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e620b629-43e9-469e-b94c-da012b8a228e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae243901-1586-47fd-8f9e-a9a803894b69",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6c946e-9c7d-4d9b-88ac-bc6ebb4ff017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0345668e-4fa0-4b97-97a8-840dce58d86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a00929-35c5-4d34-9c7d-cd5f7e4c1365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca55766-6fd0-47e0-9f02-c63bd9a28ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa196a44-ceef-4679-a46a-abcb57d719be",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679fb8bf-16b8-482f-ae30-7a1c9b6b5774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cde73e-934d-430b-b58f-9c2ebd976b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fd7c5e-b462-4b29-bde8-03e1964d896e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74af991b-9758-4c18-82cf-cb5a300c38f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef05420-077b-4bbc-a95d-645bf389c24b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2404d5cd-ea43-4f0e-bdf4-3cfb047a69c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb8fe59-b6d5-4073-bb48-fe6f3b3ea635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32560692-6d4b-4b71-abe1-a5bea0a2eaae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44645e6d-1e5d-4a31-af93-f9008958b90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cea0528-483e-46c9-b71f-80e19f042de3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6a5544-a83c-44bc-9eb1-2973b7d17b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46058704-8b18-45cf-a19c-b254b104a915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468911ed-c094-4dc8-a78b-71f2dc273331",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ca9a8d-323f-4898-8753-66b47435ef2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d38ada-5391-4cc2-86d5-1f979beb3ac5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70498f52-d094-476e-a7e9-53b2d248055b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a21d7333-fe52-4177-b7b7-183540eec793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b27540-a46a-4f91-b83f-efc004e6b947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b361f6-9c4c-4b24-9417-3d74b18ba538"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64682c23-e92e-4abe-93bf-869576e7478d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07424d12-4bb9-429f-9c6d-f6bac37789e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abf60943-3840-4269-b1d8-24c7bd9faef7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bec7692b-f2e4-4f37-8edb-8ba99dca4883"
                    }
                  }
                ]
              },
              {
                "id": "16a315a8-dbc9-49fc-98f9-3ae62acdc353",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccc7f7c6-3b18-444e-8fed-dc9702e012e7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc9c509-fecb-4181-80f9-0816e2ed217e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1b3fd24c-6a3c-4f83-971b-ab98969df363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67aceeb-52c6-4ed3-96cf-18abe986f982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a385edec-6d34-45ff-ba2e-be03d7cbde3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e125509e-1491-4f4b-8523-771f29d1a3a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "723febfb-3eb2-4d2b-8569-c6f19662fc3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccacc5ac-7a2f-447f-a152-f9948ca9bd61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35cb3352-0cf0-47b7-8ee4-a9c75e27aa9d"
                    }
                  }
                ]
              },
              {
                "id": "6bb0162e-af17-4d0d-ad2e-aff63e2425b4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "25df6254-eb3c-48da-8fc7-af7143afcbf2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1336b2b0-b664-472f-ae82-722122e9e28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ac1abe56-7a4f-4585-919a-22b157a63188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccb92f3-3074-4dd9-aad5-53a494edd119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000df733-1af4-42c7-9c2a-4629dd373604"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0efbc0cc-0bbc-41af-9459-19432af6b5c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c40fd1e0-9d5e-4878-a5a7-e64e51384504",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9727fde-e8c2-4dfb-acb2-9f11adb22ba4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7f9c3478-b23c-4140-9631-b9461c9b31f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afa6ac25-8baa-4857-bc9b-58382c236f65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c906ecd5-ddd4-4b1f-ad2f-40972bcdbb64"
                    }
                  }
                ]
              },
              {
                "id": "e7ef5a0d-70b7-4123-a4c5-ce3d51917047",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3408e63-6ddb-4d72-b290-57494aacc5ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e6e8c49a-cc45-4c23-89a0-7b39d5ee4052"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc452789-ad1e-46c9-a10f-040f8ec660ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cdf252f-bed1-4893-9166-78f5bc4f29dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a325a22-baed-4ac5-9c0e-bd3db68bffef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fe9526b1-edc7-4fd8-8447-5e859552660a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb76b6c9-1920-4af1-b4a9-7872a54010e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a839f4ab-6385-4bca-a34d-e52d33182820"
            }
          }
        ]
      },
      {
        "id": "0b3a4cc2-39e7-4bcd-acb8-082864090440",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4724791c-d554-4faf-a750-6fa6971b0260",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd34b02b-19e1-47ac-a4ed-dda64775c2cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f35cee1e-b302-43dc-900b-8261c185c830",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefa9e8b-aad7-4dba-816d-ed093ad5ffb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d155b5fb-b656-4beb-9caa-aef4446d0654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5534d52e-81ec-443e-abfc-cc397f059f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd1d90bb-2b60-448d-96e9-468f95f5ad09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ceac87b-fb71-4817-bfdc-9c663e18bdbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e05984b-6352-4f4b-9d86-24f1dacb4e93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74a994ea-39c1-4b8c-a5e0-f07198798708",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "deecf71d-05eb-4b5c-82a8-33c958b2c02a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69812a9d-7d9d-4e35-9dbf-05ad4a9d5cb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "945d624a-e26b-4410-b84f-f8ccfe2a9535"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4854626-0305-4878-b0e0-ca1343a9e008",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "831fab4b-307b-4f0b-9dbc-e518c3ab29d9"
            }
          }
        ]
      },
      {
        "id": "ac78fc86-8102-4691-af38-2c9954664f8c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d1ecab65-3807-4477-b99e-a628c9e6f5db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32ea2e66-e462-4f15-8529-c0dea5f48730",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7884edd-6df2-4fe5-85a5-756a2241b896",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62cc8da-a3b7-413b-ba58-08bebf3846d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beecfe86-1b5b-4b27-84b8-93e6e48e74ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1434f9-3f51-423b-95f4-1c8441319bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "922be455-db8d-4e49-88e9-b2bdde65cd21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7d72056-d6ca-4b74-a6dd-4ed1e0927f7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f81391e8-5b19-4bd0-a495-519458b6f142"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfd4e69c-1af4-42ca-b0ac-8cb402ce9f40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96842d48-6156-4437-8cda-a9d76b7ba266"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f76c064-59f8-4b60-9b06-d66d9082d84c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f1786a9-1b9d-4eab-b092-42939c967ea7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "042f60d5-0423-4d50-9178-d976e3b59f80",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28298e1e-467f-484d-83a3-c6c5eff0f235"
            }
          }
        ]
      },
      {
        "id": "ab715842-d3f0-43c9-9f24-251af4ee13ae",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8f4b7448-3f0d-4e61-942b-a8e9bb3474d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca8fcc40-8131-452b-8f71-9005b3fc18cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e381440-5fac-4d40-89dd-687f843bed4f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155c22d2-dee4-4a6d-8651-f0cbf3d54ce3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2315e2a0-4a35-488d-a181-b0426fe8d3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0667f006-7d37-45e8-9c1c-7d08a2c5cc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "515a8cb4-ab7f-492c-bbac-931d44bb3a1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c362763-da36-4d80-9364-71140e0efbba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a873b731-fca4-4f34-9016-7d2336f4213f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0c539d2-c43b-4e52-b43c-f7465249ec98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8416cad5-4f02-4d91-a1e8-44e2f06036b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87617bf9-6ef3-4465-832f-25c27120f6db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5617d78b-28e7-4ccf-87a1-54c44ed1204d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aba90ea-a0e1-4fbf-ba83-7a597e17c5bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "859ef98a-e272-4f97-add0-32f64adb585f"
            }
          }
        ]
      },
      {
        "id": "86b27fdf-0370-4b41-b032-e4b20f2d843b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2afad7c-d3fc-40d4-8c26-4a3c22e7707f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a014032-243b-4abc-8fa0-8a063b143acb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "296a40b0-7b68-4b9c-9e93-0fdd841dd92c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c908e5b-1404-42a1-b00e-681b55b83980",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "536cdd56-d142-4737-aba4-6e136c2a5694",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.02816901408455,
      "responseMin": 7,
      "responseMax": 349,
      "responseSd": 26.11228291786651,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693614680924,
      "completed": 1693614714186
    },
    "executions": [
      {
        "id": "03b551d3-4d1d-467a-b36a-65538601a164",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e2ae1291-f2a2-4cba-97d6-57158a0a977d",
          "httpRequestId": "5a5a0819-45df-4370-9756-876d1ea2a950"
        },
        "item": {
          "id": "03b551d3-4d1d-467a-b36a-65538601a164",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f4c55b76-cf47-4232-9503-76ddee217dc0",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "1f6d38ca-fbcc-4ba2-9c5a-4d48cd7b90ef",
        "cursor": {
          "ref": "974bc904-7bc7-42d5-9094-8a1572550d19",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "feff30f4-09b2-4032-84e4-7a18ec66e354"
        },
        "item": {
          "id": "1f6d38ca-fbcc-4ba2-9c5a-4d48cd7b90ef",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f5233775-10e5-4e44-b767-762af5f3f7e4",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6c67860b-146e-4a53-aad0-5db70fb97c35",
        "cursor": {
          "ref": "cbfd199a-c68f-4615-a165-890e1c1c1132",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4d2113d4-d84e-4124-82eb-126bb7bb3e1d"
        },
        "item": {
          "id": "6c67860b-146e-4a53-aad0-5db70fb97c35",
          "name": "did_json"
        },
        "response": {
          "id": "5835895d-1d36-425c-9fa7-a461682ba1f2",
          "status": "OK",
          "code": 200,
          "responseTime": 229,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9f8069-bd46-4b54-bec8-5950fa18383a",
        "cursor": {
          "ref": "b5ef676d-fbca-4302-b812-ba9a7333e3f4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa5cab90-7512-4217-81db-7fde84ab3c2f"
        },
        "item": {
          "id": "ea9f8069-bd46-4b54-bec8-5950fa18383a",
          "name": "did:invalid"
        },
        "response": {
          "id": "347edc77-82ec-41bd-966c-d57cc6319b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9f8069-bd46-4b54-bec8-5950fa18383a",
        "cursor": {
          "ref": "b5ef676d-fbca-4302-b812-ba9a7333e3f4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa5cab90-7512-4217-81db-7fde84ab3c2f"
        },
        "item": {
          "id": "ea9f8069-bd46-4b54-bec8-5950fa18383a",
          "name": "did:invalid"
        },
        "response": {
          "id": "347edc77-82ec-41bd-966c-d57cc6319b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecee1e7-8578-4d84-ab48-86a59f02345d",
        "cursor": {
          "ref": "429d295c-afde-4b10-9b2a-be9e657fa49b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9c6a1fa5-ee09-40f8-86a4-97b7930467ec"
        },
        "item": {
          "id": "5ecee1e7-8578-4d84-ab48-86a59f02345d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d4df482d-8c1e-464b-a28a-f1f4d71efe1a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 349,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa3fdd6-346b-465b-b490-a4bcbe034680",
        "cursor": {
          "ref": "15791838-ffca-45ec-a755-3f13d37b1a8c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dceb53cc-a768-4eb3-9e58-d2c4cbb9aaec"
        },
        "item": {
          "id": "3fa3fdd6-346b-465b-b490-a4bcbe034680",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "26d1352e-d8ee-4dff-886b-7408f6137166",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2107d6e4-9eb6-45fc-aca2-cd229042cf17",
        "cursor": {
          "ref": "3a294dab-197a-4fa5-a794-d350e953995f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4d5e0cd1-032e-4177-96ec-2f1298aaf745"
        },
        "item": {
          "id": "2107d6e4-9eb6-45fc-aca2-cd229042cf17",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7e6c7dac-3104-4ba5-9abd-c0958cc27ddf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bb4f80-426f-4193-9523-64ac8a9f0ba4",
        "cursor": {
          "ref": "e2136400-fe2f-4207-84bb-918ac2dfb0b5",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a6da4321-0fbd-45e7-a10c-0a17bce6d4af"
        },
        "item": {
          "id": "d4bb4f80-426f-4193-9523-64ac8a9f0ba4",
          "name": "identifiers"
        },
        "response": {
          "id": "09dde480-4576-43ee-a443-416e52071f28",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d34edbc-eab8-450e-a679-7d7b217f4873",
        "cursor": {
          "ref": "f99eb87c-b858-4601-9176-3327d7310eb0",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "27ec7e42-02e4-4a49-8203-557007c34b28"
        },
        "item": {
          "id": "7d34edbc-eab8-450e-a679-7d7b217f4873",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f96cd3b6-4a3b-4743-841e-18332d25b222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e958ea78-21b7-4fd3-a5e2-fe6b8f27a760",
        "cursor": {
          "ref": "0ddc563c-ee32-4954-9846-d0c792a4a54f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "22914023-2ead-40a2-bd04-394a775cdf04"
        },
        "item": {
          "id": "e958ea78-21b7-4fd3-a5e2-fe6b8f27a760",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9d0d20f5-5b5f-46b6-9314-640597de654d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5565e5db-2ff3-4f96-b95e-8c89502075f3",
        "cursor": {
          "ref": "33251146-2cd9-41c4-9246-49736fdd0ae0",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "de7bf10c-e092-4b70-ba4d-893617fe05b2"
        },
        "item": {
          "id": "5565e5db-2ff3-4f96-b95e-8c89502075f3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "30dec8ae-9640-457b-910d-c430d200e0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1636bfcc-112d-442c-bc40-5cfb41ffa8c9",
        "cursor": {
          "ref": "bdd551da-d7e0-48a2-9e61-f5e09a1e2037",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "05742746-7d14-4844-906d-a464e62bedd9"
        },
        "item": {
          "id": "1636bfcc-112d-442c-bc40-5cfb41ffa8c9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d9956a4b-0571-4ea3-b617-01fd4f301103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9694b6f1-b58b-490a-aed6-6fedfa46741f",
        "cursor": {
          "ref": "ec4ef205-8bd7-4890-b79a-c2223778e077",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2500b070-87ff-48c6-8143-202ba68ad2e2"
        },
        "item": {
          "id": "9694b6f1-b58b-490a-aed6-6fedfa46741f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3c124e00-d622-4674-bd76-5f95ea563d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73a1fce-b2b9-466c-ab88-e64ed031df76",
        "cursor": {
          "ref": "0b7106a9-5dd6-44a4-8d6b-c21832859c7b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0663213d-e04f-43d0-a47b-0eef194ec951"
        },
        "item": {
          "id": "e73a1fce-b2b9-466c-ab88-e64ed031df76",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0c1ffb5a-3da6-495c-b5d2-b847cc0bb3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8d1bde-dee2-4717-8524-c6e641ab8ee6",
        "cursor": {
          "ref": "92fbe2a2-7d5f-4bd0-9667-b6df9790d29f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "53120a99-4c00-4950-86d1-3b69f386ebcf"
        },
        "item": {
          "id": "cc8d1bde-dee2-4717-8524-c6e641ab8ee6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "385953db-4d29-43cd-b722-bf2001b408a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280f8ce6-7f8f-439d-8f2d-fa6275257c3f",
        "cursor": {
          "ref": "687d0d59-2212-4b31-aaa8-b2ae66a988ee",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bb0466dd-6940-49fe-b886-abe4676c3559"
        },
        "item": {
          "id": "280f8ce6-7f8f-439d-8f2d-fa6275257c3f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e48a77a9-596c-4abd-a148-092a85943006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11a52e9-d793-4039-a245-d33e64717a5a",
        "cursor": {
          "ref": "0328f1cb-1845-471a-9574-e51139019a14",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8c0a055a-ea7d-484c-986a-610349020634"
        },
        "item": {
          "id": "f11a52e9-d793-4039-a245-d33e64717a5a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1fb5b520-fccb-4e57-9216-c36355b54209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f13969c-58d6-4699-a114-42b76c6edb3d",
        "cursor": {
          "ref": "b466f4c8-1430-4199-ac10-f14940202a71",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9b814684-f48d-4321-9527-f876e89b265a"
        },
        "item": {
          "id": "1f13969c-58d6-4699-a114-42b76c6edb3d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e817bbc5-1362-49c9-95d9-d8fc127e4051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64fc8a9-1876-4aae-a35b-e2862a889055",
        "cursor": {
          "ref": "bbef8119-9fb0-452d-b9c1-f294b137a14b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9d7e1c36-bc21-4d1f-be1b-0c739d3a8be8"
        },
        "item": {
          "id": "f64fc8a9-1876-4aae-a35b-e2862a889055",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "41b3a0d8-5e27-42f6-b04e-b581f1e6d724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c02ee3-e945-4378-bf67-86e4ee6f18b2",
        "cursor": {
          "ref": "9b091f41-f12d-44c1-8f95-8fe67f84b1f7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f8f20f05-a2e6-4c9d-871c-5f02ec44663f"
        },
        "item": {
          "id": "c9c02ee3-e945-4378-bf67-86e4ee6f18b2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "926702d8-dafd-425d-9301-e20d7d5bb456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd050e5-3bcd-49fa-9606-e8d995c50596",
        "cursor": {
          "ref": "69fe600c-0b15-4b73-ae02-dbd992da6ee4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a94fb03f-01ec-45d5-a10c-60fb12f6cb09"
        },
        "item": {
          "id": "9fd050e5-3bcd-49fa-9606-e8d995c50596",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a846c1fd-ae88-47ad-87f7-77427a259a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74ae3c5-1d21-4f1a-8461-a58ec6e63e02",
        "cursor": {
          "ref": "7871fd77-88cb-44ee-b553-235fcd422a72",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7ec85cad-bc56-4e4c-81c7-e8c96675e526"
        },
        "item": {
          "id": "b74ae3c5-1d21-4f1a-8461-a58ec6e63e02",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "48b18334-d082-4ffb-bbe9-d41b8ece6bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4774c41a-b3a4-4247-95d1-9eaed2f1abd1",
        "cursor": {
          "ref": "db0b3428-814f-4992-9562-227dc28d78dd",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "37ecf804-9d65-4bd0-a26b-4cef8a63de72"
        },
        "item": {
          "id": "4774c41a-b3a4-4247-95d1-9eaed2f1abd1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a6105c2c-0518-4d8a-a36c-e34d9444583e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037b1cd5-6bb9-4a9d-9226-ddf6330271c2",
        "cursor": {
          "ref": "4357096d-274c-408b-9a56-b78fda3ad9bd",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "21383b61-6a3c-4732-85d7-51946f468080"
        },
        "item": {
          "id": "037b1cd5-6bb9-4a9d-9226-ddf6330271c2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "282fa578-70f6-4462-8ab0-88b0e96e0e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9200ed-e879-43ca-838c-5eefe4f2dab3",
        "cursor": {
          "ref": "792089b5-3a2a-4706-b6ac-a5dd87e278de",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0981adbf-99d3-4153-a88a-43ed22e32a7a"
        },
        "item": {
          "id": "7e9200ed-e879-43ca-838c-5eefe4f2dab3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4b8f724c-abd0-4d6e-93c6-c879ba35324b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c583611-ec64-4ad4-bb69-97a00a2f4e47",
        "cursor": {
          "ref": "a9784bcb-32bf-444b-8433-6792c778e6d3",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "51a7476e-83c3-408c-9185-ba9d843f8d1a"
        },
        "item": {
          "id": "7c583611-ec64-4ad4-bb69-97a00a2f4e47",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5a296f99-05e2-43e9-a492-ee4b9d37e3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb21ab2f-574e-4af2-b309-980f96c4598f",
        "cursor": {
          "ref": "3c4811f3-ab4f-4585-8e9b-041364509442",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e20c5e23-84a0-4832-9092-b36239938066"
        },
        "item": {
          "id": "cb21ab2f-574e-4af2-b309-980f96c4598f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8e2a3ba0-a6ba-4329-89f9-5f3aae136341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98489cd2-4723-4126-852e-4bd883952b81",
        "cursor": {
          "ref": "d1f6e052-2749-42a6-b3b3-b905c59a381c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8bb55296-2136-474c-81f8-089e01db1855"
        },
        "item": {
          "id": "98489cd2-4723-4126-852e-4bd883952b81",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2e41f7ab-47ef-4821-b4d4-819d5a4541b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e187b8-afb7-45c2-abc9-6e7b657f1d31",
        "cursor": {
          "ref": "0ee1ac48-36d9-4c84-a0b7-4cd69bedd0e5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4f2a1ed3-76a8-438d-b27f-779cafc467d3"
        },
        "item": {
          "id": "96e187b8-afb7-45c2-abc9-6e7b657f1d31",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "929034f0-902d-4065-b991-dc7c4e36dd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74f66d4-4edc-4f5c-a799-8c9a6e6022f7",
        "cursor": {
          "ref": "31b97aac-ae25-4282-939a-fe11b1ff2629",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "387219bc-01a9-4589-9ff2-86bf69f2a9a0"
        },
        "item": {
          "id": "d74f66d4-4edc-4f5c-a799-8c9a6e6022f7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "da1bbb52-c30b-4c34-add7-6b8f7d893c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb5ae50-01c3-46e6-a384-1e6659ee8692",
        "cursor": {
          "ref": "22696abe-9edf-4d53-8f09-9f8d0b900066",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9f1fd4fc-43a6-4e8a-9d0d-a81237f08dd5"
        },
        "item": {
          "id": "8fb5ae50-01c3-46e6-a384-1e6659ee8692",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9b3c7095-620b-4998-93bc-6850360cdfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288081f7-920e-4369-a4fc-42d6ce755535",
        "cursor": {
          "ref": "2ce59795-c8cf-44f2-bb77-8401517eddd4",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d717cf94-dbf0-4967-8bd6-2cc1afe1f031"
        },
        "item": {
          "id": "288081f7-920e-4369-a4fc-42d6ce755535",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "41cf364c-a9a4-4f4e-9cc3-6c1bf9f97657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19acefca-b7c2-46f6-b5cf-5dd49d184423",
        "cursor": {
          "ref": "9df35d23-5b37-492a-8288-b6f51ab9c623",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ebd522cd-258d-4d93-b81d-1ae0dfb1f980"
        },
        "item": {
          "id": "19acefca-b7c2-46f6-b5cf-5dd49d184423",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9aa55f45-3ef1-48fe-b580-eab2335ca15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c257af2-770b-444e-bc9f-db79178ffe1c",
        "cursor": {
          "ref": "9fd81a9d-7712-4354-a279-f472f4e6b91c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a4c7d644-7b0b-4218-8ad0-265265e26ef0"
        },
        "item": {
          "id": "1c257af2-770b-444e-bc9f-db79178ffe1c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9603d478-f5bb-4b19-8c75-2f256e352df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882c7b36-bad5-4e86-b6b4-a0193fbc654a",
        "cursor": {
          "ref": "01d27716-03cb-4581-bc2f-11913fc92c18",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3769398b-3984-4138-9d27-9231022627f0"
        },
        "item": {
          "id": "882c7b36-bad5-4e86-b6b4-a0193fbc654a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e91ea980-4d56-4b77-870d-9d39651d6f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4813b1e0-734e-431b-828b-09d2caa2f85b",
        "cursor": {
          "ref": "71e981f3-164e-465d-aabd-de6ed1562800",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7b189c8f-bf11-496f-a9fe-f91afeed6848"
        },
        "item": {
          "id": "4813b1e0-734e-431b-828b-09d2caa2f85b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "035e83af-5226-4fd6-b89c-6706dfb6a865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b382af22-ef11-43b5-8c0d-0712380c1b38",
        "cursor": {
          "ref": "e345ec94-e448-4812-8e85-02299451b99e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c1d08cb0-2978-43c6-a39e-aadfffb4dee6"
        },
        "item": {
          "id": "b382af22-ef11-43b5-8c0d-0712380c1b38",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3468bfbd-4ed0-44f6-b8cd-be8c2605fb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afab263f-5180-434e-a144-06907aa1de98",
        "cursor": {
          "ref": "2856090c-b7bb-4d47-b55a-e050e4880e45",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d8876e74-99d1-4291-ad0c-08c5dfd814b3"
        },
        "item": {
          "id": "afab263f-5180-434e-a144-06907aa1de98",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c8777bda-a914-4784-969c-912ad1ad82f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d66d060-f4e5-4e6c-9bea-1014e3138bba",
        "cursor": {
          "ref": "17db4ea2-950e-42d4-a4c5-de8e1e3baddf",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7bdaa0cd-91b0-4818-806c-e15dcd80b3d0"
        },
        "item": {
          "id": "6d66d060-f4e5-4e6c-9bea-1014e3138bba",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8a5c239e-a5fa-4ccc-964e-07756b6c481a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff24cff6-f28c-4f61-9879-4a666def63a2",
        "cursor": {
          "ref": "c05e332a-b6d7-44b0-b757-2e148603a35c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e61cbbfd-7593-4baf-b160-86eb5113d995"
        },
        "item": {
          "id": "ff24cff6-f28c-4f61-9879-4a666def63a2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b2d84f8a-6af5-4b60-bd11-5010237559d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0662c3-7d86-4e18-8818-781ef8ba1ce1",
        "cursor": {
          "ref": "8e434016-61a8-49c2-9a35-c6795e885a0a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "06763d80-dfff-4c58-92d5-8b5162266d0e"
        },
        "item": {
          "id": "2c0662c3-7d86-4e18-8818-781ef8ba1ce1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a7865158-6707-4735-8162-f35db970ef07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09c645c-eac1-43dc-9236-409d38fbd5ac",
        "cursor": {
          "ref": "c0493e0f-91e2-4e43-9ef3-fdf6fbff5a79",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c25ced69-b6b2-4170-bdaf-7c962176ff30"
        },
        "item": {
          "id": "b09c645c-eac1-43dc-9236-409d38fbd5ac",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b59567c5-645d-42a8-a7c7-c5b00375c1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdf790e-9835-4fc6-8f0c-86f5b0b33023",
        "cursor": {
          "ref": "394184eb-1ce8-4bc1-85e9-9debeebe8ee2",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "87d1e593-8eb2-41c7-bedc-725f96f8288f"
        },
        "item": {
          "id": "fbdf790e-9835-4fc6-8f0c-86f5b0b33023",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5988f5d0-947e-47da-8506-ab7f0f1db979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da89a30e-9431-4fcf-80ba-48474a9e4e21",
        "cursor": {
          "ref": "8ce928bb-5996-40a7-9c32-f4e98989e806",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "09d77efe-fd77-4b3d-b4d8-8cde1e07823a"
        },
        "item": {
          "id": "da89a30e-9431-4fcf-80ba-48474a9e4e21",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "993dd6c0-2e4b-4a31-b8e4-9a5ad191d829",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4286ddd8-0c35-4e86-8509-32bee99cad48",
        "cursor": {
          "ref": "b8f0015d-0630-4d5b-aa1a-b9f13a2918d3",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3e2b6c2a-eaee-424f-9e25-3412abdf9cf9"
        },
        "item": {
          "id": "4286ddd8-0c35-4e86-8509-32bee99cad48",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0830276b-941b-4960-b07d-ef4e54c2caf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665bb118-c0f4-4f9a-a6b5-a49cbc9f4315",
        "cursor": {
          "ref": "a46825be-ea41-4866-911c-f7343c3e6482",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "030139aa-3201-4296-abe4-c8361a0af7ae"
        },
        "item": {
          "id": "665bb118-c0f4-4f9a-a6b5-a49cbc9f4315",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1640e6ef-c969-4455-a038-b6c0b58a4dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1778fa01-ed78-4555-b4e2-4e0f4feeac03",
        "cursor": {
          "ref": "3699db95-e10e-469f-97a0-02968f263f2d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ad1b8cda-defd-4288-b69b-be7d9041840d"
        },
        "item": {
          "id": "1778fa01-ed78-4555-b4e2-4e0f4feeac03",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d16ecc39-2599-4630-85e9-c54d0480de48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb14d48-1e56-4043-9d5c-4a5d298d3cdc",
        "cursor": {
          "ref": "4eb9f6a2-0b84-43e9-b913-2f7795c99536",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9970c08b-bac8-4d61-842a-6279d91c4625"
        },
        "item": {
          "id": "fcb14d48-1e56-4043-9d5c-4a5d298d3cdc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3aa9c4ff-322e-4002-9524-ff7fd2c9dec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a436a815-e6f8-4d56-aa87-618c4c9a7838",
        "cursor": {
          "ref": "71e834c1-8cf5-46d3-86cf-4ea828e4c12e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "36fba773-2666-454f-a09b-91de29de42de"
        },
        "item": {
          "id": "a436a815-e6f8-4d56-aa87-618c4c9a7838",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0cfc91cb-918a-49b1-8cf8-29632963e461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9744a24d-b2ef-4dd4-9331-48d214327226",
        "cursor": {
          "ref": "8f620202-120e-4a56-a00e-7ee4d8559b3e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2d496440-1661-4f8e-b7c6-5e527408500a"
        },
        "item": {
          "id": "9744a24d-b2ef-4dd4-9331-48d214327226",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "812598e7-cc54-4e19-8848-8fa4aac0dcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89cb588-329f-4e82-8540-97e1feabc9a9",
        "cursor": {
          "ref": "cfa86637-3e5b-4394-84a6-130c33d6c342",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e3da2f70-1778-428e-8c26-6374c340a62c"
        },
        "item": {
          "id": "c89cb588-329f-4e82-8540-97e1feabc9a9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c270f6b5-1d96-4daf-9e85-36c12c01acf7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5192e3-5150-477b-a88c-be82389d1144",
        "cursor": {
          "ref": "91283c40-55ff-4aa3-ac68-6b85fe78c679",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "994db1c6-9fc5-402c-9b0d-0ccbb6efe63e"
        },
        "item": {
          "id": "5f5192e3-5150-477b-a88c-be82389d1144",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e03e0813-e621-436e-92a8-9e0ccd353022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904ecedc-17f3-4049-889c-cf01efbd34e8",
        "cursor": {
          "ref": "869ac322-2e0b-4f6e-bca6-285e884524ad",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1867d7bd-8235-4a6b-a58e-6d595d19264b"
        },
        "item": {
          "id": "904ecedc-17f3-4049-889c-cf01efbd34e8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "41aba45e-3d0a-4c2f-8547-423c52e5fc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c39872-546f-4559-b62a-7338d40109d9",
        "cursor": {
          "ref": "b690d344-c192-4b41-90cc-de74973b3c89",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5d9c553a-43e8-4e25-a3ae-37e10cc97ada"
        },
        "item": {
          "id": "02c39872-546f-4559-b62a-7338d40109d9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "07c060c4-0550-42b0-b929-734e7e835f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbede3a6-522e-4ffe-9568-3a64a5c86c2a",
        "cursor": {
          "ref": "c1e7440d-2a6a-42c8-a5ba-840c502ffd3d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fa108c05-bed9-4096-864e-f94a7cd71aba"
        },
        "item": {
          "id": "fbede3a6-522e-4ffe-9568-3a64a5c86c2a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "57a3a3a8-68e0-4cc1-afaa-c5c4285681c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad17540-2418-4a41-956d-3f15df21f104",
        "cursor": {
          "ref": "e8a971ef-6d37-49bd-bd44-522826051b68",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6ec461c9-80ae-4b94-9072-a289cb3fb859"
        },
        "item": {
          "id": "3ad17540-2418-4a41-956d-3f15df21f104",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b709989b-a267-4bf3-ad03-cdc29db45689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a21bfdb-7fb9-43ac-b510-0853e9a4da08",
        "cursor": {
          "ref": "1f18c3d2-64b9-4116-a4af-0a9434e10137",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f3c88bae-a02f-4a0a-9706-cbe252f1a72f"
        },
        "item": {
          "id": "2a21bfdb-7fb9-43ac-b510-0853e9a4da08",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "29e26f48-1e4d-4a47-a2d5-35d61cfbada7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801236f4-0a64-4922-bf38-dd70b3df0161",
        "cursor": {
          "ref": "00f1cf08-ef07-474a-981d-4cb7d36da992",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9559f358-e758-442f-93f3-9f1214ec1b3e"
        },
        "item": {
          "id": "801236f4-0a64-4922-bf38-dd70b3df0161",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "51905354-8565-4d3d-9aaa-a0c0a4bb9be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f89b8f0-19c7-4739-aefd-275d3363b1c0",
        "cursor": {
          "ref": "60a84a0c-c333-466a-87fa-4d265e16e0e9",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cc973eed-5516-4907-a806-1e793d94c697"
        },
        "item": {
          "id": "5f89b8f0-19c7-4739-aefd-275d3363b1c0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "caa50ed3-4528-46af-a174-4eba3a07e42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f15ce1-4f78-4619-b341-48175f51e018",
        "cursor": {
          "ref": "62c0a80f-6588-42ab-811a-416c854f32b2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5feaef22-e763-497c-b000-7314a8122d74"
        },
        "item": {
          "id": "01f15ce1-4f78-4619-b341-48175f51e018",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b576a767-524a-4135-a29b-65af6ea85ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2df9cc4-bd09-4e22-8418-a57a0268ac24",
        "cursor": {
          "ref": "1d378ffc-df6f-47e7-8936-45bfc9a7ebb9",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c07fef04-b8aa-4f0d-a213-828decfe7709"
        },
        "item": {
          "id": "d2df9cc4-bd09-4e22-8418-a57a0268ac24",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5e28f4b5-1798-47f2-a4f4-81675d8de2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e3d8ba-b5c8-49fa-9d58-6e73b7e211e6",
        "cursor": {
          "ref": "94be00d7-c3a8-42ec-b3b4-0f889132d917",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d4fa7693-98cb-441d-b896-404fa26302fb"
        },
        "item": {
          "id": "56e3d8ba-b5c8-49fa-9d58-6e73b7e211e6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ead4d606-5e45-420b-b7f3-639f73e57979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de65a4ab-7c6e-4091-af8b-be986735927d",
        "cursor": {
          "ref": "f87c6a07-4432-4365-8ac7-1df551b0e10c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b98ff182-8465-4b5b-a94f-c9399bda6629"
        },
        "item": {
          "id": "de65a4ab-7c6e-4091-af8b-be986735927d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3a69424d-9945-4137-85b4-e47d2553ce5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da4d8ea-0060-4bf0-b371-bdac640a2a1a",
        "cursor": {
          "ref": "d5e2005d-aab6-4aad-8da1-ec23ee43dbb6",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d4ef6d6d-44b4-4695-8f22-4676b660b1c5"
        },
        "item": {
          "id": "8da4d8ea-0060-4bf0-b371-bdac640a2a1a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "19dedc48-5c79-43f1-a739-08259b112de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b2f106-227e-400b-a389-c44c1e2dcbb4",
        "cursor": {
          "ref": "7b77c90b-edc9-46dd-9cdb-aa725b7bb57a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3fc7bec4-61a9-45fb-a9b3-26f56c141a81"
        },
        "item": {
          "id": "73b2f106-227e-400b-a389-c44c1e2dcbb4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3722b3f3-73b0-4de2-917c-131925c12e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15cab4e-179d-4f00-9b83-ae0dacceb585",
        "cursor": {
          "ref": "9d1c6f01-4394-4282-a3f2-684109bede7b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9af970f7-4ef6-417e-a6f3-099516ad7c4e"
        },
        "item": {
          "id": "a15cab4e-179d-4f00-9b83-ae0dacceb585",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e367d6ce-4028-4af4-b41b-163da57d3307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5324ac52-b8d2-4ae0-a27c-00e00e887371",
        "cursor": {
          "ref": "7219f767-f3b8-4fca-a02c-470ce016d7d2",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4a63be41-9caf-4efd-b2c2-f1296e27b8a8"
        },
        "item": {
          "id": "5324ac52-b8d2-4ae0-a27c-00e00e887371",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3675f252-3438-4272-82d0-5887e9a48422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aefaa54-b6c3-42d3-ae33-163b36201efe",
        "cursor": {
          "ref": "869a2e28-a4a7-44c3-9963-0892b451c40c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a8b48714-6131-4a49-a2e4-2ebc59baa71c"
        },
        "item": {
          "id": "1aefaa54-b6c3-42d3-ae33-163b36201efe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2b826f78-a366-4b57-b3a3-fec73b6caf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682073df-3231-4411-8830-9ae40b6e0440",
        "cursor": {
          "ref": "5a469e72-fbf7-4abe-acca-63dea986e161",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a8f0e5f2-90e0-47a4-a4e5-fa7699c581d2"
        },
        "item": {
          "id": "682073df-3231-4411-8830-9ae40b6e0440",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "89409811-16c6-489b-92a9-7570046c75b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef2a858-8dd7-40a8-ba2f-840e2ef33fa7",
        "cursor": {
          "ref": "85e62cca-826e-449e-8299-4fccb5427178",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c9bba629-5166-4a97-85c7-69d83d7120b5"
        },
        "item": {
          "id": "aef2a858-8dd7-40a8-ba2f-840e2ef33fa7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "80120012-dede-489c-9b3c-9dff886354af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d44999-b505-4bd1-abb4-ef845213dded",
        "cursor": {
          "ref": "0a082fc0-dd7b-4b4b-a9c5-818638831362",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "42d82edf-b64f-4fd2-b417-cb5304548251"
        },
        "item": {
          "id": "42d44999-b505-4bd1-abb4-ef845213dded",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "aea6de3b-6e1e-498b-bbb5-52473545f73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a93cc2-fbcf-4476-8ef3-83e955750637",
        "cursor": {
          "ref": "7bac111b-596d-454e-9bc9-333cdf0ae732",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fb9c44ad-209b-4aee-9b4f-814d85f07c1f"
        },
        "item": {
          "id": "45a93cc2-fbcf-4476-8ef3-83e955750637",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8131fcfa-f5c4-478f-b35f-e19a33a380dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7332e03-3b05-4d05-b9bb-3babda3c609e",
        "cursor": {
          "ref": "85bb5597-f7e0-4a5c-9191-faca2c2a3e46",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "df89bf50-fd40-4ee7-baac-82e52d6660e7"
        },
        "item": {
          "id": "e7332e03-3b05-4d05-b9bb-3babda3c609e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e4cb370c-db68-4b67-bdbd-c83baf59dea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacce961-cdcf-4eae-99e0-ccede32b2b28",
        "cursor": {
          "ref": "d0111c52-ec7f-44d5-a564-ef8cf507fc4a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2806f4a0-5cf3-4190-b2cd-b4ee07e14833"
        },
        "item": {
          "id": "dacce961-cdcf-4eae-99e0-ccede32b2b28",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d6d48a0e-cd4a-4a81-bfaf-3c143ee83c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb32575-507b-43a2-898b-7dc76efa4f4d",
        "cursor": {
          "ref": "b5fab7b9-d18b-4001-84bb-7c2c45ad5253",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b2c48edb-d566-4d61-a087-d81e74c38faf"
        },
        "item": {
          "id": "5fb32575-507b-43a2-898b-7dc76efa4f4d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4564d296-d523-4c0c-aa5b-398fd9904f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48f7d04-a441-4724-8419-5369e5c3174c",
        "cursor": {
          "ref": "00f1a9e9-aaac-4885-8951-24c5a4b0960b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8adc646a-f15a-448e-a3d9-6506fa622941"
        },
        "item": {
          "id": "c48f7d04-a441-4724-8419-5369e5c3174c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1613d746-b823-4868-a42f-0f85de24cf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b217c7-e56e-443e-a86c-133a4386e120",
        "cursor": {
          "ref": "4692f70d-442e-43c8-9548-769378054896",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e978a747-d3db-4fca-8e22-ad8defad5cfd"
        },
        "item": {
          "id": "60b217c7-e56e-443e-a86c-133a4386e120",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9161fdff-f53f-4ebf-8921-0693943779f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7568af-58fa-4d9e-b82d-4708a0c19369",
        "cursor": {
          "ref": "9f917e94-4673-40e3-8505-0bc5081d509d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b3da8be0-e95f-4af9-9c97-4b1785f7b64f"
        },
        "item": {
          "id": "ca7568af-58fa-4d9e-b82d-4708a0c19369",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b5c30afc-8b4b-4b1e-bb0f-49db23324e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595d5808-70ca-4856-af90-425f35913ea6",
        "cursor": {
          "ref": "3a9d555a-e4e1-4805-979b-ba7f8f92a04a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ba538b2c-3f0c-4b75-b814-d5bb80f2256d"
        },
        "item": {
          "id": "595d5808-70ca-4856-af90-425f35913ea6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5b3fd593-7ec3-40aa-8e7f-5efde9a4790a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccca84a-a34b-42e1-a803-3dd43421d7bb",
        "cursor": {
          "ref": "5db25557-7239-419d-af67-a910069e8876",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ff5fca42-325f-4139-a983-508cd44d9798"
        },
        "item": {
          "id": "8ccca84a-a34b-42e1-a803-3dd43421d7bb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ee54f282-9387-4574-a315-82ce52527496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7375f5f-971a-4616-86f3-b6cb15ad07b3",
        "cursor": {
          "ref": "d209f35d-9fab-45d8-8e6c-2feb6fddc169",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5bd292df-a69b-423f-859a-83caa3932ed1"
        },
        "item": {
          "id": "d7375f5f-971a-4616-86f3-b6cb15ad07b3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0dbeaa99-b0cc-4cbb-b8fa-73cc5e994b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13a1024-9ad4-416f-97b2-3cbdde8fcdfd",
        "cursor": {
          "ref": "f0c4b9f7-1bba-49a7-a9f3-5f02dda17578",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "94a2ae98-4c65-4aec-837f-194c21e9c68e"
        },
        "item": {
          "id": "e13a1024-9ad4-416f-97b2-3cbdde8fcdfd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ab726fc7-5f25-44d4-988c-60e27e40744b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facbad33-a54a-4d8f-91b8-fb3838242f75",
        "cursor": {
          "ref": "bb4b7775-cb1d-4ff1-b146-7e66db223039",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d4962943-05dc-4031-85a2-ec0e9e9ec20c"
        },
        "item": {
          "id": "facbad33-a54a-4d8f-91b8-fb3838242f75",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3f3f3de5-d5f1-4b48-a074-49add9f935c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeec803b-bc54-4c8b-81b3-6bc34de2f94e",
        "cursor": {
          "ref": "c7cd42db-3fdc-4f9c-b70e-883a5268a812",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b19e0c19-7ee1-4c29-9787-d6dc422f2fe4"
        },
        "item": {
          "id": "aeec803b-bc54-4c8b-81b3-6bc34de2f94e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "caee1101-a753-4a81-98dd-faf66d78f88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a96c00-c674-4f19-9a1e-99e8afa72b7a",
        "cursor": {
          "ref": "7fbd4808-d679-4493-8d42-dd830f6b66fc",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3349450a-f773-4b32-b7f3-3c5ca962059d"
        },
        "item": {
          "id": "00a96c00-c674-4f19-9a1e-99e8afa72b7a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "06a96f3e-4d92-47a1-954c-248b2e9736be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4ab014-173d-4c52-81af-531c012b3c2a",
        "cursor": {
          "ref": "4db1d652-6ab7-4a37-8e92-3c7358caad0f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8cc57673-5240-4904-9d58-89ada6c00e1b"
        },
        "item": {
          "id": "3d4ab014-173d-4c52-81af-531c012b3c2a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "12dc41e5-012a-4fd6-9fac-e218ca48f958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cbfd93-23fc-4f7f-b116-875b69e6ec0a",
        "cursor": {
          "ref": "6b85cd7b-918d-4106-b5da-0e43ce57c365",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a8fdfaa0-c175-403a-a4af-78524a962c2b"
        },
        "item": {
          "id": "52cbfd93-23fc-4f7f-b116-875b69e6ec0a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "89268b5d-9aa4-473f-9b07-88251c5985b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51514e9-a671-4669-b5b8-6abbed65fa71",
        "cursor": {
          "ref": "3e3ce823-fe16-47ce-9a8e-9480fe51156f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "828a205b-132f-4013-8dcb-df423fdf5d6d"
        },
        "item": {
          "id": "a51514e9-a671-4669-b5b8-6abbed65fa71",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e04a5d5f-f5e0-421b-bddb-c85be08493d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfc88d8-21fd-484b-b9ad-7b85aa6e6ac7",
        "cursor": {
          "ref": "d40d6d08-a786-4e37-827f-9a1649555552",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6d744abd-8482-475f-8b1c-d5d73700e3fd"
        },
        "item": {
          "id": "6bfc88d8-21fd-484b-b9ad-7b85aa6e6ac7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "29aa4a14-ea2d-4bc1-bad6-ac0630c3db6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d04054-6e66-448e-8d0e-2e7602d65ceb",
        "cursor": {
          "ref": "59a1460b-24b7-4649-a2aa-f774788114fa",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "396018b8-d204-4022-b32a-da631103dc93"
        },
        "item": {
          "id": "94d04054-6e66-448e-8d0e-2e7602d65ceb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "60a101ba-39f5-40bd-99f9-052a0f8a0825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efb17ec-74fc-44fa-94cc-8ac9d29ed479",
        "cursor": {
          "ref": "ecc0e727-798a-47d2-b692-d408dbd2cfcb",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e3982715-3244-4bfd-957f-416e3db789d2"
        },
        "item": {
          "id": "0efb17ec-74fc-44fa-94cc-8ac9d29ed479",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6d3c3827-7d0c-413d-a887-8f6948be5085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8378ff4f-e005-47ba-b979-61fbb30d244f",
        "cursor": {
          "ref": "fd41d38a-ae84-420f-ad04-a76677b499b6",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7ef2f77c-27da-4c29-abab-599f8f7086f3"
        },
        "item": {
          "id": "8378ff4f-e005-47ba-b979-61fbb30d244f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "27e3dea9-b480-429b-bc7b-bc646092ccb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107b6346-d634-4fd2-b2ed-68c697ab5b49",
        "cursor": {
          "ref": "8d35d5a1-bca1-49f6-ad6f-f4b3cf6b4128",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8dec10ca-a0ae-4252-a436-501193f1f073"
        },
        "item": {
          "id": "107b6346-d634-4fd2-b2ed-68c697ab5b49",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7c3e9bc5-6d24-4743-968d-596d3d986d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c8555e-1af3-4470-81bd-1b22d1373c25",
        "cursor": {
          "ref": "e2c934e6-4b13-42f4-a6a1-9fbd6d862a5d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2ad001c2-322c-4ce9-85d4-58a1c623c8a3"
        },
        "item": {
          "id": "c1c8555e-1af3-4470-81bd-1b22d1373c25",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "19f3faef-b40b-432e-ade2-3b6c978d725e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dd4888-e6f8-4d9e-9e68-8bfa7f3bfcc7",
        "cursor": {
          "ref": "a3a83535-6d4d-428b-8ab8-8e2477b3cd65",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2025e2c3-e06b-452e-8d08-4b4c69129093"
        },
        "item": {
          "id": "06dd4888-e6f8-4d9e-9e68-8bfa7f3bfcc7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "564b1f3e-2a5c-43c4-bbb9-f1a61f34f5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485b6a6c-7e95-484a-817b-52e32ce6fdcb",
        "cursor": {
          "ref": "1b574f34-afd0-404c-beb7-248d561da2f3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3c2bb532-d8c7-4bbe-90ac-93651703bc5c"
        },
        "item": {
          "id": "485b6a6c-7e95-484a-817b-52e32ce6fdcb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "219b7dd8-ecb4-4126-9ad0-14484e213e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db366c-90f4-4eda-a6bd-06a47cf21a30",
        "cursor": {
          "ref": "745de15c-106c-4dcd-b56b-3534f363a408",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e26b743c-4707-4333-aea8-efb0811aeda6"
        },
        "item": {
          "id": "c1db366c-90f4-4eda-a6bd-06a47cf21a30",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ab4be419-98fc-49ae-8e3e-3dc9b99cae7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528a4d45-6c11-4de4-b5a6-2bdbfd54c2c7",
        "cursor": {
          "ref": "89453e51-4dc8-47d1-b785-05f05195084d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8c7a0585-e070-4290-ad8f-25d0cc5aed6c"
        },
        "item": {
          "id": "528a4d45-6c11-4de4-b5a6-2bdbfd54c2c7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "05a8cabe-0bcd-4cef-a4fa-13e604a9849d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bb6c01-034f-4fc6-ba66-2b0ab540d9d2",
        "cursor": {
          "ref": "9082c404-7768-4cd1-8a51-44637620dce0",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "76a32548-fa55-45ef-8644-48f2b33a9d31"
        },
        "item": {
          "id": "73bb6c01-034f-4fc6-ba66-2b0ab540d9d2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "56523335-4cbe-4070-bab8-92bf6091fbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feec81f2-bfb0-4a7f-aa54-aedf1302feee",
        "cursor": {
          "ref": "5d6ca494-b534-48f9-8b7b-0b3fdcb68f1d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "80a6358e-d285-4fc9-b837-a8cf5f087913"
        },
        "item": {
          "id": "feec81f2-bfb0-4a7f-aa54-aedf1302feee",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7d27e482-f7ef-4604-b92e-796c43e963c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012ad6e5-5da1-41af-8500-177877a6d6fe",
        "cursor": {
          "ref": "ee577802-4270-4474-b511-54e3fd4a7073",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9633ca87-bc2f-46ae-80f9-770a872618cd"
        },
        "item": {
          "id": "012ad6e5-5da1-41af-8500-177877a6d6fe",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ab60b58e-dac7-426b-86aa-0001c7f5d3cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a873672-3a6f-4a77-9c78-e6f007060edb",
        "cursor": {
          "ref": "5c8381cf-e001-40f1-bccc-45cc52440e8d",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ff23bf5f-467e-4dbf-a077-2ab05108b4a8"
        },
        "item": {
          "id": "1a873672-3a6f-4a77-9c78-e6f007060edb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "759d2326-eaf5-4a7d-b929-10bcc9fc03b3",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "99529209-50d9-4470-b212-09e4aeddb5a3",
        "cursor": {
          "ref": "2cb0864f-0a10-46f1-8354-5f6a32f01d06",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "84932463-a5fe-4c7c-98f1-8044ff171b55"
        },
        "item": {
          "id": "99529209-50d9-4470-b212-09e4aeddb5a3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f4ba22ae-1c38-4630-bf8b-73d3ad5bc813",
          "status": "Created",
          "code": 201,
          "responseTime": 254,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e61a8fd-5381-427e-9a4b-13519cf6e9d7",
        "cursor": {
          "ref": "07543723-9e1a-4d2a-8c33-d6468468ba91",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9d0b92b8-e00b-43df-b583-b953c7d5135d"
        },
        "item": {
          "id": "4e61a8fd-5381-427e-9a4b-13519cf6e9d7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d90a842e-e789-4d53-8d07-c3711b12e683",
          "status": "Created",
          "code": 201,
          "responseTime": 118,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c679fe-c120-4b9f-b776-600f5161ba47",
        "cursor": {
          "ref": "45f40c88-04f1-4b31-9532-9b6ebd6f6ee9",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3c774128-8332-4465-87d4-71a1cb333531"
        },
        "item": {
          "id": "18c679fe-c120-4b9f-b776-600f5161ba47",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9264a9bb-edac-445b-8b8d-5d5c6fb0d55c",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7052d8ab-4f0a-4d86-b360-f4eb570ea158",
        "cursor": {
          "ref": "664cdd7e-f035-47d8-89bb-2c0f115ff933",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "16b2cca4-4c8a-424f-8a0e-57554024309c"
        },
        "item": {
          "id": "7052d8ab-4f0a-4d86-b360-f4eb570ea158",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "51f64b51-8de0-4b37-8417-304922122808",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "785c08dc-acaa-4fe8-aeca-9fb0bdce5b0a",
        "cursor": {
          "ref": "5e4aa26e-6c14-4852-970f-d231407d7702",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "eda1f3c4-5076-487e-ad3b-91fbc3c53898"
        },
        "item": {
          "id": "785c08dc-acaa-4fe8-aeca-9fb0bdce5b0a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e326fe23-54b5-4ec9-99c4-83e625558379",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf8e997-b507-4643-b2ae-22bfe1e2a483",
        "cursor": {
          "ref": "4499c36e-0570-47e8-a31d-a14b373627b2",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "900c5f84-f3d4-4040-9fd6-139e278f406a"
        },
        "item": {
          "id": "6cf8e997-b507-4643-b2ae-22bfe1e2a483",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "20f78e97-f90f-4103-9c52-fcb308ed477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f842f319-d562-493a-8536-f31afe4d1fa4",
        "cursor": {
          "ref": "9489e697-065d-4bf0-8bd0-320870e32652",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba545dc7-4d14-451e-934e-27602857cedb"
        },
        "item": {
          "id": "f842f319-d562-493a-8536-f31afe4d1fa4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f6e8eb76-2151-4371-9f2d-c98c1bf9781c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f982098b-9a45-4644-8325-7e2d8b24ae27",
        "cursor": {
          "ref": "af21f099-68a6-4712-8429-fe9bf2307d2e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a9b53139-bd75-4cf8-8719-55fb02edb523"
        },
        "item": {
          "id": "f982098b-9a45-4644-8325-7e2d8b24ae27",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d84d8db6-f7ba-494a-8fd8-6b122c06c7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85c507f-a548-4f55-80f8-f6277e3fde45",
        "cursor": {
          "ref": "06f43af1-0ce4-4f5f-b755-7d92948e9717",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0348a4dd-69a7-486f-bdb9-92fb9f166418"
        },
        "item": {
          "id": "f85c507f-a548-4f55-80f8-f6277e3fde45",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e6aa29e4-fa90-4f10-ae97-5a262779529c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ee2129-2cb5-405d-ba9b-9ecea4e6fe31",
        "cursor": {
          "ref": "1a520a26-cdb8-4e08-941c-eb918ee22e8d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "396c147b-6122-426c-91ad-8878f634b81b"
        },
        "item": {
          "id": "05ee2129-2cb5-405d-ba9b-9ecea4e6fe31",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d267a362-8bf1-4883-91e7-61c7cdbf7cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf3e0fe-7056-422a-8fed-61facbffa2ef",
        "cursor": {
          "ref": "ed79e240-56f2-48f4-89bb-4003b56587e5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8352d616-ca1a-4a5d-b085-4b0504c3b92e"
        },
        "item": {
          "id": "fcf3e0fe-7056-422a-8fed-61facbffa2ef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6e1e5261-5c0a-4d20-af27-312bedb354e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e2e359-2ff3-416b-b491-860bd7720615",
        "cursor": {
          "ref": "6fdf220a-48ea-468d-94d6-cc144d4bab18",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "05933418-4661-4f8e-8ea2-68fa5eb10f2e"
        },
        "item": {
          "id": "56e2e359-2ff3-416b-b491-860bd7720615",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "93accda8-9397-4e25-91f7-7290bf8e07ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d023ce50-58ab-4c6e-a7f1-a735b6ba0a56",
        "cursor": {
          "ref": "40276290-b997-435d-a01f-b23fca14a117",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9f6eb28a-7223-4032-9e06-24b9002e9ca1"
        },
        "item": {
          "id": "d023ce50-58ab-4c6e-a7f1-a735b6ba0a56",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bcd243af-221d-439b-90a7-e2723fb0a90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db37d023-3dd2-4b84-ba0b-9d22ae125d85",
        "cursor": {
          "ref": "ae9f62fe-a47d-438f-8202-515cf594f896",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "48f84096-dd5a-4947-9ea3-cd424f486ce8"
        },
        "item": {
          "id": "db37d023-3dd2-4b84-ba0b-9d22ae125d85",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "91506b55-dfa1-486e-8826-f42870a5a641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed7df4e-5a7e-403f-b4aa-d4009286341c",
        "cursor": {
          "ref": "015b98e4-08b7-4496-ab98-c94518f25be4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ee2454f8-4b46-48f1-8b3d-d5259ec55c07"
        },
        "item": {
          "id": "fed7df4e-5a7e-403f-b4aa-d4009286341c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8f32b62a-f738-4408-9dd9-2b172def081d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed340e8-6ff0-4cc5-b37f-f1ef1998cc7c",
        "cursor": {
          "ref": "7418ad6d-23d5-407a-af13-15c73d0e89aa",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bd47a6a1-acff-4dfd-99b0-2340b651d79e"
        },
        "item": {
          "id": "9ed340e8-6ff0-4cc5-b37f-f1ef1998cc7c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fec891a6-5647-48a2-8c40-00a94a4a3e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88230fad-778f-44c3-8316-ec6b52f193b2",
        "cursor": {
          "ref": "87ec6fa9-cae2-40f9-b78e-763589a8014d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d35adaf7-a9eb-4a3f-af4f-93c146778a0c"
        },
        "item": {
          "id": "88230fad-778f-44c3-8316-ec6b52f193b2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd3cd01c-4a89-4f48-ab08-a8c7ed3c5eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca65cf4-251a-4792-a4fe-101ed296d077",
        "cursor": {
          "ref": "12739bd4-ae01-4ec8-80b0-4fdf807cba59",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1472b871-e326-4d28-b410-cc31446152a2"
        },
        "item": {
          "id": "5ca65cf4-251a-4792-a4fe-101ed296d077",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "043cb029-6b7c-4334-968c-55b498c0e363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ff8212-d5ff-46f6-9584-6e34756c9337",
        "cursor": {
          "ref": "1d81d969-d062-4588-882e-7f0145d80379",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "31e8d645-64ce-4865-a9e6-b9dcac4fe7ff"
        },
        "item": {
          "id": "b6ff8212-d5ff-46f6-9584-6e34756c9337",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a40aaaa-e42a-4933-9d8b-54c75288dab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ea8f39-edd3-4581-b096-fb29fe9322d0",
        "cursor": {
          "ref": "3e350760-7642-4aaa-aa83-66ab6c003c3c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0f4a64e5-cdb9-4c95-88dc-78157ba1f40e"
        },
        "item": {
          "id": "e5ea8f39-edd3-4581-b096-fb29fe9322d0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7b100f86-0caa-44a6-afff-67b48cdadb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e7594f-0475-4785-b44f-0713f5057e4a",
        "cursor": {
          "ref": "8948608c-c324-42fc-b68d-a6b74d3d0b6c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "82bac8a4-9f4d-4b2d-8332-c7286826cecf"
        },
        "item": {
          "id": "f2e7594f-0475-4785-b44f-0713f5057e4a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43f9b735-e373-4819-910b-28baa75480da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f63b52e-476d-41f4-8ade-5790800ebbe1",
        "cursor": {
          "ref": "286b53e7-8dbb-43e3-87c0-2df459be4c4e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "571eff04-4409-4d46-b84c-d102702b2cb6"
        },
        "item": {
          "id": "5f63b52e-476d-41f4-8ade-5790800ebbe1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e9d9fa26-5bbd-4fb4-91b1-37eac4991e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6690b485-c84b-46ea-ac47-821eaa9fa74e",
        "cursor": {
          "ref": "20885c29-3e1e-4f2d-b9c7-07c3a04fc472",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b37a8a1f-d40d-4255-b9dd-39480a1223d6"
        },
        "item": {
          "id": "6690b485-c84b-46ea-ac47-821eaa9fa74e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3025cfde-fd54-412f-a312-4db8974563c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdc9383-1364-44bf-bc15-9b4865aa6f34",
        "cursor": {
          "ref": "b05dbcd9-8d09-4b98-b271-973ad4868609",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "47a344b8-8c9c-42ff-a1c1-8f16bf01e3f7"
        },
        "item": {
          "id": "fcdc9383-1364-44bf-bc15-9b4865aa6f34",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ef8e346e-0223-44c2-881c-e2027c7ec34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897182ed-71f1-4f5d-adff-2f7bcbe2818a",
        "cursor": {
          "ref": "365bad1e-5afe-49eb-963d-217f57e00b49",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a2f48584-bf95-48af-b0d7-2d5f445e7c5d"
        },
        "item": {
          "id": "897182ed-71f1-4f5d-adff-2f7bcbe2818a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4826938c-c428-4a5d-8ba2-1854963d85e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4f5445-6fb4-4f0c-af59-fe5ca9289ef2",
        "cursor": {
          "ref": "24956cc8-bbb1-415b-aecc-ff7c31fb7abc",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "835ebbf4-e35a-4ccd-aced-bebfb4bfbfef"
        },
        "item": {
          "id": "4b4f5445-6fb4-4f0c-af59-fe5ca9289ef2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "72cb7280-a6e9-4e1f-8ea8-70a83117de80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681459e7-1763-441f-821c-7af83a13a341",
        "cursor": {
          "ref": "b15f718c-da0c-4f18-9319-f9beab120eff",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "94ee861e-28b6-40ad-8a8a-7592f0658e07"
        },
        "item": {
          "id": "681459e7-1763-441f-821c-7af83a13a341",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a590bb9b-c023-48d6-ad1a-1a5bb830f57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e235d2-cc82-4689-907b-2a80a2f8d339",
        "cursor": {
          "ref": "25f5abf6-4580-41d6-aa80-6a3a8764eefa",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3b286e2c-5656-4ccd-8134-ba9f6ce2ac2a"
        },
        "item": {
          "id": "a7e235d2-cc82-4689-907b-2a80a2f8d339",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "616d5b56-2942-43a1-8c6a-145c33918ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1a80ff-495b-46ab-816a-f31fe00fddc3",
        "cursor": {
          "ref": "8630149b-0888-47f3-b8b0-f6ab8d6ca193",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5cd719c3-e7f3-4eb4-9e03-da6f87bc0a66"
        },
        "item": {
          "id": "3a1a80ff-495b-46ab-816a-f31fe00fddc3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4bb32678-6dd8-4826-9480-4a9a1ed93c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d078f0-960e-4413-babe-33866e94cd12",
        "cursor": {
          "ref": "411d2cf5-9df9-470b-b6f1-1f70ff6fa207",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "71189367-eb9b-48f0-9ea2-630f8b6086b7"
        },
        "item": {
          "id": "b0d078f0-960e-4413-babe-33866e94cd12",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5e7dce49-fe55-420a-bb8c-69052a2cfbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483ab61e-5746-4a90-9657-e1b0f3dcb813",
        "cursor": {
          "ref": "45923ba0-6483-4385-86be-cc5783fc70e9",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "caf2fd57-aba4-4967-b861-efb17bc4b1cd"
        },
        "item": {
          "id": "483ab61e-5746-4a90-9657-e1b0f3dcb813",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5d6887dc-7168-40c8-a2dc-91535f89e57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571d0f56-62ac-4240-b07c-e757717b5e4e",
        "cursor": {
          "ref": "902d75d3-d4b6-46ae-b201-eeb6bca3be9c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fbf6a086-6fab-4b7c-a74f-1c8e8c320922"
        },
        "item": {
          "id": "571d0f56-62ac-4240-b07c-e757717b5e4e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e9f77cfc-5b67-4897-8879-57796234a7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a4c977-ea49-43cb-ab3b-fa63988c330a",
        "cursor": {
          "ref": "50d05c3c-c5dc-4f95-bbe6-d498bad1f4ab",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "52ac113d-18d3-4111-8bd0-4feaccfb03bf"
        },
        "item": {
          "id": "24a4c977-ea49-43cb-ab3b-fa63988c330a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "03a11bb0-ef25-4ecd-aeda-4bf9cbcb1cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f17e8a-dcd5-4b8c-9696-3668a2eea3c3",
        "cursor": {
          "ref": "1cfb4006-268b-49ad-b01e-3fe902ed57c8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "89e43cc8-b33b-44aa-b315-6b81cc521f60"
        },
        "item": {
          "id": "20f17e8a-dcd5-4b8c-9696-3668a2eea3c3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "438f9482-c3fc-4cf1-a15f-baa428524cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858e8970-9c21-4c35-a4bb-59fd8c8160a6",
        "cursor": {
          "ref": "cac98678-6ff6-46b0-bb75-74f016988f6d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5a23b64a-36ed-41df-8b06-ea2aaad82801"
        },
        "item": {
          "id": "858e8970-9c21-4c35-a4bb-59fd8c8160a6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a97f69b7-c594-4dfc-9d86-e50db5bd99d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1851a918-1b3c-4096-8ab4-f9aa2e8df270",
        "cursor": {
          "ref": "ddb19aa3-81f1-4ce2-bb9a-6d94e1d0991c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c4f4b16e-354a-4cf7-a110-ead287e05556"
        },
        "item": {
          "id": "1851a918-1b3c-4096-8ab4-f9aa2e8df270",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7be7f068-bfc1-4484-9c36-88954a13452f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2c480a-225d-467f-99de-fe8ec0cad004",
        "cursor": {
          "ref": "94d38dc7-86eb-4ef6-9a5c-6b18de4d16c1",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "35f50ac8-03c0-4076-90a9-459f30e2040a"
        },
        "item": {
          "id": "af2c480a-225d-467f-99de-fe8ec0cad004",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cab1a365-0e96-42df-8026-06088871f28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45054cd-69a4-46d6-adea-1ad163f3324e",
        "cursor": {
          "ref": "0e0afb97-1dfa-4475-a2e4-c86af3cfaee1",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ed75eab3-d1cb-4f72-b173-415ec0a43f98"
        },
        "item": {
          "id": "d45054cd-69a4-46d6-adea-1ad163f3324e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df043d4e-a592-404c-85b8-984830123440",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1259232-e6ef-48c3-b64d-7a4f5bb6449e",
        "cursor": {
          "ref": "1f0fd778-e256-46ea-a5c0-718898bd329b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "046d8616-634a-46cb-8bc7-6cc5f02cc15a"
        },
        "item": {
          "id": "a1259232-e6ef-48c3-b64d-7a4f5bb6449e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4e2abc5b-28a6-45c6-ba12-ebc6586e5e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53da634b-19c0-4bba-80f4-32c5e0cab813",
        "cursor": {
          "ref": "4b3a95ac-c892-4366-8e06-3ee6b913d176",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e6808d45-a926-4ca7-bc5a-42498cabf1c1"
        },
        "item": {
          "id": "53da634b-19c0-4bba-80f4-32c5e0cab813",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "55d6ac92-6fae-48f5-a0bd-039d000a6153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46033382-b709-457e-9793-f9fbdfc6192e",
        "cursor": {
          "ref": "d8173c09-1750-4acc-8270-97f47b5d4b00",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "05254da3-56fc-4d3b-9605-29dd867dd3b0"
        },
        "item": {
          "id": "46033382-b709-457e-9793-f9fbdfc6192e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "21ffba58-8550-43c9-9692-a935b2e8a021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608838be-d6a7-4418-9eed-ba1a1c638795",
        "cursor": {
          "ref": "1cca0501-7aea-43d3-a4ca-9a34189aceb4",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ffdb5524-23ed-4890-84f2-3dcf9dce98df"
        },
        "item": {
          "id": "608838be-d6a7-4418-9eed-ba1a1c638795",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "42cb326a-525a-471a-8a05-f7c8cc328946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c8395d-5638-4b06-b481-d3c16916fc53",
        "cursor": {
          "ref": "6b4e5eb3-3196-4968-9095-d2a2ace6897d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "06a57083-91af-481d-98b4-1fdf42a03aed"
        },
        "item": {
          "id": "e6c8395d-5638-4b06-b481-d3c16916fc53",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e5ebfd45-f911-4df9-a3c3-014c57666e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d52a04-a915-4e10-bd8b-a8e43454275f",
        "cursor": {
          "ref": "bfc39343-265f-402a-8456-447061e9f7b5",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3ff9ab01-e2b9-4c42-bec1-3252e42299bf"
        },
        "item": {
          "id": "c9d52a04-a915-4e10-bd8b-a8e43454275f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bf8110de-9f03-43ce-ae5a-5b90210d063a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5b30d9-b168-4f15-bfd8-269e57255484",
        "cursor": {
          "ref": "38d999e5-16e0-46dd-a2d2-567fccb03d99",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e808f515-24fe-46a0-953d-67d2b287718e"
        },
        "item": {
          "id": "fc5b30d9-b168-4f15-bfd8-269e57255484",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "42ad8e7f-cfe8-438b-8a48-9d2237088132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4603622a-c487-4d08-a29d-dcda19fa9c17",
        "cursor": {
          "ref": "0585ab7a-4b8f-44c6-b313-bc4e27aab24b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3ce59e06-9555-4b2d-95db-ee83a635ca9a"
        },
        "item": {
          "id": "4603622a-c487-4d08-a29d-dcda19fa9c17",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5307a445-9f5c-43e1-bf86-646c566188a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c6ecce-ad5b-4d2e-b685-2e01f254eb64",
        "cursor": {
          "ref": "22e3c7b7-bb7a-4c23-8b24-2c510932692a",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c0b1b69d-51c1-402a-b090-a1c092e0111c"
        },
        "item": {
          "id": "b2c6ecce-ad5b-4d2e-b685-2e01f254eb64",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bdf8c375-c807-445f-930d-a21e7782e2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00b623a-6761-4b0b-97b9-2f17e206b274",
        "cursor": {
          "ref": "0243104d-4552-4698-be5f-7e1fa19f6989",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "00b9a910-b4cf-4383-9289-f206d5a966e7"
        },
        "item": {
          "id": "a00b623a-6761-4b0b-97b9-2f17e206b274",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "833bc083-339b-4d32-a75c-da66e8217008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fd0a57-50ef-482e-b0b9-a20faeae8e06",
        "cursor": {
          "ref": "ad69f5b8-afc3-4d36-9fcd-9408bd5e850c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "55d4213b-e8ac-4184-8219-638a53c08ce9"
        },
        "item": {
          "id": "34fd0a57-50ef-482e-b0b9-a20faeae8e06",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5a2b2159-3c70-41d7-a978-22f8a3a284db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c9c332-d617-4e9e-92b8-6a292ed26357",
        "cursor": {
          "ref": "9cb33f6d-1fc7-46ec-b071-f6a7a9ae1c30",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "79c81887-d21a-4b88-89dd-f03ec83490fe"
        },
        "item": {
          "id": "01c9c332-d617-4e9e-92b8-6a292ed26357",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9fff8ed8-92a7-4104-9af5-a551c74e78bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe33ba9-ae7b-461d-8980-2733f99b37ec",
        "cursor": {
          "ref": "43733911-1fc9-4701-8477-c8f987d3034b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b7308efc-28fc-4e07-a5b2-beebb1251942"
        },
        "item": {
          "id": "efe33ba9-ae7b-461d-8980-2733f99b37ec",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "62645b7e-8103-4684-a9ee-898195bf8cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192e9037-8eb5-444a-bdb6-345ce47932ce",
        "cursor": {
          "ref": "76134556-d93d-46c9-8c01-7c72d424cb88",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f3e26e33-3767-43eb-9a59-0d77eb2fbeb3"
        },
        "item": {
          "id": "192e9037-8eb5-444a-bdb6-345ce47932ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7cdc27ec-188d-4033-ae7f-03cdfb107e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293cdf28-2dff-456c-a41f-75f95a3c5f70",
        "cursor": {
          "ref": "e622a8df-c12b-4337-90d6-6b63ff566c0d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "850ae06c-a1e8-4b8d-832e-060410eb4df0"
        },
        "item": {
          "id": "293cdf28-2dff-456c-a41f-75f95a3c5f70",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ff4c11df-3c48-45d6-92e7-88e514e93b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ca31eb-a98c-4a14-ac8d-5d052fb9bfe9",
        "cursor": {
          "ref": "2b6d26a3-d6f7-4562-916a-bdc4c1f62e78",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b87e3f49-c29f-415b-a85b-48eb106d2bc5"
        },
        "item": {
          "id": "26ca31eb-a98c-4a14-ac8d-5d052fb9bfe9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "40b3ae24-e107-4b37-8b40-9bf261ae47e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a5845e-5759-47af-91ad-5877aaacde90",
        "cursor": {
          "ref": "35b544e0-8f11-428d-8749-91a20a916d1c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "62feefde-c72e-4c72-8d3e-40bdd219410f"
        },
        "item": {
          "id": "45a5845e-5759-47af-91ad-5877aaacde90",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2ae14dd2-aa65-49e9-a000-e7e546e5616c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ffc2b1-e3a9-4806-8227-e4a8d01e5465",
        "cursor": {
          "ref": "c35dda17-3d27-4665-8f78-2bbfdff099e1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "82c4d002-f5ba-4e02-8f7b-befd7d26fb79"
        },
        "item": {
          "id": "b3ffc2b1-e3a9-4806-8227-e4a8d01e5465",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3483aed8-62bc-4821-b1b6-5dd9283e1d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18523e0f-57f4-4923-8aa6-ed4faf990586",
        "cursor": {
          "ref": "acfec489-2711-49b1-b216-4812265fa6ce",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ad31df2c-9570-4200-926d-37d498361c2a"
        },
        "item": {
          "id": "18523e0f-57f4-4923-8aa6-ed4faf990586",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9dd74bd9-9b49-4e4d-abdc-1c1f70d8dc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8beb315-5c0f-4cb0-b720-798a94cf2a62",
        "cursor": {
          "ref": "6de23a2d-73cb-47ce-b901-193f4febd3c2",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0c5cd074-b7e7-4bf7-bc3e-5961311a5d7b"
        },
        "item": {
          "id": "e8beb315-5c0f-4cb0-b720-798a94cf2a62",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ec3d4c63-9123-4922-8079-92c1580e405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a09040-48d6-421a-815b-153db4d4540f",
        "cursor": {
          "ref": "f3e0cd91-0479-43eb-86fa-ad806dcecdf1",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "22991e65-7b60-4529-91e7-cb36d6046c4c"
        },
        "item": {
          "id": "d5a09040-48d6-421a-815b-153db4d4540f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "10e16cad-1d59-4223-9a9e-ea0f0f3b858d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e47e855-b325-4d0d-bca8-cc2e4ac73e21",
        "cursor": {
          "ref": "1aeab484-b7e7-4805-a9d2-0ee423f44903",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "be792949-9ae3-4d3d-919d-bf7bd52239d3"
        },
        "item": {
          "id": "5e47e855-b325-4d0d-bca8-cc2e4ac73e21",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2c55b24b-e731-4f4d-b47d-fd4e2a0cecf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096b06a4-9419-4023-a5ed-7688ed2ff809",
        "cursor": {
          "ref": "6698ce23-e624-4f60-9ee2-74b8894c527b",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a3d043d0-88aa-4333-b525-0f7a2e4daf91"
        },
        "item": {
          "id": "096b06a4-9419-4023-a5ed-7688ed2ff809",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "acc8a92d-256f-4fef-9511-412d42a84228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72bb0c1-b714-45f3-a51f-2e7efc4cb0e3",
        "cursor": {
          "ref": "b4e4ba1d-d9a2-49ec-8270-5b4bd60f58f8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c61a8a12-789c-4cbe-ae67-5265cfce203e"
        },
        "item": {
          "id": "f72bb0c1-b714-45f3-a51f-2e7efc4cb0e3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "072cfe2f-a8fe-4586-8960-b773a48e9819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5739f303-5250-4438-86cf-849a637a77c5",
        "cursor": {
          "ref": "0399bbc4-76b8-4f27-841f-aabd1366f625",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1fc4507a-0d6e-43f4-891f-3e6f788d84c6"
        },
        "item": {
          "id": "5739f303-5250-4438-86cf-849a637a77c5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c6db0db2-7eba-4022-9edf-96e0e55e47a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e642762e-d0ef-43ca-b070-a6e11cfb07b6",
        "cursor": {
          "ref": "8c5a13b7-c8df-4dc2-9b7a-e4d3cb43069b",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2c4fa97d-a78c-44b4-b0ff-b52a7769df96"
        },
        "item": {
          "id": "e642762e-d0ef-43ca-b070-a6e11cfb07b6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c31bf963-03ab-4bcb-a58f-b317bde4b0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe17ac3-20dc-456e-b5a8-93a8f72f29cc",
        "cursor": {
          "ref": "5b926e68-dafd-456c-ba40-1ba44b6200e5",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ad0ba51e-34b3-45d8-8037-45d4704225c9"
        },
        "item": {
          "id": "bfe17ac3-20dc-456e-b5a8-93a8f72f29cc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "436856af-d05f-4798-895e-4307833ea886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ab50ef-335d-452d-bd8b-1523532bb666",
        "cursor": {
          "ref": "66dde698-6603-45e0-9d7a-d022ba0774f8",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6ea5ab77-c1e7-4702-a38e-ddf3941b12a2"
        },
        "item": {
          "id": "17ab50ef-335d-452d-bd8b-1523532bb666",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3336ee2a-78e3-4689-84b4-52148532b2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2c9b64-b09b-4453-b380-dfc24b8f15e3",
        "cursor": {
          "ref": "9c0361da-86d7-4015-8849-19ee78775e09",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0d838877-89ab-45da-a545-0d15d8447b37"
        },
        "item": {
          "id": "4c2c9b64-b09b-4453-b380-dfc24b8f15e3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5933bae4-7d7a-4a9f-b7eb-7e410f909a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f450e-8e60-41e3-abf3-12061d1313ad",
        "cursor": {
          "ref": "78f2333c-6fc5-4093-90b8-ae2dae5a0866",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aeb43192-43c9-4878-9a7b-d43dce818760"
        },
        "item": {
          "id": "319f450e-8e60-41e3-abf3-12061d1313ad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3cdb14ff-b3e7-427d-857c-5691b206e5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09ba714-625c-4e71-b511-bde184ba1dc3",
        "cursor": {
          "ref": "8038a835-9567-4e2c-a7b0-6b661afc58c3",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3d58d679-47b6-4aa9-8e5a-d23e3574a191"
        },
        "item": {
          "id": "a09ba714-625c-4e71-b511-bde184ba1dc3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "da0eb8dc-f23f-478e-b6b5-43b627e147b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d58b00-9e2a-4d4d-8dec-67db8c5808c3",
        "cursor": {
          "ref": "3ecf1e41-3899-465d-a6ba-8e8be6563a99",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b8a420ec-ea25-4297-ac3f-970635d807b7"
        },
        "item": {
          "id": "23d58b00-9e2a-4d4d-8dec-67db8c5808c3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "41d2d553-be1f-40bf-867b-1d677c61b009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c660ea-ad84-4096-916b-401bf5613426",
        "cursor": {
          "ref": "c469a72e-6974-4dd7-b534-5c29182d205a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c8bedd26-9203-4285-9fbf-2f7e0306220d"
        },
        "item": {
          "id": "85c660ea-ad84-4096-916b-401bf5613426",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "43132f6d-6aef-43f4-8d63-f00f38617943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9769dcb-148d-42de-857a-147a47062561",
        "cursor": {
          "ref": "9e93fb9f-1d46-434a-84e1-f84d36b06dc3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1ddc1d56-a782-4d55-a09f-f38aaf5087a0"
        },
        "item": {
          "id": "e9769dcb-148d-42de-857a-147a47062561",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4ef53340-6c03-453b-91bc-76d24fb596bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f641823c-55fb-4e8c-bb33-fd46e7b58253",
        "cursor": {
          "ref": "5570955a-eefc-4349-b2be-28d492cdda1d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ffdf2184-74b0-41f2-974a-228569e32d17"
        },
        "item": {
          "id": "f641823c-55fb-4e8c-bb33-fd46e7b58253",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1c53bd97-5587-43f2-84d6-83a8cec58ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aa9b5d-b759-422f-b8b4-b6ccae708273",
        "cursor": {
          "ref": "52d85137-e173-4d2a-9902-9972be6181c8",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "43c824de-827c-4354-9d07-7b18c01beff3"
        },
        "item": {
          "id": "32aa9b5d-b759-422f-b8b4-b6ccae708273",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5fd2095b-e958-4453-a9a3-fc62322beb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00694aa-c49f-46aa-b0c2-4611b5656fb6",
        "cursor": {
          "ref": "7f098dde-81e0-454c-8820-a53947aa672d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d59bb7c4-1414-4936-b791-5ef991937510"
        },
        "item": {
          "id": "f00694aa-c49f-46aa-b0c2-4611b5656fb6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8be2322e-e4f4-40d3-abef-a8d967c1f35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7fd168-bdd6-473d-bd70-02e86c9f47cb",
        "cursor": {
          "ref": "6915f855-9985-4522-86a2-b289bacb4c95",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "03a28905-5949-4cee-8433-fff460c9be68"
        },
        "item": {
          "id": "2f7fd168-bdd6-473d-bd70-02e86c9f47cb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "34a7a47e-2e3e-4138-bdb8-e2119fde21da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38558051-3dde-4b49-b370-5581f82d75ec",
        "cursor": {
          "ref": "156b138f-e54e-4eb5-a533-fbe5380e73bb",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "079c6b42-a53d-4e05-93bb-b9f57fb488eb"
        },
        "item": {
          "id": "38558051-3dde-4b49-b370-5581f82d75ec",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1e2c8524-19a7-4630-8f36-9ac5c9b620ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e66146-7d26-4fb9-be11-8de25b0d6077",
        "cursor": {
          "ref": "dce0ef9f-47b8-46ca-aafb-7926ce1f4523",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "181500c9-7cd6-40cf-a6e0-8d56dc1d7c22"
        },
        "item": {
          "id": "f4e66146-7d26-4fb9-be11-8de25b0d6077",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2368797f-e070-4556-92dc-3aaad4160c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973ff7d1-8a0c-4781-b356-d7d2f58cb067",
        "cursor": {
          "ref": "193ea247-2dc4-4f0e-918b-cccef34fd3b2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fdcbeaa6-5379-4d3d-868f-1d56bd032d93"
        },
        "item": {
          "id": "973ff7d1-8a0c-4781-b356-d7d2f58cb067",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "55f99f6a-1abd-4da8-928d-bcaa3dfb367d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebdbbf3-dd08-4bd8-8ad6-5a3ed4c32414",
        "cursor": {
          "ref": "c1f4775b-84ca-4c63-a2b0-87e354a47dc1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0e42e42e-650d-4615-800a-041b77794f85"
        },
        "item": {
          "id": "9ebdbbf3-dd08-4bd8-8ad6-5a3ed4c32414",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8ed5163d-0e3e-4862-b943-760dd58d6e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec6eef7-821a-499a-a105-26a7b77f0f01",
        "cursor": {
          "ref": "a9767243-4d3a-42e2-8610-ccda32e2eb57",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fbed9568-2600-4fde-b6a9-651f562ea48f"
        },
        "item": {
          "id": "6ec6eef7-821a-499a-a105-26a7b77f0f01",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d4e5dc1d-fa73-446f-92fe-1194f850376e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b02ea2-d4ec-4867-9fca-9937dad44354",
        "cursor": {
          "ref": "11b76575-205f-4980-9e61-d6ee5672be32",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c540a42d-d63a-46a5-abad-5f0b31e853f1"
        },
        "item": {
          "id": "f8b02ea2-d4ec-4867-9fca-9937dad44354",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "51ddbba2-681c-46ad-a1ab-607376cfd324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dfbee9-8274-4e20-b007-c91a05bb8857",
        "cursor": {
          "ref": "177e256a-5aca-40e1-878c-1c28d5458461",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c3dd16bb-1f07-43e1-a9d1-912105004951"
        },
        "item": {
          "id": "56dfbee9-8274-4e20-b007-c91a05bb8857",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "019d2a8e-93b0-41df-ae8c-858b67ac2c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae00dc0f-6e39-4cf2-992c-2f5ab344241f",
        "cursor": {
          "ref": "f15434ba-5f77-4a0b-8697-1a95fe69c071",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "23897fb7-3cd7-47c8-9d47-df57d12f76aa"
        },
        "item": {
          "id": "ae00dc0f-6e39-4cf2-992c-2f5ab344241f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f349925a-10c9-4787-b1ba-33d7a9231c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce84108d-79cd-434f-ba84-5f835c435d2b",
        "cursor": {
          "ref": "445a7c2f-3b3a-44a1-98be-d1e84d591ae8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "950589be-681f-4f01-a06a-123a9ddb68c3"
        },
        "item": {
          "id": "ce84108d-79cd-434f-ba84-5f835c435d2b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ba88432d-1f4b-4724-b32d-8246ea04d183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d2bbba-e4e4-4882-8c19-f77885bb5002",
        "cursor": {
          "ref": "542ab01d-bcb3-4289-b26f-177fa108d358",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1f7d418c-9174-41f7-88c3-aedbda746a8c"
        },
        "item": {
          "id": "d6d2bbba-e4e4-4882-8c19-f77885bb5002",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c4505903-40bd-415c-bf6b-5298e8f3fc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639264ad-fd12-4322-8fd2-661705c887fd",
        "cursor": {
          "ref": "72d3e597-fde6-4e28-8bc1-eaac2929ffcb",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c707307e-6ff2-4dd6-a43b-9aa6698bbadd"
        },
        "item": {
          "id": "639264ad-fd12-4322-8fd2-661705c887fd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "88fa3c28-c77f-44f8-9b77-e1a2b02b7c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e148933-b9f0-41aa-acfc-9dfa792c45d9",
        "cursor": {
          "ref": "d72d8f21-7138-492f-8c27-cd2bbe3cd6f1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dde11916-5515-40fa-8409-9ae89f127b24"
        },
        "item": {
          "id": "4e148933-b9f0-41aa-acfc-9dfa792c45d9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "675e00f3-ece3-418f-b680-d2b3574fc67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008d406b-3e46-438f-bb7a-4060d5ebb25f",
        "cursor": {
          "ref": "5ee7a50d-84e1-4cd7-9a5f-bccfb893ad25",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a6dec41f-4f0b-408c-a198-a4e258e3fc9c"
        },
        "item": {
          "id": "008d406b-3e46-438f-bb7a-4060d5ebb25f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b8aa3d44-85a6-463b-b719-b10b4556ab87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e84c6f3-b92e-4372-8910-bd9979bf9144",
        "cursor": {
          "ref": "aa5865a4-67d0-4bb4-94af-75bcb25fb8d1",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "20e7cd9a-dd6d-4b0e-9a7f-5c2049433588"
        },
        "item": {
          "id": "0e84c6f3-b92e-4372-8910-bd9979bf9144",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bffc5676-4f92-4d12-a8cf-87d14042315e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9080975-4ebc-4f16-957b-314249fd8d92",
        "cursor": {
          "ref": "3997abaa-682d-4b0c-ab93-a6939a245c4c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e08e3539-efe4-4936-939e-cf342a3f281e"
        },
        "item": {
          "id": "b9080975-4ebc-4f16-957b-314249fd8d92",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6a3628d1-7756-481a-a144-026968607bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3addd-1a3b-47df-84f1-d1b7c94036fd",
        "cursor": {
          "ref": "7c4b08cf-04af-48b4-b6c5-a8795207c414",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e15401a7-cbe9-4935-9ffb-6e56f0fd3b53"
        },
        "item": {
          "id": "b4b3addd-1a3b-47df-84f1-d1b7c94036fd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "120801b1-fbaf-43bc-8bc9-b5c7d07d81ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490ac88f-161d-4082-a15a-361673cbcee6",
        "cursor": {
          "ref": "36c0b101-e06e-4b96-8797-a8faf2b1d545",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ece556f4-0a3b-472b-ad5a-4d232bcf764b"
        },
        "item": {
          "id": "490ac88f-161d-4082-a15a-361673cbcee6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cc85b11a-ee46-459e-8eb9-cae068e23322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b897937a-0b40-4128-86bc-5079e3944daf",
        "cursor": {
          "ref": "285069a6-6568-42dc-9f46-d70c5d9bfb7e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "015c5123-30aa-4fca-900e-d4bca8eb17ae"
        },
        "item": {
          "id": "b897937a-0b40-4128-86bc-5079e3944daf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cc300bc3-8250-4454-8729-ebb8e306795c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ce0c11-e897-45f5-b1c7-70bd2cf1b00a",
        "cursor": {
          "ref": "65b3021a-bbc1-4581-b0b8-f82e472201a8",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f864de42-f937-464f-a20c-6eee5b2cfcd8"
        },
        "item": {
          "id": "81ce0c11-e897-45f5-b1c7-70bd2cf1b00a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2d504cc8-c920-425d-8fa0-7915469a59bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7bebcb-8f3d-40e8-8c70-07c240c63062",
        "cursor": {
          "ref": "25fbe4eb-82f8-400b-b40f-2c1d34955958",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "041a8d3d-8787-463c-80c0-cbdf6cbf77f7"
        },
        "item": {
          "id": "4f7bebcb-8f3d-40e8-8c70-07c240c63062",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e85fba30-0317-43c8-b2a7-bf727077a075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa53cb6-a1a0-4cff-898a-00ec46c24fef",
        "cursor": {
          "ref": "26f49dc1-ea54-43b9-ba23-0fe3c91662d1",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1c3bd783-28b6-44ff-9e51-753f9cc48180"
        },
        "item": {
          "id": "4aa53cb6-a1a0-4cff-898a-00ec46c24fef",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "63ea7f17-e1db-4652-989f-c5b4f26937e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e92f2f4-2f87-4d6b-bf8b-89f2d0ebb037",
        "cursor": {
          "ref": "49b7aaee-32e9-4ae0-aef8-1272b54ad8b0",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0d82a446-9b1c-4b87-892f-b9cf3d923af0"
        },
        "item": {
          "id": "4e92f2f4-2f87-4d6b-bf8b-89f2d0ebb037",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ab0eb61a-dc55-4f3b-8802-06b2659a04d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4054d0d-f6c2-4a5b-8c15-f21fca050df8",
        "cursor": {
          "ref": "0f199254-8631-41fb-a2eb-665f1e50d1fd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "83026377-fa4f-410c-b8ac-e3ebe8d5aab8"
        },
        "item": {
          "id": "e4054d0d-f6c2-4a5b-8c15-f21fca050df8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6c8e27db-4806-408e-a0f3-a249180df967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f3dd4b-d997-4dcf-b087-d53f35d9661a",
        "cursor": {
          "ref": "ac00f55e-d956-4f8a-9569-a04cb978aa48",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9a62cffb-514d-4fe0-99cd-9c824e7c62eb"
        },
        "item": {
          "id": "f0f3dd4b-d997-4dcf-b087-d53f35d9661a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "44167599-4efb-4f9a-ae60-8d8b837fbfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015bbc8d-b38b-4742-8fb6-d28c97771e6e",
        "cursor": {
          "ref": "9cf974dd-741f-4f81-a0c3-e5ff18c21e58",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ae1973a4-28ee-46e4-8d2b-9b8d3f8bdd93"
        },
        "item": {
          "id": "015bbc8d-b38b-4742-8fb6-d28c97771e6e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e00cb4e4-298c-4a5d-ad13-dd60a152d86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6512dbd1-b9ac-4d17-9625-359be35fdb71",
        "cursor": {
          "ref": "a8f497d7-76c2-47f4-bd59-d28a0c477019",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a6ee0a17-a3f9-4d60-8263-54ae29371169"
        },
        "item": {
          "id": "6512dbd1-b9ac-4d17-9625-359be35fdb71",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6cabdab5-1818-4207-b0f9-025b5f5950f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a7af99-059e-4ddc-9be3-88f753abee8e",
        "cursor": {
          "ref": "4c5bb207-1f97-4375-aadc-40239beb684d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "df3edfca-0fe3-4e55-b0eb-e9972417aeb4"
        },
        "item": {
          "id": "d5a7af99-059e-4ddc-9be3-88f753abee8e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dd510456-a8ca-4869-9bbe-50886aea87f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f698dfa-4f9e-4781-9b6a-0a2445bb834c",
        "cursor": {
          "ref": "49c620cf-f800-4252-8428-a4dfc1548aa2",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "eb5851da-182f-4062-9510-02834c2ea1bd"
        },
        "item": {
          "id": "6f698dfa-4f9e-4781-9b6a-0a2445bb834c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cc34d0db-332d-4cb4-b1ce-c27c453411b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dd209f-acb5-4edc-8288-f5cb4dda7bdc",
        "cursor": {
          "ref": "c081cf25-9c5a-4927-a56c-bb8731c850d8",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fbc81b6c-6a93-4563-ace0-1573afdb0b8f"
        },
        "item": {
          "id": "65dd209f-acb5-4edc-8288-f5cb4dda7bdc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0a2876df-d348-40fc-9d6f-7fd867dfb924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7ea2c2-b132-48ec-bd02-fa7c6f84385e",
        "cursor": {
          "ref": "186e3df4-5c76-490e-8553-78ef104bc7be",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0c6c9d80-3a6a-4d2e-a400-55444ad2a76f"
        },
        "item": {
          "id": "af7ea2c2-b132-48ec-bd02-fa7c6f84385e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "618c4b6b-ec20-4883-9f40-b7023adb44b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474090e0-b4dd-46e2-9963-b01d0211eca0",
        "cursor": {
          "ref": "bc5889e6-20f1-42e0-a00c-09396b481b3a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e743dd10-bb0e-406e-bb60-f3f3dd0b9ea4"
        },
        "item": {
          "id": "474090e0-b4dd-46e2-9963-b01d0211eca0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "548867b7-532a-4c39-b591-9e07a218be30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbb767f-0750-40cf-9892-ecd06030024a",
        "cursor": {
          "ref": "ca1f0666-d956-457e-a21e-9b402aec0168",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "57c145c0-4ecb-470d-a627-48a73db2e97d"
        },
        "item": {
          "id": "ffbb767f-0750-40cf-9892-ecd06030024a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8cbc20f8-88f5-42f7-89bf-68f6bf11e656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a271a61a-70d9-42a2-baa9-a9405afe814e",
        "cursor": {
          "ref": "9e630099-1ab0-4371-b429-51ff3ab1d14e",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "38ba3d65-3cae-40c0-a2c9-efed80dbc884"
        },
        "item": {
          "id": "a271a61a-70d9-42a2-baa9-a9405afe814e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1f4262f3-8be1-498a-a1a1-aa8d7e9c59e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2868d72c-1464-4e3b-95b3-c188ab0c7a1b",
        "cursor": {
          "ref": "939267a8-bcd0-448c-b77b-0a900ea599e1",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e86cf440-df3d-46ee-8ac4-57861a9f0b35"
        },
        "item": {
          "id": "2868d72c-1464-4e3b-95b3-c188ab0c7a1b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d2eb2e8e-1697-4502-a1ec-db704c3c1cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27887eb7-64e2-47b1-8162-241995a5f674",
        "cursor": {
          "ref": "d764d040-636d-43d5-baea-dbd4916517b5",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7688bf28-0a84-4491-8723-aabf66ef7a87"
        },
        "item": {
          "id": "27887eb7-64e2-47b1-8162-241995a5f674",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e80aa6d2-b05d-43bf-8536-f56a66cd7191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757bb606-3734-4f47-be78-e2762815946b",
        "cursor": {
          "ref": "fde7bfcc-ea15-4565-bfab-1d4ecc248645",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f8e541ba-661b-4775-81a5-de90d4f0e94c"
        },
        "item": {
          "id": "757bb606-3734-4f47-be78-e2762815946b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c2839f46-c3a0-438a-94de-92b38d06e923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c8a26c-f3ba-4daa-8eac-1989b77c7939",
        "cursor": {
          "ref": "29dbbe09-0c68-4500-95a8-b10a7d7d9f9c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "54016282-33bc-42e9-8b6f-10e0aa40acc3"
        },
        "item": {
          "id": "c1c8a26c-f3ba-4daa-8eac-1989b77c7939",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "09d3a4ee-a78f-402e-b355-67bbc8d007a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4fcfff-9d35-4933-a49b-15d140efb4bc",
        "cursor": {
          "ref": "e2ff69dd-8ffa-4646-977b-795e947ccc90",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "14e61b72-a0d9-40c9-8b93-87b82a164750"
        },
        "item": {
          "id": "0f4fcfff-9d35-4933-a49b-15d140efb4bc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "64391e69-6c76-4f59-8f25-0ddd47fd0f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf3e839-6b72-4530-bb95-c54597c2f16c",
        "cursor": {
          "ref": "eaac0ec1-d719-4280-80e1-dd4cd6b43051",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7cfc5b0b-f7c7-4ff7-8766-3806b55a8dcd"
        },
        "item": {
          "id": "7cf3e839-6b72-4530-bb95-c54597c2f16c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a1172fdf-ee22-4f11-973e-7e2eb233fd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a055a09-0d54-4052-bf54-8f306cc7ebda",
        "cursor": {
          "ref": "16318ea4-2cb6-4c90-80a2-1449f5ed38b9",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "14ac2473-59b9-45b3-950d-817daeda4b5e"
        },
        "item": {
          "id": "0a055a09-0d54-4052-bf54-8f306cc7ebda",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f722a4e1-5df3-4e6e-9508-553b19bfd0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a561b5-9afa-4978-9c5c-964ead46e5d5",
        "cursor": {
          "ref": "47798a95-17fb-437a-acbb-5ce128cf44ab",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c57fe10f-e449-4530-bf90-d95ce46a070c"
        },
        "item": {
          "id": "15a561b5-9afa-4978-9c5c-964ead46e5d5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "998c44c1-4c6b-4d88-b0eb-4f1617d672d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b867803-ea28-439c-8f64-1f9e4dacd8bf",
        "cursor": {
          "ref": "88445b34-b99a-4306-9cf4-157f041cdfdf",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "89fa03b9-3c07-4170-b1f5-f7bc9e051aff"
        },
        "item": {
          "id": "0b867803-ea28-439c-8f64-1f9e4dacd8bf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1e16a53b-20c6-4230-9b12-6df0100314e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6a0666-a993-4970-98f4-8eef0a3ff8c5",
        "cursor": {
          "ref": "061ee657-b51b-4504-983d-a937a651e98e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c69ce5f4-5524-4718-b86f-a51e6ea295a9"
        },
        "item": {
          "id": "2b6a0666-a993-4970-98f4-8eef0a3ff8c5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "832557f6-4022-4a2d-8665-0936c8f37925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6619bc-2a62-411e-a858-178d81c1e3ce",
        "cursor": {
          "ref": "aca46edc-d6b2-4cae-a11e-9422ba20c8b0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ad479ac1-2ed3-48f3-8230-c6d848f43d71"
        },
        "item": {
          "id": "0b6619bc-2a62-411e-a858-178d81c1e3ce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0d544462-4ce0-40a2-aa1f-a71b8b50af1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9aad1d-e3e9-4ba9-9335-59b0a15f8804",
        "cursor": {
          "ref": "fd08f4ba-8e36-4e24-bfb5-00b824160196",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "51b6d4b7-6b2f-4113-9fca-d169bbccc80d"
        },
        "item": {
          "id": "7d9aad1d-e3e9-4ba9-9335-59b0a15f8804",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "66adedb2-8a04-4e03-9922-40a75dccd784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0424c3b-d148-4bfe-92d8-efffb9b166c4",
        "cursor": {
          "ref": "3bc13408-ee29-4d91-b910-43398afe027d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b80c6070-8514-40b5-a8a2-8174b82b411c"
        },
        "item": {
          "id": "d0424c3b-d148-4bfe-92d8-efffb9b166c4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cce2a675-98ff-452f-bcbb-07e391ee6265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33ceba6-a421-4b61-ba56-521990f82ef8",
        "cursor": {
          "ref": "36b93d01-a2f4-41fb-9eab-89415dabd6f6",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ff646aac-0fc5-4c7f-8984-e9fc8fb92708"
        },
        "item": {
          "id": "e33ceba6-a421-4b61-ba56-521990f82ef8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "00c65c21-1629-4c32-aa89-7484e30d91f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad558d01-28da-45bb-8c15-7b104bcef94a",
        "cursor": {
          "ref": "4dfa0947-9b17-462f-939b-32cb2490550b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fbd2eb06-15f6-4c9e-853d-f4b35fe610b3"
        },
        "item": {
          "id": "ad558d01-28da-45bb-8c15-7b104bcef94a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1e3c4eb0-252d-4169-87be-3f44186020c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf2ef10-cd97-4ced-96dd-894b1afdddc9",
        "cursor": {
          "ref": "1f7f9981-632f-4be0-85e7-f86b9e00c3d0",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ea7e89f7-c686-4a44-ad44-47832b55acba"
        },
        "item": {
          "id": "1bf2ef10-cd97-4ced-96dd-894b1afdddc9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8b20b535-a47f-4a05-a5c4-4cde9a39a03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d7bd9f-6dc6-4cb3-a69a-694b64238f81",
        "cursor": {
          "ref": "b1fb9639-7893-4183-b992-d45837e6e37a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "042d8631-4f79-4ee7-9c77-b0b5e541bb23"
        },
        "item": {
          "id": "28d7bd9f-6dc6-4cb3-a69a-694b64238f81",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "affec1fa-46e6-41bf-815e-ea3502aaed15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597669d9-81a1-4bbe-8924-2af9313f7a27",
        "cursor": {
          "ref": "853c81ba-eb45-488e-a6b0-21aced4170b2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "358ddaa0-0649-434a-96e3-a3afc3cae226"
        },
        "item": {
          "id": "597669d9-81a1-4bbe-8924-2af9313f7a27",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0a101f6b-5f43-4be7-bbf9-e3e50140affa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d95679-1808-477d-8667-e9269fb3f034",
        "cursor": {
          "ref": "447d7ea8-e206-4164-8d8f-566888c57d04",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ad0e09ae-9511-4ae3-92b5-9ebe277d2702"
        },
        "item": {
          "id": "85d95679-1808-477d-8667-e9269fb3f034",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "deb3e928-1a63-4ea1-b81a-fd6a14b185ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c693dbfd-0b0e-41ef-9846-b289afa042af",
        "cursor": {
          "ref": "cf1d37f9-4fa6-433f-9207-d7d506140aa4",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c9ef2990-c998-4da0-87b8-474b4c81ab27"
        },
        "item": {
          "id": "c693dbfd-0b0e-41ef-9846-b289afa042af",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1d3da347-8bf4-43b2-8298-2b7fb9339d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90725a51-b4b6-4e80-aabc-9f0204a5b077",
        "cursor": {
          "ref": "1c1f7abd-5cd1-4081-a048-870399728583",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "210b0ba1-2434-42f1-98a9-f7497d83ecc4"
        },
        "item": {
          "id": "90725a51-b4b6-4e80-aabc-9f0204a5b077",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "27c87733-011a-45e2-8ecb-80643f66e372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8d1555-85c9-496d-860a-cd083f808782",
        "cursor": {
          "ref": "976eba35-1308-474c-9456-ffca2c91572e",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "43381b23-068d-457e-8729-abac92f90dc0"
        },
        "item": {
          "id": "eb8d1555-85c9-496d-860a-cd083f808782",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c0c5c81f-f0ad-4ade-93a8-fac078b40175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f75336-c210-46cd-af83-f50067edf505",
        "cursor": {
          "ref": "83464792-cf29-4a94-b2bb-48493d4b55e9",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "18ce4b75-06ad-4829-9a32-42a9a467c23b"
        },
        "item": {
          "id": "64f75336-c210-46cd-af83-f50067edf505",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "821b837d-6b52-436f-81a2-3a51c58bc73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc0199b-a3a7-427b-b64b-1abf51536b32",
        "cursor": {
          "ref": "94420341-2eeb-4b92-a6f9-0b37116b1501",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e1b25c80-9f22-4df8-9dfb-adaa2e74a3ad"
        },
        "item": {
          "id": "5fc0199b-a3a7-427b-b64b-1abf51536b32",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "801272ac-6165-44a6-a5d9-21df610bc061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d474c9-8db8-4957-8cd3-9832dd13f95c",
        "cursor": {
          "ref": "1660ea3a-e987-4443-8cf1-18e68ebe828a",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "268ae5d3-6f5e-4f12-826b-0b4bc460d60a"
        },
        "item": {
          "id": "82d474c9-8db8-4957-8cd3-9832dd13f95c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bb8979d3-cdcc-46a3-8c00-7b7b213e4b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5181ebc3-f9a4-4dc6-b809-807aa3ca9dc5",
        "cursor": {
          "ref": "becba967-7462-4389-87bc-39124fc981ef",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "499ab8ed-276c-47d9-8f18-3ed6bc64aab0"
        },
        "item": {
          "id": "5181ebc3-f9a4-4dc6-b809-807aa3ca9dc5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "158deb0a-49f1-4722-9a76-3fa86c52e2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1acdc3-f359-488a-8673-83dffbc08534",
        "cursor": {
          "ref": "1f7f7ad1-0ef5-4236-af98-e182c121f5c5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "aaa4d794-cc7d-4259-aeba-d0e13d80c70a"
        },
        "item": {
          "id": "bf1acdc3-f359-488a-8673-83dffbc08534",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "13c28788-6735-49e9-a30f-5a61de936029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8f4e88-2724-4555-aaf5-fe4ef0a9390c",
        "cursor": {
          "ref": "c4f108d5-74f5-4e67-aad8-eaae3f95049a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3d5090a9-68aa-49ea-9e35-1d924b62f868"
        },
        "item": {
          "id": "0f8f4e88-2724-4555-aaf5-fe4ef0a9390c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0fc221ba-c25b-48a9-a2c0-4aa6c9f365ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3973f7-afed-422e-a9e0-37db5c857d3a",
        "cursor": {
          "ref": "3f52ebcb-7b0b-4cab-a9be-465bf75e4076",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "66b992a2-5579-4d0c-81ec-64eb6cb33769"
        },
        "item": {
          "id": "4e3973f7-afed-422e-a9e0-37db5c857d3a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7cb10c9a-72d8-485a-a252-85d2e9ef5a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c09a6f-3420-4e76-b591-c3b86783b5a6",
        "cursor": {
          "ref": "f6a88bd2-0ba7-4d0a-8e33-cf1c8c6a423b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "52667449-7542-4f3e-897e-665921c6eae6"
        },
        "item": {
          "id": "18c09a6f-3420-4e76-b591-c3b86783b5a6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1b143438-330b-4e1f-967c-7cf228d33c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574565ff-a1fc-432c-8533-2bf0c4f52ec1",
        "cursor": {
          "ref": "d5673aba-471c-4161-bec7-96040dc65218",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "21e8d548-83d1-4808-ae80-2945c7bbd953"
        },
        "item": {
          "id": "574565ff-a1fc-432c-8533-2bf0c4f52ec1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "751f7f62-3b9e-4ed4-9fa9-39799d38a3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6094d4-fd52-44a3-852d-626b722f8472",
        "cursor": {
          "ref": "1a806e2a-98e1-4006-af72-3cb2610af26c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a132e7bb-1fb7-4fa7-9882-8e162722e5cd"
        },
        "item": {
          "id": "ca6094d4-fd52-44a3-852d-626b722f8472",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4106b97e-845d-414a-ba16-f57f2648c3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48da4a34-0eaf-4460-84fd-6fb5ef3d0276",
        "cursor": {
          "ref": "d282cac8-eb09-45b6-acc2-4dbb1c569bca",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1f4e38f3-be5a-4270-8a8a-8f642c954068"
        },
        "item": {
          "id": "48da4a34-0eaf-4460-84fd-6fb5ef3d0276",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a14dc2d9-25bb-4589-8133-4a00dcd41ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5369045-5dae-4e8f-9fe5-7bd8166984c3",
        "cursor": {
          "ref": "71ca9819-36d2-4728-bb3b-15d7fce9a575",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ff7a3b88-fce1-49eb-94ab-4093f72960d2"
        },
        "item": {
          "id": "b5369045-5dae-4e8f-9fe5-7bd8166984c3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "205f4a24-4c8b-4c1f-8eb8-76af12a35092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04b0ed9-f847-4cc6-a4f9-8ff33fac8d80",
        "cursor": {
          "ref": "c3a2ef79-c064-4941-b8f3-1f3976e47ae1",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2d115ccd-3d2d-4f00-ae31-13ce0baee257"
        },
        "item": {
          "id": "a04b0ed9-f847-4cc6-a4f9-8ff33fac8d80",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "55ff0a34-940f-41ec-84ca-c1748ccf8e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6089203e-314a-4547-b019-167bd1d4a9dd",
        "cursor": {
          "ref": "99e9a560-78ee-4677-9f3e-60d9fe95517a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "80c4c431-6ef3-49ba-99f7-96cfaa9105ad"
        },
        "item": {
          "id": "6089203e-314a-4547-b019-167bd1d4a9dd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9676726e-143d-4cab-a26d-289685d67bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5779c30-32a9-4c60-9d74-d7b03a45a4c9",
        "cursor": {
          "ref": "0dcb21e1-bcc2-4145-81aa-6f731b71bb64",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "99a19a4b-63eb-4d06-9f09-66f8f415d902"
        },
        "item": {
          "id": "e5779c30-32a9-4c60-9d74-d7b03a45a4c9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7a42c70c-af6e-4cbe-8bf4-3581d2475a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f79523-11cd-4e36-ba3e-f575ee2ceeaa",
        "cursor": {
          "ref": "2aa42859-762f-42c5-aab7-a1dd545bd8e1",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a78cdfc0-cca5-4bfc-a7a7-f6e62e5d28d8"
        },
        "item": {
          "id": "c8f79523-11cd-4e36-ba3e-f575ee2ceeaa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "25720d5b-758e-454f-9d5e-5d977710a292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcb65f8-9e8c-4ead-879e-2dd712babe1c",
        "cursor": {
          "ref": "acf133d0-2665-4865-a6ad-670f6d98e928",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fcda73af-13f0-4569-8b47-f3352d6dafb3"
        },
        "item": {
          "id": "cbcb65f8-9e8c-4ead-879e-2dd712babe1c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b7e900f4-f009-42cc-808f-012d68fe09b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96e401a-a21a-4c7f-b7a0-7930b7bc327d",
        "cursor": {
          "ref": "8ccb0c57-9030-45f4-a143-eef6c18a2c26",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d0aa5c86-7430-4c38-a11d-baee1c3b3068"
        },
        "item": {
          "id": "b96e401a-a21a-4c7f-b7a0-7930b7bc327d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0770b619-c6a5-4a2f-babd-db49f7de102b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35853b8f-aca1-4494-bd4b-244fc676c4fe",
        "cursor": {
          "ref": "14ca86cf-9a56-40a4-a1eb-50a79f09ca49",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7fea0918-8bf4-4980-8375-9d69f0197318"
        },
        "item": {
          "id": "35853b8f-aca1-4494-bd4b-244fc676c4fe",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "697eddf2-4d9c-4d35-b814-600e9fb23edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d2d5d7-e6d3-4f53-9a2c-3bc9894ec355",
        "cursor": {
          "ref": "d782e389-6649-4c39-889f-1104d0d03fca",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0ea18914-85c2-4162-abd8-9037dfc464a8"
        },
        "item": {
          "id": "e4d2d5d7-e6d3-4f53-9a2c-3bc9894ec355",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "22c246bc-611e-4d5f-8f1c-6c862ab92cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f023fc9-60d6-4a43-b699-3896e2a6d8cd",
        "cursor": {
          "ref": "daa569b6-bd4a-4ff3-83b9-c875abbe87ff",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ffa12144-8416-4a3a-a199-0a8bef8eca4e"
        },
        "item": {
          "id": "8f023fc9-60d6-4a43-b699-3896e2a6d8cd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2b8edc29-da74-4a4e-af23-a39ca0cd9670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c32b9a-c127-4522-9d38-a541c1ce2fb5",
        "cursor": {
          "ref": "80146048-35d6-45b3-a462-f6b14d18ed81",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c1b37bb4-23ea-4c7e-b4bc-1779523b456f"
        },
        "item": {
          "id": "d1c32b9a-c127-4522-9d38-a541c1ce2fb5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d0e658b6-4824-4d1d-9870-26d7ccb4fd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254d3b1e-3e97-496b-8a9a-b0803022a016",
        "cursor": {
          "ref": "1ce134ac-4042-4008-bef3-fd2cabdd7928",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0da3c85d-3bf0-442b-b64c-0f53c4485de1"
        },
        "item": {
          "id": "254d3b1e-3e97-496b-8a9a-b0803022a016",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1beed82a-6718-44b7-959b-425efb36cd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bb6e1d-344e-4d79-a07e-1764e4ce3282",
        "cursor": {
          "ref": "e8158868-cba9-49dd-8f83-137ee92a22b4",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "52ac8ddd-593a-4b62-b73b-82bcab73994c"
        },
        "item": {
          "id": "a3bb6e1d-344e-4d79-a07e-1764e4ce3282",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ef49372d-0947-4daa-8675-ed638d5927ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53fcd04-c97e-49f4-9991-3682676d4cd5",
        "cursor": {
          "ref": "377cc957-6082-478e-aebf-c50d0ba0f722",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4c33fec8-1003-4202-90c7-13b0c674a5b4"
        },
        "item": {
          "id": "a53fcd04-c97e-49f4-9991-3682676d4cd5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8b6593bc-b46c-41d2-b626-ae2e40cfe624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5408e90f-a0df-403d-830c-e0928d3b6390",
        "cursor": {
          "ref": "4ddf0095-1846-4d68-82b3-1e210f4a3c86",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bde36806-6c11-47ac-96a2-de8c69c185ff"
        },
        "item": {
          "id": "5408e90f-a0df-403d-830c-e0928d3b6390",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f42f3830-ed2b-4ce5-b17d-ef31bc68f106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52b7121-0767-4a7b-8439-ea703ace0f8b",
        "cursor": {
          "ref": "39da34f6-4d55-4837-9df0-3f6ebe4e0fa5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7252dd4c-a937-4970-bdaf-40ac7204d4bd"
        },
        "item": {
          "id": "b52b7121-0767-4a7b-8439-ea703ace0f8b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ebf7f2cb-cfeb-45f7-839a-bfc0f750906d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7368f3-3899-43b3-933f-db2d04474393",
        "cursor": {
          "ref": "bccaa49a-cea9-4023-9146-0e8e25dca6d2",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3b35f8da-3ab6-455f-ba83-ab75be72b61b"
        },
        "item": {
          "id": "3c7368f3-3899-43b3-933f-db2d04474393",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "04fa2e72-d20e-46c7-a0d1-c78cd45089a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bef9ba7-2307-4c79-b19a-3e6dff188207",
        "cursor": {
          "ref": "8025aceb-62e8-42c0-8b24-16fa0395200d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "fba27f8b-db1c-4de5-ad79-c9a5407e417c"
        },
        "item": {
          "id": "8bef9ba7-2307-4c79-b19a-3e6dff188207",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5d613a6c-194b-4fc1-826a-1f12db542165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50660da7-9b67-4a8f-ab78-d7156afd7627",
        "cursor": {
          "ref": "814cfd33-3b11-4950-aa9f-1deceafa4bce",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fdac6f2f-433a-46ec-aa13-27ed8027bee6"
        },
        "item": {
          "id": "50660da7-9b67-4a8f-ab78-d7156afd7627",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "54973979-284b-4de1-9468-993bb69245ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c103f71-4fa8-45e4-a158-cbfe645a33b2",
        "cursor": {
          "ref": "2de3e03d-9ee3-414e-bae0-4abd7792a02b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d6aeca7f-bdc1-48e3-b648-fe4e00954318"
        },
        "item": {
          "id": "0c103f71-4fa8-45e4-a158-cbfe645a33b2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "28646f30-c6b6-4f25-af53-ca031bf58023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59318032-3914-4015-b20c-f53e2ae87922",
        "cursor": {
          "ref": "87bd42e2-6bcb-462d-93d2-ffaf68357326",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1643f4ac-44d0-4a90-8b97-6389983543fe"
        },
        "item": {
          "id": "59318032-3914-4015-b20c-f53e2ae87922",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7052496b-50a1-466b-bd84-5e1f2c29aed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fea590-cd74-4e9f-a692-d0131ebbe1a1",
        "cursor": {
          "ref": "c80a7524-2cb1-4978-ae0c-90d867e42c8a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5f3c0d77-6e83-47f3-b7d1-20d60993f909"
        },
        "item": {
          "id": "15fea590-cd74-4e9f-a692-d0131ebbe1a1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1528af12-334d-4bd9-a27f-c8177f452b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c850e08-fe32-42d5-a78c-158a4627de4c",
        "cursor": {
          "ref": "25fbe6a4-ec02-407b-9064-d5e30cc51493",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "46b322f0-b9bc-49ca-ba41-2def831769d8"
        },
        "item": {
          "id": "4c850e08-fe32-42d5-a78c-158a4627de4c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5b7425c3-6011-4930-8cff-6d91e41600ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f556a84-89fc-47b8-84fc-1b033bc2ac33",
        "cursor": {
          "ref": "2d56750d-27f0-4064-a8ba-300c1d82584c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "20f03307-7137-4922-b913-ceba1956c1d3"
        },
        "item": {
          "id": "5f556a84-89fc-47b8-84fc-1b033bc2ac33",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "da0860df-4ff9-4b4a-b514-9f20820d1bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6248eb6a-5ac7-4bfd-a448-78d5314e3fc6",
        "cursor": {
          "ref": "f573e27b-21d9-4c03-98b9-7acb12f789ed",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3db6fc07-bbe9-49ee-a678-e45f7ac57699"
        },
        "item": {
          "id": "6248eb6a-5ac7-4bfd-a448-78d5314e3fc6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5264fc00-ada1-4b63-be95-6da3de56815d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b814bf3-5dec-4412-981d-bcf611ed4e29",
        "cursor": {
          "ref": "aa1dc67d-45a6-4bf1-95d4-1ed5dbbe8f7e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ee22fc32-3458-4975-9316-6b6a6e120f34"
        },
        "item": {
          "id": "3b814bf3-5dec-4412-981d-bcf611ed4e29",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ae9c8b7c-246e-4a43-94d8-8754fb6192df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae243901-1586-47fd-8f9e-a9a803894b69",
        "cursor": {
          "ref": "614d7447-172b-49b3-936e-9b809d96e691",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4a2e80fe-88c3-446e-b336-a1d57201c12e"
        },
        "item": {
          "id": "ae243901-1586-47fd-8f9e-a9a803894b69",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8d8cc131-ab90-4fb3-86fe-6b237e8c2ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa196a44-ceef-4679-a46a-abcb57d719be",
        "cursor": {
          "ref": "22629c45-2ab6-4405-8750-b86c1c12ce2d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "18bc1eb1-4913-434a-8083-f665c2f84d89"
        },
        "item": {
          "id": "aa196a44-ceef-4679-a46a-abcb57d719be",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b4c60926-9224-40f8-ad38-db81fe73f8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef05420-077b-4bbc-a95d-645bf389c24b",
        "cursor": {
          "ref": "d6a2ad8c-950e-4a8a-83b7-9fdb1f12b1b8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "aed1be16-0af8-4c72-a6dc-0f83ee06c03f"
        },
        "item": {
          "id": "6ef05420-077b-4bbc-a95d-645bf389c24b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5410d298-0325-4287-b2b9-548f888a2a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cea0528-483e-46c9-b71f-80e19f042de3",
        "cursor": {
          "ref": "8db1fc52-2b46-4c00-85e6-9d12ad16a620",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b6de1fb4-5873-4764-a8fd-fbd09323f761"
        },
        "item": {
          "id": "9cea0528-483e-46c9-b71f-80e19f042de3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "31faa13e-bce3-4f69-960f-f82405c0732f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d38ada-5391-4cc2-86d5-1f979beb3ac5",
        "cursor": {
          "ref": "ab43029a-eb2c-4ae7-832b-2fdda34b35ec",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "47ce626b-832d-4ad8-8254-df310a5149e2"
        },
        "item": {
          "id": "47d38ada-5391-4cc2-86d5-1f979beb3ac5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "db4885fa-5f90-4eb8-ab7c-116e49ac3b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc7f7c6-3b18-444e-8fed-dc9702e012e7",
        "cursor": {
          "ref": "3dda27a6-b13f-4a8c-abc4-2a785b16392e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e0bafc27-9d7c-4f18-8e11-a95fc7dc1bae"
        },
        "item": {
          "id": "ccc7f7c6-3b18-444e-8fed-dc9702e012e7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "259b4a7d-6eb5-4296-bcd9-cfe8980600ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25df6254-eb3c-48da-8fc7-af7143afcbf2",
        "cursor": {
          "ref": "91fcd994-3435-447f-9170-5896fc0be29e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b59e8209-0979-4ba9-a90b-59a37e9f1b07"
        },
        "item": {
          "id": "25df6254-eb3c-48da-8fc7-af7143afcbf2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "eedabaf1-3b37-415e-8dcf-5e40ce768812",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40fd1e0-9d5e-4878-a5a7-e64e51384504",
        "cursor": {
          "ref": "683bfbd9-1648-48e4-8f36-fce51ceb7e1c",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "968f1cc6-9d2d-4c8d-bc4b-947116365c1c"
        },
        "item": {
          "id": "c40fd1e0-9d5e-4878-a5a7-e64e51384504",
          "name": "credentials_verify"
        },
        "response": {
          "id": "15ce7c75-9efc-4cf3-8473-eab76f85f813",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ef5a0d-70b7-4123-a4c5-ce3d51917047",
        "cursor": {
          "ref": "5fa92d03-2b46-42d2-92c0-d3e353039939",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7baf5e68-38b0-4c1b-923b-a0693ad1ec9a"
        },
        "item": {
          "id": "e7ef5a0d-70b7-4123-a4c5-ce3d51917047",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5fa7e4c5-d7e1-424c-aa6e-5f3cbadb379c",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35cee1e-b302-43dc-900b-8261c185c830",
        "cursor": {
          "ref": "cd98a201-3dbd-4eab-9353-e894b8bb2266",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7f1196db-72b3-4f7f-9aaf-297b2336f978"
        },
        "item": {
          "id": "f35cee1e-b302-43dc-900b-8261c185c830",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f311b29-22fd-4416-8811-fe54f15cfb47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35cee1e-b302-43dc-900b-8261c185c830",
        "cursor": {
          "ref": "cd98a201-3dbd-4eab-9353-e894b8bb2266",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7f1196db-72b3-4f7f-9aaf-297b2336f978"
        },
        "item": {
          "id": "f35cee1e-b302-43dc-900b-8261c185c830",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f311b29-22fd-4416-8811-fe54f15cfb47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7884edd-6df2-4fe5-85a5-756a2241b896",
        "cursor": {
          "ref": "cdb07aa8-2fbe-4d14-b075-763c27c4b045",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5c16ced4-4f29-4cdb-8e31-c7fec2cb4245"
        },
        "item": {
          "id": "c7884edd-6df2-4fe5-85a5-756a2241b896",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ef76f0c1-e6df-4e60-a95c-c34a0894421f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e381440-5fac-4d40-89dd-687f843bed4f",
        "cursor": {
          "ref": "7d775a52-1ad7-4782-9395-d765f254bfd8",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "089ffb9f-5bb8-46b0-bf3d-e0a88fb14f71"
        },
        "item": {
          "id": "3e381440-5fac-4d40-89dd-687f843bed4f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e5198471-117e-44f9-979e-70432ba3a02c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}