{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f5924de6-fd77-47b2-9435-d5d5dd261852",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8289c4e4-e715-4b36-8364-eb560edc2ae4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8d44ed7-72ca-4285-8249-5d1d1560cf8f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58ca9816-9c76-4091-815c-cc1b8f88b731"
                }
              }
            ]
          },
          {
            "id": "dce82be0-0b36-4842-ac21-ec09ebc46ee5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce2ca9d4-eeba-4db8-8641-a0f9d205a8ac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7883ed30-47c3-4b66-9df7-9178a564f016"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "424b8ab5-273d-4955-8a46-e4a6a6347219",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "151f6c57-c15e-435e-94f9-212d14e0b69a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba5570ea-0007-4a16-bfa4-df2d0a1f07be",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abc15cd9-faad-45c9-bcb4-3b43f8e515fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d388652f-67fd-4059-a36b-0e8cc405ec65"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4791b92-0e19-4941-8fe7-1c2c8a149891",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "917afdad-47c9-4a19-add8-ca59d3476bd6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eaa4f681-455f-4e18-90b0-ace948e2f573",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc477bea-c420-48e2-9e42-440603da3c44"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96fe7ade-d307-49b6-856e-580fafdab4e2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8825bcce-21ad-4cb0-812b-40bf17e4c402"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "355723c6-2630-4025-9a13-8dd5f21d586f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e5ecb86-e93e-40d8-9e36-75b441abd114"
            }
          }
        ]
      },
      {
        "id": "31999b5e-7785-411f-b59e-d2aeb86dba04",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cc21cc78-5305-4e6c-9b4e-18a76e3c8e67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7558ac5b-324e-4647-b4b0-dd5a7a6872ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87ae81ad-44ad-422b-924c-f2928cbc87e2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf4a8be-7ad9-4dec-b09f-fd631daf8730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1009683-f86a-4cc8-bb6f-a24d7e718061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d88598-64af-49e2-818b-379c123b2369",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a2ee4d-7c9f-4249-9a4e-37331c3e3e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50f34e6d-aee1-44d1-bbc5-143d81556aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e8ebe9-6a0e-4d81-9d28-791da15b5d47",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3c6639-d17e-4077-99e6-edcadc7bcff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0086e5a-f0c2-4d3c-ad91-28e897eda883"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9bdad7f-3390-4976-8bd9-387a446e71ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc79ebf8-b551-43d5-b3ea-ad6c9c3f31a1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391e92a4-def8-485b-8f69-7226f25c2994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97ad62b7-d990-4de9-a591-f298a5d75847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4f06f8-a59d-4ea1-a839-c34977dca8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c4e309-ff96-4fc5-9532-318ccc7dfaa5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aee4c692-d61d-4c81-afb3-56968bc25e14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be292d77-12f7-4efd-9a8f-9a17027c73a1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "080bb1b6-f195-4fd7-bd27-accaa6bad32c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3eec84ff-6046-4931-9e5a-5aee5a3a8e13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b304c01-0f4f-4f3b-8219-0fccf9b8c29e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2b1dce54-d778-4bc3-b2b8-6aed70d3cf65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9085c78-67bf-4391-bce7-392a38ff8065",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef68161e-3d33-4f0c-bafe-4614f8f50903"
            }
          }
        ]
      },
      {
        "id": "cae8d3a2-785c-4abe-a1d6-c750cc8a5626",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e3564d58-368d-47d8-b514-de82e546498b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0780f72-9a4c-42e0-a39d-b21c4bdeb763",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b18a4691-e14c-4ef2-b700-f8d2e309fa20",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7183b2-dbcb-4379-9393-42675da166d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69badc2e-ec48-46ea-9883-c5fdd211d8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372d7f13-9524-4f55-a7c1-87224fe40091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "553fabc4-8a6d-4249-8849-167a06eb6c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab71424-65a6-4c99-a2f1-c8f56dedf9d7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00da5bb5-fe1f-4b77-986c-3d787cdce690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64daa97e-c6c7-4657-bdc4-fd53b8197e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e37d90c-8379-42db-a309-f72fa896d780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8af0a21b-99c4-46f1-9085-dc290fd7e533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592df047-c50f-488d-b0fe-2a82702ccf5d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f093a3-32f9-432c-a631-1572b2a5e2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ff2afd-e845-4279-b100-860c7c8673b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f823f5-154a-4413-bb85-cd480148f75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5490cf2b-2ce3-4567-8bb0-1e1abb65f694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c7c2f0-ae44-40ce-a37b-f80f7b1bfcd4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79de8cca-9fdf-47da-a8df-460869641cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186cc181-6f26-44e5-8776-545480a0ee6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dc2f36-71fd-47a8-9f80-3a7618b2eb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f31bf436-a0e3-4c83-b309-1175851233a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14395d9-81f7-4098-bf59-0500f36170f3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52789f28-96c7-4921-869d-f25e87f4d2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee722a8e-72f4-4103-b83a-9c47b39a6b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05714877-9894-455b-8a92-8aad2852c23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c5a061c-46f6-4aa8-8bf0-fc0649dccd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5dab52-1d8c-4afc-90ff-aabafdde94dd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed0de17-52f2-4b7e-960f-61d59c3ed15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b0c8e4-decf-4ec3-97a5-d8cb545a001b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd8c005-2966-48a4-973c-41801ff41ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba4906fe-2625-423b-99f7-d6d275839514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685c89ee-7ab6-40fa-9269-aacd70121e27",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7176ace-4596-43c6-9fea-bb94a6b425c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d85d7e-f9e7-4ba2-8bbc-fe859e2b2b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5255ceb5-ce1a-46b2-8c88-e77463915020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "883b85c3-8bd2-4fe5-ab6c-090772053ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bcfc34-ad98-431a-8145-4d0c2f9c66a8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5156ddcd-4abd-40f0-b69a-e35a1a90284c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df508a3-dee5-45f9-b7e7-4d062ddbefdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44366d5a-7705-4487-905c-291c2dc4dd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "913d93ad-d08d-4b63-8d8e-3427f34a16b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edbb4dc-2ef3-470d-83f9-de55b2662535",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6c2d99-1f47-44ba-927c-1215fb22b3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0053ef26-1c30-43ad-8b83-f4f7ad681ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc9738f-dde5-49cc-b3ef-66d005fa63f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5be88669-b2cc-4ad9-99e6-6e84c40b3c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f5ff08-160e-4bd9-b78a-bb7b16d9e57a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a57302-97ed-45de-9d40-23e3d37d204d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4fb114-e326-4542-8f40-b34484f57e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3fc9e2-f838-43ca-a9a8-15cf5cfb1965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f80f3970-99f1-492e-a98d-265662a99780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0794ee-ef7a-4353-b527-fc8d75d9863c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b456dc-7328-4fe1-9d76-3eee53799a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b5b911-ee97-4ae5-a958-269517c6c002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028c11f8-0b8f-4d5f-a759-7e4a23e9f91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "063bd73b-928c-4371-916f-120e652849c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d1b1a2-b6c6-423a-a862-9f3e87870590",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835bbc96-ef5b-45b2-a3ee-f36e3c00c4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b5f3af-a181-449e-b148-69b4a5143cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fa8bb0-26b5-4769-b5eb-6eb3816a34ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59fae4ca-89c8-4d78-b0af-ce3435985e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4fd713-7a02-459a-b407-e4142466a89f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffae045d-a061-46eb-9286-7782d3891726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f7216b-8889-4bb3-8359-8cdd47bbe6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da3554c-e1e0-4fa0-a182-005d81aa726b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37fab0ff-1f56-423a-b393-c74afbbfc490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b6cd96-858e-4705-932c-446058d34a8c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4117fb27-8464-4154-9971-c04f127959c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02238f66-70fe-407a-afae-2a6123c90c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1e120f-ff03-44d5-b5fc-dfa156be71c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7b262af-6096-42d8-938d-2aae950463f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d336ae9f-8fa1-40f8-9f21-853dd75ded1b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a015479-9e35-4019-a955-4c20eb404835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d8a345-0a6a-4910-a978-66af7cb56929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d4a90d-513b-4895-a9f7-ed6e2f62c63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d72352e2-6408-4263-9bdc-8fa1a58d11d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea886b6-6e35-4b7e-bb22-46399a92a734",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ddad52-edfe-4f7a-9c1f-8ed2c39d79b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17fa66b-1b8f-4ec5-89ee-dbe23164fb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77540c0-98e4-4a2d-b25e-7f32c8df1aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9e2a49e-6350-4c6d-a977-8a876f048cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf63ee96-e9d8-4978-ae3f-7059a71aac6c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15262d7-8fea-4e87-8ae2-564105dd5f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29fca41-7771-4037-bf97-e1da868af350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2aa906-3930-4938-ad59-681582b2ace9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02579676-9e68-464d-af49-a7c1b4c7a3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef824d7-7ea4-4b05-b999-c0419d4c8170",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12358e0-63f2-4387-8028-4d3fd520e5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5871af40-3ab5-4917-b7fc-964a0bfc774c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a3b825-1508-40ee-8508-f4d15741ecac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dec8667-2c90-459b-becc-bd516238d09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3884eb4c-1d56-4220-95d3-659dba277fd8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117151ca-3370-4aaa-a2b6-15a64df4c71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51b63cd-b825-42e7-82e2-aea102015aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e445ed56-d114-4017-874a-7161be498438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5e5e75-a47c-4975-b156-870d09ad8970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233da525-1cf1-4ca1-b213-082b71710094",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494423cc-73b5-4e3c-9075-3a242e4dd8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa41d5d-455f-4b5a-9674-b42a6c8142a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdef5160-9b1e-411f-8bf3-194da409fef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c9487d-896a-4ffa-b432-5a582d7235bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4311ae02-17a7-4a7d-bf5e-8574e00e0270",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc8d934-e34b-42ea-a1be-d5e13b216b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f686579-4b01-47e4-a308-09ca6b429594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d836e10-2e4e-4b62-b32e-90a4ab4e5476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de4f591-e68f-439b-8626-e41b3bceceba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5042a6-719f-4b7c-8bd0-e9b1e3c92657",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0931a64-7efd-47d5-b78b-c4455b0ebb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da81cab-a160-4d5a-a1e9-826ccde03135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bafd8df-bbea-4ae3-9565-fb539070a130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05525f80-7ad3-4e1d-8855-1f8978cba794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a843e23d-625e-4789-bff0-c522530a4639",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b28f43-cb5b-4f3e-971d-a84b8d5eda0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fee93dd-f42b-48b2-a696-1c182d6dbb2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125a8071-5e6a-4df0-8ae1-d9786cda14ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52c5fc45-649f-44c6-a930-0c01d007293d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552a9b50-1e73-469d-aed3-b9deee702686",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d095dade-0132-49e5-9db6-daed01ea37e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c68c46a-a026-4dee-ab03-06a5084c34ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bedbac-07ee-4c56-83cc-1307b3f4902d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f81acc06-42e4-47d6-bc82-807d30b9a271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc74fd63-5e82-4f3e-8665-54b75715ecb4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd25d32-dd8e-429b-89bd-d96a0b50e011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a14056-9670-4521-80ed-98129868c63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cf6722-411e-4cfc-8e2d-d620646dcbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b720cc7-9f7c-4bc0-8231-1bbcb61e61aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47e7fbc-5561-4a71-bb6c-21352212cd30",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9c21a5-f15a-4a74-a343-faa2269d791d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891ba44b-e044-45a0-a5dc-d817d0827a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b110b50f-42b2-4d72-b160-c6bdde7f0c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3b319c-7a3c-4237-8ab4-2cc825baa0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edf1bf0-607e-4f5a-be4a-e8d256bd905c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2345fa-156a-4c3b-925a-970b53309334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a38893-0dd7-41d5-84c9-2c51b7ba5ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0eb2df-a527-407e-8e48-667660275cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c38f1e54-0995-4071-9b6f-b29969a8ef80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232227ac-bf9a-450f-945a-f671ceda5abf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eeb125-3189-46ef-a219-527f58f86f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1baea800-ae3f-4e41-89eb-93e9fd7b1636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9965dd9e-e42c-45b1-a571-9d86077be909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75029344-9887-4567-a4d8-a54aa5c5ceeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e170db-922c-4de5-9e5a-4cf042a021b2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581608a9-5c2d-46ba-91c7-e5406843edb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0e7261-a40b-4fb5-81e6-14cb514d42d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ca0fca-67a2-49c2-a61f-3e27a72da5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8929aa3e-90c4-4f0f-aba1-85af83ed5bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c8139d-a964-4e6c-8025-8a6f28994e80",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3922257d-5585-4eba-a8fb-d1b47f8c2684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d070792-3412-4fa8-809d-a898a5b2ac76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a18b868-3fd7-492d-9402-84e931ee70b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c365f79-342b-4f07-a68f-c4d5a87f3840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62e6656-ab10-4cbe-8551-bf107d4a313f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccd56a8-6903-4f65-9769-18ba7cacd76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff1284b-cbd5-4e88-9bae-535bd9ba3db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ebdf5b-8cb9-4e2b-b136-2161d14060d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b312f64-781d-4a26-a939-9c9b1085266b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0588dc-afff-47bc-87fa-97c9ed72864e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab22a17-acc7-4b2d-a7c8-9a6fdff94c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6f3921-6542-4fd0-88bb-5ad568a7a793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d22a42d-f9db-46bd-96e3-05dd9b079055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51d5a75c-3e9c-4b76-af1e-c324b9ad8375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c16a3d7-f789-46b2-888b-246e424c16d6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6bf9b4-d8a6-411b-819e-e2dcbf85cca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ac54fc-20db-4952-8c2d-2852cd5782cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fe3324-9e3d-469d-959f-37ac240da680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08c1d9c-8d5a-4a72-a5fc-3eeb8af5e7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1867cc6-93ec-4e0b-bdf9-559bceb67bcd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8c8ebd-d75f-4a8f-b951-6bf4605d70d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee8ea26-4bcb-4f4e-9917-f356a03a0513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84059966-c782-48fa-92da-e9a4345ef83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b64d7773-65e1-499b-a299-db4561104ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef633d6-8ade-446b-a9b6-f89dbc93273e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6df3f4-606f-40af-80c4-a9e0feee9615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c23fc5-673e-4738-8f1f-6c0ff2db74bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9592a65-ac13-443d-99cb-9f456daa2286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e61458b7-778b-4676-b428-dccdef12591d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c8e985-05a8-47d0-a93d-f5bc7e59d937",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcc61f1-c608-48d5-8173-f2b95f536bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f7abd91-b7e2-4315-88f3-aa4e63c7b0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cefdc9-abb4-40b7-a2c6-3a3f4852f911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02b02168-fd48-4d01-a770-302b6021b209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1a9b32-00eb-4660-ab74-2ef6d2c7bb61",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e1e950-0787-440d-a269-fae0cb2f3eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ebe8ee-b311-44b2-a556-8683b6945ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c41805-029f-428a-9f45-3256cd7a2f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f50c0900-8840-4e27-9e0f-cd83ec89f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40d3db7-60c4-4712-9e2d-9b449dec9d23",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85cf918-e8b2-45b6-ba25-f47d49719860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a434145-448b-4f8a-a20f-b37e85b765ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f29f492-4d94-4413-875e-f311a98c0079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "03f0965f-c185-429a-999e-2ad426d3930b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e8a668-6d86-40b1-a824-64f47e3851a2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4807f551-bf0b-4ec1-b557-e20138b6bac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7294d0df-9f98-482a-b770-a9afb54d6375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d330fe-fe35-41a4-95b6-b7795d9c54b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdb5756-f668-45ec-8c7e-617d8ea14d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcb7d9f-70f8-4f51-b362-269b9e64a2bc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09262868-e637-4eaf-9fdc-db8c7a73adf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c8a7aa-626e-4e06-bb9e-f384a28658e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47391a05-a3a4-40d7-9d12-5b97462746f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d752af1-7056-4b28-b5f4-d4e2bf274ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb870f04-4844-4fa6-8ac2-15554ef5687b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdac958-1eb3-4b7a-a78d-f7da01881547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c048945-4323-4965-ad62-fe2c20bd97d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95cee3d-1648-485f-9912-bb6ada66c3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d08216af-11ea-4593-9f66-3f7b560e536a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8711cf-78ce-4c21-bad3-3806c75ed789",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d346ed34-5127-41b3-85b2-9906729e07ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61cc53e-922f-4d39-921a-00e980df40bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b17e9a0-df76-4a3f-845f-96766b73d09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "97520844-76d6-4554-b52d-bd549bcae24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d515cd9-c00c-4c74-bddb-2594ba8d4048",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350a4090-ec74-4afb-ba4e-adde9743038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9811aba7-e7b9-465a-8206-de4b07735d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5187a271-f5a4-4ca1-98b2-215e05c4d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "42076b2d-99f1-43f3-b7fe-4f3ccdbe8056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972f631f-cdc5-4bed-9653-29bff7c05cd5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09d0461-c920-48c7-a7d9-7bd966c3a3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084e4bf6-4a85-42d1-86b5-ec011a3e8939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7e9f22-ad63-47f5-a516-1ef4e0a52d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c709961-4005-41ca-838e-d09c04645db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34d7a26-be9f-419e-99af-a76fb9b8e3d3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a394fd5e-8c31-4c2d-8158-df2cb736aa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82239a6-1526-48c1-a11f-a66b0adab443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f936d9e4-52f7-4bdc-a30e-0a21e4ba4e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a13014-6e11-4f50-9721-12855ec4c86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03338ccd-46b6-4808-a2f5-2a54ae71d281",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf5a636-7cb7-4e0c-9e2b-670d127fbc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccce117-0629-4b50-83dd-e498693bde39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de3bc17-3499-4faa-85f4-7d9b72e3b1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9817c35-38e4-41ea-80cb-9dc74cfc3dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c0aeb8-cbac-4d49-9064-f15242bdd811",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cbaf98-2b44-4d1f-a415-efcb63d06345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b6f3c4-027d-4f21-b81c-7af38036ca65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b423a889-6391-408b-bbeb-c954da5431d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05cf2e03-8c8e-470e-b784-60a513c869a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5ff273-17a8-464e-9fc9-d743db2b072a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a474c4-4831-4b8f-86e2-e11359caaf02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277a9b27-b008-4e05-9ffb-f3687df4c9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a62515-cbfb-4e5a-b146-44478668917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "244d5552-0d02-424c-a5b8-96fb5c00cba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fdeb72-e940-46a4-b8a3-996ee421ed93",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114ef0fb-3f3e-4cfd-9e59-2e474d0803e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f969bb3-3066-4805-b93d-11d09d33d5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78900e8-7a7b-4622-b4fa-955376b47f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13ecfa91-208a-4a4d-9458-a40094968690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fea17f-9345-4bfd-9589-d60f503c7aae",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73fe4ac-eca1-400e-8b33-09524645e60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef90924-0c2e-4ef3-ba3d-9dc65a455607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5fe179-19d3-4726-b612-70a559f60d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "495302a6-4823-4835-811d-0673a7bd968d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9fe726-71eb-4cfe-b074-178e2ba82c2a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc949f20-f63b-428c-a95a-d74054b56a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cd514c-bf36-4c7a-91d0-1e5ce63b0f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29241bbb-b13f-41db-a34c-f816585bab10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bed2210-04e9-4a35-810f-e2f7a09ebe0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aa9295-72d0-4099-8cb4-94bf64d0c211",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fe8707-830a-41fd-96e7-54f438bce48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798226fa-4f97-4c28-9180-2fe071a24dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2c7fa8-88c1-452f-ba57-5755be0335ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e80f16b4-e8bd-484f-a1e9-8c914247d5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84e29f9-23ba-489e-ab30-89596641ec16",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebf9b3e-dbf7-4486-bab7-11cf671809ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a5bf8b-33c0-4391-80da-2da8ce43b0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f8e3e9-9feb-4aef-80d0-2f4dddb21284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2377e801-3d71-48f3-ab0a-89e38dedd21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f3529e-20b1-4519-8734-2c5da92410bd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58fefac-1fad-40cd-9084-f27d2075bd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ecfe91-5d6f-48a9-8919-42d6862e06d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061f6f1f-3c90-43b5-aec3-cfd78e8e8d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "692b80ff-12a8-4856-a77a-51169f1c0906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bca53d7-7d29-4b39-bd15-c6ddc5d526e4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e49efb-4fea-4607-abd6-63e4e73070b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176c28b9-d6e7-42eb-aa88-842dddde1b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85a0dc5-78db-4123-b888-120ccc53d944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72165614-1b2f-4be7-9a4b-05af9ee136a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc2a284-572b-4e99-ba36-3c515f4c5404",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d67e27-5a6f-4b13-84d9-5257ed3aa49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1405fe-bb3e-4666-bde0-b25a047d38ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d04f25-8497-49ff-afa5-5389e956e9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1711c2-cef6-4209-a3c7-c86cdfdf6674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490c1023-7bce-452b-99ce-a6fd24f705da",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa456cf-5e02-48ee-aba7-1675da2d55a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6d8a41-a9a0-4327-ac0e-d3145c79738f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8e6a7c-81e9-4ea3-99a1-5a86478e6740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "962d6e12-1c41-4b46-a471-833b77b33f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef3dc63-00e5-4943-9534-ca6aa7c8a732",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2941fdf-a5c1-45f5-820b-2c81230de73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762aefaf-17c4-44c0-8e77-e60134adb895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c405a92-c8ab-4434-97b3-a3244c15f756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0a4d60-23f8-4bad-b54a-1fe2573d04eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6f773d-9a4c-4cbf-b538-2aa499f1f1ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9cc513-5d0a-45c8-bfbf-5ce3e97120fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b99eb9-e76f-4757-9ba9-0460211b61a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb20e74-9455-4e35-a92d-7ce30c4bf8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a559adf0-69c7-47f0-a198-b933fb12d95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7614bf5d-8fe6-4ccb-baf0-12f91ed03b33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e4a078-4376-44ab-9fa1-fa333f16e566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46786fe3-df06-4bc6-8d01-ca5cf686ba10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0416a9e-4bab-439a-9943-d0bd9efdf66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "443e284f-b292-440d-afb4-33ecce8a2a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d408cd6c-6981-4430-a874-405458da293e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3861cb-e451-40b0-9e6f-4230fef5d8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f9c8e9-9a6f-4f43-a454-8aa0d67c6209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46676f73-b95f-4001-b9c6-890d6b029b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "43a96c93-5fcf-4408-bf70-fe8cd9a6bae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4afc27a-8707-4be1-b170-b6fa56556648",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9276b6c5-22ae-4902-802a-b246324a443d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1503d64-cace-46f6-93a1-cfcccf0404a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccee5a6-1676-4ca7-963e-792741b034da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f9082d-04ca-4102-9f6a-702a53fbb078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960dab13-7449-4eb6-9ca3-ce027217d930",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba050eb-9a9e-4217-9152-b726581134ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ea5f86-9ba5-4308-bf82-4ac3a6e413a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4565ce48-4111-4ad9-a836-148c4a1fff97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0b122f-60b4-4e30-b8b4-78767d47c5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d469bf00-1c14-40d0-85ee-ce5282873a06",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ade9c2-cfad-460f-a1b4-0aba1c275ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c4c7ea-6040-4043-9189-fd8222e8a382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1def4a-0c5c-42ce-9a9d-bd2a92cfa197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c630f7-e218-43ec-b4d8-33b66e24868f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc28a0e8-152a-45a4-bd5a-8792bea4d968",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689aceda-37ae-4dab-9b04-eb6f3500597a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a985134-5b95-4652-bd73-3c91599bee26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d7c656-f00e-4b05-9ae4-fe5e74845a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d8b122-c6b1-40c2-addf-b7108012b62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50442a6-eca8-4bf2-9e6a-4e8ced41dcd3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51672c99-d315-49b1-94bc-9611493aa4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac44c26f-b55e-46ce-a05e-50527feceab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01d1602-c0de-4eb3-9ebe-6c2e9fd5b1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfd8992-f826-4013-8bdc-e4f5181c3570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0610762d-f723-4704-8c51-d8fea8808283",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9de8315-d6dc-4604-80df-162b633cce6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1428085e-fd8d-4eba-877e-172b279bb791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c722a1d-32c9-4e0a-aea8-c54dc3d1fdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80467e6e-da4c-49ca-85c4-770920ef07d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360238ee-5677-4816-8380-da93c98ce2d2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf27514-759e-4cc0-ba5d-c1ddb87c0780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae41c7f-22f0-450e-bd60-491db8425771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d87ea5-c244-48af-9bd4-813729ed0c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb8ef22-e575-4fc2-9067-b8d3d6f17b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19477c69-f1e4-484f-b2ec-c4c7240eceee",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217177d9-ae61-4114-97ff-ae060eead219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b7d2b7-5ef1-4af2-afde-e052fe5ab3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886aef3b-f99e-4afa-9425-24855635658a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bad2ae4b-0a7c-47e2-8048-80287187afb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75375e1-6bf3-4746-baa7-50a950f99a30",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100e306a-1382-42b7-9148-239f8b3778d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a45595-d1cd-4149-9cac-68d87bfdbee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14af2f8b-80c5-4cf8-af46-ec1fcb15bdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1600e9-b780-4d17-b204-d9759a36cd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcdb850-7f8d-40ee-bfbe-05a39143ae5c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2eb753-c50f-455d-9fdc-0af24861720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b49abdf-d3c7-4bee-9cfb-a34fe3dcb412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ff7469-1d4b-461b-b47e-1e49b1639b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0821cd0-63df-4f70-b2e7-579694859311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5057b9c7-c63d-49aa-8a48-919ad9650d93",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e62751-0fe3-4ce2-b68f-1d6f0eabfcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e6376c-7ce0-4082-9601-cfb3c8afadaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ca16e2-72a3-4204-ae08-3ad238bcb7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a84339-d052-45b8-aad9-184b194f8e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bd7791-11f1-4f3c-8a1c-99aca852101c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567fb09d-4e52-46c8-9102-7928ceba67f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97123669-92eb-4cc4-8ccc-014089261c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f32eee-8c62-46f1-b6d2-602067c2455b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2567759-90c3-45ae-a122-1fd05835b61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a14791-f4d6-42ee-b3cb-efa50877d9ca",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38a3937-c4b5-4139-a808-48e73a1a6674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f882ebc-87b7-48a4-95e2-981f9cadf83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2704d5-4b17-488c-bb50-e36fff988fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1e42ac-ab31-4b9d-bc4e-267dd3b008c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bda18b9-9780-4c40-984f-486143c250f1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39544b8e-1761-44b6-bf4c-54c772a2e384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fe9db9-0cfb-471f-8836-d67c9dfcbf4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e1a8d2-b3e1-4029-b1cd-bb37a66dbb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5a2689-4ac3-4871-bb28-7a1000fbd67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8750d494-0dec-4d13-9d3e-235dbcea022e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cd44b0-4942-4f9c-b826-74bbdabc378b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3c3f43-b84b-4eee-89cd-472dca51426d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25da4aee-5c30-40fa-bde1-10603c9996d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffb6eb7-ba7a-4db0-b84e-4a4c17be6173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0adb1b2-0001-4d02-9672-7bb90f2aac71",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63621e2d-5e81-4c01-a795-c5f4cf4bf9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58efcb84-33ed-4a6e-87d0-3a23d9f233e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30be3599-b117-42d4-be5e-7e73cacd28d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df2da62d-34cf-4fa7-a548-97f2a82c6fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18cf6bf-7f12-434f-bcba-dadfdfc4d6c3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e72f49d-235a-4a19-b577-2a476a6c50d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a416f17-2131-4c2a-a4ff-cfb8b9ad3ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e2ae9c-5743-4ef0-8272-60f858ed9baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c7deae-8790-4538-93a8-8076cfc5895b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d437d051-7db7-4c6b-a93a-37f217aff96e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2168fc-31c8-4ec8-afc7-8f30ea0c725f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be95b2c3-8353-4f0b-bf35-7235c9e6a263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdffa8af-148b-4afb-8373-8777b16455d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1931db3-cb72-407c-9c41-efe90f51f5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe81fb18-afca-4806-b1d5-fc9744e44e37",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590fccf0-3803-46b2-8600-d36c1e06b980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d8188b-2205-4694-a42f-906d72f6b0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48b9f42-077f-44e5-a200-1dbbfebcc70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c105607d-d97b-464e-aa54-e5c099e4fbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b885ffb-dd5c-47b2-b0e3-e570b47ac82c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1a481b-d900-451c-829b-918018ea3942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b53271-8478-41d3-bb27-97fa66dd1f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2159417b-57b0-4c1c-ac7e-022809e78ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6b5bec-8331-4ccd-9964-ceeb438f531f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7342aef2-fd71-480a-ba4f-5fc5466ab8d8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ca5bdb-415e-4b42-8d07-c9edf4a9aad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55c1cc3-86e8-4234-84f2-f5c3cb76f16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bba13e-f141-44dd-af0f-d25c98abec5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af079ba-0b13-46ec-a6aa-348327d50a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568e18ba-6143-4725-adf3-bcfa1920504c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20564e08-7fc2-4e44-b0bf-839a814d7402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139930bb-b214-4284-bfd6-7d301ff4870d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012d7c04-395b-4463-b457-3fbd7bbdc3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3be1581c-91c5-4a91-87a8-5a9405df371b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d12112-3392-4677-b53c-1f1a532695bf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaa08a4-6526-42a9-9334-0a3115664cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0daa42a-780f-434a-9723-d2ac9c8cd1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4777c4da-6e7e-483e-9cc6-a93db13ec4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c74d518-240f-4c4e-a477-98b01d877df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3e9413-2899-42b7-87d4-2059d74101cb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37781b0-e501-423a-866c-33c92f65d9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56081659-68fa-4bd9-86f5-adea2b84d361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b28ac8a-9146-444f-8bf8-89234d08c810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7cf159-f686-4d95-b32d-43d0fb113e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d971324-2672-4123-a159-9e9713bfec83",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a85fe15-c373-408f-be9c-596399cb502a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7c1c09-5c6e-4208-b1d5-bd16bc393940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672740c0-86f9-4ddf-9499-ee4b85e2057b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c31bbb-4778-411a-ac9d-e8f6fcfa27e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5ea304-919a-4fad-8fb9-aa8c8ea30582",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0f703d-cf18-482b-b04b-34988ab391b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba82ffd-a791-4a0a-b5f1-f71d2317081b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b14e048-715b-41f5-945e-d9b042d43bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "07368776-8092-45cd-a118-55f1c8a38a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb21f84b-7120-4600-a282-add8664c5605",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0334e97-c55d-40b1-b7a6-c019a60705d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf46cad9-b53b-40b7-ba78-5bed890aaa44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a52e4e-03fa-440d-ba1c-fb8ac541dac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36b2bb6a-b464-4a1b-bb8a-00c5565b644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f4b119-33d2-4fcc-b315-4f8dba01a1ed",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6129c7c0-6329-4f09-9eef-4520153780dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede5d36f-60c2-4c7e-9e24-2e02a066f4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2afafe-3c52-4420-893e-76a0eff31424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9c5b97-6a61-4735-acc0-302671d08ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e81317-c259-4a03-8235-39c04944b622",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd471237-3793-4ea7-b2e3-e0aed2c3446b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d3dde7-97f2-4d13-ae4f-428dd65f8b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf42224-ba37-43c7-b23e-37ead68f0d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd1e625-8c35-4cd7-a7a8-7e022e3bb270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdeecd1-c5b7-456c-afcf-f3067edf9a49",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f149d3f5-e7ff-4a77-86c8-4af97afac7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a9e30e-0b6d-4d78-b20b-db1e17419037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abce42ce-679d-4266-923f-2fc40e8609ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "404b78de-e07d-4d4e-9c3d-5ed940366d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e4d740-0e95-4a09-b402-7b953e5b6cf2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fee406c-ae70-42cd-88fe-ead506f076a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "97f1fde4-a69b-497b-aa8b-1ac89aa2492d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fc8c4b-c11c-4dde-9d79-11549d4e7132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c760eb-c4c9-4187-b3c5-0517c81565d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7736852f-d81c-43b8-b3b7-f1bc1c67b34a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6212a914-f0e2-4824-be42-3588b94d72f2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55a8b53-99f5-46f5-89a3-c9c4120a6b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60bc4365-7721-4f64-a1b4-47216e14fd2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d058ceb6-f50f-4ab8-ac9b-c18f41b590f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e95d16d-0cca-4501-993b-aad5a3b271fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4948d1c-9695-482c-a01f-448b2dce4b57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cb7cf3a-ea4a-4836-9779-afa5a66e642b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6b612b0-c644-4049-a3a2-510c6d6fa61a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a073ace6-a386-4d60-81fa-c4a08dd2bb86"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4eec3d77-05cb-4da0-848d-adf9ca0a018e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5734d2a-49c9-478c-94bc-9df96cc68c23"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9be6c137-89d6-4cda-80c3-b0fab3ce6557",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7a306a0-7eb3-43a0-ae95-6a546231100e"
                }
              }
            ]
          },
          {
            "id": "0b5aa4e6-86ee-4768-b1c1-a732152c34bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "789037e0-3e27-4d61-bb3c-459095fe2887",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b1787332-bb5e-4de2-a6d5-166c8feb2c3a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6d8f50-19f1-4867-81a8-30fa3dad6fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0c723b65-108c-426c-912e-7afc4bafa0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cf3806-a393-4ba8-bf23-48957de5f3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b724a08-68bf-4d7c-8ac4-ffbbac2ee530"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3b33a08-43f3-4a8b-ad20-a5fd8325d24f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50f40d10-4c83-4780-9835-c15d7846cf9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34b9e341-e0f4-4936-b6e1-8ee85ceb7690"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a148a593-ed7a-4469-b740-71b83aed03b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd43c597-96b0-4d6e-8021-734a6ca50180"
                    }
                  }
                ]
              },
              {
                "id": "787a84ea-3a5d-4d52-b2d6-abd426b8bcba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "061f9308-75e3-4bcd-92c5-510efebf58d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19249903-dc6c-4e98-b3e0-afa28f08ad70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98c97115-c0d2-4e6e-a51f-0d7af3bd169c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51d3ff06-602f-406d-9971-e0bee0d4fb2f"
                    }
                  }
                ]
              },
              {
                "id": "5e509730-4fdf-45ce-90ef-043b9372f73f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53fcf773-4abd-4d9d-914e-c68f8170182b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1edda654-0fc6-4eed-8a65-312c744448d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "081aaa2e-bd15-4e01-8ed2-62abc69ed4af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e4625b41-e264-47be-9ddd-ade6853c3b0c"
                    }
                  }
                ]
              },
              {
                "id": "809da23e-eafc-4458-ac72-e2d5f95b475d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c0063d0-2974-4a1b-8460-4ca9851f0beb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db93ca0f-ccd5-4156-8837-8aba473e0ad7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "740a736c-562d-4a79-9006-4bf752e5413e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b436b299-0b4b-495f-8259-3979089d9f47"
                    }
                  }
                ]
              },
              {
                "id": "48e45bb2-8c34-47d6-86c1-7848f2039310",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "143d6150-5499-4e8c-ba58-b1bcf13fb79e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b578a84e-0ccc-4c27-88c4-acc0b2bab73f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8ac07cf-cd4c-4fdb-a13e-feb3dea82f0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "99b011bd-1a24-4fbb-950f-ecde11f72c81"
                    }
                  }
                ]
              },
              {
                "id": "959f99c8-49e9-4ed1-a810-7cd82b77856e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee724645-986b-4ced-b1a1-2e493262ed73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bfdb3c4-1de3-43d6-b805-173245143913"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3feea9eb-b354-4601-ba04-da46c9d80e18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c36cc61-689f-4c24-8ec0-fb849f22536a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50c1cbbb-06cf-4c4c-8936-48f0913b8940",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "742d6a83-b510-4339-be80-9230e49a116c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a0cabc4-ad6a-43ef-9329-928cd914f166",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3f1019e-1801-40e9-9418-90aeff45b614"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df124dc6-298f-4a14-93b8-90217f7be71c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f1017c2c-addb-48cd-ab3d-c26d8f334beb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49a482ab-84e6-429f-a6c9-c05e9fe51f8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae2af241-4021-457c-b00f-a57502bc74d7"
            }
          }
        ]
      },
      {
        "id": "2bf2df90-b181-4824-9d23-abc666a79014",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a274f39f-9b5e-4ec0-abfb-1bd14198389f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53f04125-d64d-41c8-976a-519f26aff2d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e420fb0-1053-4b2c-aeb4-91aa693c1599",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f56ae09-3071-4267-be00-06963124bca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee5d83c-d9ec-4257-af8c-f8d7a4384c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53eefbda-c4b1-444e-8e7b-0f4a03c2aae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f95106-6dc0-46cf-96f5-85858427323c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5825170-c85f-4cd0-9195-9a685790437f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9b632d-cbe5-4e88-9505-4f1e76c00278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84543de-df09-4082-8854-b429d4b445a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b1795e-3d20-4baf-a099-fef456a60dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c79942f-2a21-45f8-a71d-561c1b693661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b5ee46-e7ba-4039-ae5b-e3e9da556180",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a61b4a-784a-472d-9e65-f14f52b12956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780fffba-5aab-4763-ada4-7dd064ceb027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f8842b-cd04-44a6-be06-35c5fc6bb9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5039daf7-c7f9-48c7-bc3d-3204ad2fa088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3641adcd-0125-4e03-b134-d43833a88360",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a669356b-bb9f-456e-9201-71c1320d8b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40c59a3-ec19-418a-9fe4-f6e00b7641db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949be1bf-698c-49ec-a183-07a3115bafb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "550352c8-6c53-43e5-8321-f7c4d3ca385a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64b84f4-0c25-4c09-a8bc-97793f715b7f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5338d7-e7f8-49e6-aef4-bf4d5a1d0b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d6701c-f123-4c71-a7e6-85d4cc5552d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d889f72-f34a-43fa-8d3d-fead2f71c9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3c329b-cafd-414a-babc-3be5076ce365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b092e7e-ae3d-4d8d-9f83-01d5a6260c53",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca321c9-abad-4d3c-810f-906d64b56e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d0de65-0d6c-4f54-8e03-818b3100602e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e756e33-b951-426c-afc3-87a281fe228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83de5bca-529b-450c-99f6-c4d52166fd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecebea0-45d1-464c-8388-398e304d5cea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004e1514-44b9-4357-9f03-edb419775355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfcfea9-ccba-4fcc-a760-1cf5aeef20b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbefd53-899e-4d8f-8d52-3d2ad2d9fa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "43bbe4a4-9b89-4563-ba06-a618b8dafa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775a144b-fcdf-47ba-a930-1eaa54c31504",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2cdee6-65c4-4f64-b24c-a167224bb1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a625aca2-f377-4f1a-ab83-6f2781354fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e965dbe2-46a2-45ad-90ca-242ed5383c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aafca7a0-e224-4aa3-85fd-72ae4e736217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fc2839-7417-4cbc-b790-9ab4d170b2ca",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205683b7-79dc-47e5-aa9c-014528cf51a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcbd635-636e-4756-ab87-6e4d09af9e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfb7fba-23eb-4a76-91bd-e40e77cd46f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39df8daf-67bb-4536-bded-68de744cd2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7cfac3-5eb7-4ac9-ba7e-dcc53b3dfcad",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908b1093-06bd-4c3e-94d0-d8daba862c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f71e99-f00c-4b9e-8673-01ba8a7aacd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88455c03-4533-47b3-8eb5-aaf339de3a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac7587e-d389-4c14-9340-ad0908df8ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ad1b2d-b374-4149-ac89-c79f0065ffa5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526f4fbf-a365-4945-9350-3fe35a3db3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3eaa53-c608-421a-a252-23d9992276f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85bd1d2-865a-43fe-8b59-58a7c668beae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bb44ac4c-2557-40ea-afb1-c45e121834b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fa1dd8-ae25-479c-9319-68edf40ae9fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bf1345-b0bc-4106-bb51-5ccbd3eea334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5c2082-ffd3-4de8-84bd-c5454c6e2faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b355fa4d-e113-458b-855c-55725568c3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75092425-269a-4b95-8056-b013c8526506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f545da-3d2d-47ce-a72f-56b9876fb3aa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb01e53-7255-4ab3-bd36-01ba5e8192b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1986e127-da73-49e9-baf8-681f0ed54dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208fb45b-e0fd-4900-ab41-14b7bf54fa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "944bddb8-57fa-49e3-88c7-d089d9ab664b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99918a3c-a229-43d6-b7a9-f4f2df063abe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c0266f-3537-4a8e-a4ab-ef4ea2e104b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76898caf-d527-4178-b51f-2ca2f05e481d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c62ffe4-b06b-4357-907e-6a382e7085c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcd7fdd-6aa6-42cd-91d7-7d6c748cbb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbb428d-7a68-41b8-9906-6f159e11d257",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d138d2-c528-4d95-8ee3-ef7a88158f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92ea490-f089-49b0-8746-186287406116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effa213c-f52e-41e3-ba57-e4e191d62b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc3d4a9-bf2e-4437-8abd-47227b0222c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86febded-a61a-495d-bca1-f55a16536dd4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e12727-cfc8-4b03-af53-6279ab80b0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ec7bfa-a33d-41bf-84b3-4052ceca58df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad1c4c8-d695-47c4-82b0-5f0b4f87de02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd5c159-e011-47bd-84ee-ed7e7307d1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145ccf63-a9d1-4b47-90a4-9433b9ce6603",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f03cd4d-973c-4630-b98c-20a5a5e4993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f7c012-b90d-4cbf-b36e-7661d06ed39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef90342-7754-41c9-a985-9081d13c719d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d10cda1-eda1-4534-9c81-36991acc8763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce891eda-c36e-4bcf-b0e0-5b6554379ed7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a00e8f4-85a3-4263-a0e9-e8addf50a162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7171dd-1d97-4343-9314-19771b60015f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2d97fa-be91-4ad4-9f83-ced13c2650be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "458e260d-8148-4b8b-9288-0c6ea828bb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b54598-cbd1-4749-a083-82486c00b200",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457140a3-2b70-42db-8c86-801ee047f9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2eab97e-2746-45dc-88aa-af42ffe6d9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b179c738-8f29-4e03-b19c-bccb85b30478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "472980c2-a5c3-48d1-9dab-63f4dc50e631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc58da62-b30d-4597-8148-f8cdcb6977a8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378a6464-084d-4b25-a94d-064bf2780980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21738038-c740-4365-9fa4-14793d48b687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f490f00d-4b08-4dbc-b3cc-d0888f4339d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761a4ae6-1177-40a4-afa0-5a53e7d8fdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f8fc5b-1123-47b0-b3aa-6c3478c14df2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5f1cf2-c02d-4a38-8b8b-eb0553b41d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8baeba2d-5411-4a1a-8be3-6692d6d2122c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6effdc5-9fd8-403a-98b8-66e1344c7611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0eaeac4-ae27-4225-80ae-a3d14540561e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2401f2-8d35-429b-8c42-422f6a493da2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9a0a43-9535-4ca6-8761-4e895526b971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab47bbe-bf1e-4223-963e-e25ee9839e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69f0ef1-908f-4754-8656-020c6fb59ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2775ab8-7785-4d5e-9592-f1331769d146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3ae33c-f267-4929-b0f3-a45acd166551",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8d707d-34c9-4d1d-a282-7fcecb75836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420897b7-2f51-49b4-a3ca-d082b45e3715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839fb6fc-acad-49ea-a92c-c41eecacf6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05566b8-c5f5-4570-98c9-0846ddf716af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1231c269-6eea-4bf9-a539-64e01e6e014c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c500d834-f59f-48cf-baa3-431dbdf94320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6819e54a-eb59-45f3-9475-39d9e3dbaa01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c754ec-fbc0-4a7d-8c35-15534f83ca1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdb71e1-39fd-47ff-bedc-2548fdf4f045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee07bf4-1820-49eb-9dfd-b1b89ad7a179",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10428b8-a84d-4d88-b46f-e6862005ef4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc6335b-6aaa-49b3-a234-5ca20160731d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6a760e-d35f-4b62-a5d7-2a6bd6ec1149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28298fc6-b12e-442a-a98d-9c4bd3793202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369700b0-043e-4067-98f2-5a67131480e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02aad17-6b27-476e-91eb-d1a86690e77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d11399-ea0d-4295-9aa3-6cd06c9eca62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2b330a-85db-4521-a98b-ace74df5e47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3033b0-d5a7-462f-84a8-b9992d04bdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182b5ddd-f43e-4b20-aa94-4926a22ce68d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21344981-9377-45bc-a447-911a7622c025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400e42f7-b6b6-423e-9934-ba7806ae03b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcec62d1-60bc-400a-806c-60e1ba7c9ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b980ba66-cdfa-47d8-abc9-28e0f9c73397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b29d54-fe84-4487-ad8e-37a6018f786e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273e7306-eaea-40b6-a7bf-7cacc83b4614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e77c59c-f2f5-4e99-9284-c3fab7b61081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594cdefb-262e-43ae-8050-bb605f428ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "595be22e-d3ba-419c-a788-fa98f972420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a606d73-b54a-4d88-9222-011e73bcc88b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47579ff9-e55e-4d22-885e-74bf95abcd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f874b3d9-d17a-4a4c-b30f-4da4f9678497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaca0ee-96b0-4699-bedd-5dd11b8d0855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "037b707b-df83-48b4-aa7f-5cf828531ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29677f19-a48e-42df-aebd-194bfd2aa523",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041718bf-f57b-4e88-9765-329defda4b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a02bb49-b572-44e0-8269-f9197cac378b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017c7f45-9219-4a30-ad37-79902e92f43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43e9e9e-eb74-47aa-a6de-28c9b7169310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec720a92-aa92-4c6c-9551-31c10c4a904c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6325946f-eee6-48c6-931b-dd3070cc3465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf60fb27-cd6f-496d-aafe-09e35e0253af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01ac3b4-1c12-4aed-939e-2e684e9eecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "239048c5-9c43-424e-a3ee-a21add34ee14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454737bd-5084-4a46-938b-928c45288507",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e3841a-3fbf-4a5c-b96b-9690e8d675fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbf2134-f925-4425-92c2-4e2524202f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20bd9aa-e282-40a2-b357-14750b6168ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2c5807-e165-447d-b21c-ce6d4a90ffb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dd9323-54be-40b8-baf7-2027be1aa4ea",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e81d700-a957-47d7-a21d-81dbe86fa534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324f0990-5ce3-4a52-aa0f-e6eab6825dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4cb012-bae7-4c4b-80ed-ccb75db225a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0261a44c-83d2-4214-aacb-db2a461dd69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e52b5cb-4718-4a59-bf97-42f25d18b499",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edf0edc-89f3-4167-86a1-6c4aa7586679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddc8eb4-34af-463b-a42b-265240337fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c03427c-9f38-4b5f-b069-87d2295a8e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "200ba3cd-6b9f-4eca-9d02-3af12f552ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3659ec95-8efd-4793-a087-05efb5e463bb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8cc4b7-ea4c-47ab-bff3-5408120dc8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203b796f-04f2-44e9-bb8d-cd4d4255ceac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecdad74-4373-4991-9706-eec29fa516c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c17f088-bcb6-4315-9745-a7837c08590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ef9354-dd96-4063-8e3b-70854d44c104",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbca516d-a4d9-4b67-8ec1-2b39bcc1feec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652a8ae8-5407-4133-a278-55d836c32d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbcf40e-9895-4909-87c1-bb0b7c5eeab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5ffaa1-3cf2-4d8a-a992-24d92496aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608d3178-d8a2-40b6-9ad5-8f72783d2dc4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765d1469-c0c6-4c39-b25a-3e2c3b6f88a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b388d0c-cebd-443a-ad55-31be91a53bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06e590c-e75b-4dc6-8e01-d354d8ccf0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b879d613-a1b5-437d-b287-a032e1e93406"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8b49bf3-e8c0-46cc-a1a5-8732b826113d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b01640ff-8d77-4bb0-9833-1883708648a6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02562b89-1e04-4071-8bf5-248c914551cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a277b8af-447f-4c8a-ba7f-5af023712461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582b2aef-d1df-4cdc-8d6f-03aae1740557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb9c84ba-0240-437c-8141-abc451e5b73a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8799e381-4b20-4dfc-a66e-e53fa24e8fe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6301990b-894b-4c6c-becd-9a1820630829"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04441b77-5a3d-4dbc-ab07-90cbd75fa5f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9811016c-3518-4b3d-83f6-186c8f0f548f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "403b4d93-de97-4215-92f0-5ce0cf0ccbda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6fbac8f4-6eeb-4909-b623-1e3da53972e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfe1a4d3-6b17-43e7-b57c-134b1eb48892",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4ced666-b9e3-4fc8-85bd-bcb030ac630b"
            }
          }
        ]
      },
      {
        "id": "26b399f6-bf02-49fd-9ddd-da9e1ea1e5ec",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1e929740-4d8f-43c2-afe5-b15d2ecc7e5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "083efde7-d4c6-4d3d-857c-2603bf7b0776",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "114e01cc-a2cb-45d0-b920-bea6b23d3601",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10570568-c1bb-48be-944a-a5e0f873cf8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6a023b-1c58-4434-b6ae-b6b7659c90ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c73d4fb-3164-48b9-9775-1ca9e31940cf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8681e38-7d1c-4c8b-8bdf-2703b45633ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0246877f-1086-4198-a38e-0dba31a8bc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb0aad2-3367-4153-8033-4a40dc2a7820",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1495a78e-e913-4ab9-a428-277700225c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77241523-6997-48a7-8a05-cc304f7162e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e430ced1-0190-40b1-936c-fdd2c38113d8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f55a59a-7cd5-4ae2-b958-92e4f61f9381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da05e77-cf9b-44eb-915e-7b8883a945ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b4e2ef-576f-42be-8401-07aaa8afd6d6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc92b15-feae-40f2-92f4-4f1070056d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6659e34-33e6-43ab-be88-dc883595ae69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291b5591-bb1a-4928-b650-0934e53a8949",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f444e3-e5a1-4a16-b844-88c72a638364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34b6195-d941-4f3b-9308-b14d346282fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c4975b-c8c5-4646-baa2-883d3f085fc4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3761a054-bbb0-443b-9b2b-6b0cf1c3aca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32b0197-fd43-49d2-b9ef-15d17dad50b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa43ba1-7177-4446-8bbf-64dc5b82049e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53d6b91-619d-4d57-8fcd-00499135bcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352cd687-88c1-4457-a3d6-8d4c59784629",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822fac1c-e0d4-41cc-ade9-00b80969a738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4dc742-8a4d-4903-8e60-d8fe248cb17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d528d3-c0c5-474f-8fd0-0615eba78aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54722f1e-afdb-48b7-b5fd-f18d67e96f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b292ac-615f-4dc5-be4b-316027d77b87",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e699a1e8-c3cc-4b2b-96da-2a57a16db8cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d0bde0d-27af-41d9-8e19-f9d1e3565d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e801a0b-787f-4203-886c-a0c588cb736d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e162cc37-a6ca-4104-ae6b-f9423931fda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6cf4ba-c11e-459f-8ad3-d4855ea95ddf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1facdea8-b992-4fc0-881a-03fc554e98ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03c74fcb-f6f9-49ab-bc1e-f233080a1d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988fbef7-9320-4459-a9df-c4af80e945c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9b25ee-38d2-4cc0-a00b-d5320aafb9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9cd2b5-f9ae-47f8-b8d8-3898f36f2062",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff8fa13-a828-4001-98a8-ef41b3116d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27331f0a-cc83-4b24-850f-a5cedeac71c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd8aae5-d7f8-4e53-a93c-e8ec723467ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755fef6c-7136-4a76-b0eb-85987329c9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e80f80c-5cb4-40d7-9e64-d7697bf7395e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002cdff9-2e9f-49cd-82db-1e9a9576e3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5855510c-295f-4ce3-973c-5ad0ec3ff839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ed497d-0569-41b2-8bec-0d870e6f1633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a5bd45-f7ff-49d8-b41a-2cd1c312a885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c95f1b7-b9f7-4a6c-8bd7-ea9f8b174375",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8bdc85-9ec2-49a3-9864-9d1a9ddc8007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1658b1e5-0fdf-44ce-b3d3-10f9c3d0c305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3907264d-2338-4d88-a44f-0563d8745cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d8e30d-a09d-4932-a29c-09cedec91a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7971b36-8f5e-47f3-9d61-8f3397958d41",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec1fed8-8f60-469c-81da-c1b83e13d5d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eafc46a-a1a8-4d9e-950c-4d6ab8927344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56ce78d-5f93-432f-9ec9-eb3667dc8993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b85235-1937-4da2-90ac-270574e640d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4706de38-d234-4e25-9bce-78d40d812aaf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9751b5ca-9e34-4c66-9d0c-10ee634f8b90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed5bfd5-5498-4bf1-b534-c71c2fbdda98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5140ba-9a2c-441d-b286-6eef105357a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb4279f-9805-42b7-825e-2a9cbf6e66a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f195821-34fe-4542-b022-27dea41bc5f6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13496ea-fb47-4f30-b83f-100c9963f3d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a598fe-34c0-471a-b8ce-4e7d342c6d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4aa756-a948-4c16-811c-91739654c820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05802de8-f09c-485b-919b-8875ac0da191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24064168-0938-4087-bbc4-1fac9dcc64a1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca196248-33a1-4c66-aef8-92991bf784fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d5bb98-1c32-4c69-956e-d729fe394429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e35186-d664-489f-9227-c98dafe0b971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de8fc98-5ac1-4c92-82be-c79ce8ac37bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfea404-143a-4cb7-bb63-08ae1ad16a73",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9837a6ea-0f93-4655-a55c-222ff8942790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a6d8a5-0264-4356-8928-775b140515af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977a2038-c34d-46fb-96c6-0c953a2052ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc6e5df-9280-4cee-b2f1-4bfe483442f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9164e1-d2a9-45db-90fd-afbf2a8fd2f7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d7fae0-81c3-4a6d-84c9-a0698ab4ee46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead9227d-f882-454b-9602-4f49726ad53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce55f48-f28f-4907-a6b1-b09c7fe87b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110218e1-8d9e-47ce-baa9-e839ed9861e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd43aec3-9a9c-4f22-ab9f-a69922e1eb27",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef69ecdf-5014-4636-944e-327c99ac7a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91d9965-72ec-4cbd-82d7-80bdeb352409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67010bf8-5387-4c30-a497-5604adcdb726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104dc826-6744-4931-bcec-a25cf158bbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac3d1af-687c-4f17-b8a3-bfc0600dce51",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c138bab-f258-4d6a-a261-e01ddf68cca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f7a4d3-5e7b-4e4c-9d04-2070705e254f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3542a282-7584-4b15-a152-218668a2ee37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821ccc51-d905-4667-a8d0-e3316eb44637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0f8b6e-ff95-4c3a-942f-d3efc42d24b4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e367943-ce5e-4a4a-94cb-c5316827bff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2bf027-7aef-4130-9f11-ab6951c7a3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a18cdf7-e503-4d47-ba27-e2c2f54e6e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f61e91-3a74-48c3-9391-aee2f9ec2280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c7b18e-f73d-47e5-afa5-3d1836fc02b3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a06bec3-a56f-4371-bd6d-2348176e9349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de435b50-6fd4-4f1d-ac1a-7da7633d4a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e396f233-7500-4ca4-a846-c4651945a2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b83b71-1381-4e2b-a5fc-9ac8d6ba5931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1a15ec-85b5-4ed7-9a57-c25fbdef8bf3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d641d122-6f6d-4438-bee0-958aeb834c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e365318c-cc1b-4062-9c91-4be27ef52039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056db3ed-90af-4eeb-bc50-af636672b8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8f3a3e-a11f-4772-b4d6-687f23bb740e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766d57e6-be53-49ed-89e6-c8cb1481b500",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96edc020-aedb-4b90-832a-f564e667f5a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abae9191-4804-48da-9d17-9ab44bafc0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519032dd-bbe6-44be-ac1e-0c9b47c53c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef193d0c-b526-4f39-b2fc-bb5d0b6f4b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d5460e-bc81-45f0-a264-c07edcd51c88",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d431a6-b4dc-4151-9975-9aae1b6e8c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa630d69-25eb-42fa-8c31-a720e8f9280d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35820d58-105a-416b-a93f-2cac797fd095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf7a6b8-02de-45ff-8172-6bcf597c00c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd4b0e5-582e-4d8b-b6f8-a2c19f4bdd9f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d0ff5d-3b03-4940-b6b8-31256451f8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8445d77a-ff98-431d-8016-0af02cf6b668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57327be7-765f-4313-a674-88bc51c8bac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4768c1-5478-413b-b3af-dd519f423e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df473f2-e71c-407c-8abe-cf67f4b637ec",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee6277f-33ea-4a04-bd4b-7f27e1de1828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e314a16f-f013-465f-ab63-b6ba7f5ba72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b8a172-f9df-48e4-b4e4-2df82d1dfc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff474cd9-df17-4ea8-9128-091e72ad63c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cf482c-ef62-4b7c-8664-00bbc35aabf1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f252dcf7-6e32-4299-911e-3c63b4fcb2c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c5a3276-4324-46b2-9a9f-397fcdb0edef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7215b9b-82bf-4ce8-a819-3977bd164baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5bad62-247a-4196-b45b-802906223f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c090aa-103f-4af0-a7ad-c92e387836e4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981b1a22-55c7-4c17-a6d5-3adb143a7d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbde6fd1-66f7-4c46-83f2-b63d3b45599b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db140de9-0ffb-4b52-b28d-7d9635849a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2071c949-d78c-45ef-9250-feeed416019e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8482f87c-5882-4042-85ad-17121555f11f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1b561c-f001-441f-8de7-e367028e4c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a624b6-1271-4768-b23a-589fc402cf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b20fde-ccac-486b-9fb2-1232f642a2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3914378-fc76-4c40-92ee-aa11ea139249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa198d45-fca2-4022-ac28-2c32e314893b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4c8fdf-7f5a-410e-9694-c24719dc8385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f416b162-4699-440d-b616-acae264d0377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbd9dad-da40-4993-b1e5-7ceb8f085d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678ef141-e71b-45bc-86e2-bf517d80decb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c635f92f-6c03-4b04-a812-82678ed6179c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a31ebe0-ff88-4d84-9b60-0c2f215c8cb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e7c73a2-da55-4d81-b2d4-162ba50fce57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d2d8c7-6e2b-423c-9f7c-85f3b9a6cd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2070f993-8ec5-4e60-8af9-0e8d7df09525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5d6381-d2a8-46f2-b8ae-fe316d78cacc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43854c5-6fa4-48dc-9a92-52461f39fab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1ffaf3-e960-4ab0-a013-b8889428266f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb65387-1996-4111-b760-ef16aa889fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455dce73-e92b-40d6-8e66-7a50e1df608c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65be0ab8-5807-4f31-9980-334612475e26",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b798e4-033a-4a6d-b598-c72b4bcf2936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c35a255-9de5-4a03-af43-0346ec305fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf0cbc5-7b9b-4368-87e0-d23871a8925b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90db10f2-e05d-43b4-af6a-333060d47e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becfccf8-425f-4b27-9d2b-d8a6ae72f8e0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d211a556-6218-49bf-94e4-319f4e6d7e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1da2a22-0e61-4b17-aeb9-2da5f87022bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01eb60a-2728-4075-b6a1-c2ec235b1529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686536e4-208d-4a08-8b31-f39d2569ecf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6803dd-10c0-42c4-9d8a-17ecfc036479",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b87160-c655-4f20-a399-40cd48842dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67507c0c-398a-4fd7-a1c8-33d4379232ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e703db-d8ac-43d2-ae49-debbfff2d047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42862dfd-863e-4406-9ddf-6d79ff5be18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691d45ee-bdd2-49b3-a6f2-7f94b28f567e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319fe6d6-7f04-47c2-ae6c-ed30f5b0cf93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e1ff48-af6a-4374-8a1b-e892849d4356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d389d9-12f0-4a38-b027-05dee7783ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9fc0f7-c7c9-495f-ad2a-44243f31d875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321980a1-201a-4c28-a040-5b2922293742",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c330ba5-c864-4e8d-b939-5c8309a15a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2226fbfb-e09d-46d5-a5f9-eadcff352a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6568ef4b-4da4-4ae4-9050-b11d14a9ae99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8e0041-13f4-43f0-905b-a9e411093a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69495c2-5297-438a-bfc0-950557941395",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a60d3b3-1ff9-4c25-9374-51ebcf694028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed24c77-e7e9-4e40-8c29-16513b6ac0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e99114a-6e97-4b81-b666-f5ad78cbcb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f719dc4-8294-4d4f-81c3-7d00e9778aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0d4fcd-487f-4189-9390-82e21e65cffa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5074eed4-81e3-4bd5-8fdf-07ad1c7b88ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4a0bfe-b9ae-482a-8c8f-796f345ae73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ece6da5-8d14-4e01-9eb4-94d7977341e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16774dd4-3584-40c8-93a2-f6614ae1fe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa5bb7d-3922-47d2-b838-77758dffd2ce",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b3cd68-498f-4378-84ab-5e6158fd0979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f582e41c-a12e-4172-92fe-de041a0704b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d16c2-340e-41be-97a8-0232b6a079eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ac734f-aae9-4ac5-8112-dc4a371c2adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d444d98b-23d6-40b9-9d6f-f91e78925fc2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8db107-dd52-4c1b-8338-cedbc86c5bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d91c15-be62-4e88-b0f3-df8a8e4c20b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4abde5-901a-45a6-b633-6194dc4764e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e75382-24fd-4699-b966-9d56e3344c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8006e39-096f-4e05-b76f-91ad034a7494",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4441fa90-0cd1-4e09-ba65-8e12402ef86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237dfcc4-d109-456d-bd34-c7cd4dc1e5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c329d14-96d8-4933-b048-d7d330a5fef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7146e43e-7f09-4271-ac3e-8659ffb924ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44436568-0ed5-418c-b4f4-32018b3076c5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b872735e-6bf8-4cdc-b3c1-5dbfd2244f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cf41ab-dcee-4d01-b2bc-da1d471ab8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90091a67-ce07-42d7-8870-e24a6d9b8317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46bd29a-a44c-4315-99eb-abf865c1ab72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c02a7c8-6cff-45c9-96b4-b24009d3a8bf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5b5395-9cda-46b8-a9d0-6d119bdc156c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b1f751-39f1-4323-b4d4-47c1abb88dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e571742-3499-4a7c-a953-ad8a66fb03bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64684277-b01f-4491-bfbc-8d2ad26cfd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550b2100-f382-4fd9-8995-9c30043000ea",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32894b0-8e3e-46a3-9d1e-2fe7dba8c8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fceae4-860d-4002-b07d-bd24caef9b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c75396-6034-47d8-a963-e397423c40c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faeaef58-498b-4c07-8b13-b13040a8a80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a001b6-1c18-4616-a2c4-dfcf9f73239a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a22dbd-b584-4152-9ca2-d1ea80b131ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8317081-87e6-44ca-ba13-2f3280962f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0561da-e412-4070-bde3-54c81b7a84cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1b6071-ce96-4847-af59-f2870bdc63cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d7393c-f4bb-435a-aca2-2ff0dbdf3544",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35a470d-3615-46af-899a-5d51098c8f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2a53db-5bc8-4e3c-afbf-6c140bfa9ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fe90d2-bc50-4af4-8992-db63bb908f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9aca5f-3e70-40ba-92bd-58f8d074ff25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4819cb20-9bba-4ecc-ae90-2819ce78f7e4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930d560f-4f51-4493-b190-5833c9a4b427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb8ba76-ef26-4206-ad61-0311f5084391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a238dd13-623e-407d-8836-3ebf4a66d8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc87d50-af5b-48f2-8a87-14aefb927395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1bf7ab-a11c-4e69-a4b2-051aab067aa7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd01f6b1-2384-4790-be36-3dbf56762076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9982ebea-bdea-4c66-a78b-7fef7b278759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44eece3-6b4c-4d97-a9e4-1b1ff1726d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f368df6d-2e03-440c-9082-18e69dde98ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce7c77a-f3f2-44fa-a2a5-67460aad2405",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efcf647-f6d6-4a22-bf5d-bc5d9ae12782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f48051-044a-4bd6-a354-b6c77b0bde75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d5ebfb-14d6-4689-a87a-53cfcbfb8954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41c73d6-d9c4-4a8b-ad22-192c1b5b3cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4cb064-ed79-465e-ab6e-a1bf742247c8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcdf415-60f6-419a-9ace-928c9b3129f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3653fc-4638-4098-84e5-d946d5faa5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645eadf1-feaa-4e3a-bf57-42d2b7a56e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5124c9-db2d-4f39-9346-c6d1e368cb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dead8d61-8e89-4d20-8c8e-344be4c6e917",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669c04df-e66a-42a6-9270-b3f094a11d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73b526f-209c-4247-be8c-af90af73609b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcf5258-a742-4b07-a5f6-a2fddbbad5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e35f1e-44db-443c-a797-4661947b289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29182f64-dc26-4124-b324-921c6118fe90",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb0ebc1-dcf8-4711-8e16-bbadac8fa112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b19b01a-dfa9-4593-a4ce-eab951f5f9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e9d8d2-dc38-46fb-a780-9ecad528d271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc0c73e-305e-49c5-932a-8711cbdff75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e90e15-9d93-45b8-aa27-9e24921525a1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02b068c-4df7-4727-b177-b6d9cf2a4867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10b86c6-6d1e-4570-83dc-17f07de62eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc18bb4d-1410-4849-9b43-5f0d14880131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386081e7-bd2f-4795-9873-27271ccd62b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba0bb0c-383d-40d2-851d-c9be1c552de7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16020e8-200e-4e3a-838b-c9afa86ed117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd7f624-414d-472a-a708-6eb0ef4824be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbed0c1-6a4a-47d5-930e-a68c729270f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c05757-98a3-4e55-9b27-0c8e7f6f455e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e368946-c72d-413d-8c31-b8d23116639c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7584c282-085f-450b-b5dc-201de8361285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e6b5ba-afef-4082-8f09-37b387c88eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a592ae68-046b-430b-8f0c-85391151512b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f4985e-d10f-457e-9d73-e2cf3c37df3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d552bceb-c7b3-4a35-9e9e-222144a32a1f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d069b8ab-2370-4a78-a0d6-aa3aefed4e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a754bf0d-c921-4eef-a21a-487c5c1c747b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97715fa8-9123-434d-b3a1-ff75579cadbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d06811-9aca-4df2-9348-81883d22730d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec7a84d-c51b-48ae-95df-d0465a256ce8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20609e48-fe01-4e81-94d3-47cb11620db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d019675-9b10-4fcd-bece-5ad674be5447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a60505-9e84-4364-b10d-99422fbec8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c994527-77e0-485f-8250-27b80200c161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb983bf9-5606-453a-9823-97a0a6eb29b7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb6a9b9-4041-4bac-9851-beecd5bb9e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fc4f31-63f1-4a1c-a87c-e5598279f8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0da6241-b902-474d-b59d-52b6336e20fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96567fac-29fa-4bdd-85d3-e0fe70d4f8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f91c36-e98b-4a01-9d40-56e612583bd8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad71ee0-484a-494b-8c83-af69b57cde10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3fd69e-f09d-4957-b6b0-3e4f120fbce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446e159e-1c75-4bab-8395-3de272f87607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb934cdf-1cf0-4823-b3b9-f569c4ffd50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6c4ab9-e6a5-4048-96de-d8013c8f485d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8afb42-44b6-4644-929d-b38398f8db38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36cb4b3-4545-450d-8781-cc751db7f742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec23f8d-87f5-4160-ba30-445d3de768bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888536f6-1f00-4538-ad1c-444c32114af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4e4e80-9001-48ae-a2e5-0e34c4bf2d18",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975ecadc-d15d-403a-8113-2450228c77ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7c0523-447c-4e54-8696-b733104d52b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7711aab-ffa4-4e18-9b40-2c15eadd38b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80c4a02-36de-496d-8afe-989cc5117557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5c94f7-171f-43f2-b6bc-dc58c669f2f9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08bdd16-8569-4626-af44-9c6a13d297cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c33e44-c423-4274-a62f-2d075971e89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034d9554-a190-4b80-b414-db377bebf8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d98178-9965-4d0c-b241-721b89c23f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e025873-c0c6-44d0-97de-0049e3eed6f0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c256f5ad-64a8-4f09-bfc9-4477edaddc4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea71a0f-da9f-42d7-a95f-7c36c5228d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f02ae8-7088-40b2-9b2a-92c239b887c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9489c0-3ae9-4256-9c1a-7ef6a01fe766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9756414b-1a1b-4ebc-901f-53a0bd5d0e84",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70db7f17-9a7e-43e7-a4a3-0e2db03e950b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3619b988-c666-43df-8bdf-e579b55d2c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9817d22b-1917-45a8-a8f9-3101a66d98ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba36ec2-63d4-4043-a3b8-f658ea63227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f71ce5d-5f1f-4933-b54c-f59edae17898",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b10203-44d8-45c1-ad5e-0b9e7a508813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea37c28-958f-4ff4-8513-e5a561fc3281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d20d83-4f06-4f2b-9e46-bf57271fe67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8956c3-8e92-45d5-9021-ea1bc53d8333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b6095e-ae94-422c-b16e-92c9dd6d5ecb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a454cbea-c1cd-4940-92af-88ce2eda5c6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c07f2d2c-0daa-45a4-a290-9dad7bfab284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75a8c12-6d78-4f8b-8b17-d22d1725f574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4ffcb0-8fc8-413f-ba7f-5749dcaef825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b175365-f9f4-4b76-b9ee-f554fcd0fc8c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e36f68-b342-4a7a-b6ef-8f0efba941f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9651a9ad-614e-47a6-8cbc-ff55e53792e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34d07a0-e4e3-47a7-93cf-4b9763af194e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85365e53-a02e-48ba-9cbf-fd1741b4fa5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c2566-8721-454f-bbda-9a53956165f4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9b9d1d-f7c8-4efc-83f0-95d8e248bd77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39c4f735-0c86-4cab-9afa-ba967d9fe001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba3ff9f-c6cd-4ee5-805b-637cd77d5a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdafa11-3eb2-452a-bd8d-ae1029724625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59edda4-79bb-40a5-a078-061a6d0b23db",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3a4dd8-c32b-4dcd-8bf8-d320ef1b56e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f479784a-e15d-470c-9111-bf55bc1f86fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82f8dde-14c5-4134-a045-db08d9d92180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6066de67-bc24-4f82-a3e6-429f6b3bc45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5953f166-1313-4775-8642-5e8cec9b4331",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d452c742-7e78-452d-9327-c2591b582fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0a87f9c-5213-4d2e-8749-fca6aa5dca34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e82dc8-1636-48bc-a7f5-6305ca094551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3c7fa3-8299-4848-b55b-98a631d1591f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efaa3f1-a0c5-479b-8035-9317ebeaf121",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213d4429-3edb-4641-ac30-4bbbf1873f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c10424-dde5-4d26-9551-252a4d49960d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774a9d8d-472a-459d-b487-67e8a12d9980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9c2bc2-58a7-4728-bd5b-f3d3a08eb57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82386f7-cab0-4905-af65-59005cf18ebe",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ab45ee-6329-465a-83fe-7eb136c67cb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a754824-6dc1-474b-bcad-6ddb69cd0687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579492eb-130f-4312-b767-50d6fb8df52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836c1d78-edf1-4148-9649-df19d974c5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac65ea2e-7d16-4184-aab7-c0d52cf96e6f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3e7034-a293-447b-ab4f-46cd0193a9bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1c93c9-6f5d-4157-ac6a-c5875d95d9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5af4dbc-6b3a-49b3-ba5f-a12668880b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f69adb-e33b-4945-acf1-ed3bb920f741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5494cb88-f853-4fdc-9a30-ac41433a7d19",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89b28c9-ccb9-4fd7-a0fc-a66de442d902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c253de78-6dec-4b73-84ac-9206f9e09813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b9ef26-ed57-402f-b35f-e4b098434946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ede996-eb1d-45aa-982b-e8098214f9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9764de11-07e5-4a95-97e8-4b3d3718ba82",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c53b6f-5f77-4a6c-93c0-653cc6bf3f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "856577ac-1478-4a4a-8616-dda3c38e27bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acbd9e4-6fcf-4662-8127-25f61c740946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7c88ab-417c-494f-be24-091258eedb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17ec9d9-8977-4b47-914b-548058684e65",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e75da64-1eb4-4ab4-ba2a-54a218a29d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84ac16c-046d-4a58-9184-74bd43d462ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc799611-d42c-4444-96c2-0992bdb0f045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555d7733-fc5f-426f-a526-7347903dd216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34b4f46-a972-487f-b0cf-7740fdfc8fea",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f110f95a-b122-4396-b42c-53c958944bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27838660-83d8-4669-a15c-a0eb1ce3014f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71156644-8be8-4c7a-bd09-54f06cfd622e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8479d8f3-9ab9-45c3-96cc-94531bd6b9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0ed836-789c-4bc0-8d2c-fdb8dd16e9f1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec246db-1602-4966-9145-94b60f4a6bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb5a2c5-ad07-47c6-b0fd-62bff2d1151b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddc7599-2f92-470d-b137-8dc6e43287d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d181974-34da-4cd0-b874-c456ef15ea8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2666d078-acfa-484d-bfff-c4dc7bdbb758",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f6103c-0d70-48a7-8ce0-dd97c49c82b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0439a4f-85e0-4d35-8fd7-f9330c73d7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a64c813-58be-4acc-9781-943a797f33e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afd1a92-aad0-408b-8418-6264c4046b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf04f63b-6991-4b0a-94c7-475e835d718d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5401995d-b9e8-423b-a68b-e5bd5eb515ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0601e674-3159-4876-8589-9fded389b55a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6276a429-f894-499a-8130-22664e133d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d34959-cbe4-4ef0-b114-25e6e161d541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae1fe88-bbed-42d9-8db4-17ce91afd870",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75e5323-6751-4180-bff0-83f08e714aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee3f8e6-06c7-4543-862c-74e0182b0dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c302ba-0a2c-4eef-b934-07ec0a8a5385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74293cc5-7d9f-4cfa-8fa7-14b0fab3bd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e63836-93b8-4b3b-a268-5f5bde5d13d9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3075c22-541d-45f2-bee1-585fcfdd525e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86030571-549a-4424-a66a-13f19ccb372c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fb5778-37a1-498a-9824-2044e77803a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f024372c-8ba6-4c1b-a35b-ac9b59ba9a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3c1a42-b916-4790-bcab-6ceb6fb957c3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcb39ee-3c95-44ed-ba6c-c30f50d5df6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42608e52-9c75-42a2-b638-e9623aebc758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b566db36-2e92-4616-b2fb-e0cf9d2adff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615de42f-2d17-42fc-92d3-518acef736ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5c3e85-a8b4-43d7-b91c-9e242e72d928",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c115d25-583c-4f9a-96b3-23abe7753a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1188639e-a97d-40f5-86ac-c836d8f0d589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffedfeae-3f2c-4574-8556-8a9407bf2360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2f3294-29b1-4681-9534-a97b5ab3121b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2461c02-eeb0-40f0-bc57-1b1cc71a575e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3a134d-b574-4b54-afee-2fad774bd41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cbf484f-adbc-4e2e-a879-6b5980389910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4bf9de-2b69-4502-a018-bf1d0081b26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bea1814-5b6b-4d6d-909e-a678ee5bcaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e757e1f8-a185-4a20-b195-57818d7cfb66",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcf7107-1252-4e2c-bd7d-430c0855af95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e501782f-1a62-4750-b65a-646b20610346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56bb04d-7db4-4d28-9350-e9b986de7de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416811d0-950c-40f8-93f5-0eaad7893eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff7b919-93e7-40ba-846a-a529479bed04",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3588c55a-d84c-4250-a7e4-fe0bfcb5b858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14ece17-b354-484d-9f9f-b04f274df493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5265a72c-4040-45b3-a07b-5e4a244974f9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52d6d29-4407-4e6c-b796-81e1ce497cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4649081-bdcb-473a-a9ae-121cf1c4e4fe",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60cf7c5-86eb-4e3a-8d19-ce5effb4ad85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c065e475-b1d1-4c89-9e60-df672982b0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45787a66-d877-49e9-ba9a-6726791d2e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444569df-f537-4947-937b-5d3e06ae98c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1ae204-af51-4f94-bae8-57653f96b2c1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4d8822-98d8-438d-9f2e-c0247db1645a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3a4a22-66a6-4ea9-a2e1-499325b2347f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7d199a-c516-44c1-b11d-32e1e949671d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac777e7-bb70-4b0f-9558-3bfb140dff04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e495eb-ff56-47cb-b104-3123576aa4b7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe0f368-cf64-4ba2-9b53-fd3100f98c4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea819568-5fba-4108-8d61-4381c7a20578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde45b30-e30d-4bab-9508-27b89141c40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8005051-31a1-40a6-989f-b4effc332ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee93bdb-9040-4903-ade3-5e387b594773",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c764e478-67c4-4c0f-9172-e3746c119b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b3be3c-9ee9-4bca-a244-18e7bc2de2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32cf480-ed57-4999-93af-3b4bdcb09ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c37f044-1783-4fc1-8121-b4b2f0004a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1173b0ed-e5d1-4c86-adea-a6c1fe5a5c0e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ccbe41-2b86-4ecb-a2b3-8e8fdad1bf2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc8e8bd5-b283-484d-8bca-1b1555a9f6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7dc62c-c1eb-4675-b60e-59ad189c722f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5377f257-7ab7-4238-930f-28ce0be65727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec370cfc-1728-48c7-b02e-1dc3483712d4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8dda65-a14c-4502-af96-4509100f9e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f19409f6-1dab-4d22-b8f3-20103f8b58ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae80f5a5-3883-4ef5-82cf-51c808ade251",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df699631-320b-445b-b8ff-56029df07952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff45619-919f-44b9-b5af-c629b85d0a57",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f7354d-06b0-40f4-a779-902f0b0c6aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20fa2c84-5da3-4c2d-bac7-3b2c20936fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cb4b47-8206-4450-a099-9bb9b948ec54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3480399-26f8-425d-9154-4f06df4d758c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c73f055-66ab-423a-8aeb-d0216c17a1a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c590954f-0c04-4ff2-9341-350baca32a92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63630845-a0da-4251-8e97-fb3cf3108223",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0eff0cd9-3c74-4f54-a109-87df95abdec5"
                    }
                  }
                ]
              },
              {
                "id": "4d992e95-ddc1-4567-9f31-ecbe1368c55d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26db118a-8152-46af-b9d1-a3941e8b034d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb28a4a-0114-49e1-8c4e-a3c30a76a0e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30bcb68b-aa8b-4a0c-a012-63a9b5e54767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6f276a-9566-49a4-bffc-37aad92bb165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8879ec03-a954-44f0-b29a-1fd2bb08f887"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54067c20-5cbc-40cf-ac63-930108af4bea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13326a27-8809-4984-be27-44c38ebb7fbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a849de52-9727-493b-bbb9-abac50140a7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35ddd169-c7d7-4298-b8a3-e1aca870d4f1"
                    }
                  }
                ]
              },
              {
                "id": "27c94fd8-ea08-4a7e-b40b-45254fcd4dd5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1ce3217a-810f-4db6-8c01-a4eac11c7d22",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f219c7c2-1afb-4383-a7c9-d281739e1bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5930d32b-7220-4446-8db9-0a24617d2fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08334d0-305a-41cb-9269-d6bc9c5be175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdcd25b-31cc-479f-87e9-4c185c528988"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "057afa10-6a6b-4b92-81f2-b8146a63a71c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8101717-7f66-4115-9386-1b0f8198ac60",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7334fdbd-3a63-4183-825a-eb309cd06917",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "afe20bdc-dc88-4225-8ae8-925c6cefb855"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a086d6b7-b6ef-4fcd-9fa2-19e8a131cb13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d89ca6a1-0cd9-4dea-bbbf-6f8093b1780f"
                    }
                  }
                ]
              },
              {
                "id": "bf0f7612-b2cf-4995-b845-bd6abe75e472",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee28d47c-a347-4ba8-85dc-10456f384585",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5ed27a45-b209-4aa5-a3c7-1053d2e734c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dbaa5fa-8941-4b96-a039-fcbfd982355d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fac39d4e-4706-459d-ad1c-9e98603116e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35880f37-7098-41a8-b72f-b3b861f497ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "561b6267-1da9-421c-80c3-f29cb51bb3c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "850ae710-974d-4575-848b-39c406138c8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce79e5b3-339b-430d-a4da-e983d0684315"
            }
          }
        ]
      },
      {
        "id": "f1b7a01d-d1d7-48b8-8122-f1f0c005e8a0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b0c06c1a-5ca3-4fff-b3b2-ee5da5b77ce2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f002da25-d512-40c6-81a1-7d4503472b06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f9ee6f71-2762-48c9-b326-4bda8959eb27",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b4b149-2a4e-4a67-b7db-8d1c11fda8a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "110d3963-137b-4e1b-a928-69fac76091e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ada687-44c5-42e3-a9f1-2e7f614c2c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11ce849d-b13b-4ef4-86e5-cb7f66f4f21a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ad9d048-faeb-4719-95bc-d09fcbddfbf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "900a8a15-1743-410e-8441-6d700af073d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d595f53-b23b-480c-9d54-0e7fd761e27a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76f53c2a-c239-4208-9ee8-5a12c948ecc0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fb37769-1408-4a17-be04-19822c925adf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0d6393e3-1663-4ae2-8da2-b6ab344c4070"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8a60005-47b2-42e8-bb86-a45f8337b816",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86d443f8-cedb-4377-bb22-d91147954854"
            }
          }
        ]
      },
      {
        "id": "d7b9889e-e6af-43b1-91bc-277a05397b63",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "458b73e8-4c59-4c2b-a7d4-4dcec31c9a4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "283e9280-62b2-46f1-b74a-c994408b562a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8b6238c-6805-4b1d-bf1b-11b3f907b87f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdd77e5-025f-4af6-840a-5c421ac38ab8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dda7c1f8-2cc9-4c18-8d2d-34542fbb0c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaf52e8-1172-4eca-9cf6-aabcb2e434aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fe2fae1-1942-4f21-9d57-3e46f7f53128"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03aa312b-6f57-43ed-8ca1-4a6916255ca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8a1e2a6-b659-416d-b4a1-8bc0c920247e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dd483ed-ed3c-4967-9371-a6db27b5e223",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d811da5d-4433-404a-ad5c-6b8ea5dc77a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f002ddec-cf9e-478f-ae2e-7f751f40b6f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "214e8086-95d7-4614-9e33-08e488e3ba99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8c77e6e-32d5-4ca9-b2f3-ad97ebb6bc31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5887a68-914b-4d8f-bc24-3bc4da7c0564"
            }
          }
        ]
      },
      {
        "id": "d44314b9-1453-4bc4-90fa-920af6fd7f41",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6bd09b4d-69c0-4242-96bc-bd54fd2e92f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67764e54-b7c6-403b-970a-d3b9789d9301",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16618b57-4850-4b99-bd46-b69f81cc478d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18990b54-bbb8-4504-b761-0143cc4958e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "073bbd17-5385-458c-85f0-cdfff421d9a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9094cefe-aae5-40ba-8308-c3cf50dd7ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0c4b7f3-836f-4a94-858f-61e5f64aeddb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fb26957-d559-49b8-beaa-a5d969827508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aee70e5b-fce5-4e24-a56b-e0653b7014c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f59b8fe-025e-4845-ab48-d6a563339183",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ffd238e-d02e-4cf1-9f83-c9db010bc83d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c6e3273-d178-4859-a34a-5ad99e6a6b87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e1035d9-35b8-4894-bbba-2f32d10ff906"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5cef4b6-4b06-42af-92fb-714d51b0ff92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2864207-5acb-4d6e-b102-1c68b44482ab"
            }
          }
        ]
      },
      {
        "id": "bce2d847-0fb4-467b-9f09-587e4b5c0ef4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7492e0f6-2f91-4c0d-b4fe-4742fa2f9d33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e980e13-0c97-404e-8742-3a6c3113a854",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f80a3ec8-c196-4376-a070-c4f2cc13b8ef",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "065e2fb1-120c-4866-a7d7-1edf39062ff0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1054944-a560-4667-9ced-9087595d3fef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 63.93650793650791,
      "responseMin": 20,
      "responseMax": 360,
      "responseSd": 31.408912402082315,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719535115772,
      "completed": 1719535139998
    },
    "executions": [
      {
        "id": "8289c4e4-e715-4b36-8364-eb560edc2ae4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "12ed1132-a465-4990-8e16-a21b3a6cdcb5",
          "httpRequestId": "8f468e23-738c-417b-84ad-9fd1c882f7a2"
        },
        "item": {
          "id": "8289c4e4-e715-4b36-8364-eb560edc2ae4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e678198a-4f61-4d32-81d8-4dd78cdf8086",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 0
        }
      },
      {
        "id": "dce82be0-0b36-4842-ac21-ec09ebc46ee5",
        "cursor": {
          "ref": "90eb0f27-e124-45c0-939f-afdd4e30e308",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "70162335-0fa5-4145-aa82-5c5899dad4de"
        },
        "item": {
          "id": "dce82be0-0b36-4842-ac21-ec09ebc46ee5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5a35800a-3841-4092-b9ba-e2d8314681ae",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "ba5570ea-0007-4a16-bfa4-df2d0a1f07be",
        "cursor": {
          "ref": "2abc0a6a-fa58-4b84-8669-7c13cb8bfaa8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bf7f7bf4-94b7-4279-954e-a635a649a5be"
        },
        "item": {
          "id": "ba5570ea-0007-4a16-bfa4-df2d0a1f07be",
          "name": "did_json"
        },
        "response": {
          "id": "2760a3fb-96d8-475c-b5b3-71ebb0f8ff7e",
          "status": "OK",
          "code": 200,
          "responseTime": 330,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ae81ad-44ad-422b-924c-f2928cbc87e2",
        "cursor": {
          "ref": "7482abe2-fcf6-4309-9f2c-abcdebd2748a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9cdfdca2-4a6b-4b4b-8a34-39bad886679a"
        },
        "item": {
          "id": "87ae81ad-44ad-422b-924c-f2928cbc87e2",
          "name": "did:invalid"
        },
        "response": {
          "id": "7755cf6a-f650-46c2-ae85-4dc561926910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ae81ad-44ad-422b-924c-f2928cbc87e2",
        "cursor": {
          "ref": "7482abe2-fcf6-4309-9f2c-abcdebd2748a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9cdfdca2-4a6b-4b4b-8a34-39bad886679a"
        },
        "item": {
          "id": "87ae81ad-44ad-422b-924c-f2928cbc87e2",
          "name": "did:invalid"
        },
        "response": {
          "id": "7755cf6a-f650-46c2-ae85-4dc561926910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d88598-64af-49e2-818b-379c123b2369",
        "cursor": {
          "ref": "2de2deb9-63f2-46d5-bc38-f0b4d5f239b0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "542f27e3-91b3-42bd-9198-f9d1867dd290"
        },
        "item": {
          "id": "d8d88598-64af-49e2-818b-379c123b2369",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "76dbbdd5-a994-4536-bc81-05b3ba4f2f5a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 122,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e8ebe9-6a0e-4d81-9d28-791da15b5d47",
        "cursor": {
          "ref": "1cf8a6a8-6226-456a-93ea-b90538898752",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "030750d7-51ab-401e-b66f-5557ba6c72bc"
        },
        "item": {
          "id": "e4e8ebe9-6a0e-4d81-9d28-791da15b5d47",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "35894e6a-244f-4ddf-9ae4-f3a8f070c42d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc79ebf8-b551-43d5-b3ea-ad6c9c3f31a1",
        "cursor": {
          "ref": "3d12ccee-88f9-49dc-9f0c-44686044b445",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7b72c295-b10f-4b99-af55-25353f4d25cb"
        },
        "item": {
          "id": "cc79ebf8-b551-43d5-b3ea-ad6c9c3f31a1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2cce2195-8aae-471c-bac2-634ac5641411",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be292d77-12f7-4efd-9a8f-9a17027c73a1",
        "cursor": {
          "ref": "0e0d313f-e7ec-4dff-806e-386ebcd7779f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "284c5867-95a8-4146-9bf7-fcbff7f29d22"
        },
        "item": {
          "id": "be292d77-12f7-4efd-9a8f-9a17027c73a1",
          "name": "identifiers"
        },
        "response": {
          "id": "d72a470f-f96e-49e7-9992-c2937c3a6c19",
          "status": "OK",
          "code": 200,
          "responseTime": 265,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18a4691-e14c-4ef2-b700-f8d2e309fa20",
        "cursor": {
          "ref": "3e2b21c8-4991-48ac-bed0-a2dc021a7309",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9365f9ae-e050-4bae-8b66-f22c06f33364"
        },
        "item": {
          "id": "b18a4691-e14c-4ef2-b700-f8d2e309fa20",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b4fe0fa0-e409-4071-adcb-f48bf924918d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab71424-65a6-4c99-a2f1-c8f56dedf9d7",
        "cursor": {
          "ref": "543ee193-d320-49e9-8195-b863601a5563",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d6970782-730b-4c20-8ec5-1991119be1db"
        },
        "item": {
          "id": "7ab71424-65a6-4c99-a2f1-c8f56dedf9d7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "70610e36-6cc7-47d8-9c62-e3442998d0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592df047-c50f-488d-b0fe-2a82702ccf5d",
        "cursor": {
          "ref": "82a8e57f-e6bd-4c35-ae9d-467cae7862c5",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "184fdb0b-5473-4d79-80fa-d126be876b55"
        },
        "item": {
          "id": "592df047-c50f-488d-b0fe-2a82702ccf5d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8f365766-5eae-4d0e-b7de-54b7498f32b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c7c2f0-ae44-40ce-a37b-f80f7b1bfcd4",
        "cursor": {
          "ref": "e7646a9d-bd9e-4e42-a1d8-dcef22b4aa73",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0868f385-c3f9-40bc-ba24-6987b45a9581"
        },
        "item": {
          "id": "c0c7c2f0-ae44-40ce-a37b-f80f7b1bfcd4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2136211c-33e4-4a6f-bc01-973a2e0316bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14395d9-81f7-4098-bf59-0500f36170f3",
        "cursor": {
          "ref": "52988b63-2298-49c8-ba7d-fc08a494e66c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7bcc6229-ae0f-4d36-abc2-94d45dc428dd"
        },
        "item": {
          "id": "e14395d9-81f7-4098-bf59-0500f36170f3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "73c41381-77ed-447b-8bc1-67a5831f2d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5dab52-1d8c-4afc-90ff-aabafdde94dd",
        "cursor": {
          "ref": "7795f85a-ff39-48dc-9372-4ea6787a0e63",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cf412cf7-40b0-443b-b9b3-1a6c7e565752"
        },
        "item": {
          "id": "7c5dab52-1d8c-4afc-90ff-aabafdde94dd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6c7678d9-5e5d-4df3-a4f0-2f2156d3bce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685c89ee-7ab6-40fa-9269-aacd70121e27",
        "cursor": {
          "ref": "3aef5c0a-e7ca-4d85-89b9-1f9903f7423f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "48056a37-dcc4-4531-8ed9-a2f3af92cb42"
        },
        "item": {
          "id": "685c89ee-7ab6-40fa-9269-aacd70121e27",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4519293a-bf3f-4e0c-8f2a-c5f4517487be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bcfc34-ad98-431a-8145-4d0c2f9c66a8",
        "cursor": {
          "ref": "220fc21c-57d3-40fb-9c60-3bc17b745c71",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "95c028d2-4b26-4996-9d93-583bc186a7ce"
        },
        "item": {
          "id": "a6bcfc34-ad98-431a-8145-4d0c2f9c66a8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8458a960-ef08-4b91-b353-7a7a31e24ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edbb4dc-2ef3-470d-83f9-de55b2662535",
        "cursor": {
          "ref": "78fe0d59-749d-4b55-a4f2-373916a5aa8f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "80f6c823-42b7-4fc0-938b-113ada5ea2a3"
        },
        "item": {
          "id": "7edbb4dc-2ef3-470d-83f9-de55b2662535",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bc2c2c6b-5f9d-4a23-9c08-369109670755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f5ff08-160e-4bd9-b78a-bb7b16d9e57a",
        "cursor": {
          "ref": "0f6da406-d6ee-433a-8aad-ba12ee34315a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e0556833-1343-4b9a-b3d7-445eb84a1ce2"
        },
        "item": {
          "id": "86f5ff08-160e-4bd9-b78a-bb7b16d9e57a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cdfd227c-c42a-41cd-82ac-75e2731ca399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0794ee-ef7a-4353-b527-fc8d75d9863c",
        "cursor": {
          "ref": "53b18f65-9c36-472f-b07d-056e75850fbd",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1e79cec9-3e36-4abb-8f91-3ca33aa96c63"
        },
        "item": {
          "id": "ce0794ee-ef7a-4353-b527-fc8d75d9863c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "89704b20-4ef4-49ee-b5c4-0a2016dc38c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d1b1a2-b6c6-423a-a862-9f3e87870590",
        "cursor": {
          "ref": "bbe09296-e72e-4f23-afcf-532fbc06f96b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "92948f5a-98c4-44fb-8afb-4582153e4fe6"
        },
        "item": {
          "id": "85d1b1a2-b6c6-423a-a862-9f3e87870590",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "04202398-1b43-49b6-8ace-dbb98fdd7af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4fd713-7a02-459a-b407-e4142466a89f",
        "cursor": {
          "ref": "935b74c5-45d8-408a-993c-ba90d6d6aa05",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "17c25e13-5fd3-4e6f-bb4f-c626a8ff93d1"
        },
        "item": {
          "id": "da4fd713-7a02-459a-b407-e4142466a89f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "21c87547-c916-4f26-926f-0407a6706f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b6cd96-858e-4705-932c-446058d34a8c",
        "cursor": {
          "ref": "bceb4dd8-4c0d-489f-b199-50920f065226",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "92afceb9-f19d-44de-9464-4aa84109cdb8"
        },
        "item": {
          "id": "f3b6cd96-858e-4705-932c-446058d34a8c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0b3705f4-f2e9-4126-86d7-b7cfd6f3224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d336ae9f-8fa1-40f8-9f21-853dd75ded1b",
        "cursor": {
          "ref": "f517e6b0-d9d2-4b8b-ba69-c27cab42d861",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9c8c1c9c-c93f-412b-9eba-d4fd53ca068b"
        },
        "item": {
          "id": "d336ae9f-8fa1-40f8-9f21-853dd75ded1b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "34678430-3153-4afc-9188-68c28501471c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea886b6-6e35-4b7e-bb22-46399a92a734",
        "cursor": {
          "ref": "363359e8-1625-4494-b029-8e8745c9f3a9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1719b850-9eb1-46cf-98eb-5b399244ab5a"
        },
        "item": {
          "id": "5ea886b6-6e35-4b7e-bb22-46399a92a734",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4201a34c-0946-46d9-a42e-3604b5425f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf63ee96-e9d8-4978-ae3f-7059a71aac6c",
        "cursor": {
          "ref": "be725af9-4fef-49e1-b470-5cd7a9a8bd34",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "02fc54fb-9fce-445b-97ed-d98330cd5ea7"
        },
        "item": {
          "id": "bf63ee96-e9d8-4978-ae3f-7059a71aac6c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "08ea6017-4208-4d3d-ab09-2cbbd576a151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef824d7-7ea4-4b05-b999-c0419d4c8170",
        "cursor": {
          "ref": "b5b633c5-0e02-4a9a-9e9c-4ccb03355738",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "09e800f3-1636-4e02-9c7b-2633677eda98"
        },
        "item": {
          "id": "8ef824d7-7ea4-4b05-b999-c0419d4c8170",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5b94b834-1ae4-415d-b79d-8438eca7d639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3884eb4c-1d56-4220-95d3-659dba277fd8",
        "cursor": {
          "ref": "ff1b0e4e-0ea6-46ad-bbd5-e9baa5d1fa4e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d5a15fad-5dd4-4550-8925-203bc792ad04"
        },
        "item": {
          "id": "3884eb4c-1d56-4220-95d3-659dba277fd8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "283237ac-7ae2-45a0-8e1d-2f1ffe97f916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233da525-1cf1-4ca1-b213-082b71710094",
        "cursor": {
          "ref": "a2a0dd67-d89d-4d30-abe6-e8e4a6d9b676",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b855c81c-71e3-43ce-86ff-a71ee3d4d941"
        },
        "item": {
          "id": "233da525-1cf1-4ca1-b213-082b71710094",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5afa7725-a957-4a60-9ac2-b5f916ce0dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4311ae02-17a7-4a7d-bf5e-8574e00e0270",
        "cursor": {
          "ref": "60273786-3109-4d76-98b7-17c2b172db96",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cba64149-f1a9-4df3-9104-99f2252b8e24"
        },
        "item": {
          "id": "4311ae02-17a7-4a7d-bf5e-8574e00e0270",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b04e082a-80ae-4274-993e-79bb5dfe72f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5042a6-719f-4b7c-8bd0-e9b1e3c92657",
        "cursor": {
          "ref": "72fd1fde-6f5e-4314-8461-5d2b9276bd9e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3144c6f1-541c-444e-97e8-e50e56659103"
        },
        "item": {
          "id": "6d5042a6-719f-4b7c-8bd0-e9b1e3c92657",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c3d4e36c-381d-4287-82d7-982c2126ce11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a843e23d-625e-4789-bff0-c522530a4639",
        "cursor": {
          "ref": "f7e132cb-46be-401d-9ada-d0548f9d1527",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e0736842-38bc-4526-b852-d00a698e1ad1"
        },
        "item": {
          "id": "a843e23d-625e-4789-bff0-c522530a4639",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c56fb92a-9b4e-4099-b2b2-49a0dd6ce12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552a9b50-1e73-469d-aed3-b9deee702686",
        "cursor": {
          "ref": "5b0fb460-70cd-4d34-b536-c0010107c17f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "066d3cd9-35c7-4dbe-be81-bf2cda24fd4c"
        },
        "item": {
          "id": "552a9b50-1e73-469d-aed3-b9deee702686",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "207dca36-d448-4a5f-9279-304320d9c771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc74fd63-5e82-4f3e-8665-54b75715ecb4",
        "cursor": {
          "ref": "a87fc3f8-ee7a-4549-862f-89852ed069eb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eacadf84-e558-4b61-93a9-d61bfb225d10"
        },
        "item": {
          "id": "dc74fd63-5e82-4f3e-8665-54b75715ecb4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ea2e5c36-31a4-4c4e-9acb-293dd7b674ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47e7fbc-5561-4a71-bb6c-21352212cd30",
        "cursor": {
          "ref": "02ab4d0d-2455-437d-9978-53cb2697ce49",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b34d36b1-f50b-443e-9ba2-21c1390f8161"
        },
        "item": {
          "id": "c47e7fbc-5561-4a71-bb6c-21352212cd30",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dc03fbb8-801b-43d1-b4cf-b23e45caa92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edf1bf0-607e-4f5a-be4a-e8d256bd905c",
        "cursor": {
          "ref": "4f40837c-b06d-4548-92be-4e943d35738e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ca57e55d-e2d3-4ad8-a30c-f770846fd73a"
        },
        "item": {
          "id": "0edf1bf0-607e-4f5a-be4a-e8d256bd905c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "128d671a-b203-4745-8480-9d6327dc9ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232227ac-bf9a-450f-945a-f671ceda5abf",
        "cursor": {
          "ref": "f1d80390-57db-4227-a7a1-147658d8b652",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6fcd5b5e-aff5-421c-8a05-ee29d3807a0a"
        },
        "item": {
          "id": "232227ac-bf9a-450f-945a-f671ceda5abf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c92fcf32-6c13-42d9-93aa-4245d39332a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e170db-922c-4de5-9e5a-4cf042a021b2",
        "cursor": {
          "ref": "6a36ade2-f6b7-482f-8da9-dc013c52d2ce",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fbcf0dd6-af12-45f2-a7be-9c74b18ccb58"
        },
        "item": {
          "id": "f4e170db-922c-4de5-9e5a-4cf042a021b2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e26d404b-3cd3-4a1a-9fb3-f1bc3e687afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c8139d-a964-4e6c-8025-8a6f28994e80",
        "cursor": {
          "ref": "c2fca22f-a164-4a38-977e-ea7846c31917",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "95524338-e7d9-4ac4-a1db-5dfdd0770532"
        },
        "item": {
          "id": "76c8139d-a964-4e6c-8025-8a6f28994e80",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "989d9b67-76f4-4839-9e03-2af1dfbbc06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62e6656-ab10-4cbe-8551-bf107d4a313f",
        "cursor": {
          "ref": "24fe56ba-a99a-418a-9d08-6320497b7787",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f6e8dae4-4d83-4863-8a0d-5a5478150e71"
        },
        "item": {
          "id": "d62e6656-ab10-4cbe-8551-bf107d4a313f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f7b5e63b-cf98-4164-8e0f-a0b183f4cb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0588dc-afff-47bc-87fa-97c9ed72864e",
        "cursor": {
          "ref": "8e74935e-79b6-42a9-acfd-c07a26731aa3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0d7711ce-55bc-45a2-b720-5de4fda0bb99"
        },
        "item": {
          "id": "bf0588dc-afff-47bc-87fa-97c9ed72864e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "652b779d-7e81-4ab4-89fd-9be17cf84ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c16a3d7-f789-46b2-888b-246e424c16d6",
        "cursor": {
          "ref": "97062e72-ba7d-4090-a658-eaa3eb096d0c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "537cb1a8-7b33-4a78-8f90-dd3dabe4653d"
        },
        "item": {
          "id": "1c16a3d7-f789-46b2-888b-246e424c16d6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b7efe4a4-c4cf-4fff-8323-074ee1f1481e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1867cc6-93ec-4e0b-bdf9-559bceb67bcd",
        "cursor": {
          "ref": "8d6c0286-bcf1-4e26-8f60-5e4ef44e8b9f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "20d71b9a-3895-4b2b-8f2a-452e55b64fdd"
        },
        "item": {
          "id": "b1867cc6-93ec-4e0b-bdf9-559bceb67bcd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2ef64b06-3bd0-4696-850d-922ef9d0ff4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef633d6-8ade-446b-a9b6-f89dbc93273e",
        "cursor": {
          "ref": "bc72d6e6-2158-4c3c-8efb-425f6e7c9d30",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a8915912-aa34-4530-acf4-08f320bd08c0"
        },
        "item": {
          "id": "bef633d6-8ade-446b-a9b6-f89dbc93273e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f1e3b56b-4cf4-4f93-8602-fc1d18679932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c8e985-05a8-47d0-a93d-f5bc7e59d937",
        "cursor": {
          "ref": "449960e8-538a-4bb8-8ec0-cd34b3db0bb6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b5cafaf4-6d12-4d14-a7c3-cb6004b0b538"
        },
        "item": {
          "id": "f0c8e985-05a8-47d0-a93d-f5bc7e59d937",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e09736b3-8956-45a5-89e4-f799777c720d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1a9b32-00eb-4660-ab74-2ef6d2c7bb61",
        "cursor": {
          "ref": "873b50be-f984-4dbb-87d5-f2fc69d161c4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6179d5b2-ba32-4744-b731-e2cf15e42557"
        },
        "item": {
          "id": "1e1a9b32-00eb-4660-ab74-2ef6d2c7bb61",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "93bd4ca9-4ea3-4fbf-ac63-9473ed8978ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40d3db7-60c4-4712-9e2d-9b449dec9d23",
        "cursor": {
          "ref": "1e4e43c6-9ac1-4a8f-aebe-9e68c7c2a40c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "77ae28cd-ecfe-4ab1-a592-aa4cfd835f5d"
        },
        "item": {
          "id": "d40d3db7-60c4-4712-9e2d-9b449dec9d23",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e5481497-cf10-4fca-8964-5cf84ee1ea4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e8a668-6d86-40b1-a824-64f47e3851a2",
        "cursor": {
          "ref": "91e8437d-7586-40c2-bd45-f02b3fac5b95",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1cc643d9-fb03-4a14-8f0f-3c0b3ab7bf53"
        },
        "item": {
          "id": "e2e8a668-6d86-40b1-a824-64f47e3851a2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "622e6840-9a48-4d70-9126-9b22ea82434a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcb7d9f-70f8-4f51-b362-269b9e64a2bc",
        "cursor": {
          "ref": "9837f8ec-71a2-4ad6-a5db-2b7a39d707ba",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "60c618a3-da18-47c0-b4a1-36821c2a6fee"
        },
        "item": {
          "id": "2bcb7d9f-70f8-4f51-b362-269b9e64a2bc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "de3bee8c-015d-4239-922b-3d8dc0c7b186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb870f04-4844-4fa6-8ac2-15554ef5687b",
        "cursor": {
          "ref": "403d4c65-ada0-4a20-8c5a-06ef1b7f1705",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a55ab78a-ccc5-4b0b-bd2d-1b0cef99367a"
        },
        "item": {
          "id": "eb870f04-4844-4fa6-8ac2-15554ef5687b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d09954d2-6137-4cf8-8dcd-344b01afc225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8711cf-78ce-4c21-bad3-3806c75ed789",
        "cursor": {
          "ref": "ef089576-44b9-43c3-b017-6a70afc4ba2c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "281c393f-371d-4f54-a931-d8a793b9ecd1"
        },
        "item": {
          "id": "db8711cf-78ce-4c21-bad3-3806c75ed789",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "185b1ea1-e360-44cb-b978-1a6d4c81159d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d515cd9-c00c-4c74-bddb-2594ba8d4048",
        "cursor": {
          "ref": "aa66b45b-97fb-4e4f-9639-3febed27d16e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f6677a26-e27b-423f-9331-ab687be7b5f5"
        },
        "item": {
          "id": "6d515cd9-c00c-4c74-bddb-2594ba8d4048",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eec0d456-3fa8-46d5-aa08-8d1f93459191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972f631f-cdc5-4bed-9653-29bff7c05cd5",
        "cursor": {
          "ref": "13667bc1-754a-4068-8d5d-deabcd81176e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4705a0c6-3307-48ef-866e-415a9cf74f2f"
        },
        "item": {
          "id": "972f631f-cdc5-4bed-9653-29bff7c05cd5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b4acbbde-f1cc-412e-bad9-70661cff8b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34d7a26-be9f-419e-99af-a76fb9b8e3d3",
        "cursor": {
          "ref": "30745158-c28f-4abe-92b2-92a75e086cc8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "738c7ca3-1215-4e16-a777-7029ba2cbba8"
        },
        "item": {
          "id": "d34d7a26-be9f-419e-99af-a76fb9b8e3d3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c06e041d-8e2f-41fc-9718-ed8b5c0608e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03338ccd-46b6-4808-a2f5-2a54ae71d281",
        "cursor": {
          "ref": "b6cc0e86-3996-4d9c-a199-ec2493285803",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7c5fad9e-9b5e-4d2a-808e-f9b8e81b41b7"
        },
        "item": {
          "id": "03338ccd-46b6-4808-a2f5-2a54ae71d281",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4f2013fd-7bf5-4b3f-aabb-4b8c85e4a457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c0aeb8-cbac-4d49-9064-f15242bdd811",
        "cursor": {
          "ref": "e134142b-a602-456a-932d-e5e516c2b8e5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "579692bc-dae5-4bdc-af6f-c4458a9fc979"
        },
        "item": {
          "id": "46c0aeb8-cbac-4d49-9064-f15242bdd811",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a14f4c93-ddae-448f-a043-74d463fd4bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5ff273-17a8-464e-9fc9-d743db2b072a",
        "cursor": {
          "ref": "d1b83eff-115e-4c51-a8ab-efa1bfc0b856",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "217d0006-642c-4132-95ec-8d1546efb783"
        },
        "item": {
          "id": "7f5ff273-17a8-464e-9fc9-d743db2b072a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d3cd0d0a-611f-4fc3-86ac-4a14336ed687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fdeb72-e940-46a4-b8a3-996ee421ed93",
        "cursor": {
          "ref": "2d54b9da-5212-4c1f-90b1-5d1a757f919c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1e95cc79-2a2a-4bc7-9049-cb0605aebce3"
        },
        "item": {
          "id": "d8fdeb72-e940-46a4-b8a3-996ee421ed93",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bb491bd6-d983-4213-9300-7e31ff4263a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fea17f-9345-4bfd-9589-d60f503c7aae",
        "cursor": {
          "ref": "13794b5f-64ed-4c51-868a-6c4b8db7751c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e3040c1c-c5cf-4b84-8b73-36fc7fbe6ccf"
        },
        "item": {
          "id": "01fea17f-9345-4bfd-9589-d60f503c7aae",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "59034f9f-ff24-42f0-b28e-7026a1475392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9fe726-71eb-4cfe-b074-178e2ba82c2a",
        "cursor": {
          "ref": "57dd966e-989c-465f-82e7-4912fef05ca3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "87f62067-be5e-4f5e-9d16-63c729dadb85"
        },
        "item": {
          "id": "ed9fe726-71eb-4cfe-b074-178e2ba82c2a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8fed5e88-812c-49c4-8c11-e9ff3d7121ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aa9295-72d0-4099-8cb4-94bf64d0c211",
        "cursor": {
          "ref": "c490d732-8e06-4535-9914-8571cf62a366",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "139f20e2-14db-4fd5-9c6b-ed63c4bf384d"
        },
        "item": {
          "id": "a9aa9295-72d0-4099-8cb4-94bf64d0c211",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c5c1cf8b-139f-49b9-b36b-5535271f51ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84e29f9-23ba-489e-ab30-89596641ec16",
        "cursor": {
          "ref": "6ad99acf-6241-45c1-80f6-1c64d1fe156a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dc696150-b57c-495b-bafb-8b210c923186"
        },
        "item": {
          "id": "b84e29f9-23ba-489e-ab30-89596641ec16",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "afa54a1c-e383-47f0-b594-2c07a7c8814d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f3529e-20b1-4519-8734-2c5da92410bd",
        "cursor": {
          "ref": "6c5f0b15-0c8f-4031-8ee7-84b6ea12dc15",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3b2dd2c9-462d-402b-b6e9-6bec9815335a"
        },
        "item": {
          "id": "c4f3529e-20b1-4519-8734-2c5da92410bd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4f2c189d-c9ee-4212-a7ae-c8ee7f879199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bca53d7-7d29-4b39-bd15-c6ddc5d526e4",
        "cursor": {
          "ref": "a2db46be-3919-4c3f-8a69-dc9533214180",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "236ec650-88a3-4f2a-b3a5-ef02965783c7"
        },
        "item": {
          "id": "7bca53d7-7d29-4b39-bd15-c6ddc5d526e4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "da5e6e9c-436b-4811-b4ca-8db6c0886fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc2a284-572b-4e99-ba36-3c515f4c5404",
        "cursor": {
          "ref": "00925349-3340-463b-87c7-2bc8454a8da9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "96b5ff45-aecb-4470-a6cc-b957b428a170"
        },
        "item": {
          "id": "ebc2a284-572b-4e99-ba36-3c515f4c5404",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "508f2848-98ae-4ac6-99d7-7434f7b8a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490c1023-7bce-452b-99ce-a6fd24f705da",
        "cursor": {
          "ref": "8bb82441-e33c-43de-9518-797cb5e2eb95",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "268b68d3-36fc-41a7-91cd-9ef5570db642"
        },
        "item": {
          "id": "490c1023-7bce-452b-99ce-a6fd24f705da",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1ffe376e-cb40-430b-96f7-5ca918e21987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef3dc63-00e5-4943-9534-ca6aa7c8a732",
        "cursor": {
          "ref": "fad08958-1bf5-4b2f-a8d9-8e1eb0443a4d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5cdc404e-464e-4fde-82a0-6556b9252c20"
        },
        "item": {
          "id": "3ef3dc63-00e5-4943-9534-ca6aa7c8a732",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f47f3766-614a-4b61-868e-aea0e7fee8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6f773d-9a4c-4cbf-b538-2aa499f1f1ff",
        "cursor": {
          "ref": "7346cf00-82b6-472b-9d7c-d7bc803427ff",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b614839c-03d5-48d5-9a95-684b464013b2"
        },
        "item": {
          "id": "8e6f773d-9a4c-4cbf-b538-2aa499f1f1ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "852cc3ad-e188-4c4f-b572-a06a12c3af15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7614bf5d-8fe6-4ccb-baf0-12f91ed03b33",
        "cursor": {
          "ref": "e16aabc0-c938-43b7-a329-7450a7a0ab33",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b17ecae2-9343-4c09-9150-dc701ee8cf4e"
        },
        "item": {
          "id": "7614bf5d-8fe6-4ccb-baf0-12f91ed03b33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1fe32f7f-e63a-4430-a9ad-fcbe4f4f47e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d408cd6c-6981-4430-a874-405458da293e",
        "cursor": {
          "ref": "86fe6260-6cdf-4a52-9d2a-462ee671cd75",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "97cc272e-54c1-499c-a2a1-d4adf47ab3a7"
        },
        "item": {
          "id": "d408cd6c-6981-4430-a874-405458da293e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "14d4e59a-f020-4d2a-b2c0-3759e68ea47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4afc27a-8707-4be1-b170-b6fa56556648",
        "cursor": {
          "ref": "f0c969cc-086c-48a1-a2ac-c577757c349c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a798a17e-949b-403c-a6b2-d619576403b2"
        },
        "item": {
          "id": "d4afc27a-8707-4be1-b170-b6fa56556648",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b4e6903d-11cc-4c93-87b9-f9ac0527957b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960dab13-7449-4eb6-9ca3-ce027217d930",
        "cursor": {
          "ref": "0848e34e-7604-4305-bdef-72c1a3cf4052",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4724d7cb-d379-499f-9c18-a0de324b8b9a"
        },
        "item": {
          "id": "960dab13-7449-4eb6-9ca3-ce027217d930",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "14ec6365-e80b-4c1d-aac9-f15a8c1c16ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d469bf00-1c14-40d0-85ee-ce5282873a06",
        "cursor": {
          "ref": "912ae7af-03eb-4d8b-a222-80b16c275d48",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f3457b94-13bb-4d6e-bbb8-90cdd0c9df4b"
        },
        "item": {
          "id": "d469bf00-1c14-40d0-85ee-ce5282873a06",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "84170f6d-2197-4ef5-bfe6-cde3a25c5ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc28a0e8-152a-45a4-bd5a-8792bea4d968",
        "cursor": {
          "ref": "ab251cf0-c01e-4476-a2dc-ef0a9a757736",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "94022667-7b17-44f8-ac11-88276741aae4"
        },
        "item": {
          "id": "fc28a0e8-152a-45a4-bd5a-8792bea4d968",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "43dcfaa8-0298-4de3-b76f-24ded0a50504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50442a6-eca8-4bf2-9e6a-4e8ced41dcd3",
        "cursor": {
          "ref": "9d5a520f-d7ce-428b-a783-e2e3578eb688",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bcf9bc37-bd87-4d78-a932-67c63ece3a12"
        },
        "item": {
          "id": "b50442a6-eca8-4bf2-9e6a-4e8ced41dcd3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6ebb0ca1-dee3-46c5-b600-518c7a32276f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0610762d-f723-4704-8c51-d8fea8808283",
        "cursor": {
          "ref": "ce9deace-609d-40ab-96bf-a5a69e9ba97e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "59d8ec81-aaab-4ac8-908f-ec85bfa0ae62"
        },
        "item": {
          "id": "0610762d-f723-4704-8c51-d8fea8808283",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ce74afd7-ac8a-4206-986d-8a786fdcb831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360238ee-5677-4816-8380-da93c98ce2d2",
        "cursor": {
          "ref": "8c42f734-909a-4ffa-9856-a3881ac998dd",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bdee26e8-509a-4432-9271-1499fcb6ec52"
        },
        "item": {
          "id": "360238ee-5677-4816-8380-da93c98ce2d2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c8d10803-4859-4f20-8f84-85a9f3a21f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19477c69-f1e4-484f-b2ec-c4c7240eceee",
        "cursor": {
          "ref": "9ae21a51-77fc-4fe1-a373-74d45e88c510",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "46ccff6d-ffda-4cc9-bd8b-37d09382ef0c"
        },
        "item": {
          "id": "19477c69-f1e4-484f-b2ec-c4c7240eceee",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c20b9214-aa4e-4c82-9fec-d9ee5beec29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75375e1-6bf3-4746-baa7-50a950f99a30",
        "cursor": {
          "ref": "ff1f6b09-e2b3-4770-8f60-36c911493662",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "969074e7-7b4d-4cc9-b5d8-9d1a72e5c092"
        },
        "item": {
          "id": "c75375e1-6bf3-4746-baa7-50a950f99a30",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8b934708-a99e-4ab7-82e2-7d9c43b89cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcdb850-7f8d-40ee-bfbe-05a39143ae5c",
        "cursor": {
          "ref": "e88a9f45-5ba5-488e-b37e-239434a2387a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "888cb232-7282-4e45-bcbe-9137b8c1fe5a"
        },
        "item": {
          "id": "3fcdb850-7f8d-40ee-bfbe-05a39143ae5c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "27dd1ae4-842a-4771-9496-def2b39539d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5057b9c7-c63d-49aa-8a48-919ad9650d93",
        "cursor": {
          "ref": "6428e7a8-6add-4cf9-b80f-27c807d16d44",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5c53ba0d-5c2a-4549-953d-a960437060a9"
        },
        "item": {
          "id": "5057b9c7-c63d-49aa-8a48-919ad9650d93",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "79c2e3fd-a3af-48c4-aece-2337e4255d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bd7791-11f1-4f3c-8a1c-99aca852101c",
        "cursor": {
          "ref": "9b80ccd7-9d92-4938-9d27-0d66c269504e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a90b5989-8d37-4c80-8aab-9a5223fa02bb"
        },
        "item": {
          "id": "e5bd7791-11f1-4f3c-8a1c-99aca852101c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f944ddac-e6a6-4e83-be9a-2c3eed813392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a14791-f4d6-42ee-b3cb-efa50877d9ca",
        "cursor": {
          "ref": "72d526ae-ea8f-4480-971c-7a2a02894521",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "91923eac-ccc8-4741-961f-58a628fabcc9"
        },
        "item": {
          "id": "34a14791-f4d6-42ee-b3cb-efa50877d9ca",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8a5e38ec-98a6-497e-b088-29813f783ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bda18b9-9780-4c40-984f-486143c250f1",
        "cursor": {
          "ref": "5c027e7c-0cd1-4ec6-b07e-f93ab7a08ea5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b092972d-302a-49cd-a897-6348de9e5782"
        },
        "item": {
          "id": "2bda18b9-9780-4c40-984f-486143c250f1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6119821b-83f3-4aeb-b40e-833b24ef871c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8750d494-0dec-4d13-9d3e-235dbcea022e",
        "cursor": {
          "ref": "0a1d68f9-d25f-4a79-82ed-139a2067653a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9ddce621-d320-4671-b720-baf1ec02ea3a"
        },
        "item": {
          "id": "8750d494-0dec-4d13-9d3e-235dbcea022e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "322f9628-ad4f-4588-a48b-e2829442dfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0adb1b2-0001-4d02-9672-7bb90f2aac71",
        "cursor": {
          "ref": "d4cfbfe7-95b7-47e3-99de-f72ef3fa8494",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "deb1f2d1-100d-4359-9e9f-912f0fbd5689"
        },
        "item": {
          "id": "d0adb1b2-0001-4d02-9672-7bb90f2aac71",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "59d20eb5-9c65-4c59-9f6f-0378af09dbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18cf6bf-7f12-434f-bcba-dadfdfc4d6c3",
        "cursor": {
          "ref": "8bed9f18-749a-4ad8-b760-38a4d15e12c6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "29374bbe-11ab-4e4b-9f06-0185d4bc7535"
        },
        "item": {
          "id": "c18cf6bf-7f12-434f-bcba-dadfdfc4d6c3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9a00975f-1cf2-4d6e-a3c7-2bb534ac0d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d437d051-7db7-4c6b-a93a-37f217aff96e",
        "cursor": {
          "ref": "f398e650-4b5f-4b10-88f3-e7332f17f1f5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5a8b8651-583d-447f-976d-65941f7ecbdb"
        },
        "item": {
          "id": "d437d051-7db7-4c6b-a93a-37f217aff96e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f5b1783b-0a2f-472a-9fa9-c2576bcb5dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe81fb18-afca-4806-b1d5-fc9744e44e37",
        "cursor": {
          "ref": "b0f36256-a2fe-43b0-ba17-781391fedf07",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4e87972a-ad23-4768-82c0-da7d62e371b6"
        },
        "item": {
          "id": "fe81fb18-afca-4806-b1d5-fc9744e44e37",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "98ac0d9c-e044-42b3-9f5f-bfccf3c256b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b885ffb-dd5c-47b2-b0e3-e570b47ac82c",
        "cursor": {
          "ref": "70241e79-c379-47a4-8968-982a22d397f8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "72adae28-9f01-4669-8558-b1149014939e"
        },
        "item": {
          "id": "7b885ffb-dd5c-47b2-b0e3-e570b47ac82c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "22d5e226-f7fd-4eb1-a006-063bcd5301d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7342aef2-fd71-480a-ba4f-5fc5466ab8d8",
        "cursor": {
          "ref": "7ba9d2ce-c3ac-4137-8873-6c59b2c167b3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "314598c4-e7fc-420d-b582-70fe81fb71e3"
        },
        "item": {
          "id": "7342aef2-fd71-480a-ba4f-5fc5466ab8d8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3bd1159f-2147-4278-bb63-ba5afc7e4ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568e18ba-6143-4725-adf3-bcfa1920504c",
        "cursor": {
          "ref": "d1f6bc2b-9c02-4663-a2ef-08ac635350bf",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a7957b79-0533-4fb3-9e53-4c2774083cfa"
        },
        "item": {
          "id": "568e18ba-6143-4725-adf3-bcfa1920504c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b2b69907-cb78-4cfa-85d4-88ef42f9c344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d12112-3392-4677-b53c-1f1a532695bf",
        "cursor": {
          "ref": "3d35125f-63cc-44e1-80be-9c463324278f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5db7df4c-6f3f-4d49-b2f2-ac65883f0f55"
        },
        "item": {
          "id": "06d12112-3392-4677-b53c-1f1a532695bf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "546191a0-6bfb-4425-85b9-fe11da5c6c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3e9413-2899-42b7-87d4-2059d74101cb",
        "cursor": {
          "ref": "0da9ff2e-9e61-4b86-9eea-ba9baf74ae64",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4a8894b4-b62b-4c2d-b939-8a911517dd85"
        },
        "item": {
          "id": "bd3e9413-2899-42b7-87d4-2059d74101cb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "94ea3346-a9d3-4f89-a631-a65416851826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d971324-2672-4123-a159-9e9713bfec83",
        "cursor": {
          "ref": "db3b629d-10e3-4e6a-a862-439397e21e25",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0564289d-b8eb-4551-89da-0f46b47487f6"
        },
        "item": {
          "id": "8d971324-2672-4123-a159-9e9713bfec83",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7ca12603-4eee-488d-b5c3-5bd87ea9d6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5ea304-919a-4fad-8fb9-aa8c8ea30582",
        "cursor": {
          "ref": "97cd5838-7c08-4d56-9964-17b1446f2770",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "580665a3-7eb6-4c66-bfc8-f20e9e90c855"
        },
        "item": {
          "id": "1e5ea304-919a-4fad-8fb9-aa8c8ea30582",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6fe1f124-93c2-41b2-acc0-0218666031c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb21f84b-7120-4600-a282-add8664c5605",
        "cursor": {
          "ref": "c10df8a7-ccf8-48be-bf26-bb9464a7f469",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "94869a06-53aa-42be-88c0-d53f00b42b04"
        },
        "item": {
          "id": "bb21f84b-7120-4600-a282-add8664c5605",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3d442c41-e251-4b1b-8416-72890666dfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f4b119-33d2-4fcc-b315-4f8dba01a1ed",
        "cursor": {
          "ref": "7077d7a1-0307-419d-b614-6561c395167b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e98c3350-86ab-41be-b0be-0a2a2d935c63"
        },
        "item": {
          "id": "78f4b119-33d2-4fcc-b315-4f8dba01a1ed",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "06f384ea-8eb0-45db-976f-bbe74fa08ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e81317-c259-4a03-8235-39c04944b622",
        "cursor": {
          "ref": "48b47160-7ad5-4b03-ac69-d035ac2e6abf",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ff5de585-c3e2-4a74-9f3c-1e62ee0804c4"
        },
        "item": {
          "id": "87e81317-c259-4a03-8235-39c04944b622",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e02e79a0-ef73-40a4-b06c-83c56f5b1aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdeecd1-c5b7-456c-afcf-f3067edf9a49",
        "cursor": {
          "ref": "4d05b7ee-a451-473e-8ab4-1f3cd47160b5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f861ff23-ee09-43f3-8e47-37b8e9033cac"
        },
        "item": {
          "id": "3bdeecd1-c5b7-456c-afcf-f3067edf9a49",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9e1f773b-55e5-4db1-8e3e-794d2c2c0745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e4d740-0e95-4a09-b402-7b953e5b6cf2",
        "cursor": {
          "ref": "375b3c5b-8b6a-4f25-8ebb-e8bda86b34b5",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d56d5a6d-312e-4cce-a281-db3d3edb8ad4"
        },
        "item": {
          "id": "b6e4d740-0e95-4a09-b402-7b953e5b6cf2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e810d932-00f3-4091-8538-7ff4e4af3923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6212a914-f0e2-4824-be42-3588b94d72f2",
        "cursor": {
          "ref": "11164ee2-c45b-448b-9b49-77e1690b3b14",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4eb5a7a9-8829-4ae3-8bb9-e545bda2be82"
        },
        "item": {
          "id": "6212a914-f0e2-4824-be42-3588b94d72f2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7bb4e634-753a-4a18-b936-7780d6852583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1787332-bb5e-4de2-a6d5-166c8feb2c3a",
        "cursor": {
          "ref": "6c0de3c4-2ef5-4185-ad2f-5a6936b66fd2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b7893f09-4e00-4431-a9fd-7ac32f87a610"
        },
        "item": {
          "id": "b1787332-bb5e-4de2-a6d5-166c8feb2c3a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e3a275b6-2159-44f2-b9a7-af760402ec6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f3b33a08-43f3-4a8b-ad20-a5fd8325d24f",
        "cursor": {
          "ref": "b2ef6215-6289-4e67-bfc5-e4ca92e4e023",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "05ad054a-f82e-43c7-8314-dd6992004e9c"
        },
        "item": {
          "id": "f3b33a08-43f3-4a8b-ad20-a5fd8325d24f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "555d29b9-52b6-49e9-845c-bd862ff1f78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "787a84ea-3a5d-4d52-b2d6-abd426b8bcba",
        "cursor": {
          "ref": "bfa68480-8044-4b4e-8a35-18ab76b884a0",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b5e5a53d-70c9-4555-9fcf-f89675b8e3e6"
        },
        "item": {
          "id": "787a84ea-3a5d-4d52-b2d6-abd426b8bcba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1673171b-fa41-4551-9d01-7e1bc65e7039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5e509730-4fdf-45ce-90ef-043b9372f73f",
        "cursor": {
          "ref": "fb6cf76e-07b4-4f79-810b-61170f6611ea",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "859ad7b9-b11b-4293-aa63-d6fa25dc0b5a"
        },
        "item": {
          "id": "5e509730-4fdf-45ce-90ef-043b9372f73f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5d4ec75c-8cbe-438a-b7db-87fdff0695da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "809da23e-eafc-4458-ac72-e2d5f95b475d",
        "cursor": {
          "ref": "e93eb1a3-a313-4e76-b73d-439a5e95fbe3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a78a2f6b-77c6-4b8a-ab32-87a7b1662d8b"
        },
        "item": {
          "id": "809da23e-eafc-4458-ac72-e2d5f95b475d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "923b0226-59ec-43eb-9a53-8d18595fc21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "48e45bb2-8c34-47d6-86c1-7848f2039310",
        "cursor": {
          "ref": "642477f8-9250-44cb-bf15-0d1856fa310d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "641bc1e2-53f8-4596-baa3-d043da71ad18"
        },
        "item": {
          "id": "48e45bb2-8c34-47d6-86c1-7848f2039310",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "687fc1d5-3c75-400f-8618-f3947debd51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "959f99c8-49e9-4ed1-a810-7cd82b77856e",
        "cursor": {
          "ref": "173b1803-92eb-41c1-974e-1e4279d66b5a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4c57316a-15f3-43fa-944c-6a2975238d4c"
        },
        "item": {
          "id": "959f99c8-49e9-4ed1-a810-7cd82b77856e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5cd1de0a-95dd-40c9-88ec-0c5ff6bc848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8e420fb0-1053-4b2c-aeb4-91aa693c1599",
        "cursor": {
          "ref": "e1236b42-e9e9-46d9-87e6-02c6c8a244a9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fc155321-fdda-45be-b7d2-1112a9720988"
        },
        "item": {
          "id": "8e420fb0-1053-4b2c-aeb4-91aa693c1599",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "529a7288-695c-4ef2-b17d-55271f62dafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5825170-c85f-4cd0-9195-9a685790437f",
        "cursor": {
          "ref": "5374226c-ee22-4764-b29e-ec60862d21b0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d279bbd3-2e8a-43f9-b82d-4d91f093a653"
        },
        "item": {
          "id": "e5825170-c85f-4cd0-9195-9a685790437f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4ee6d487-d2bc-4619-b529-7915198b0ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b5ee46-e7ba-4039-ae5b-e3e9da556180",
        "cursor": {
          "ref": "e50148e5-2fc1-49ad-92ad-69d159e1d988",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a45542f4-b0d9-4549-a724-5699b7d21bbe"
        },
        "item": {
          "id": "27b5ee46-e7ba-4039-ae5b-e3e9da556180",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1aa5d403-b139-479e-8952-e0d210d27fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3641adcd-0125-4e03-b134-d43833a88360",
        "cursor": {
          "ref": "fbee1a1d-2a08-4a48-bb70-1ebc710b1ee4",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5cde43d7-c175-412d-91e3-e8e1c02659ba"
        },
        "item": {
          "id": "3641adcd-0125-4e03-b134-d43833a88360",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "730a5327-0627-4d89-b13c-a73d25009cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64b84f4-0c25-4c09-a8bc-97793f715b7f",
        "cursor": {
          "ref": "373c1e0c-2043-4356-bed2-56246bddbb13",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "41d83614-182f-448e-b9e9-11df96b688f6"
        },
        "item": {
          "id": "b64b84f4-0c25-4c09-a8bc-97793f715b7f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a6aeda44-c5a3-44ee-abcb-89a4c834ebf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b092e7e-ae3d-4d8d-9f83-01d5a6260c53",
        "cursor": {
          "ref": "2132a95b-68c3-4842-8396-03cab11830fb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "06de671e-d7f4-4863-bbce-3611242971c1"
        },
        "item": {
          "id": "9b092e7e-ae3d-4d8d-9f83-01d5a6260c53",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "18cc7225-fa09-4a0a-8708-fa7c97ee2da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecebea0-45d1-464c-8388-398e304d5cea",
        "cursor": {
          "ref": "0fde0c00-45e1-47f6-adac-783a6cf8a61f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5a5435ad-4078-424f-b4ae-8a2aefd3f716"
        },
        "item": {
          "id": "fecebea0-45d1-464c-8388-398e304d5cea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1410fbf3-d073-4618-aff8-f5073fa42d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775a144b-fcdf-47ba-a930-1eaa54c31504",
        "cursor": {
          "ref": "e97c5266-272a-421f-9c5a-3d2ff710c8ad",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "68747c1c-92c5-4789-bfd1-74c4e107dddd"
        },
        "item": {
          "id": "775a144b-fcdf-47ba-a930-1eaa54c31504",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9d037d9e-b49a-4925-b70a-9dffee69d4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fc2839-7417-4cbc-b790-9ab4d170b2ca",
        "cursor": {
          "ref": "55172e9d-8903-4002-89b6-44a1bc4bc8a5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2e6cd62d-9410-4195-af18-a2d760ab0756"
        },
        "item": {
          "id": "48fc2839-7417-4cbc-b790-9ab4d170b2ca",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5875de47-804a-47cd-be49-bbabac84e1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7cfac3-5eb7-4ac9-ba7e-dcc53b3dfcad",
        "cursor": {
          "ref": "25206c5a-34f2-4470-bb5b-751a6ec80cf9",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "acb2081c-91c1-4a8e-9023-063b19f8ce28"
        },
        "item": {
          "id": "4c7cfac3-5eb7-4ac9-ba7e-dcc53b3dfcad",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8ce364b6-1fed-4ee8-9ce4-eeb19d43dc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ad1b2d-b374-4149-ac89-c79f0065ffa5",
        "cursor": {
          "ref": "df767784-56fc-4f94-93d1-28ee0fade006",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6b3103de-c15a-47a8-b92f-2d942f9f2c73"
        },
        "item": {
          "id": "70ad1b2d-b374-4149-ac89-c79f0065ffa5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5767e03c-8d5f-4d42-bdab-37cc3e587c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fa1dd8-ae25-479c-9319-68edf40ae9fc",
        "cursor": {
          "ref": "3db2ef7a-b93b-4ae0-8b83-9fb0e593b6e7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1f402652-41a6-4207-a3c5-77c057b9633c"
        },
        "item": {
          "id": "f8fa1dd8-ae25-479c-9319-68edf40ae9fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "67144e14-9632-4abf-8add-17eccb216489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f545da-3d2d-47ce-a72f-56b9876fb3aa",
        "cursor": {
          "ref": "7cfe8af7-966d-4d9d-b530-8e973c2ac4e2",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "169f0506-c4d8-46f2-be2e-509b53bee294"
        },
        "item": {
          "id": "66f545da-3d2d-47ce-a72f-56b9876fb3aa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b5e802ce-05a4-4ab4-8e4d-989d1df541cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99918a3c-a229-43d6-b7a9-f4f2df063abe",
        "cursor": {
          "ref": "1063496b-965b-4285-988d-2b5fcbd2996b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "12af47e3-5d6f-4627-9312-83fef7df112d"
        },
        "item": {
          "id": "99918a3c-a229-43d6-b7a9-f4f2df063abe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2bb00222-c819-4d92-9b11-9646b83f35f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbb428d-7a68-41b8-9906-6f159e11d257",
        "cursor": {
          "ref": "2e74b045-d2ab-4b61-bea9-44337baf553d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "04f57753-20b5-4bfb-a015-6689412a0485"
        },
        "item": {
          "id": "9dbb428d-7a68-41b8-9906-6f159e11d257",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "da4f62f8-da47-49d6-8eb1-de444646ddc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86febded-a61a-495d-bca1-f55a16536dd4",
        "cursor": {
          "ref": "90e4e1a1-3f41-4d21-84a8-f0dfa8d81184",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5169dca9-d758-4c81-a47f-611310647cb0"
        },
        "item": {
          "id": "86febded-a61a-495d-bca1-f55a16536dd4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "862ea4bd-5ff6-45ea-a160-45d55fc58f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145ccf63-a9d1-4b47-90a4-9433b9ce6603",
        "cursor": {
          "ref": "3068dcb7-3f5d-44f6-9143-14016fda4042",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7e63cd00-8034-41cb-aa40-761f2fa826a2"
        },
        "item": {
          "id": "145ccf63-a9d1-4b47-90a4-9433b9ce6603",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "80e874c1-1bbc-4154-bec0-76b9ad180e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce891eda-c36e-4bcf-b0e0-5b6554379ed7",
        "cursor": {
          "ref": "7cc62c82-e088-4e48-bbde-e7844591df1d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9f1b4b4f-0900-4c9d-ab86-91032eefb89b"
        },
        "item": {
          "id": "ce891eda-c36e-4bcf-b0e0-5b6554379ed7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "56f5fade-3bb4-4c46-b760-57e0799d8584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b54598-cbd1-4749-a083-82486c00b200",
        "cursor": {
          "ref": "ef89929c-9205-48c1-b542-e59776e3782b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a2bc6de4-0596-4e0e-9de8-7cf6c90e5c04"
        },
        "item": {
          "id": "28b54598-cbd1-4749-a083-82486c00b200",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "da29c769-8596-4b5f-96b9-ee8c76dadff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc58da62-b30d-4597-8148-f8cdcb6977a8",
        "cursor": {
          "ref": "95d5948a-a4ed-4b26-bc73-6ab9c90c0dc4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "408a7012-5058-4c66-a135-42989dfcac4d"
        },
        "item": {
          "id": "dc58da62-b30d-4597-8148-f8cdcb6977a8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f2d82390-b000-4cc1-af6e-b38ea85db0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f8fc5b-1123-47b0-b3aa-6c3478c14df2",
        "cursor": {
          "ref": "df51bcde-65ea-4569-b501-04b86210439e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "44b7fb3d-b5a8-48c4-8d5b-5c8fde89b015"
        },
        "item": {
          "id": "46f8fc5b-1123-47b0-b3aa-6c3478c14df2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "549e7746-38d0-4f3d-8ab4-93c382a0672d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2401f2-8d35-429b-8c42-422f6a493da2",
        "cursor": {
          "ref": "a12b15d4-f140-4489-9cf7-8eed13bc5984",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0ba57d90-54f5-4162-8e05-72188a2e8694"
        },
        "item": {
          "id": "fd2401f2-8d35-429b-8c42-422f6a493da2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ab628254-fc55-42e6-adf1-a63e7a429e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3ae33c-f267-4929-b0f3-a45acd166551",
        "cursor": {
          "ref": "57c1125f-dd54-44d4-843d-8eceb6064b31",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8cbb5d48-eac0-4eba-aab4-d6147bea97be"
        },
        "item": {
          "id": "2c3ae33c-f267-4929-b0f3-a45acd166551",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eb5f2ec0-c7b3-45c9-9e6f-898a41dc83f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1231c269-6eea-4bf9-a539-64e01e6e014c",
        "cursor": {
          "ref": "f693181b-1149-4170-b945-12853dd6bca0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6b704bed-6c20-4fcd-be8c-a943349b051f"
        },
        "item": {
          "id": "1231c269-6eea-4bf9-a539-64e01e6e014c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aa19e399-44c0-4419-a1b6-5e45be8de9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee07bf4-1820-49eb-9dfd-b1b89ad7a179",
        "cursor": {
          "ref": "0a6aa97c-5ddf-4bfc-ba16-7b691494558a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "89069768-5413-4704-9a54-8635db2097f4"
        },
        "item": {
          "id": "cee07bf4-1820-49eb-9dfd-b1b89ad7a179",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9faceed1-30c9-49ef-b17a-2d26a36d0345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369700b0-043e-4067-98f2-5a67131480e6",
        "cursor": {
          "ref": "9536ad18-865c-4e03-996f-02e37acc801e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "91e40fde-5e28-43eb-90ff-21bd8b256c3f"
        },
        "item": {
          "id": "369700b0-043e-4067-98f2-5a67131480e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f81b6129-07da-47f0-91dd-c85846f538b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182b5ddd-f43e-4b20-aa94-4926a22ce68d",
        "cursor": {
          "ref": "c01163e6-ec91-4c55-99db-37c41385c7a7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "74eab802-9fef-4eae-80d5-7deed2867078"
        },
        "item": {
          "id": "182b5ddd-f43e-4b20-aa94-4926a22ce68d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a7a92ed0-5b9a-4f1e-b975-7c658581a757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b29d54-fe84-4487-ad8e-37a6018f786e",
        "cursor": {
          "ref": "b0d3ef1c-e2cd-4a6a-96a8-e9e6617c0a58",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8cc6ece2-a2b9-4e41-b121-f97d1a085dcf"
        },
        "item": {
          "id": "49b29d54-fe84-4487-ad8e-37a6018f786e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6426a61a-0403-4365-95ad-2b647bc35f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a606d73-b54a-4d88-9222-011e73bcc88b",
        "cursor": {
          "ref": "3ee0017d-51af-4ed4-bf7d-1fe3d053514f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f3148ec7-8c24-44a7-bc3d-9cd05bba7ee0"
        },
        "item": {
          "id": "2a606d73-b54a-4d88-9222-011e73bcc88b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c37e4e3d-0397-4828-86c9-a9becf0dffeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29677f19-a48e-42df-aebd-194bfd2aa523",
        "cursor": {
          "ref": "4e81ea34-5317-443f-abb9-add650435788",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ebc71ac4-3746-42aa-9b46-fcb880c9b3f3"
        },
        "item": {
          "id": "29677f19-a48e-42df-aebd-194bfd2aa523",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "68d64292-06a6-479c-9d8d-f3080507f33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec720a92-aa92-4c6c-9551-31c10c4a904c",
        "cursor": {
          "ref": "76600532-2351-4536-b729-a956ee1adafd",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9cc5b117-ad74-41ee-897b-4ca6fa334c69"
        },
        "item": {
          "id": "ec720a92-aa92-4c6c-9551-31c10c4a904c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "76cfcb8f-0f35-406d-b9f2-eed61489bf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454737bd-5084-4a46-938b-928c45288507",
        "cursor": {
          "ref": "c8e79d07-8697-40bc-8497-31ea7718cd4b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "01fb1175-eff2-4ee7-b9ab-e9d1858f0227"
        },
        "item": {
          "id": "454737bd-5084-4a46-938b-928c45288507",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "935ca4a0-25a1-414a-a2da-2c8f26005742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dd9323-54be-40b8-baf7-2027be1aa4ea",
        "cursor": {
          "ref": "8a4e0f44-a348-453e-b4ba-fd740f366f60",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d7c811f0-1e8a-42fc-8a5c-b502a4fe68c0"
        },
        "item": {
          "id": "f8dd9323-54be-40b8-baf7-2027be1aa4ea",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4cee64cf-6908-4a14-9e49-4de2748e2514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e52b5cb-4718-4a59-bf97-42f25d18b499",
        "cursor": {
          "ref": "572c9218-0f45-4edc-afec-75eb07b145fc",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c0eb4842-8856-45b2-aeda-0f84bda0cce9"
        },
        "item": {
          "id": "9e52b5cb-4718-4a59-bf97-42f25d18b499",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f573b3a6-eb58-40a2-a133-0e22d0e3021d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3659ec95-8efd-4793-a087-05efb5e463bb",
        "cursor": {
          "ref": "af4ee7b2-d020-4d7b-bc0b-20e6e4ec124f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "94f19129-4c52-4cad-8e6b-d259b7fd9678"
        },
        "item": {
          "id": "3659ec95-8efd-4793-a087-05efb5e463bb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7f3c297b-4abd-4981-97cc-687ae763e1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ef9354-dd96-4063-8e3b-70854d44c104",
        "cursor": {
          "ref": "0000c374-5271-4b7a-8b32-1bf2c8da3332",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4fed5ed9-09a6-47a5-af4c-4ac1a71a8afc"
        },
        "item": {
          "id": "d7ef9354-dd96-4063-8e3b-70854d44c104",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7688e9c8-e8ec-49cb-99a8-9785071474dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608d3178-d8a2-40b6-9ad5-8f72783d2dc4",
        "cursor": {
          "ref": "94767d6c-868f-47bf-b158-727d506543de",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0c09071b-523d-49f1-b777-d2a1631f0ebe"
        },
        "item": {
          "id": "608d3178-d8a2-40b6-9ad5-8f72783d2dc4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8ffc1c05-b2f7-48ec-9f33-e02f47c707ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01640ff-8d77-4bb0-9833-1883708648a6",
        "cursor": {
          "ref": "ffb6b220-1349-4d5d-aac9-807cd38c2e27",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e9731dbf-e86d-4b29-b268-84fdb33f4973"
        },
        "item": {
          "id": "b01640ff-8d77-4bb0-9833-1883708648a6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d93e596c-6d68-4411-96bd-1c2a277d6fd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114e01cc-a2cb-45d0-b920-bea6b23d3601",
        "cursor": {
          "ref": "37d7b531-8479-4af8-bdb5-fc993d8e9245",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8dcd7739-f878-416d-9af4-da33fc95d1d8"
        },
        "item": {
          "id": "114e01cc-a2cb-45d0-b920-bea6b23d3601",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f7467e6e-97f7-43e2-a47e-c2178a06f2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c73d4fb-3164-48b9-9775-1ca9e31940cf",
        "cursor": {
          "ref": "2ec8a704-3619-436f-a82c-5b499c022bc8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "74f3ccac-8d14-4111-ba44-b57042126929"
        },
        "item": {
          "id": "4c73d4fb-3164-48b9-9775-1ca9e31940cf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b3ba13b6-f332-407f-9b01-b078c6354246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb0aad2-3367-4153-8033-4a40dc2a7820",
        "cursor": {
          "ref": "e8f8e0dd-a504-49c5-a656-3dbe936ea411",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "45e874b7-f595-4bca-9a2b-770483938409"
        },
        "item": {
          "id": "fdb0aad2-3367-4153-8033-4a40dc2a7820",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9f6f6f21-bcc7-4eab-a09d-02b551caf8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e430ced1-0190-40b1-936c-fdd2c38113d8",
        "cursor": {
          "ref": "3921baf7-185a-4b11-8225-addf7e8659a0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5632d1f4-eec4-4317-87c2-a08daa765edf"
        },
        "item": {
          "id": "e430ced1-0190-40b1-936c-fdd2c38113d8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1ee6136f-f848-402e-8bfe-a373b296fa5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b4e2ef-576f-42be-8401-07aaa8afd6d6",
        "cursor": {
          "ref": "a941ed19-1796-4107-ab40-a46e5532b7d9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "65aee047-7b38-433a-98f0-56e0c1631479"
        },
        "item": {
          "id": "a9b4e2ef-576f-42be-8401-07aaa8afd6d6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2fdb6312-4a1b-489e-a0ef-2f9f651ce78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291b5591-bb1a-4928-b650-0934e53a8949",
        "cursor": {
          "ref": "d1aca83c-5820-450c-9ae7-523b0e056a14",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dbf065f4-690d-494a-b9bc-bb85ab74045b"
        },
        "item": {
          "id": "291b5591-bb1a-4928-b650-0934e53a8949",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cbea4b47-fbd7-43da-a94c-d7432d1dc344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c4975b-c8c5-4646-baa2-883d3f085fc4",
        "cursor": {
          "ref": "4aceddaa-5ece-48aa-b6b8-50941e111d2d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e6b1bf8c-5359-4726-9191-5b4404fe297b"
        },
        "item": {
          "id": "c1c4975b-c8c5-4646-baa2-883d3f085fc4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c78efe3d-e08c-421f-9b7c-bfbaff00ee4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352cd687-88c1-4457-a3d6-8d4c59784629",
        "cursor": {
          "ref": "d52501b9-77d6-475d-b14d-64ffe41aa131",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e885c9b7-a677-4258-a9b6-b86b98de97b1"
        },
        "item": {
          "id": "352cd687-88c1-4457-a3d6-8d4c59784629",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d4a80acc-63cf-4367-bc6c-c5c527c2cc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b292ac-615f-4dc5-be4b-316027d77b87",
        "cursor": {
          "ref": "2db09a64-39d1-448c-bf3f-b40b9d87d46c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4c32f1c4-d23d-4a32-a9a2-e198dd4ab362"
        },
        "item": {
          "id": "b2b292ac-615f-4dc5-be4b-316027d77b87",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "00f0433e-fc02-41c8-bc31-7dc837b6be68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6cf4ba-c11e-459f-8ad3-d4855ea95ddf",
        "cursor": {
          "ref": "1645baf0-ae5f-4b3b-9be8-d08feb66ae75",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2325dac0-802d-43ed-ba1b-55d06d40f51d"
        },
        "item": {
          "id": "3c6cf4ba-c11e-459f-8ad3-d4855ea95ddf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ad9a9524-eb2e-4a8b-871e-48cb7cb9f8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9cd2b5-f9ae-47f8-b8d8-3898f36f2062",
        "cursor": {
          "ref": "be3bab4d-5b96-4f09-8d23-65931118d56a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5984f74b-787f-4204-8c1c-2ccb3f6b9014"
        },
        "item": {
          "id": "2e9cd2b5-f9ae-47f8-b8d8-3898f36f2062",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "213d065a-3f03-4b97-a148-66752e2be2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e80f80c-5cb4-40d7-9e64-d7697bf7395e",
        "cursor": {
          "ref": "69defb0a-7f71-4662-9ce3-189f1b308450",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e0da9f38-7ebb-4818-92fa-9ffaf6c99810"
        },
        "item": {
          "id": "8e80f80c-5cb4-40d7-9e64-d7697bf7395e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d1848606-c9b4-43c3-a041-758ce22506f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c95f1b7-b9f7-4a6c-8bd7-ea9f8b174375",
        "cursor": {
          "ref": "22c6144a-c9be-4c0b-bf82-fa2438aa21e7",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e8499766-a466-45cb-b894-4e2497844d9d"
        },
        "item": {
          "id": "7c95f1b7-b9f7-4a6c-8bd7-ea9f8b174375",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7022b67e-282b-4359-88b9-62a6c8826382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7971b36-8f5e-47f3-9d61-8f3397958d41",
        "cursor": {
          "ref": "b3d91d14-58d9-44af-a466-75c8a895d7df",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d1bd9fd9-3037-47da-b194-733f43899bd9"
        },
        "item": {
          "id": "f7971b36-8f5e-47f3-9d61-8f3397958d41",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f224f16e-f49f-46ab-8bf5-4984ce8c84c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4706de38-d234-4e25-9bce-78d40d812aaf",
        "cursor": {
          "ref": "d1b6fa2e-0350-4929-bae0-ba0d3516ddd3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d6295685-826f-490a-989a-ca9f51fe109f"
        },
        "item": {
          "id": "4706de38-d234-4e25-9bce-78d40d812aaf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e50fdc00-c701-4dab-bf5a-9b42dcaab0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f195821-34fe-4542-b022-27dea41bc5f6",
        "cursor": {
          "ref": "bf082df5-5a67-4e1a-85ea-9c127135f0dc",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "67716aa7-ed52-4746-9261-a2d6b8c54e44"
        },
        "item": {
          "id": "1f195821-34fe-4542-b022-27dea41bc5f6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8f2fc469-dfb7-4c34-875b-f8208c4cf87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24064168-0938-4087-bbc4-1fac9dcc64a1",
        "cursor": {
          "ref": "e3c6ff18-43d4-4d00-970a-9c0de44665fb",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dd512acd-d0a5-41f5-8b12-408b30bd8ccd"
        },
        "item": {
          "id": "24064168-0938-4087-bbc4-1fac9dcc64a1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b5fa7e22-2dcd-4ec2-b674-95ca903adcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfea404-143a-4cb7-bb63-08ae1ad16a73",
        "cursor": {
          "ref": "1b61367c-c4b3-492b-9109-901a8ee5738e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c96f8322-ba6c-454f-84b9-abde26b65488"
        },
        "item": {
          "id": "5bfea404-143a-4cb7-bb63-08ae1ad16a73",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "033c43cb-f085-4cc9-9709-790a890b888b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9164e1-d2a9-45db-90fd-afbf2a8fd2f7",
        "cursor": {
          "ref": "d832a778-7d0a-4508-abe1-46981348fb69",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7edd093b-5a18-4fa2-91e5-f9ada5c6571f"
        },
        "item": {
          "id": "ba9164e1-d2a9-45db-90fd-afbf2a8fd2f7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cf921bf8-1bb3-4710-9492-d7dc35bf0ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd43aec3-9a9c-4f22-ab9f-a69922e1eb27",
        "cursor": {
          "ref": "c97431eb-250e-4a46-9129-ddbddcdfa5bd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "91212549-01fd-4fa3-b546-f5a349f7268f"
        },
        "item": {
          "id": "bd43aec3-9a9c-4f22-ab9f-a69922e1eb27",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5cb75fe3-f247-46bf-8bf1-daa1b2b8738f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac3d1af-687c-4f17-b8a3-bfc0600dce51",
        "cursor": {
          "ref": "679e98a8-43e5-4ec9-a6bc-7098c0692e7c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a0a90d1e-8196-406a-84b1-f2469673ca15"
        },
        "item": {
          "id": "0ac3d1af-687c-4f17-b8a3-bfc0600dce51",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cdbc5611-dae8-4974-9f75-2f8092d0da5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0f8b6e-ff95-4c3a-942f-d3efc42d24b4",
        "cursor": {
          "ref": "6449ce1b-7b72-411d-b7c3-167c65eb6a54",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "02362f41-f5fe-4953-92da-25172547d07c"
        },
        "item": {
          "id": "cc0f8b6e-ff95-4c3a-942f-d3efc42d24b4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cb03d33c-c325-4256-b5cb-603b086e93aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c7b18e-f73d-47e5-afa5-3d1836fc02b3",
        "cursor": {
          "ref": "07e48b00-66a2-401c-af85-8464d0914fab",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1647b7cc-06cc-47dd-9955-6cd00ae9fb91"
        },
        "item": {
          "id": "70c7b18e-f73d-47e5-afa5-3d1836fc02b3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "422e50c7-8729-49ba-bf8e-198b2fb20644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1a15ec-85b5-4ed7-9a57-c25fbdef8bf3",
        "cursor": {
          "ref": "76ca4c27-c223-45df-923a-098d7395ea89",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "afb566e0-3a83-43bc-8aea-d621b0766272"
        },
        "item": {
          "id": "2c1a15ec-85b5-4ed7-9a57-c25fbdef8bf3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ff35ba52-0253-44f3-8d31-6e948b644961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766d57e6-be53-49ed-89e6-c8cb1481b500",
        "cursor": {
          "ref": "ab57d6ab-f757-46f3-a3b7-7dfdd64ac10b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "361e7f7c-ce62-4378-85a2-445cda642e67"
        },
        "item": {
          "id": "766d57e6-be53-49ed-89e6-c8cb1481b500",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "87201b05-aa9c-4d41-8840-7413ade9ea5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d5460e-bc81-45f0-a264-c07edcd51c88",
        "cursor": {
          "ref": "1e6f48c5-ae13-46a0-8993-519169d69398",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d952ce0b-33ac-4801-9e30-3b9d92ce6f19"
        },
        "item": {
          "id": "b8d5460e-bc81-45f0-a264-c07edcd51c88",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d90eb7d5-59ef-4565-a4fb-8f58e20e0a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd4b0e5-582e-4d8b-b6f8-a2c19f4bdd9f",
        "cursor": {
          "ref": "62a3591e-5446-46df-a382-6aac05c3db0a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5127dc72-41f8-47bb-ad89-055bd2c0dcf3"
        },
        "item": {
          "id": "6fd4b0e5-582e-4d8b-b6f8-a2c19f4bdd9f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dabb0df3-a4f4-431a-b926-e203fe714ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df473f2-e71c-407c-8abe-cf67f4b637ec",
        "cursor": {
          "ref": "561ecb70-cb26-492a-aa77-def750c203b0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "364265c2-0f69-4149-a357-a48fb101d1e4"
        },
        "item": {
          "id": "9df473f2-e71c-407c-8abe-cf67f4b637ec",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3e09583a-06df-4e2f-93ce-368e34625f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cf482c-ef62-4b7c-8664-00bbc35aabf1",
        "cursor": {
          "ref": "6d57ca9b-f313-4d58-b1bc-0bbd84f4dc44",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aaf0a423-17d5-42d2-92ea-fd18e13a41ab"
        },
        "item": {
          "id": "04cf482c-ef62-4b7c-8664-00bbc35aabf1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1bec9bb5-6201-4e08-933e-251b4308a922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c090aa-103f-4af0-a7ad-c92e387836e4",
        "cursor": {
          "ref": "e004cb7e-48b4-4a0b-8e7e-7d41fffbf6f8",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f6b78d2d-7416-4e9f-b934-c4028dd70b30"
        },
        "item": {
          "id": "39c090aa-103f-4af0-a7ad-c92e387836e4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1909b533-ec82-494e-8540-948ecc8b45d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8482f87c-5882-4042-85ad-17121555f11f",
        "cursor": {
          "ref": "a4151a56-323d-48cb-9702-8c2f8914d1c4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7e431276-adfd-4804-afd4-4f6c5e41faca"
        },
        "item": {
          "id": "8482f87c-5882-4042-85ad-17121555f11f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "40aebe8d-da2d-4fd8-bc66-9d4dbc54a2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa198d45-fca2-4022-ac28-2c32e314893b",
        "cursor": {
          "ref": "8711d354-445d-4818-9d10-b1c6acfe33f2",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a356318d-ba1e-47f7-9e00-b24becc10f16"
        },
        "item": {
          "id": "aa198d45-fca2-4022-ac28-2c32e314893b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d3b311bd-d012-4e5b-b1f7-83e711cb81c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c635f92f-6c03-4b04-a812-82678ed6179c",
        "cursor": {
          "ref": "c4f68289-39ee-4631-aafa-1c194f1afc53",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "13c9a577-6d01-420b-a0c5-f73efd0f9de6"
        },
        "item": {
          "id": "c635f92f-6c03-4b04-a812-82678ed6179c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "899ea862-ccb3-4e93-9d6a-c1ee4ebc4039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5d6381-d2a8-46f2-b8ae-fe316d78cacc",
        "cursor": {
          "ref": "c7fe1c41-0d18-4614-b9b2-d064ff9291d1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "222e87db-1d70-412a-ab42-66ef4629636c"
        },
        "item": {
          "id": "cf5d6381-d2a8-46f2-b8ae-fe316d78cacc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e2cee696-edc6-4bd3-8904-5484aafdd105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65be0ab8-5807-4f31-9980-334612475e26",
        "cursor": {
          "ref": "7b542337-3843-4e24-bff8-3fc6def58e21",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "65052545-1c0a-4e55-813e-a8a86420f8e9"
        },
        "item": {
          "id": "65be0ab8-5807-4f31-9980-334612475e26",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5010c1a3-58b8-4de3-a27e-0df6c487283d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becfccf8-425f-4b27-9d2b-d8a6ae72f8e0",
        "cursor": {
          "ref": "cf42fd33-d193-4ba7-9c6f-4e5bc42e56f7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bee3e569-76af-4294-9aeb-aa753e0bfe0d"
        },
        "item": {
          "id": "becfccf8-425f-4b27-9d2b-d8a6ae72f8e0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f771f8fa-a473-4c32-9faa-6bee316cfedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6803dd-10c0-42c4-9d8a-17ecfc036479",
        "cursor": {
          "ref": "5ea1c9cc-9cd5-4eeb-b49b-20a6ada15eae",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4974b73f-ec7c-41ec-af2e-5b593bb55d71"
        },
        "item": {
          "id": "4e6803dd-10c0-42c4-9d8a-17ecfc036479",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "94a595d3-f59b-47e4-8990-d0e70744fa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691d45ee-bdd2-49b3-a6f2-7f94b28f567e",
        "cursor": {
          "ref": "f3321ac2-6296-4014-8e22-cac35a6c4f7a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3d63197e-be75-47a3-91f2-068c2825f1af"
        },
        "item": {
          "id": "691d45ee-bdd2-49b3-a6f2-7f94b28f567e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e4d32d14-1bae-4b94-890e-bbc159353685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321980a1-201a-4c28-a040-5b2922293742",
        "cursor": {
          "ref": "e24adb34-e7b5-461b-bcb8-c300951cf39e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "837f15ca-bb83-45fb-900c-7679744a4a74"
        },
        "item": {
          "id": "321980a1-201a-4c28-a040-5b2922293742",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9aa9f05d-3b0e-4423-9e6a-e25375069b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69495c2-5297-438a-bfc0-950557941395",
        "cursor": {
          "ref": "e05e4140-cc46-41b4-adf4-b9ab776fbab0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2db511c0-3fda-49d6-a8fa-584f026a37bf"
        },
        "item": {
          "id": "c69495c2-5297-438a-bfc0-950557941395",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1a85ec5c-5811-4b7d-a536-3735c17ad588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0d4fcd-487f-4189-9390-82e21e65cffa",
        "cursor": {
          "ref": "feee559a-1a71-4bfa-8621-8c596dc0bc7e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d94aac74-f31f-48a7-893c-ebccc293367e"
        },
        "item": {
          "id": "cc0d4fcd-487f-4189-9390-82e21e65cffa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a4ddf0f2-65f2-4af4-beab-2fff3923808e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa5bb7d-3922-47d2-b838-77758dffd2ce",
        "cursor": {
          "ref": "00555d1c-9a0c-4788-ae27-8fb996332ddb",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e160221e-6d0f-4eb1-8173-95aeda33598a"
        },
        "item": {
          "id": "0fa5bb7d-3922-47d2-b838-77758dffd2ce",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "75c34b84-84f9-496a-a852-0c26535f5b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d444d98b-23d6-40b9-9d6f-f91e78925fc2",
        "cursor": {
          "ref": "6c5f47c1-35b3-4679-8681-5f5e772d81a0",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bc98785a-f552-4674-9a3b-3246a2d1e5e6"
        },
        "item": {
          "id": "d444d98b-23d6-40b9-9d6f-f91e78925fc2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e40367a5-1869-4537-aed3-20ce875ab98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8006e39-096f-4e05-b76f-91ad034a7494",
        "cursor": {
          "ref": "e6dc4532-0c57-452c-b4cb-8dd4a8db0913",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "230a472f-71ed-4c85-a2a8-abd9406a35be"
        },
        "item": {
          "id": "e8006e39-096f-4e05-b76f-91ad034a7494",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9c62c305-2c21-4626-9ab9-ffcd17a89cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44436568-0ed5-418c-b4f4-32018b3076c5",
        "cursor": {
          "ref": "ce358288-e049-4d9a-a0a1-a0feccc009bf",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7ced7d82-9f01-40ee-a09d-60744f5e1805"
        },
        "item": {
          "id": "44436568-0ed5-418c-b4f4-32018b3076c5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ec7dff47-6bfd-41b2-b2d6-16359e77f97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c02a7c8-6cff-45c9-96b4-b24009d3a8bf",
        "cursor": {
          "ref": "912585dc-b439-4030-b9b3-a5406229457b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "326391a2-761d-4da0-8247-44713b54674a"
        },
        "item": {
          "id": "8c02a7c8-6cff-45c9-96b4-b24009d3a8bf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0710606b-dee7-4214-8c72-2ac3a0bbd889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550b2100-f382-4fd9-8995-9c30043000ea",
        "cursor": {
          "ref": "a9ad8a7e-abf7-420a-a567-3a9871bc0710",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fa9d7e6a-03d2-43ef-a346-cc6a3affc4ce"
        },
        "item": {
          "id": "550b2100-f382-4fd9-8995-9c30043000ea",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7e87fc8a-8cae-4ef3-82a4-10b0c109cedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a001b6-1c18-4616-a2c4-dfcf9f73239a",
        "cursor": {
          "ref": "a7ee27bd-ad0d-4f4f-986c-caf451b5cb0e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "26e2c5a6-9e0b-45ec-b4d0-f18f7be487e4"
        },
        "item": {
          "id": "b7a001b6-1c18-4616-a2c4-dfcf9f73239a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "682cf1b0-fd7f-408a-9c20-5cdc6bb6d927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d7393c-f4bb-435a-aca2-2ff0dbdf3544",
        "cursor": {
          "ref": "beb217f2-e152-494c-a612-7e7ed1528d6b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d6dccd33-5604-4b47-9256-dfe6c9442646"
        },
        "item": {
          "id": "22d7393c-f4bb-435a-aca2-2ff0dbdf3544",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "69543ddf-a4f4-4e81-90eb-12e9aec64152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4819cb20-9bba-4ecc-ae90-2819ce78f7e4",
        "cursor": {
          "ref": "60efec5f-aed9-4b1f-ad73-6ed99edf66f4",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "552cede8-8d8f-493f-bd22-9cdf8954ef13"
        },
        "item": {
          "id": "4819cb20-9bba-4ecc-ae90-2819ce78f7e4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "907a27fb-4a69-4963-8640-9313d4783370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1bf7ab-a11c-4e69-a4b2-051aab067aa7",
        "cursor": {
          "ref": "ecc0e153-7702-485d-a540-5efed1a6e658",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "55cf60e4-594e-490a-b6ef-5805e2ca5257"
        },
        "item": {
          "id": "4c1bf7ab-a11c-4e69-a4b2-051aab067aa7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "df9d7b94-a35b-45b7-ba2c-da9905afdc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce7c77a-f3f2-44fa-a2a5-67460aad2405",
        "cursor": {
          "ref": "d761481e-ea9b-4348-b6d3-f61f5c3538df",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fd45e585-7739-42e2-a1d1-05a7861447ab"
        },
        "item": {
          "id": "5ce7c77a-f3f2-44fa-a2a5-67460aad2405",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0f12aff4-add9-470e-a02e-990e2b8b8a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4cb064-ed79-465e-ab6e-a1bf742247c8",
        "cursor": {
          "ref": "4d92715e-1c25-4c89-8252-c5d11cd5ecfc",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c639d574-93f8-47e6-9287-830a9614aa36"
        },
        "item": {
          "id": "2c4cb064-ed79-465e-ab6e-a1bf742247c8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e929da92-dbfb-414f-9748-d99c8950ba4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dead8d61-8e89-4d20-8c8e-344be4c6e917",
        "cursor": {
          "ref": "14b7b2c6-1cc1-42cb-b22c-4a1bacf969de",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f149ae28-5cdf-4729-b22a-36caf73fbcca"
        },
        "item": {
          "id": "dead8d61-8e89-4d20-8c8e-344be4c6e917",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "90c19a52-8f0a-41c9-92d0-6d3039a7842e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29182f64-dc26-4124-b324-921c6118fe90",
        "cursor": {
          "ref": "9e44568e-f0f2-4a0b-9807-9302fffb3305",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c18f9d4a-de31-4448-b6dc-3511b240e0e8"
        },
        "item": {
          "id": "29182f64-dc26-4124-b324-921c6118fe90",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5cd7e317-6c35-439c-af04-211a290b5bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e90e15-9d93-45b8-aa27-9e24921525a1",
        "cursor": {
          "ref": "5566beab-690f-4e70-aaef-859c570256d0",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fc758ce7-bfe2-498f-ae35-14eec48da1c9"
        },
        "item": {
          "id": "e8e90e15-9d93-45b8-aa27-9e24921525a1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "817198b7-d207-4754-a967-3e30e450cc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba0bb0c-383d-40d2-851d-c9be1c552de7",
        "cursor": {
          "ref": "070fccfd-df29-4173-82f7-7260cec20e0d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "10a158a3-6565-4e2f-b447-eef9816d9c87"
        },
        "item": {
          "id": "bba0bb0c-383d-40d2-851d-c9be1c552de7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f1b68ed8-38a4-4720-a8bb-b5ac1972972d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e368946-c72d-413d-8c31-b8d23116639c",
        "cursor": {
          "ref": "2f5830d7-8599-490c-b6ed-8ee0e629e2b7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ef8e9490-8f96-4519-b907-e7b6d6fcc281"
        },
        "item": {
          "id": "6e368946-c72d-413d-8c31-b8d23116639c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d42ceeb8-6bd8-4271-8590-8d037020ee96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d552bceb-c7b3-4a35-9e9e-222144a32a1f",
        "cursor": {
          "ref": "6c828df0-1b02-4e55-abee-98fe2b18a56a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3e05bf20-c8e0-4dc1-acdd-a052eeedd0bd"
        },
        "item": {
          "id": "d552bceb-c7b3-4a35-9e9e-222144a32a1f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fc67aa0a-d560-4bab-8221-27c79161aac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec7a84d-c51b-48ae-95df-d0465a256ce8",
        "cursor": {
          "ref": "8e7d6890-67fa-4cdd-bd02-9bf68e8fb482",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d9604b07-f146-4329-ac5a-f4852430d6c9"
        },
        "item": {
          "id": "eec7a84d-c51b-48ae-95df-d0465a256ce8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b16e9801-ff9b-409c-9697-fb26f5576979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb983bf9-5606-453a-9823-97a0a6eb29b7",
        "cursor": {
          "ref": "8bffff1c-690f-4b03-8213-9245a0a1d3ff",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "62bb68db-1100-4753-a704-24283fe21931"
        },
        "item": {
          "id": "bb983bf9-5606-453a-9823-97a0a6eb29b7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "88e33f3c-2fdd-4e55-9979-59e95f42c74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f91c36-e98b-4a01-9d40-56e612583bd8",
        "cursor": {
          "ref": "00d0728b-64f2-4066-9cb5-ba4ba98cdc1a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bca9626d-fcba-4fed-9c21-fe4797d1550a"
        },
        "item": {
          "id": "83f91c36-e98b-4a01-9d40-56e612583bd8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c7366433-d9a7-4314-9f15-75554d13dddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6c4ab9-e6a5-4048-96de-d8013c8f485d",
        "cursor": {
          "ref": "50f4cae7-c2bc-4413-b258-d226ed8a7586",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f66c3400-0c75-445d-8f28-a519c7a78234"
        },
        "item": {
          "id": "cf6c4ab9-e6a5-4048-96de-d8013c8f485d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7cc7f208-d3a1-4e94-a1e4-dce2cd290ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4e4e80-9001-48ae-a2e5-0e34c4bf2d18",
        "cursor": {
          "ref": "07dbdcfc-7c8b-4616-a954-4737ca3b5a53",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "74e9be15-6456-4011-8d70-2a2c4eb01602"
        },
        "item": {
          "id": "eb4e4e80-9001-48ae-a2e5-0e34c4bf2d18",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0ecc5291-f70d-4248-be3e-7ad3f4e4ec1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5c94f7-171f-43f2-b6bc-dc58c669f2f9",
        "cursor": {
          "ref": "cf99dbe7-1a64-4049-bdc4-0b62c76ff4c7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3123961e-ee11-4bf5-9c0e-f36adb438a5e"
        },
        "item": {
          "id": "6d5c94f7-171f-43f2-b6bc-dc58c669f2f9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4d333256-074c-4261-835a-2066a1cb6813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e025873-c0c6-44d0-97de-0049e3eed6f0",
        "cursor": {
          "ref": "e6fdfedc-5263-4ae2-86d9-b540239ee52d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "675dbf21-a391-4ad0-91ac-3b4ee0b4c600"
        },
        "item": {
          "id": "8e025873-c0c6-44d0-97de-0049e3eed6f0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3363745f-aba7-4669-8358-be340e4e57ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9756414b-1a1b-4ebc-901f-53a0bd5d0e84",
        "cursor": {
          "ref": "d06c32e2-0197-43dd-a58f-3a5e2df81f59",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8bd9af0a-45e1-4d84-bd4f-5abbb8e5c5f6"
        },
        "item": {
          "id": "9756414b-1a1b-4ebc-901f-53a0bd5d0e84",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c8be32fa-6c7f-4db8-9f3a-a11d047c6b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f71ce5d-5f1f-4933-b54c-f59edae17898",
        "cursor": {
          "ref": "79d4e397-21bb-4e5f-881b-0f57cfe3e9fb",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b151b2a1-44c7-41cc-a913-d118a1449e3b"
        },
        "item": {
          "id": "7f71ce5d-5f1f-4933-b54c-f59edae17898",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0dea93b0-8d4a-4167-a1cf-359c55d30890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b6095e-ae94-422c-b16e-92c9dd6d5ecb",
        "cursor": {
          "ref": "7826e5be-4c22-4f78-aa67-cd851fc534ab",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "16a19997-439b-4696-b0c2-80110838769c"
        },
        "item": {
          "id": "75b6095e-ae94-422c-b16e-92c9dd6d5ecb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "21706081-1ba1-47f2-8043-06d42087680d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b175365-f9f4-4b76-b9ee-f554fcd0fc8c",
        "cursor": {
          "ref": "c5e26311-34fa-4bd2-8f54-a9de73d9e5bf",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a6587d58-f73a-45e2-b86e-f4118311a796"
        },
        "item": {
          "id": "8b175365-f9f4-4b76-b9ee-f554fcd0fc8c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "45c6ee39-4428-4879-9845-e33eff724b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c2566-8721-454f-bbda-9a53956165f4",
        "cursor": {
          "ref": "41dbc6d0-667d-4f68-993f-e95951187724",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8ecb044d-43ea-4830-bfa5-afe88b9fa120"
        },
        "item": {
          "id": "336c2566-8721-454f-bbda-9a53956165f4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "94a1c9b4-9249-4a31-86ba-f03a50aaa768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59edda4-79bb-40a5-a078-061a6d0b23db",
        "cursor": {
          "ref": "3cefb9fc-66cb-449f-abf6-8967a949fb37",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b44a0741-516b-49b9-b931-04be9dab25b0"
        },
        "item": {
          "id": "e59edda4-79bb-40a5-a078-061a6d0b23db",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1cd6a769-9628-4fcf-954c-51050bfa9f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5953f166-1313-4775-8642-5e8cec9b4331",
        "cursor": {
          "ref": "e85740dc-ccac-49d3-8647-d02f6c9ede81",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9875429e-a74f-4a48-8650-d39a8aa2f5cb"
        },
        "item": {
          "id": "5953f166-1313-4775-8642-5e8cec9b4331",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "243e1255-6380-462d-9a1b-8a188e59bb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efaa3f1-a0c5-479b-8035-9317ebeaf121",
        "cursor": {
          "ref": "23922f6a-f8b6-4aca-8fb1-22137f8b2b75",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fef3c79a-1c53-4fb4-8c8e-47935a5c0f7c"
        },
        "item": {
          "id": "9efaa3f1-a0c5-479b-8035-9317ebeaf121",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ef7c5cc2-ab60-4c82-a277-f87b7439f9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82386f7-cab0-4905-af65-59005cf18ebe",
        "cursor": {
          "ref": "b9a5ed17-67ab-47e7-95ed-950a7f835b3c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c4be34cd-f5eb-4f37-97e5-7e54d3a11747"
        },
        "item": {
          "id": "d82386f7-cab0-4905-af65-59005cf18ebe",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b7aebbb9-68e0-465c-b5fc-1041e23edf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac65ea2e-7d16-4184-aab7-c0d52cf96e6f",
        "cursor": {
          "ref": "a7b7c9a8-20d9-448c-8e99-ba178b8ceb73",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ff8c63ed-9e85-4f87-9cc7-c5ca846124de"
        },
        "item": {
          "id": "ac65ea2e-7d16-4184-aab7-c0d52cf96e6f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a1f625b1-9c91-4f28-a63b-c06d35ea82cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5494cb88-f853-4fdc-9a30-ac41433a7d19",
        "cursor": {
          "ref": "358565e3-1cc5-4b20-9e1a-3b82c83ef450",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c68058dd-959e-4eba-8f18-01b6a4168a7e"
        },
        "item": {
          "id": "5494cb88-f853-4fdc-9a30-ac41433a7d19",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6565f91a-db2a-4773-88b3-5719bdfd9958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9764de11-07e5-4a95-97e8-4b3d3718ba82",
        "cursor": {
          "ref": "5b5eb04b-91b9-48bf-b3cf-57552d45f30b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eabf73fc-559e-4682-b04d-1c4a758e19e0"
        },
        "item": {
          "id": "9764de11-07e5-4a95-97e8-4b3d3718ba82",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "95c52c4f-b82e-4c3a-bf66-c114e16ecc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17ec9d9-8977-4b47-914b-548058684e65",
        "cursor": {
          "ref": "e57517a8-67ee-4763-bec4-e191a7053f27",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d3ce894b-d86b-4122-805f-1da1dc76f55d"
        },
        "item": {
          "id": "c17ec9d9-8977-4b47-914b-548058684e65",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6c951147-04e8-4eb4-958a-21f14162235f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34b4f46-a972-487f-b0cf-7740fdfc8fea",
        "cursor": {
          "ref": "b532650d-1863-43bb-9776-df8c30be7ccc",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0f217448-9691-4e87-88cb-654285ea620d"
        },
        "item": {
          "id": "a34b4f46-a972-487f-b0cf-7740fdfc8fea",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3b66c18d-a23a-401f-8e90-4af268f1f136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0ed836-789c-4bc0-8d2c-fdb8dd16e9f1",
        "cursor": {
          "ref": "c7c0813a-c304-4534-992d-51b59484c0ca",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "15565ffe-b151-4a8a-9bab-0da1e153b376"
        },
        "item": {
          "id": "8b0ed836-789c-4bc0-8d2c-fdb8dd16e9f1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6eb41382-5e9e-4fd3-bb28-d9d457679e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2666d078-acfa-484d-bfff-c4dc7bdbb758",
        "cursor": {
          "ref": "363899ea-ae3b-4e59-b78b-a36013110f45",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "514bcb29-14aa-4a1a-b553-d70fb3b175a6"
        },
        "item": {
          "id": "2666d078-acfa-484d-bfff-c4dc7bdbb758",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f2bf9b25-d198-47a1-ae31-2b85487559b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf04f63b-6991-4b0a-94c7-475e835d718d",
        "cursor": {
          "ref": "669ecb5e-4ae1-4e23-8d91-be30cafd06e6",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3783924b-7f75-4f09-8e7c-29cabd3d396e"
        },
        "item": {
          "id": "bf04f63b-6991-4b0a-94c7-475e835d718d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "979c1807-5a2f-40dd-abe5-993ec2352486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae1fe88-bbed-42d9-8db4-17ce91afd870",
        "cursor": {
          "ref": "79555869-3a14-4752-a5b6-ff61788e1c77",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b5690c4f-125a-4dc1-a23e-5d8c55682a6b"
        },
        "item": {
          "id": "fae1fe88-bbed-42d9-8db4-17ce91afd870",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e164dcd8-ec6b-4929-9bb4-1c84a923edb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e63836-93b8-4b3b-a268-5f5bde5d13d9",
        "cursor": {
          "ref": "06cbbeb9-6110-4248-9593-ec0d8a731a4c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7cd66dd8-c5c0-44fb-8814-ba093ad34c86"
        },
        "item": {
          "id": "21e63836-93b8-4b3b-a268-5f5bde5d13d9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "93a474c9-e21d-435f-a2a9-b3a60524b4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3c1a42-b916-4790-bcab-6ceb6fb957c3",
        "cursor": {
          "ref": "68d2f824-eebd-4ac7-aace-2e7b6953f180",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d870141d-03ed-4ded-ab16-1e24131de189"
        },
        "item": {
          "id": "cf3c1a42-b916-4790-bcab-6ceb6fb957c3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "767c3ec7-1d7d-4299-b4fc-1cff2bc87180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5c3e85-a8b4-43d7-b91c-9e242e72d928",
        "cursor": {
          "ref": "e809b21f-082c-47bd-8581-4b0d2b99d962",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "07574f3b-1b72-4a4c-b432-66f9f0031145"
        },
        "item": {
          "id": "0f5c3e85-a8b4-43d7-b91c-9e242e72d928",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "797f41b4-fbb2-475c-b105-9c65e2e0f5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2461c02-eeb0-40f0-bc57-1b1cc71a575e",
        "cursor": {
          "ref": "3deb683f-2f16-4107-a2a2-ab7cd5996fa9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d165ec01-2471-4f8b-8ecb-d9b7e16a4d43"
        },
        "item": {
          "id": "e2461c02-eeb0-40f0-bc57-1b1cc71a575e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a145f84e-2b9f-41cc-8a5e-cb3c319188e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e757e1f8-a185-4a20-b195-57818d7cfb66",
        "cursor": {
          "ref": "8652668a-5b2d-43a8-87a7-39691dd98b49",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "95b4e93e-7b26-4441-a5b0-c9dc19bc11ba"
        },
        "item": {
          "id": "e757e1f8-a185-4a20-b195-57818d7cfb66",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6ec98ae1-6526-4712-bbf2-e2475079fc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff7b919-93e7-40ba-846a-a529479bed04",
        "cursor": {
          "ref": "5b2c05e8-5205-40e9-a017-202c5376be85",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7419506d-2bd3-43dc-aa02-f14dc2845380"
        },
        "item": {
          "id": "4ff7b919-93e7-40ba-846a-a529479bed04",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "81e19ec7-4bf7-4e7d-909b-49a9a549f1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4649081-bdcb-473a-a9ae-121cf1c4e4fe",
        "cursor": {
          "ref": "690af352-03e3-49fe-99fc-af8028efc534",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "63467220-adb4-408c-93b2-24ccb8f3322a"
        },
        "item": {
          "id": "a4649081-bdcb-473a-a9ae-121cf1c4e4fe",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "07032be0-c3c8-4845-bcb0-66265602c792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1ae204-af51-4f94-bae8-57653f96b2c1",
        "cursor": {
          "ref": "5e6273c2-8271-4dfe-9f22-9502039f130b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0b42fabd-8d08-421f-8928-f30b985075f3"
        },
        "item": {
          "id": "7f1ae204-af51-4f94-bae8-57653f96b2c1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0493c037-5a3b-47c0-b407-61ed4c5c2b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e495eb-ff56-47cb-b104-3123576aa4b7",
        "cursor": {
          "ref": "b134e6ee-82cf-4069-a845-cce8d0346435",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1731f5d1-ffe4-4a46-bab3-3202ffd19ca7"
        },
        "item": {
          "id": "e7e495eb-ff56-47cb-b104-3123576aa4b7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bb268d82-c078-4ab0-a873-46f61d4d1c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee93bdb-9040-4903-ade3-5e387b594773",
        "cursor": {
          "ref": "733a47ec-858d-4306-9c5b-fc0907600244",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0b1123cd-5bcf-46b9-82e6-5e306a67ad51"
        },
        "item": {
          "id": "eee93bdb-9040-4903-ade3-5e387b594773",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8abab31f-2efc-4cd9-8543-889a104df2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1173b0ed-e5d1-4c86-adea-a6c1fe5a5c0e",
        "cursor": {
          "ref": "3091a5c4-c59f-48a5-baa4-6dfe57154a92",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d8555118-adbb-4ba9-a982-3a0ee1003ebb"
        },
        "item": {
          "id": "1173b0ed-e5d1-4c86-adea-a6c1fe5a5c0e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d688e6bc-36bd-4f77-9b81-ece465d1a342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec370cfc-1728-48c7-b02e-1dc3483712d4",
        "cursor": {
          "ref": "65382f65-9285-4052-b79b-41ddc73908fc",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "62edee6c-d56c-40f0-aff6-891df7fe11f7"
        },
        "item": {
          "id": "ec370cfc-1728-48c7-b02e-1dc3483712d4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bfc14164-2cb8-46a8-87a7-f15b2e4cb279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff45619-919f-44b9-b5af-c629b85d0a57",
        "cursor": {
          "ref": "842321d9-a6f5-4886-ac87-8596406837d8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a74193fe-40d6-4f3b-ab46-fc4ac24fdc79"
        },
        "item": {
          "id": "dff45619-919f-44b9-b5af-c629b85d0a57",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f15b47fe-2d84-4d17-855f-686267ec0695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26db118a-8152-46af-b9d1-a3941e8b034d",
        "cursor": {
          "ref": "38fe3634-81b5-4f43-9a8c-bbb24fc807d1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "68425deb-0aaa-4814-aa23-76771284872b"
        },
        "item": {
          "id": "26db118a-8152-46af-b9d1-a3941e8b034d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a4684993-55f8-4e63-a1e6-06012e30e094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce3217a-810f-4db6-8c01-a4eac11c7d22",
        "cursor": {
          "ref": "f82f336e-1b51-4f7f-a2ad-0e17421071a3",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "090ff57d-b94c-44eb-b41b-398ae910daeb"
        },
        "item": {
          "id": "1ce3217a-810f-4db6-8c01-a4eac11c7d22",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c9277a6f-2b13-4b8d-b3b3-2e4c4966b549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "b8101717-7f66-4115-9386-1b0f8198ac60",
        "cursor": {
          "ref": "cc2a3728-7b56-4e43-ba3c-9487cca7073b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "af75d118-673f-4eb4-8ed9-2c7a25e38fc3"
        },
        "item": {
          "id": "b8101717-7f66-4115-9386-1b0f8198ac60",
          "name": "credentials_verify"
        },
        "response": {
          "id": "13fe9add-758d-4822-8f1c-7fcc3c37461d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "bf0f7612-b2cf-4995-b845-bd6abe75e472",
        "cursor": {
          "ref": "2aee3bfb-8fc5-4b93-9504-ce635a937216",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "333a09e4-c05c-4708-937f-b11ca4109bb7"
        },
        "item": {
          "id": "bf0f7612-b2cf-4995-b845-bd6abe75e472",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f51be589-9c4f-4950-a623-76463df3f155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "f9ee6f71-2762-48c9-b326-4bda8959eb27",
        "cursor": {
          "ref": "c30ed407-f034-48c2-ab9a-6e59e06afc98",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "71da22a9-400e-4060-bb60-760b2ef46e29"
        },
        "item": {
          "id": "f9ee6f71-2762-48c9-b326-4bda8959eb27",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb208feb-f123-4b19-9cfc-6d5da27d01d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ee6f71-2762-48c9-b326-4bda8959eb27",
        "cursor": {
          "ref": "c30ed407-f034-48c2-ab9a-6e59e06afc98",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "71da22a9-400e-4060-bb60-760b2ef46e29"
        },
        "item": {
          "id": "f9ee6f71-2762-48c9-b326-4bda8959eb27",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb208feb-f123-4b19-9cfc-6d5da27d01d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b6238c-6805-4b1d-bf1b-11b3f907b87f",
        "cursor": {
          "ref": "b800b9aa-1b6e-48d0-983e-41195e9486d2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7770116f-ab6a-46dd-94ae-c985ee6fca29"
        },
        "item": {
          "id": "d8b6238c-6805-4b1d-bf1b-11b3f907b87f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3fb1518c-1c3a-44e3-8266-4c08f8233377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16618b57-4850-4b99-bd46-b69f81cc478d",
        "cursor": {
          "ref": "4a357ced-c9a8-41e3-82d4-3e1e9fb0745c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7933aee4-ea12-4b71-835e-d804f87369c3"
        },
        "item": {
          "id": "16618b57-4850-4b99-bd46-b69f81cc478d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "104c0849-d15f-4634-a4c9-a81f8aaa9ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}