{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ec5316ca-4ee0-4784-b702-b80780ecf0c1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "efa13672-d08f-4c67-8498-17400843a5f4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "065f56f7-58d8-4eb0-a20c-f2ff64eba56c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4029e617-c231-4630-9b4d-ed0f32b27d66"
                }
              }
            ]
          },
          {
            "id": "5289347f-33e3-4060-9da0-a139ad38194a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9f5a77a-f77e-4d6d-af23-fc7ef9bc05c6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6ace810e-8b5a-400a-8d39-7cf9cddd2d90"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "71a8ef3e-7dce-4e45-abef-64b85482d430",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7900ef04-7a06-44f2-ab73-f59d7849a5a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41a26d0f-a16a-41ca-a0de-a42509ebff10",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aad5c5f-c02a-4fbe-a0f7-2238b0a3eb94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15108e79-acaa-4241-bdf0-f510ae623095"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10bfe0dd-3d68-40ca-99f4-457b58486049",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e8a3b83-8f6f-4cdf-8f07-41453338e8f6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "551e2116-410d-4ab1-ba76-2876007858fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f752302-aec8-44f4-af0f-613ed0849d4b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "250994ea-13ac-427c-a2fe-f0fa0cab2efa",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7bc667c2-52a2-4547-bb5c-28d9fe41ac00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "479a2b6c-2fa4-4c15-944e-baeece35effb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d4a49c2-6091-4f79-be8f-342456fa10e4"
            }
          }
        ]
      },
      {
        "id": "6f6ef7de-3a35-4cfc-97ec-b3e2ae560019",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f338da84-ed11-4873-825d-b63ae7f0042d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c418d85c-8dfc-4c2e-a43d-dd10b6f5a0d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9714d316-9c37-498d-99be-ada923f997fb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1418898c-892b-46f2-ae6c-981295d7cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15ff5be1-ebfc-453a-84ec-aea841a5666a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0b4a01-de35-4655-8ce1-e7c13f5c7ac3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d150d7-c4f9-4d04-a5eb-14334558399f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21fb1a84-334d-4a97-828e-a386b99e7a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d09e4e-5a82-43a6-9f1d-6fb532347bff",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246e660e-3588-4e2b-b7ed-5b1702a36408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41f69c22-eb1f-40fd-9b5a-9856b9abf4a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00e1a59f-37fe-483d-8bea-c4e80bcc852e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03d409b2-732a-4a22-8a30-c30b3510dd66",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705f7a6e-1af0-4e40-b160-5da3b7af6c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "497c310f-222e-4205-8256-5a5ec711e090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d1e1bf-6a8a-4e52-926c-1456f66fabc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbca3c3-f574-4d1e-b201-ebe5bde575ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2176542b-55a2-485c-84fd-9fe557a5924c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b17359cf-05f4-45f2-9d0a-b79c4e38f843",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d32594d-ab98-4c5f-b76e-a6ddf347b252",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d7725eb8-baf5-4bb9-ae05-720c904ee025"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff2361b0-c534-4ca5-8672-ed9118f3985f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8c407c93-afd6-4593-afac-ed9c14cd8bfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8f53ce7-3c4b-4acd-b2c9-fde1beac1eab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bb866bc-c95f-4719-acfb-dec4a9499c0c"
            }
          }
        ]
      },
      {
        "id": "8dd2f318-b7b4-45e3-9847-9583496c07a5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b2e26d6b-68ab-4f52-9063-dc91689db6a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15fa81a1-9c86-4faa-92d5-7b9ef5db4ac9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3c4f77af-c7b5-45e9-af00-9623d55dd8e5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ac7093-58ac-49b1-b857-81798c27bb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2efd79-50e3-4edc-8f0b-929371ee3d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186b38c7-a177-4c6f-bcd9-8e95658a9725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09dc26b9-50cc-4950-b0b4-42a080dea6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86f9292-af5b-417e-afc0-53073915fc07",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecc4919-ef1a-4df3-ae47-a1d8df056e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a30fe1-4491-457a-b544-72658bbc5b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc0206b-4368-4fed-b289-b15741303f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9baafaed-da17-4f7b-b5cf-1dfe1b415b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e50590-3e25-4b9c-ab37-33a60d4ad337",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d985cad-0942-4373-9507-1a399e02f3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5495d73-16ef-4023-ab24-448ef52419d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fd9f6e-f5be-4752-b870-f58c3eececf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "749d3d42-b6be-404b-8faa-51a9e20f0203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac7247b-8d44-4c5e-b6de-b249c6d244d2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759a7373-97a4-431e-a0f8-4e16328a4bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9a2a94-bfb9-4c49-b109-e0938bf09924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45cc066-09d5-4c90-84b2-e3c53ff82785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10d77e01-092a-42f9-959e-ec185c94b893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38791905-75a1-436f-a9ca-6ab86fb2058c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09919e0-8f9f-4096-9471-f3b7b5b217f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e687c9ad-7052-4527-b153-9ca22b9b7205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e29333-7dca-4af5-a8ca-c81f4abdfee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b2e6402-d245-4f37-9f5a-05dd77d8c799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938dd8e9-96c4-4e7b-9a96-b36575a76047",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf418ed-1afc-4bb8-b139-d44602885e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e02d7e1-d84b-4664-9ab2-254c886020de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451df2a5-f63a-4a32-80c7-bdb92b0dcdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3085971-6e9a-4db1-8b72-22349fd1ebc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fce44a4-771c-4cdd-bf0c-b11d05342062",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b26eaef-ea13-4dca-8931-2b5b6434f2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee9f45e-f821-420c-88d1-471915800aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332d858a-03c9-411c-9b7f-ae534da62ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf24ddb2-ad7c-48d8-a000-fa407b8aaf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126b7bcc-18a6-461d-a3eb-62c54bb7e0b9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b1187a-bef5-4dc7-b5b0-70c37b95c5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2244e5-ac90-4bee-a0c1-c38d3e05c64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3f5835-b358-4737-8742-c5c80817b3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5a8b322-848f-4185-b76d-7c64822c936f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebb0c01-03a2-4a49-91a0-de3b2c7d8d11",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e62849-bb49-4549-accb-ecf3b9509516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6263eb1-b653-4ae4-9152-251f81f7c829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ed5c80-cf4d-4e59-94e3-d7837ef4cc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "452b5462-403b-4e12-ba0d-6ca05bddec47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a5b051-9edb-4eee-8bed-aaf567cba138",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf92d64-97f6-427b-b707-67fd4760c4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b5fa45-001b-47aa-bb1d-c150328c351c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3549ddba-118c-4a3c-acbf-e20f9e58a533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26c341a8-b69e-427a-99d6-edc5d32eec10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8be104-094d-4aee-9303-ccbcf67700b4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99657549-c5d5-486e-b47a-9dca4bf37654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3dfe1f-2b5c-4d98-be34-cad75c017948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67b5519-5eb7-443c-a6e5-a9b675f32480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c87f10e0-ac67-44cb-91dc-5c11368d2590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032a7d3e-7e3d-4912-8ac1-5b514f7ab7af",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55927909-a4e1-4ff9-9736-e0a3bdfc7c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ce8bad-5351-43b5-8d38-3daab9566b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8162a7-ad61-4f3d-b9ec-1084b6daa327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53d5ce4c-e14b-4a13-893a-779b6dbb1a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38657a17-f4df-4c68-ae18-08f5dadc3f94",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15c359f-c91f-4c6c-ad86-36ee1d0b7fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351964a5-c7ab-446b-8c21-aa9f3271ee5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8115bf52-cb23-44a2-b62c-9a7707113191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e6c6421-117d-44cd-bf47-3f8f00cfc00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d85d8d-f377-4e5b-921e-0cb5f9c5d6c7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dd76ce-bbc5-4419-985c-b332a155b52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb7d961-5147-4022-97c5-9f4bc0133b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d456e81-50ca-4a5f-b5c2-5f87002ca734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a465ba2-b019-4fca-b62f-b40fcc079492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be06d508-c0ca-419e-95b7-3da24f46d0b9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69338741-40f5-4ea2-8cad-6b4d64014074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc797aa7-5149-438e-be87-b19538e3cade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a598e15-1f40-4eb0-99b6-c45450d7db73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f28c84a-470b-497e-b3c5-caa720e1be1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39811c1-1164-4a41-ba0d-c2afb4acf27d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87e4185-a5e3-4ff6-9d08-064f3f37652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e240c5a8-0586-44dc-a5a7-d54f12c16d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f83992-1910-4ad5-8aba-3c054a8ef0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f14c6bb4-a144-4790-b14d-fb881e40641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dd75fa-3042-4366-abab-254786dc59e8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e3261a-c8fb-498e-86e1-c9528b41511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6be63c-c8fc-45e2-8fcb-4574f9cd0868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a9f3f8-d383-4e07-ac25-78411f8b001a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40ee7e11-81d2-4ecd-8c72-50c242577e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9973669-522a-44f4-97c4-2637ef689131",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55960c5b-2724-4dbc-918d-f04b1478637c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de2cf44-0f99-4a2b-8622-1bdc14f4290a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879fcdfe-a387-4e68-b6ab-c44bdd33ae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d474cb4c-06ca-48fe-98dd-655c4b9001e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf06acb-6db3-405b-b5de-e0b185b217ed",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32dece0-c807-4bee-b130-fea63b9f4eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76855970-e309-4070-b6d3-b002f307439d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4f6c8a-8ecb-4674-9b6b-b892372b133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07e46cb4-c017-4943-86e6-ea8285ad3668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd74aac-d946-4267-bde0-f41c2682beed",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc587acc-ba60-4ba8-b874-03378fa4c050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfb5525-238d-4796-ad63-a3e441e49ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f247f0a0-679f-49bd-b73f-6e4f5ba0052e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26abb756-1a6b-47ed-a3b9-966adb62f3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79058406-27da-486e-8d01-948530a7ff11",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41145cbb-a04a-420e-876c-78b7849d9da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4060fa-3d9d-4211-ab75-3b4947717a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5671cd-e237-4e69-9bfb-7110f704567b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5fbcc5-e48b-4135-aa2a-8ad89f2c72e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66485207-133d-40b6-94ab-e42d550ea52f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adecbc1-2465-4c27-b263-83e6f9d0fc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1205f4a-718a-4dbf-bbc2-2b7dc766e680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d65fa7f-20c7-4381-8f2f-62a0a84de554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "240cacb5-5364-48f8-9b4e-58c8a63af76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3287b2a-d85f-4fd5-bae7-a1ffd01bc047",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6049e0-4662-4717-bdac-1feb49710569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6660ac-f835-4447-872f-7a2028588910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c0e3ac-01f8-4a4a-bca7-c12052c69e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2475f1-8e76-4842-920a-83799cd3ea9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e415630d-4b20-41f8-97b0-7130a7d5f3f1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeefae9-303e-4e4f-9def-42697596bb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45f50c5-cb03-43f3-86cf-dae52efbeb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8171560-459a-41f5-b56f-bb8a752401e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "49936939-47c9-4da4-be1b-639b344e8a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f046715-4818-4510-bb3e-8e55fceb9d06",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fd87e3-4702-4343-afac-1854cc24acc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dc7007-4082-4011-84b6-3f58c1d1253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30bb34c-6870-442e-9568-d8ab95853a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6306350-7545-4918-996b-71c58f172819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8f0d17-7571-4b73-b734-78cc21405fd1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122bbbcf-0a36-479e-b466-b0cf297be494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1176d32-379c-41c7-a6c7-f3b07fff6179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc38845-8c5f-4aec-b391-338e3017cde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0124fd-a5f0-44f1-83f7-7644ce11e541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0407350-772f-46c4-8a8a-010eab7e3b48",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ba25b7-1654-4dc2-80d5-7bc9027b11b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547c0ecb-796d-46e7-908c-94bfb5c976b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22ecb1c-3c5c-41ea-aa22-eef0d96c39e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc89c934-f471-469f-8e09-c4b86e02e367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140b5989-99ed-4631-99d9-bde2e6168af4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc81002-ed38-4d85-9fc7-f515c3ee6f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cfd971-441e-4346-b856-4b008d1016d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767da64a-307c-4952-9f94-9bc13c84477b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4177c8a2-c9e7-4725-88a4-f9c9a58b7a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93c0e5e-cc66-4c1f-bdbb-6cce9519f2f0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce72fc3e-9db6-45b6-897a-16984efb8a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bcd4ff-d0b4-40a0-9fa8-ef10b98fd24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c28181-4225-43e4-8e96-0503891893ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61afe4dc-b577-409b-97d9-3728e53394df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d81c00-f308-4ebb-85c2-702fec93bff8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da50eb3c-01b9-4ffd-b044-c45163225789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ad3597-6977-4cdb-a58b-7e00c8358d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5404933-cffa-42e5-b0cc-e0a60b6328bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f29e3ee-3555-4a34-90cb-38df56376ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e5ca67-85f9-4114-8956-d633f86132b0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43beb4f-c553-4f2e-bc50-7e2c225bd658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee48e96-8ad8-4ebf-8b26-8f3db2acc807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db03e14-f147-4ac5-abd8-c92401e5ef24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af67e758-a3a2-47d0-b961-63a54815a42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b96f1c-3d75-4b44-8d10-dcdc35c5fd4c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71389220-29e3-4998-8b6e-71daa82719ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9580c4bc-8673-43dc-b173-035ae29dd947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dd4b3b-5ade-458f-b35b-5668212a9693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab843e5b-701c-457b-8c2f-7624ce611099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f5dee1-af73-41d5-bfc4-0ec74738d13c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c565b0b7-6132-46ae-824f-24c0c315ea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1679e0-6607-4687-b1ab-9ba32a61e2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7394c84e-bb0e-4c1a-93cb-f47c5d48b8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c4ca68-169f-421f-84a4-2b8c1df41f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de61cbf-5ffc-476b-b561-08d9dd522d3c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2e71d0-d0ea-427d-96a6-9c5f79148e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15921d44-0268-4430-9739-88c2c57a5958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cec53fe-31c1-4907-8333-f95cf7eb5adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d3bb78-ee23-438f-92e7-0d4bcda5f8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae03a5e0-6c03-42b8-9a1e-5033f7874a82",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91bece2-b15a-4b89-a584-4e37ca483c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da1f057-3c27-4929-8d7a-a4a78ec57999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbebeb8-22d0-494d-82d9-ea19cacd3dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9ff45d-61e4-4501-82ec-3fd24e06bf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c049755e-fbda-4b24-8d0e-36b35ac1488d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ed0b06-8f23-4eb5-ba52-43e432f9c994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24b3f757-53a9-42dc-9a9a-bc3d03ed9646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30bdf25-bdb4-4852-9936-0566384ba319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9741515-4771-47d9-89d8-370d836d7be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51c4674-f09a-448c-b831-d9d5bfac4e45",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ec4027-c75b-41f0-bcd2-41bbe5ef5f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcb35b0-58ac-4d12-873f-709cd101895e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae967d4-7e8c-41ce-a4cc-c6f6ba8d0dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f37083c-80a2-4aec-b69f-b35e3eabe79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59f8c6f-a15e-45a7-a9a1-592fc6198e35",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f34f90-ae99-4cd0-b637-b9a64f6a2c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7611799-0a38-4696-ba43-e9346646a447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3cc96a-d35b-4e68-b87b-1fcec10f8fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0b5562-1f67-4683-8a29-cc496d4250a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ce01cd-169f-4909-8685-121597ed5d53",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6517e584-a401-42d7-b1c2-8223b695e55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a154880a-3fcc-45c3-bc30-50ea4f6ddcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2ad669-ec2e-4c3a-b7f1-958922b95f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad1d2c1-e7ec-4a0a-8f6f-7bd24c738f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3bd9c8-c603-46c8-825c-74c1ba426c1c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377d86cd-6fb7-42a8-a32c-fb923aef0071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e434903-ecdc-41ae-aab5-b1e4103152d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a468e7-6aed-44ed-8ffa-48c62e8e52b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c132f9-f17e-4e55-9963-bc6f56abb79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebef633-3b07-46e6-ab13-f5c2210f993d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46722dd7-49c3-4cea-819d-7aba49602207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64336846-4cbb-4b4f-81ba-85259ed870fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d6beef-9421-4347-8582-2900b57b6d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8748bf55-7761-4db0-bbe3-573772bcfc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bbc1ab-cbfe-48d7-808f-e473a3407bee",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96d1569-4add-41bf-91c7-5bb44793a9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9238bd-37ad-429d-a502-a7ec03ea8d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8950f4-38df-4be1-a321-f00d33241587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce3b0d6-6552-401b-b94b-44591f08c4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46dc2ec-ad38-44cd-9b1f-cd34667db63c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64228889-3a3a-4965-a9af-d0eb7674569f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc32f8f-84b9-4726-9418-5a0989741331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aef8cf5-49f5-414b-994a-c67132520993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3dc995-40b6-4963-b30d-fd8322ed09e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dbfb7c-14d4-41f1-a623-3c2169e932e1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab7f682-ef8c-427a-8b7d-f5493f0cc9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed5342c-f2f1-4785-8c7a-9c1c6b66e895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a729a94-5314-4920-ba52-4f29f3c3a811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0826455f-2a35-42dd-a934-32a806ee1ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931f4c6d-98d9-44b4-ba46-07958952ef85",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5923932e-215a-4657-bdcc-b0eca9972e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4f1dea-cbfd-4052-b24f-c9dab57ed55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbb3e9f-e613-4d57-a2f6-917053e68bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec41351f-ee86-4e8c-97db-c166dc20cf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e196b3b5-c860-4d28-a3ca-0613578aa38b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7ae528-69a7-4e6c-b7b9-3b64aa6edf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d056e738-a0d7-411f-8529-eab97836c930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238402ad-dcf3-4649-80dd-9f4d9ab049bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d059e323-8609-438a-9eec-59ad38a24ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a42f440-b646-44c3-85f9-87e222a7aca8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402e152a-7583-4f73-a1eb-2c488eb48959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d91905-8da5-40d5-9ee1-188049ea8f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425f1bd6-d4cd-484a-b380-8b8c8838d191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f90db77-b7e3-44c1-a76d-ba7db837c52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67cf5fa-89ab-4643-b39e-c708699e5912",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cddcfbb-2981-44c0-bea2-9de72588702c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1910dde4-cf3b-45b0-9ee0-d974a4b28fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17172e5f-9494-42a5-8fd7-5cef88b03de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "958e88da-8906-4fdf-bf11-d1928355dbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c82fb27-b974-4eb3-a422-66f5588218e9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2b6988-25fb-4585-9348-9c2d0e30bf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e44949d-5aa6-4cfc-b84a-cb8412c160e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c29f8eb-04ef-47fd-ba59-b8c94cd596d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42887c17-adc3-47e3-b45f-363ae740b561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d69809-d70d-4221-b1fc-a8d36bcc1082",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba281cd-3913-4ae3-9c92-16f1231eda92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de021ff7-ca8e-44ad-a041-3e6476a8b6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441b14ac-2c10-4a53-931c-38f0bec69972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a443b79f-1d10-4922-9aff-48e2fd43b095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1885d120-ca68-4d08-95ca-ac499e12801b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431f92ae-f448-413d-a86d-33a3a179e052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151e20e7-f581-4fdb-8146-7a840250a94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaf4eab-855f-4dee-89c2-4386368c8b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "67726345-42f1-4b8a-80ff-0c0b197c38bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2087f94-9d21-448a-83d8-2db01c46e484",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e9c828-8a69-4a87-94ba-566b5498e29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8f8c4f-8b4e-4bb0-b3bd-282b0a419caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb09cfa-2b4e-424e-a169-b3c9911309fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49990eb4-b9f0-4147-98a0-95392089b99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba9969e-747f-4749-a0bf-b47200546537",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c054940-9d82-43c7-b12d-0a80896d3e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90185a6-58da-4008-bb42-514d1eaaa937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e74bb7-68d9-4338-9afe-a6f668e398a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a3fb56-772f-416d-b64a-da3d0c5a9f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b229f4ca-ef90-426c-97ab-e241dea51a21",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3850ac-3859-40d7-8a4c-5d050533791c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60de451a-1f59-4ac5-be6e-d46355acfd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55cfed0-2a46-4b33-aefe-a6936b323c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eaa1633-4cda-4a75-a3a7-f00e8a324adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836091b1-0a5b-49ea-b77b-47258743ce5d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaef18e-7be2-4527-a352-b76f8576953e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0469e2c-b79a-4b88-837d-11ca9274329b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc9b20a-74f9-4f86-a828-a57e9ec97652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce892a93-3a99-49f3-bb3e-aebbe4b40af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba8cb3a-85b2-4c47-8ba2-d6eacea54831",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f562c6-2364-4d7e-a153-d4b112ed9a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e95242-b74d-4cbc-b2ab-43b7906c61cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065b6be0-d355-4343-be01-f8277fdcf8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c6955d00-1743-4c34-9f87-eafc4a878132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9cbfed-19c5-43f4-8ef8-d8fb9b21a61d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e50f79-e4e0-4462-9d42-a9aa5b89988d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d88fd2-ff39-471e-88a6-1fc677194d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bcd034-39e7-4107-9961-ecdaf29a1f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cefc70-ad67-44e6-a809-eb1c5d683020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82cabbc-89d8-498c-a270-d868c0aec1d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84279281-30c5-498c-a5eb-66c79cd06588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b6cb82-0692-48df-8ec9-398f4ef2f05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5714910b-aebf-4691-851a-d9402d4e344e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8501b54c-f955-4450-b825-3a28286ac057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f5f3ef-8f98-45a6-849f-a198b2c2858b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0507c247-f180-4881-9a73-d5872987804c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f287dd58-0c3c-462c-a591-92385d9d54bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d2f2a8-e988-49b7-b64a-348c48683180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d29f5f34-2904-4bb4-8c9d-58412ee754fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acef8c9-c73e-4b3c-b22f-10b0350d09ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa9c62e-4cfe-4b34-b5b5-9d6bbb6c0fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72abf2a7-a4c7-4521-b052-9f188967dac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b2e296-dff1-4815-8725-b4de4d1d986a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a78e2f5e-ebac-460f-b44f-fd46d72430b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50d2fcf-0a4b-45b3-9991-e83fc8d2911e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d5eed4-6a5a-46bb-9c65-bf9e799b2a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65250aa-942b-48ac-99a1-e0435bac0f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19ecd90-a1d7-4853-b797-dca208147855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "806054cc-38e7-4814-b8c5-0f5af11191d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5fc4b1-91de-4dd1-9fce-068e864df8a9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b9ef1f-c24f-4d44-9bd5-f0658199c915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8772dec8-70b8-4582-b39c-311398aa7c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823a1492-77b7-4498-b9ec-fbc683ceb943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d5065a-941a-4d70-84a4-5fdb72570e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8f6c22-8165-4184-b6cc-dc47ac8d4761",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df06432-b420-472f-867c-5aab20f30cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9cb169-468d-49cc-9ef6-03a39bbda29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab445aa2-2a25-426c-9c20-fb27ae400a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb281916-2225-43ac-943a-68da4f7b2f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee562155-e87e-4380-b3cd-c38ae5b4579b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c12791-aa2b-44fa-b1d3-4458cffb1bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45e7159-7775-45d0-9fb0-f06fed4f281f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6504d5-b59b-46f8-b910-c9e8f49f2440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9b76db-a46f-4e8c-84e2-d5fbc2f230ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb1c241-3229-4b2e-9247-a5c064ab7761",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f308cd56-c1fe-42d1-a674-6025b611b224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606db63a-b42e-4f32-aa8f-bbbee2eb8104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a715a8a7-947f-4203-87aa-37ca7234e2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6649ca05-079f-42e5-a089-a31d7957324c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbefcc6d-fe73-44df-b4cb-8d490ec5ccbd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75b28be-851b-41bb-b89f-e14ad1efb894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3f6934-746a-4e81-94c5-23ef9ce2368d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc183e3c-cd29-4014-9e7c-2ed097151645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8513a50f-1a25-42c3-a76a-3ea47ecfd2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4d2efc-c8bb-440e-a119-48dff600c0c4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b153b68f-6298-4820-ab92-3cb52f777a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736e05d3-bc8a-416a-97b6-e5c3c8508069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f0da16-0535-48e2-9521-43e16fc53406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24f1f5bd-6efa-4853-b334-22c31fcc0960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcf61d6-dbb5-4812-af33-7c908d292672",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dcd608-fa22-43e1-8fdc-3ee2a21f2437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bcea6a-526c-4595-9dc1-45fa6500be18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551ba20b-a23f-40ef-92f8-9c5680427362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c724609f-b481-4f20-a1af-745a03dfedc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64f85c2-4737-4453-9c7a-476c0ea3b4d3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c0d239-6796-4e08-a85e-d24862fca1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b873a3-194a-4f54-ba60-87d3b457eeea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee7a922-3bb9-4077-ba72-9eaa99f9da6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2ac357-60de-46b9-aee0-bfc53695b216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b589a333-9215-4a10-9d4b-9997870a543c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aebb8eb-d507-4266-aed9-53f7eef75dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d11439-12ae-498b-8039-19bb433d4986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33a7b58-0857-4f17-8955-bafc9bcbff96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88139d7-f210-4cc4-bea0-ecf3476fb6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050cdbad-bdd8-4c15-bfdd-0a5cf7195b3d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e8daaf-e58b-4be9-a64c-e813f8160f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0565ec09-91ba-4f14-b2f1-a16363ff13ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607c7b90-0d62-45b6-9c6f-53c5144e327f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e7ba1d-4f06-4237-bbe4-0f8f35f075fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482063cf-9e7d-447b-b015-0bbc91f0b364",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1025117-0ca8-41ce-ab7e-41144af38aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1efd877-4a60-4e0c-abcb-591e56b37e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689479c4-74e7-42cb-b5a4-a44fc2fff208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7431c470-824b-41c5-8cbd-8920ea6dd50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53deae6e-9157-4a23-922f-2778a4d636cf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e439a090-26af-4b74-b1c4-5c1415972003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e9d72b-e258-40f2-b135-cd5d4ec88f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd81ad4-da20-41a6-88db-b60f0eebb0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b339f0c1-8351-4454-8fec-f54bf3ed0c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ddb9c3-3b05-41ac-a6d1-20986724d71b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ffc2f1-7fd4-4c65-bb31-e161ec7eb46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0df9587-f07b-4376-889e-5bfe57cd5304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea9c957-1e56-4ab4-80bb-78d64a2657de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f30b94a5-cde9-4589-8c43-6263fe9ccd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962eed74-c883-43f7-a794-3d947a3b1eb6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc4291d-12a3-401b-97c5-79f136b84950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdb1872-86cf-47fd-9998-03e1f86175e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dbafdf-ffe5-4132-b187-c9bebf0680f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff94788c-04f5-4cd1-9e87-5773ae7bb925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b948d4-47e7-43cb-a747-109ff53c1bda",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e97234c-3ff7-41dc-af09-73938968be18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c174095-451d-4a7e-a43b-d9511f3fd591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8031ef4-5b17-4a09-93a3-d2b4b8d25fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "173c596f-862a-4f14-8f80-96abcd49e8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0e06dd-af26-40e5-982c-dd69d38cc434",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de99c0bd-b033-41d3-a4ab-c9d6617c564f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ade596-440d-4257-bd05-be3534890004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9927c3da-0a70-43c6-8a5e-d95eb3df0711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11c3e36-a974-4f08-8e36-d437f7667582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b859c162-2760-4d79-967a-219bc7262e39",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87eaa43-bbd2-4875-a5a9-365045b239e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a36fc18-02f6-4e58-b0b4-91138f1f9986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa4f2e6-63e0-48c1-bcce-5b9cacac81e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd01d63-e654-424f-8517-d9e83f7d44e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966ed91c-cbe4-498a-8144-f52a93464e07",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb6728a-d220-486f-b57f-1d92359a2f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdae6d2-6597-4207-a22d-ccfd921c609d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a35517c-ab18-4074-ac73-dde2957048dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5324800-7097-46da-afb6-4ca797f316d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9ce837-0766-461c-988b-c1bafb83d5ed",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289c3ced-e177-4418-a750-4d632a4cf9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c053a5fb-9a8a-4633-83a3-82efee060dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875d5d34-eb17-4dd7-92c1-7a63821b2320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b066c162-52f4-48f0-95b6-e9f6e381f2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba2d74c-cfde-499b-b2b3-dfb81de3e448",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ace743a-8b2c-4575-bccb-5bc31c94edbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86e407f-74ce-4611-b6fe-b10ae0c56f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5abbbc-fda9-4998-bf0d-c2384fbce9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a585ba18-3972-443f-b570-c9c74cc4f46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cba00c0-b4d2-4e7c-b261-a02dea8c4b83",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354a68a5-72c0-4eca-b926-b114b9ffbd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da612ce0-7e37-4b62-a99a-1ce75a050a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622f9155-5cb3-4a0e-b0a5-809dfc0a3798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe6f87b-72ad-4f2c-9690-d752a1de5c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730da091-eb6e-4fcc-8906-2854a48aeeef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7ef69f-9400-4a09-a607-d1c878f54a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c423cd-2588-433c-a566-019421d4852a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2506791-3dec-46e1-93e4-99242c4db48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab750855-e96f-4c13-8a48-a604ce280fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18905abd-51d3-412f-b962-8190deaafd34",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549bd756-8b74-427c-8fc1-3eef64afd42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9bba18-c732-417d-9b81-53112d1ee7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1be579a-9478-4959-b704-469c33913c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c5c460-853c-4f14-b618-9d41931ef2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babf37e7-4635-4ac5-9bb8-b391c213c065",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4b3d48-3d0c-48b9-82e6-96d7d08db4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d539af32-d573-47b3-97df-24d570ae5935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d067f7f9-2d0a-4913-8b3f-375b53f74cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7a5320-a0bb-49ff-b4bf-3f5333c928f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f899a138-f212-4e3d-9c01-7532595d1b15",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5aea7b-2cee-4978-899d-1672b30e807c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea9f722-91b1-41fe-add4-0ef25563dcde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8915cfa-64c7-498d-80f5-133692c44bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9737aade-4cc5-491b-ae9f-093fc9dc57be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf62c915-3e56-4fe5-a959-e480537c4a3b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad0a486-0c22-42d2-b20a-f0c965e70a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d575048c-9dc5-431c-84ca-8ec5f1ac9fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88aa434e-b592-499d-afee-508ebd83dc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb61468-9ac3-4ecb-8914-4ba76c08aa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2678ad-aa46-420e-8d40-bb1af89ae429",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6dedb7-67c9-46d4-9ac8-00b48dd6c6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64706136-e402-4b25-9179-7c004992b3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b153a42-8b7b-458a-a39d-f521c6efb2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "762b7ca7-8d28-405f-a9ef-99dd049562c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c402f56-8281-4af6-8f60-a9d16968aa62",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5861aa3-88eb-4542-a938-5ed92ee83f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77de44f-573a-43c3-9f8f-d4c7d375bb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d806220c-5eb5-4bd7-bc15-7233652847ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1d2e9d-a100-4700-8810-426989aacd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d99055-3818-426d-bd6d-6471335acffb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f64bec-24a9-4a74-b1b8-70497e1a35a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2914d37-3cb1-4cd7-9a8e-59a17684b7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6e271c-9fc1-4e42-82ce-8af148b273c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df4f2c73-6a80-42ef-a65d-9d24dbd8a9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf545f0-3369-492f-92e5-80df664c26f7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b0e1e7-2b45-4311-9f99-c6a982aaae45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed74b008-f14d-496d-bc1a-3aa317f7432f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87574e3-e7cd-46ea-8599-384f614698f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4352ca-449e-4f5c-8bd7-47767e55f960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fa8040-1e4c-4af5-9ff7-0135e36fc5cf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d33ec50-c729-4f85-9a63-800da0a73893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d576aa07-3e65-432f-9ef2-317ac09c3e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a3b3d0-d225-4bc0-8ca5-5973779b0879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a4a0e8-b827-4b2f-8ff5-0b497a2fa44a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "706be7de-a644-4a09-9f40-1dc26cab745d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc2ade97-85eb-41e5-b236-fc2bba6e4ba4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c391778f-f7fd-4882-8395-c08079486819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa432908-ac9a-43d7-88e3-c8c1357eaf9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c1476d-8ebf-4d12-ab6c-d6fc0415ea57",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5edbafe-8c43-4c45-bfcb-575eb72a2e6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c18f5796-5233-452d-ac5c-ee27db48695a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac33af44-d2a5-4408-a648-83bdf82e83ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "193e78f8-ffcc-419f-ac0a-1105342cd7e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae4e6a56-b507-48df-8afd-c4bd6c0826e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "787afca2-b6db-4860-b7a1-08f586fac8aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71cccece-cb91-4b99-acc1-8f88f32f5031"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4957c37d-e6cf-41db-acbe-7d0cc573766b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b66d1913-430b-48ca-8ae8-f53fc7ecf595"
                }
              }
            ]
          },
          {
            "id": "f6eac067-8ab3-4d62-8c64-7677cdd5a6f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0a75327-e910-4a4b-854f-2b8e23d4c009",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e32bf30c-0d7e-4275-bd0f-7e4053150b92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68ca2e40-5d25-41b8-9481-d6976a50b80a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26b6cb12-45c2-4328-9a67-da269bd57a6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b209a459-0a37-4139-9a30-87aebcfec50d"
                    }
                  }
                ]
              },
              {
                "id": "39b11429-0be5-4738-afc5-0027df6cf51e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "480bad92-c203-4f7d-8926-a20e9de9eadf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c20b3088-ecd5-458f-965f-39a95436b61c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22229097-8bd6-4d62-9faa-51735c3222d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4df47e2d-aefa-4cdb-9072-805ba65106a7"
                    }
                  }
                ]
              },
              {
                "id": "f3a3ba98-421a-4ff1-84b9-01176e5dc109",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd6e1958-6d14-4ff8-aa9d-d2f13e12cbd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64974b91-dbd3-4b18-9b57-9ef21beae7b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48bcf06e-e41f-4873-a9a0-6652eb6cb771",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "150778db-9079-4fa8-a8d3-e91a7537fb73"
                    }
                  }
                ]
              },
              {
                "id": "c625ed7f-2465-4d51-afd6-d0b091d0d0f4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6b66851-3f29-4a26-936a-a795812c1561",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2480c9ce-b575-492a-8a13-6833b185d8ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d83f567b-bb10-4686-890e-2e5dca4b7fc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fdde0060-c4a3-4a48-9bb9-b177bb861761"
                    }
                  }
                ]
              },
              {
                "id": "c4a1231e-d252-46af-9459-086ee29f415f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50590f09-d536-46c2-a891-3ee8355f2230",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4faf5b22-1c48-4168-be86-cc1d71f72c23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dd72112-49d5-4b92-93d6-ece06f4c8530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5379b3bf-a7c4-4dd1-950e-0593557e0cf1"
                    }
                  }
                ]
              },
              {
                "id": "8e2ad57b-640e-4b2e-bca7-b2919c5220fc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "014b09bb-088f-45f8-b32c-3009bcf9c8b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "456bae38-4d22-4513-957c-dfcc7655acaf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2bce524-b843-402f-9988-47cf94c2452b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1c541fe3-4f70-4de3-a658-7d5be4c68ab0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "398b1a15-933c-4ccf-a151-6c7d15403659",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4f4b5f6-de40-401d-ac0e-3a3049afe61a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e27721a6-872a-486c-8307-993a29bacf30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d5e85ec-cc23-425e-8fb3-2bfbc236bd5a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c77007d-abdd-4061-982d-73dfdfe70e2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b8990b22-0330-4c68-8ec8-9438135c641b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "800c6114-6d0a-48b2-a7b1-15258f100816",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "480ea7b7-3fbf-4390-9ad7-c8ca92181000"
            }
          }
        ]
      },
      {
        "id": "f6fede78-543b-4f07-bad9-260427ae3f4a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "12c89f51-f89c-4c24-9e6b-6856af77d271",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f70df565-a274-40c9-8777-1d160b470132",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e749a11-3dd2-4a3a-b63b-fdd2a63d77b7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209a93a9-aa27-488d-918f-a5ebcdfd0751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3153b1f7-7b4e-4b4b-8441-bffe5a115b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589b59e0-10d7-4ea3-8a13-9eef0f46130b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a81cdc-9d3f-45d8-be0d-3e16164e8d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a09862a-ce84-4008-9e16-62f1187b7bf0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2542159d-4421-4fc9-885d-ff333edf5033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aef4eaa-6d5f-4140-a342-3e88ad122b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13ba93d-0dd6-4b3e-96b4-d88f732d6a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "689ff21b-f22e-4181-b3bd-b953879339f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b11709-2604-4fcd-9dbf-4f31de9c14dd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1237ae52-54d8-46db-b070-e58130a3af0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46521e87-fd0a-4182-b4e7-b7a39ec38ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640f7b12-81eb-462d-835a-7634e192d9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb1b09d-962f-4915-9734-b4ef6f375e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7681bf33-3bb6-441f-8680-b83d8330d153",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a4ef53-e0e2-4341-b387-137309807adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94efa01d-5d12-4585-9a55-e0889b451f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d90be6-e64c-4e16-8cde-5d187c440be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7fff7a-05bc-410a-9a13-7ca7c1995412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3be43f-c296-4ced-8c28-546a017e0045",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8e108a-698b-443e-a1ce-1202fb59ef43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20aa2c3f-c462-4160-a5bd-c14af0eca2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf30eb9-898c-4fec-a1c2-4f377cf7f0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb631dd-6cdf-4ba9-9e40-a7e42b079466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf613c0-0fa1-45d0-a8da-d50250d4c404",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b712d36c-8801-4cfa-8e23-52eda424f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73704f07-b27a-4463-ad2f-927229be0605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afe2541-f1a0-4937-9609-a1f899d2ba39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4e482e-a6ad-4783-8202-5a2320b7c892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866dccb8-0136-4190-980d-9a9ec966a2b7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6774a096-8fda-4b9b-ae60-8f68675ff1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26f3e11-4f5e-4de4-99f1-7346f4bdf358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d7d703-51d0-4f47-bf9b-4b0557d76735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f480048-0805-4636-bae3-09693508099c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2119949d-11ae-462c-a353-5468a4b052cf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265a91b8-87e0-4869-9db7-7c6ee3e863ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dafed8-3381-4658-b18b-96b0b71a4223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac835ce-e022-4861-8e82-25a676b7c955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98bd0a4b-4817-4b8d-890e-d0c3118afc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d091f983-9de8-4ab5-9c81-b18ce3793354",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356520fc-fe69-4033-b956-efb77b324c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794b4c0a-19d5-4350-aea0-37a84742e026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd64a6e2-6670-404f-af73-074b368d5560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d6096b-b0b4-4119-8fc6-e640c5f66d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487672e8-1efd-4bdf-946a-6c4318af1cab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c5aded-f803-4b6f-9b23-03b9277bc7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1168e2e-a162-4e8f-ac97-23b74ffbe958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69464e17-eea8-42bc-9ba7-33c27b84404d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0482743f-7993-4537-8ecd-0725d3258b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eb9928-1354-4487-9f5e-0155a2658e96",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf1337f-fec0-41b1-9def-bd6da9ad4f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d158a4-5da4-447a-bc6f-dc223149ca1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f0c844-61a5-4463-b968-ca529abd4b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "285370bb-4227-4f6e-8473-e23ecca28b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c16c9dd-7877-4b6e-b828-9e49c1ae7329",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00c6755-0f33-4d2f-9d3f-b494b0f68b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf505fc0-f7ea-4a92-b6ee-d93b1cd600e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e111547d-d3c5-4b06-828e-cfbbf987268c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "954a3777-e43d-43b2-b5ff-b3d7999a2713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8d6b44-502a-442a-a4fb-4480b06bd20c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d341b7-efb6-4e2e-be81-bf37d034caf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f49a05-dbb5-4f30-93ee-0978c7baf67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33734889-f615-4210-b0d6-d61fb2faed83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b219769c-f5c2-4a1b-a55e-d30d2511b96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7407a598-46c3-4278-b2ee-fd5494aa8cff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789a5d3d-f045-4de9-9208-74af54a71475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefc016e-f504-471b-abc8-12502d49f0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f7f42a-098e-4810-a41c-f42e0f000d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4045d55a-bedd-46eb-9e32-09d59aff4ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd22fbde-6d3c-4f24-b231-90476e150ee9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3122e143-04a5-427d-8373-096e53c4e8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9f4c13-2aa0-445d-8b51-bedc64ba4468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09fa3c3-ebc0-4240-86cc-9999f429084d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "329765e8-e5ec-488c-b524-f82b676e93b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3f9a3c-a7a4-465f-9b93-86a92b6960a1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59686470-b5df-4960-b7e4-e532771f230d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e67d19-a5d5-4c56-98f0-8bf2ad27c008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95161c4-395a-41f1-82db-4c243332eda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "217d68dc-4647-4a60-9c40-80cd9be465ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba62d721-ccb9-4531-8e92-3a472a0d91b4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8167f7de-08e4-49e9-9d99-fb7bc80a16a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3fca82-6d94-495c-9e61-db5bae3c96c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcafad2-3cc5-49cf-8cc5-386eef31692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce768053-2593-463d-acf3-4d31b697c0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbee7680-173e-4e04-9c69-ba181486430d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c21562-4eba-46e3-b686-b3bd2a345911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4347f50-fa13-45d1-b058-e98e1c18ff60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36e1de5-1d62-4b70-b74c-1c22ff7f7d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb0ebdc-15f4-4f32-b828-6a67cea2aa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93862b89-59b4-448f-bd85-39fac8ac0c45",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7e79c2-bc5c-4af4-b30a-c1ba752972d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44646318-db9d-4b7d-8dc4-112cbc12f78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b319b4ef-5df9-4352-8cb0-e3a4a50cecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f4ee7a-8c78-4124-9718-31d470e672d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2539ee4-a70a-448f-847c-0bc4f2c84c62",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a762e86-04ac-4437-831a-126f8cbc3cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4606b6-bde9-4c9d-8e2e-d4aaf46b432e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1923a679-54f6-4e18-a9e0-f48455818f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1283b95a-bb25-4b0b-87c6-81be7eee3dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644d30e7-3f45-4b96-b48c-67c78a8d6985",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96683582-1040-4ed7-b97b-343cc7ff26a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5cb3cb-1156-4f23-8fa5-901f60b43782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331d3a96-668f-4703-9a26-932e17314981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a42cf6c-2b39-407e-adbe-7acaeee10d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e233e8-5b3e-41be-9c1a-ff94591d3aec",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206b3367-e4c5-49e7-b29d-9ccd4699c253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4168b2e4-eb2c-4cfa-89ca-6a0f7747dea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb5d6a1-831a-4696-b851-3c36bc66713c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5834fbd3-03d4-413d-82cf-fec8d6a77ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af39843f-e8a4-4c08-bacf-173334d10508",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5727e9-4805-4ad5-b48a-d5f82384e809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfaba5c-91ba-443b-b52b-fbb475160324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f22122-989a-49d2-abaf-10650b0816d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8062d44e-b84e-44b2-b3ff-8c55577390d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0d631b-bd08-4535-a8c5-5a7a4ebf393e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77d6bf6-705d-4a07-9b18-5f57170964c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276f1bb7-0a5f-483a-8c48-876879e3c001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7375d5-8642-4fc6-9302-ce56032a8913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aeb7dc8-97be-44da-8117-1b27ee2ce097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73a92a2-b328-4911-a4ac-acecede4727c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef7c3d6-d39c-4046-9ec9-3b5d2e42240c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614bcfdc-7912-4bb1-a26b-a12e02b74a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a91b94-0513-43f3-9666-05d038889f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b57f4f35-6027-4939-8c1c-67b3f0e9114d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dcb051-dfee-44da-8cc6-284a771c0415",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084ef2c3-caf2-4711-aec9-d050b9534c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2242a9-327d-4a2d-b518-195bb90521ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57966a59-2b14-4302-977f-6becc1611223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1a60c2-7abe-495f-a180-9b394fd6bd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d57f1e-d108-4d0e-b3d6-04902e852529",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9c0667-70cb-4dd9-9ee5-6ff48bb9ba6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f17949b-f25e-492d-9339-e795ca83f98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d335e2-d418-44d7-8e0e-8705c1d4d470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e8f01f-84dd-47f0-9769-b1721049005c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a22b5e-ca6a-4a71-a79a-08c04bffde29",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b61118-4903-466a-83b7-cbbde9640355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dfa696-e344-4e0f-b9d8-9b1aaa4928bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeb5f8a-fc63-4f2f-bd46-b201ef1c17d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfca34c9-da13-46eb-958e-c78dc2a13131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995152a7-9135-48ec-9a13-3ea7fe933cfe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fddc67-ff91-47f6-bfe1-a00c8773df0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c64d2b4-e764-4c1a-9b50-4a24e4fd5c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c5e1c8-2f34-4358-951f-29eba40c4ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27002ea4-3811-4d27-abcd-55393574fab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454b34bd-1dff-4cf2-aeb1-90c7f3501422",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f38e60a-6f30-4bdf-b6de-eb671aff40bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2fdcc5-9e02-4408-b3c4-3d63418bea2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3e59ec-b6de-4ac9-938e-0e2cb3bcd09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df79cf4f-af5b-4be3-96ae-3c78ceb02afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77314e5-380f-4084-bac5-f34113a4ef05",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3041cc-88a7-42d6-9f40-77b3e31f9340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c1c7b7-88d9-4aa9-9858-3c98063ee2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2e88cb-32c3-4b43-a0e4-77fbf0933d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0128e1dd-d26e-4bbe-92e3-e4059c6fd467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae3f00a-f046-4f1d-a0a8-2deaa3638ce9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae37a43-72bd-481d-bdd5-11081ead7b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830dd5cd-2eb4-43b4-98a7-8d630fe9a98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acb5ac8-2f91-4f4c-8b31-4a9cdbe71b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6be97c0e-c6a1-4c10-968e-af0605ea4eb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85c1feba-aa3a-404d-937e-6cf67df00826",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "831c1331-20a2-4cbf-871f-9c56e15e1292",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89795a96-6490-4edb-a736-c74a6fb7e711",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "007c8d86-bcec-403c-bd04-8f382bb7a1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867a5942-794c-4297-ac49-fe79fbefec26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88bf2797-e668-477e-bcf7-8ea6aaf7aab6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85b4cbda-b8bd-4359-8d8b-0c4a7315cf20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "396ca065-4fdc-400f-a441-50e491ffc4e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "668c6378-6b3b-424a-9fe8-d64fcca36fe1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea78df7b-fffd-4bc4-8c97-a51618e641ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaa0ed56-5d44-4211-affb-aba3402ee2eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd03ffc4-414b-4e50-a2ab-a1e9f9bb9378"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f920c2f2-6405-4cdc-8f83-46abaefd6bf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a26d7f4e-b73f-4941-9831-b033c7c49184"
            }
          }
        ]
      },
      {
        "id": "261fcaaf-8f8a-4de5-bb78-27fa6f6fcf5f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8bcf1cee-18eb-41f7-b46c-fbb1524a35f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5bc8f1f-c0bf-455d-9053-76a8966007f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da36b584-6e1f-4c2d-9f45-af8bf148fe3e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed426c8-1e7c-4d86-a0cc-b8cd2343f2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7073fe3a-6740-4414-a97c-da21e8cef910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b05080-714e-47a6-ba50-3348a8f5f780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "41165776-8d03-40e3-a203-b029b1fa8536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1213bf-b64f-4763-a753-23ef083f089e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd513728-5013-4435-97cd-8cdc4e543a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573f40c5-2184-4baa-90e8-6f12060e4e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054022bc-2429-414f-a611-0d3710c0e335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ee8526-a23a-49a6-bf7b-27dfbd1cbf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015b267d-ede3-40f8-a800-e5f97e17fd8d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f95d0c-8911-42bb-afe4-0f9cba7839a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592288ab-5222-41c3-a5f3-6eb90a38058f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2584991-db4f-4cf3-b8e0-c9018693dbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee5bb51-da4f-436c-a536-ba5809da786e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f12c00e-d2cc-414f-bcd3-ace824d12a0f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb94a0a-b249-4fea-b54a-fb3dc6a9146d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b757ccc1-69e8-48e1-b9f9-2b7fb3d147aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71510cf9-370f-4e28-a271-33d467b95bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b5086c-d7ef-4652-82d8-d4d7e0ef3544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc872088-49d4-4f4f-a6ae-054ed0fec53c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4db5cd-920a-4e50-be76-1754bb17169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70fe897-1f88-4dbb-b39c-6647daf5cc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ace07e6-0f73-4064-b116-2ed9c8f8e9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a81f5f-b989-4f85-9ebb-4eb44e6a7156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58d9855-7d0a-48cd-a42f-471b6638a687",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2116b8ab-5489-4c45-8f36-751aaf65d77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e44cbb9-70cb-4ead-a550-1fcaa1410152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119bf7b3-976a-453a-a7a3-b90f830f15ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b935d0-d2f6-479b-a78e-cbc87553329a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf36ac1f-a893-4db9-ae10-292867ce05ee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39518b7e-082c-4154-aecc-bb3bebb8f509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c1f66b-4ea8-4902-8035-ed9755d0f6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051fa61c-2152-4401-8614-b7347f932f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "301d87c4-2b6d-4170-aa3a-b6057e3bc4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1785427-5d0d-4837-ab16-e50502fc765e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752ec1db-42e5-44df-a47c-6ee52d541eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e47b67c-1631-4021-91ee-f3d4274cc410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d466c8e1-5593-48ef-b849-e136c3cf841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a87011-49b2-4889-883a-ea35e6f70ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316039ce-b8d7-431e-9fa6-6bd1b4637123",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c88fbb-b001-41a1-bcab-322aa988393c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da9e2e1-9008-4849-845d-956b2f843fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbb2b58-5300-4384-be8b-a30b113a5280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "050f12c0-5778-4196-bc45-4859a9beb8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44f565c-32e9-42d7-ba74-d4b5c2a3f7a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf6ad1b-d47c-4472-9489-efaf82975928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af1970b-94b0-4ee6-b3e0-a278a3ff0fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db4e567-1834-47c3-9075-edea9c46d3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab821618-4d1e-4f81-b3de-8b392bf8f9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9a9b88-b98a-4ef2-ab1a-2146a90410e8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975a1e36-e9f4-49c1-9c45-6d121f044f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bc29f6-efd6-49dd-9a14-d926c9e6c8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebcd481-5aff-427b-8cb9-1bb50d090f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "49a1ffc2-aff1-499e-b372-c850f4bdc3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f35df7e-01bf-4aae-9f5c-e3f87a47be79",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813d8b29-9b2f-4f2f-9257-7658234b6405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c528ad76-3a22-4cc6-96ae-d9c5e94c1c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe30e07-57f7-42f6-a531-7586785598e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c029a27f-01be-4dde-ba7f-75d76688fc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781f0c78-b9ed-499d-942e-828ad21e086d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123ada26-64cf-4ce1-853c-8bd66aa63eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e196143-70a1-4ffb-8727-bcbfdacded60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96aa35aa-c1d1-4da9-8622-8a57e74083a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54d3617e-4fb3-4a40-b090-52118abab7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c7c7e7-bc3a-46e9-bc04-24a73598f791",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc60d92e-a58d-4d87-8970-648571314538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906d8de3-9d94-4f5c-aa1c-41b0735a0f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de65619f-aea7-4479-93d1-769a8c103793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c871f5ba-12bc-4852-9c8f-22902b4058b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cccdab-e9f7-4dc0-9dda-70266cc07109",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117acfbf-03a0-44d7-a6ba-7a1b9ec251b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076190b3-b9ce-4428-9410-a22a58b8f6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c773ab4a-a558-43b7-b606-a3c11fc0c62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8a718e-6745-4740-9853-919b30153833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b58ac6e-b1ed-44dc-817c-1c51ced9fd06",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99f1583-f18e-4d2b-9ae8-ed7b222ad0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa5d760-e9ff-411a-afa2-778c29786d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b322bd-0440-476f-92d6-3183739ef3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c513dfa-c673-4920-b386-c5abd732550e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ebfa4f-d58f-4e6c-97bd-c252b1496720",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001438e8-38c6-45cc-af3e-5810afb13190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0f0612-5d37-4bfe-acd4-3d7354e308ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c79522-eff5-4fe8-9e28-ca1a49e52e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea2628a-faa5-4c09-b524-cd2b51b0bca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41eeccc6-76c6-4564-9f42-c782a4a65174",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6092f1c-97ff-48f2-99d9-0882765ef627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944cce45-5a79-4b84-9537-6b312c213243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67b701f-b01e-44c3-930b-92cb299e9e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b13ea3a-be64-42b1-bfda-9e67ca13ee34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9560bd2-0b24-44ef-ab74-1791bd527f51",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea62a24-1b62-41c1-8d80-fa3b9b47378e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eeef79f-6f53-433e-ad0f-1eae40fad021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecede5a-71c2-4e0f-8248-ac9f94e1cc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc9fe74-7742-4396-b51a-11c5f50405a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cdd95b-ac15-4331-94ac-6daadb6680c3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a42efe-5b65-41f3-aa5f-e76865d013b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c5ed49-ad24-4000-8bab-14632924a13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc9441c-4bff-45eb-8a73-b066634342aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afb2a24d-50a6-4bd1-ad9a-69a0c5765cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d1eb1c-7b1b-4d3e-b92e-8e72ca1f46cf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401f1f38-7255-4fe3-94da-cbbedd713487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41292ce7-c93a-455a-ad47-cae86fd10b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200abe8b-7a55-486c-aa9b-f225ba4263c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6756e7a3-1419-48a5-8d70-8e79237db189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ad0b59-2f40-4c0e-879a-fc799255f49f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa67c97-df67-4a57-a75a-e736df31fb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd54dd4-e2cf-4593-b037-74bb79b42c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f907d1-a9bf-472b-8052-cfd8729ca7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67bfd07-8026-4b51-ae04-3aec8d8611b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48dad9e-6e3d-4d24-b6c6-fbbc4b93232e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe015bd8-875e-4a55-a950-4a1e3c4bcf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1ef5ac-5085-4c2f-a901-92cee0150d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b2f9dc-4356-4084-a243-d8b91702ea13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c6f2bf-5f46-4b7f-b606-1772359d5b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930eb0ee-edb8-4171-ae5d-f8e8fe2ceef3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82cbfa0-5638-4ab9-835f-f8c657238d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd73efec-217f-467c-8855-b4f91a86c816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2885d3-bccf-4382-94a8-a30b8af6fde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d68d81c-53a5-44ff-a24a-2d5c3f05c8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd4e497-3653-47c3-8d7b-69a9e6e5c5d9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20ec177-d527-43d4-ba60-43e6c8f69a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb56571-1542-4c89-8e8d-90b22038e53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66429a9f-6314-450f-991f-13f5f4c42aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa39b96-4891-463e-84ff-9ed6783e5ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5deb3fa8-b249-4f68-a851-b22e48a6b72c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006bc85e-0669-4e58-9e45-a44a19116124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25932e8-1a71-428c-85a5-a1047b3f4a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f292df-728b-405e-b9a9-48ad6b9e422c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07f025d-bfe3-47b1-8559-ec168aa71bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd2a3c0-7ecf-4c5f-bccb-9286a12b9e31",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a4fd8d-cc35-42ef-af20-96ab4ab1e869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67075357-76e3-44cc-8384-9a5a78cdc500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb7b9ab-dad9-4d35-882e-69f61eaba040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b86010-0882-4985-a7db-03afcf0e35f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e1be04-4057-4a6d-b54b-ffc74fd4f968",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9628e507-f030-4fe7-bec7-25ffd1de414c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f128fe04-2a01-4cc5-965f-e0dab38ac342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5900e311-0644-43ad-b99e-178c1185c2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4515749-36b1-4353-92ab-bf1ce1416a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39e7455-6219-494a-87cf-246ef8c5ea35",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8979b022-d822-4628-b0b9-41082768ffb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d3594b-59be-473b-8a54-f436a442d713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22cf6ff-eacd-4c80-b9e9-d5214b76e04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed55cae-a1ea-4e71-8ef2-03f12522b1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9e9c3a-cd9a-4bd6-a9f8-48497eb7148f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79671399-ba8c-4951-8a87-0949e7a5a541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe343721-0f0a-47dc-9973-b21c661e73be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad630473-6b95-45ba-952a-ea0fb85c523f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfb6075-98f9-47fd-beb7-cf2c1ae8a2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fa98af-8050-4ad4-9c2c-efc8b134c83a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181cbdca-7c8e-4a63-984a-ad1982f273d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc535190-df5a-448a-85e6-bb25c8566a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de0eb44-61ca-4b17-9dd8-e830b1addc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db2604f-7426-4ed1-acb4-7d345fbb1a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aadf71-bb16-40f4-ae48-1920cf5bfca5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c76f7e-9252-4d8c-89b0-4805bc6d8959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4620ce2-c988-43c3-bd78-f690621ef4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa684f1-2e78-4060-8848-17f7d259cd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "addedddf-e5b1-4075-b31e-97133b5b0caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3bffdb-2da6-4377-abfa-959d7b559e64",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d729f20-1713-40c9-9780-cb19e1a0fbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171b7b36-183c-47d3-8cdc-d7757b8b1a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7304af-94c7-4527-96fd-0664ebdd60ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3580a8-c323-4f45-a016-828162bae637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9f3a86-95e8-422b-82fa-6d454380c515",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bdf3b3-9e75-4a93-ad8b-94e702e5090e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09817072-a610-466d-9f4c-7cf8961a0132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc77ba4-b258-42c0-acc8-3858587def72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaef328d-9fee-4628-b17b-f2675d942703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0da243-c8fc-4eee-aab7-c8304ff878d8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aee8fdc-ec0b-471d-82cb-809b71912187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e666258c-5d65-4693-b8eb-7885f5de51bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a263a0e8-fcd5-4ca5-aa17-7651ebb0a8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "292590db-9045-42e7-9ef9-2e844ab4d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131efbe1-94b4-4a3d-8074-1878cc313c4c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ed9354-c126-4591-aeb4-a78a84fbb6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dcf85a-ab14-4115-8a64-681503a42860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46572622-7d8c-4ed9-94c8-c966d4a75c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c51353e4-8d71-4c11-b362-8bddfc0409f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a39e495-9356-4609-9907-572e7c74d239",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed9f347-8e48-4220-ae7e-291789205293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5434a276-189a-4abe-93ae-4a44f6bd0251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca699e4-297d-411f-b675-c84ac59b9692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a58cc4-bd06-426c-9ea9-f41399416659"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9d0f79d-3e25-4768-a859-2bc34f6a431b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42d9ae7d-1dad-44a4-ad85-d546d130561d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41e1bb5-10af-484c-bda9-d2ac938db374",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a02f6b54-9152-43d6-b1e9-d74cc2b43e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab8e2de-c5a1-482f-93f7-ea01fc8bdb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d3ae551-9560-4abb-b994-a455f37f7144"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e24ba9bf-a80d-4ef5-af46-42def1fc9e21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39ed91f3-9463-4696-a806-58890001c857"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a37b9d7b-d784-419d-8dae-80bcc325ecdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73d4acc0-022b-48de-86b9-69612a7d40b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b02723c3-3827-47b9-b0e5-15a6515583bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53296a6e-6132-4d17-ab03-587c46966968"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "852a121e-a3d9-4519-8d7b-752a7eb936e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac385068-49d7-4201-9805-f8e5ca596308"
            }
          }
        ]
      },
      {
        "id": "6aae958f-f11b-4ac4-ae89-06db95b64f44",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ed931c05-4818-45bc-b2a3-0b16ff681c18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2212cdd-9e15-45e2-b053-3b7d42def86a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3136d8de-98b6-46fd-98bb-74e9599226d2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8d3ea7-d262-454e-8119-c78216cf7776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda8c279-d151-4cf5-8337-1bcf429d1406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c67c5af-fd9d-4ed5-8d16-bb2e14bb56fc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945c5529-f90c-4768-9714-a3cb60073c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6323e3-3da4-4b01-9935-2be01f8d036b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677f45ae-f718-43a9-b30b-739f956bd58c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfaea078-7782-4793-9e22-ca26b5539118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22505cdb-6561-4be8-88af-2976304607ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4697b93-ca66-42d2-885c-a0278509abb3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bd56ac-ce7c-4e2c-b902-21685dd01877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffdacf7-d61c-49cd-950a-b93fa08553e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695f38d8-fe82-47e3-ba04-a52d2057551e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2e2c02-d804-425f-bac0-76b6ec59733a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c8627c-2f3c-4644-97ce-92cd94238287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9fcd26-de61-4405-91f2-621a91813f06",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc80c77-dff6-47c3-8427-534c15adf756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589a1621-e8ca-48df-a070-c111fab124cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a9370f-45c9-4967-b7b5-ff7b69fb3573",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef91e68-3369-4d4a-ae96-8adff798b150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4221897c-2654-431f-8e4f-5a9922effef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28a5a96-bcce-45f9-aa60-8e8c1607e704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b246af2f-a20e-4846-8d57-fe17e1ba386f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b53382-4bb6-41f2-a143-f031c048a837",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60ffcc4-8de9-41bd-978d-d7a73d887257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92191f64-4421-4510-a55b-c7ab0ac307a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a960641c-05a2-4fb7-9d78-bf215e7dc41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f5a405-f32f-4cb9-9f99-3fc7fbab2a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dc3cb5-d5a7-44fd-8d2b-883c990efab5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d08178-7c33-481c-a3f8-da8b76c1646b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec86955-22bf-43c1-b9c5-25cc7aa3fc99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26420874-cbc5-4c28-a004-927119067321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d6c6a8-280f-4dba-9f2e-dedba33a75ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ed47de-0fec-47ec-8ea7-eda64608f135",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099b2eb8-db76-4ef5-9185-a642392db7d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "794edc7b-9949-4553-a8f1-8779effe1e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0279e89a-885a-4e66-a8cb-1df06880757b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4f3428-5539-44c8-aeb0-999764faeaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0619782-3199-4065-9877-5e636e609535",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03d06e7-3d99-4b53-8562-5bb2cec87977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ace2ee-f2bf-4e9d-a17f-a46512f5c260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb3c243-c92c-4a1e-87f9-74a4cd169564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40e899f-a1ed-4dc5-bafe-a76f3f5fc034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66c3d4b-7920-416e-befa-470b33d71591",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a872e0f7-6600-43da-a2c5-573b30524222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951f007e-a775-414a-9501-41cc92b4d130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7f776a-63bc-4520-9a7b-f2850afb3e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b66cee2-1f8d-42d9-bdb0-91a63247b8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eabe3e0-ee63-4eb2-b4a6-2b92ded71137",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d072c1a-1638-4a5f-b5e7-5a3e2886b329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa0b640-cb9f-4624-90a4-40d5fc857397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d15a48d-7653-480a-9c4b-70988ac28de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808262ae-a95e-4dd3-ae47-42cacd1c1587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1dae97-9e8f-4012-983f-8142bf1e9794",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157dbdbe-ad86-4239-9299-18589f44f6c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e63b39f-8ace-4cd8-8677-5d0792a371c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ef66ce-6e62-45db-8158-4335349c4fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b1763e-43f3-4022-b633-c5e4d9a978b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed1877c-6b7a-45c2-af38-0ade0cccaff3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d831b6-8adf-4627-a57b-30732275a92f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3708a89-418c-4fed-a843-e56550c0ee8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d13cf5-e48a-4910-a28e-7cb039121ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e12ace-2eaa-439e-99fc-8645af10faa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5395b542-87e1-4fb3-8031-1b6c31ded918",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85697056-3695-4aa8-ad9b-0edad35fdc68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972dfc33-a8ff-40dc-a310-7061f535f210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c5c885-b606-4f91-8272-62e7a6076064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226cdd6d-0ae1-426d-a102-3fa8c2a517b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e2a2f-0577-4431-a7dd-c84d3dd8002c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da83a0e-f834-4cde-8297-467e88eb5f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b77ef0b-127b-4434-8db8-21b316a93ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0fd02c-e77b-4a85-9e78-329c4b3ca0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5b9ab0-17ab-42b3-aead-742cbf307c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9b1506-50cc-4bf6-a434-fa7fb41c526e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fa5501-6e35-48f0-9652-e523d9be76df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dbb21a-5134-4a01-a060-b0a0838559d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9969f3-c84f-48eb-8fce-2d9f901ec268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c36449-7e27-4610-aa97-0862e3d87395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6d04fe-2693-4c05-a6ed-86ee618e75d7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0505dca7-0ccf-4bf7-9911-6db4acbd0d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87bf661-6361-4289-83aa-548fa51ae4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bed45c8-dd9c-403b-afe7-b12ca119c7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4cb375-06d3-497d-b0af-5c1f18c03965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ac8b1b-c106-47dc-a077-3162f4bd7c2e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d57a2e-122d-4f30-8af7-e71b4d482331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9f9917-0d8a-49ab-89a9-6c5e1d2d6d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c27b629-cbd6-44af-b5ef-568fc5d0de16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bbb075-573a-4cc0-99ed-7cb472144328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2403cc-541f-4b55-9e5f-6cf24377a27b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43980448-7983-4c52-afa6-c8643d79065f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035567de-849f-477f-8c17-bae66151ef9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbc6e0b-3af3-41a2-8657-c5a0e8df1b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0b87e3-59b2-47a4-89e4-a6ef3529ee47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1a7331-b586-4e8c-84c4-64e7c81c923c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9362b8ec-6de3-4159-87c5-33601a9b97e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8ce9af-3eb7-4272-af31-5dd3f9b60006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3472adf5-50b1-4bd9-ad63-b75c48bf0030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7532fc87-67fe-4a85-ad93-e71f0fbaf79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c066f2-0cc1-4237-9da6-03e0dd2d215e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8038ce94-4018-49b7-ae07-bcd48a4e4d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c8d9ad-b7ca-43fb-ba7d-b0d4391ff540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acf9329-bd59-4595-91cd-90c513e866ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088477ee-401d-47ae-8756-528027154e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95baaf1-0d36-4d21-9ab6-731f174c4657",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7494084-cd4c-4fb5-8a7c-0fa2b69fd284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15be77de-d3e8-4bbe-a2ae-525832bf27c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38141e72-58d5-463b-8306-5eea15af22bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e766fe08-9cd7-43f6-b07f-815ded64a161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c8f94c-4bdb-4841-8696-3283c5c361b3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e84c0d7-27af-4beb-90de-a66fd78c295d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c46378c-270f-47fd-9367-4eba700a2eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f792763-1aa5-4f6a-bbe8-6cecf10fca9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ef745e-1943-49e8-a25d-e7ef33285c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7242673-22ef-4e90-82af-d40cc9b965e6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c45ef1-6953-451a-b654-1dbb7c2ee988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc42325-b4da-4f59-9c86-e04af0926dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5dd81e-955d-4e25-85cd-f34edcfc2587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd9a087-daf1-4a8d-bd4a-6181f51c4e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67896a0c-fcab-47ab-b72f-3177dfe351ae",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecfbbc7-f750-4c2a-b42f-b4608d72b287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26029f9-0adf-453b-8613-2b5673d0b541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f381e8-577d-4b4d-aa6c-93dd5ae8eda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f489285a-fa39-4ca6-af21-6b40d485f287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4c6bbc-4b4a-4e9a-9406-d83ad0b46581",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e3648f-7d8d-4c0b-8f29-b692a6f32ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0f0e1b-dfa6-4a64-a5c0-674e18803156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3098249-6eb0-4732-99d8-2750d7ff60fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6facc306-f9de-4630-a8f3-585c765f1ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af31b5e-7c13-4410-a0cd-398c82ff24e3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6a76aa-9084-4c80-805b-6909b18c8fe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bc82bd4-0812-43cd-aa50-dba4129c442f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8880f312-1fd5-4c51-8fee-3fb3fdc480c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44fd819-2394-4471-8092-8fcbfcf234dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d4b884-0e6e-42a3-b655-ef127be7f16b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a02e78a-ae37-4031-b32b-f228813ead17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ed3263-f756-4985-9877-eca883422911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ef68ab-b7bc-4c07-b6a8-5d4a5493d3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03580fa2-53ba-42ed-a19f-a97a108e6932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039045d8-a248-415f-9723-bedac1a2b14b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a337c3a9-d35a-4827-a8c2-82df626123b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d938c904-b6e6-426e-9ad7-79804abc002b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65ca967-67b9-43b4-aec4-f7dcde32bb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e03c0b-032a-47d1-95b0-23b0c6f4143e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e86e534-0884-429b-8981-edbe4d6732b4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c6a643-fb1a-4a5e-a2d4-057b21ef4cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7544326e-2ed8-4dae-9192-ab161ff54557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2205bc-aa19-4022-bfc2-7a567555461e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e732253f-998d-4577-a9cf-21b701e968b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4141117-a240-46c4-a5c0-90c30f63c683",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5bfecc-f3e4-46ef-9621-7c0eb85a63fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb19831f-cfb0-4ad6-b72c-c6abffbfdcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9e058f-af3f-4103-aff7-ef7b15545231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2be39f0-a8cd-4c53-aee9-22111f3e4a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0e41e1-bc40-4be0-9e14-bb62c05f804e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f05299-96d5-4060-a75f-121baec8ca2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d45fc2-1d05-4c67-992b-fa8c0d918ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e0664a-0139-4936-bb3e-aef6328c6a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8230c7-1ffc-4308-9cf2-f57cba917ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7719ce85-1b3d-49a0-aca9-1190d538d5df",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3822df-3350-4c18-9d35-091e5061c76b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2c4f54-1b6d-48f3-a164-b734d5fde143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f1fa8c-e020-4d14-a779-936e2da4643d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1413243e-6d6c-45d8-b826-b991b1ac11ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5ea643-fcbe-4769-a7fd-baabfe7d635f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8548874-e7db-43b7-9d21-ddfa9584a81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3965e0-be56-4f49-8e46-7d1898c16bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391465a9-accf-4e19-80c1-163d62a89e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dfabe2-598a-49f9-a0f7-ecd88dadeddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5562f9-abfa-4e61-95ef-bb8e6532ae30",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664e9fab-c1cd-4fcf-a576-d411d631b452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c21960-64ea-4ccf-b0e8-4d045fd25dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ebbe8a-f538-424e-b65c-1aa9f36d53e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7494869-8d97-4517-8695-9647c30fad61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5fb382-b1ad-4b82-97b0-f771cde192bf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254276ee-207a-4c66-8276-2df83b014a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad0b33d-53d1-47f0-bc4c-7564b052d48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aa63f1-151b-4de2-9549-b7519041ab4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bc05a0-3f21-4ec7-81ca-698287173e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b7b5b0-1f7c-403a-8ba6-07d8205a5cd1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7f18bc-b3fe-4511-91c8-52ac2815bb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4719885-a580-4739-bd24-5c55fbe2b9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19aa66b-07a4-40c1-bb62-99ddd2b51e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5052c45-31a0-490c-a6f3-215304e29617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4c2424-9ca3-47c3-a7c2-11ff18fd8085",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80b9948-993d-4d97-977b-f8c0166c1680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b89a951-ea6b-47ba-b5a3-bf3bc950363a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e948250a-eb89-4b68-824f-a52cb11de26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a48d945-f8c5-4924-9abc-40f0a62c5821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c38df10-2873-4b57-9cb8-f1d8a3b5552f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de973f1c-970a-4f5d-bc27-db735ffe5bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc972bcb-d21f-4c68-9b85-61c2fd940bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7624072-fa25-42b8-91e8-2d511732bf6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bce1a6-8847-443f-9c3d-a8f2ae9d5b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adba562-7ab7-447b-85fe-cf572de07a47",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea53e5fc-b111-42b0-a241-5bce8c195444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcd78f9-7517-4e3f-86bf-83b11b58317a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9e0367-d5fe-4d5c-9648-3ab076691cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead06345-5ca8-496f-b496-2c37cb601454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a34ec2c-452a-478c-be8a-44055f9e0072",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97a9e78-0a00-4d5c-8baa-1b9003b0a8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0c932a-698d-4ca0-967b-fe808b0c8b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd69932-7094-4bba-9774-206084452c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2ade97-3352-4871-9cd0-50574b136d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e124698d-66dc-43e5-a1c9-762e425e0309",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5129511-bc57-4e97-a025-f118e42c1af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b49c6d-eed5-4423-bc95-65eb2a2c904c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325173b7-9527-4493-8643-bf4c3c28e186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71a7394-d71d-4786-ad00-8c832d7a4777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0946ee-1b41-4c8c-b291-f6246384009e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2865dc3e-cd3a-4e63-9fcb-2b2f32d3300e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0eedec-7a9d-425e-93f8-1c743258bd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e7961f-a60c-4a60-a1fb-a07187600f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ae771c-25d7-4918-bba7-962af93f7181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a1ee52-9c94-49f8-9d99-f0a53a6e0496",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0bf41b-43e7-4d0f-a27a-69bdff8885d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe64342-6192-409c-93f5-8b2f238ec2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f18d50-8881-483b-9afa-02eadadb88f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933e4fe0-23ef-426e-919f-131f23535afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72a8b2a-247a-4a1c-9ee0-7042fe71fca6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a26fea9-fa8d-4478-981d-b4600ee4a695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f46eb9-6756-4cb0-a177-b0409a6fe884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d1db42-7143-42b4-aa74-b56aa840bb79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73e93de-7529-410a-8585-dd6b8b56c754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edac42bc-f642-4233-be3c-45d3e7afd656",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d74fb8-b3df-41de-968a-3db0e55e8b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598841ae-a162-4570-a37d-13c60e9a5bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32a3813-00f6-4b0d-ba18-48b8c284fe27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f51769d-e154-4dde-9a8f-c9655fcd7eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2a36eb-736b-4744-816e-4d9f4ef42249",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f29e8e2-721e-4950-922a-6def476375c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911c42db-2941-4de2-b2a3-01d44136c526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c219058e-824a-4b41-ad25-e8992cc809d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba4f81e-01e3-45e2-bda1-c026437febba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d2f322-28b5-49d7-8ac0-9a3a25a68ce3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbd3794-791e-4283-9799-cdb1e504cf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9fd6fb-b36a-4ace-a89b-740c3cfe03b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf42cbc-fbcd-48a5-9b28-8873f5cc82b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fb8abd-468f-490a-a297-bc1b72d181e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b120d174-d9a1-430c-9c22-d9c89e5d8615",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cac89e-7b39-4869-8930-8de82aaf4c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298c1246-2834-483c-9a60-507ad03cd53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e358e96-4f5d-4bbe-bd14-203a898ebd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372fd6c3-e887-42c8-a2e4-17998fc1583e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5700e3-63d6-47fc-b6f9-9a87822b7648",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a80ee6-1d8d-4322-87a3-02d7914afe02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd301d72-d141-4f0d-9d9c-c2b3ebd823eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d1e703-3b84-4816-a822-f9c92c70e7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53983e93-148f-46b9-b56f-f76e6339edb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7ba65d-13e3-4bce-9eac-132df9427649",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fff59fa-b3b2-4b9f-b3cb-cf92d108f7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9589134-6eba-4321-ae97-d05d74e4dedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f964576-9ba3-4f4c-bf6c-93e1f63080c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95dd6d62-214f-4a6c-970f-8c6471c503ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db31067-3072-4be7-b936-a8b906054e77",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881f930d-3d20-45c3-b690-b12974d0d16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b390e10b-f4ea-45fc-a8e2-ba97f79af125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7543c747-9cbf-4e9a-8fe3-189b544a569e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffb1392-f93a-4eeb-a66a-ec0472d90a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92e41b5-b5b5-414c-b3d8-99a617db66f9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f257f3-36b6-4dbe-ab0f-a7f10e58c763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9199ccb-e902-4175-b4c1-e36e5e4849f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7485902-5288-4739-b575-78efef93ce22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a136416-e2f9-4877-acab-5ac02e31ea8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a238af7a-2b2d-4712-b8d5-963c9a521de6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebf1363-0770-405d-98f4-376208a8a0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ede06f7-1916-40bb-9877-8e9e7de9467b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbb279a-8a4f-4a95-aff0-f7daf63175e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8b6f58-868c-4ac9-a353-5cdf69901603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6414200-fe81-426d-8dbb-b79239cdbbe8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf51d32-5e2f-44a8-98f7-43f066056084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26269098-592d-4e1e-b15d-6efaccf9fb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c04c33-eea4-4a39-acc1-8b7f1cebec42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c46b31-a99c-4598-aa10-cb78fb72cdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbdd5af-aaad-4000-8327-ae45dadbdb60",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bac30cb-05a2-4839-8532-b830e1af27bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8966bc21-257b-4b58-9a89-5f7d082ec67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de6550a-899f-4585-90d3-9761ff867acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9b7823-79f9-4b5c-9c9e-caa1c3e37c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a06b836-253f-4713-b577-ad844587f964",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5a80ff-8eef-4c19-82e4-153ff7b8afbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56eb61bc-4cf8-455b-9c37-a267c43e6424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a24926-aeb9-4d95-9d78-d96ce28ba226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2801774e-4851-4a4d-88ab-9ed4d3ab07ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9844d83e-9e80-4857-9dc4-c646475c27c0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f07b6e-2618-4623-a043-65b6a3844360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec63092-5e3b-41bd-a73b-080f6a6ce12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b6e017-6d56-4e1b-87d7-3317e857afa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead6df46-2e41-4ab0-8b83-3641af942633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93084357-4794-44d8-9470-ca841f359022",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafd14de-ef19-44a2-a75f-8f4968e6325a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ace4b5-602a-422d-b43a-e44bed502366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a28428-93f7-4ac5-826d-5d1b644541a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4db1f0-4a66-4557-bcad-40e7b6d72f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894df0d2-c0b1-451b-bbde-6de155893d67",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040a826a-098a-49fe-92a1-4f79bc9b74a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd3a4ca-5282-460a-a7e5-1a04bbfe606e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9180ff11-7d3c-4c20-a212-836646d34c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e6cb49-78e5-4733-bd7e-38b1442e606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b80cc3-6e5a-4a7b-ad7e-c426bd2d2738",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad4787f-f588-4b64-87d4-eeade334f61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bb5c30-ef28-4c39-a4fb-b9fe68c2db75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3579d5-8b6d-4ec1-bd07-187dcca57c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cc44fc-12c5-4ac8-addc-401f1f4e530d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497e5d49-3c0f-4109-9e90-8de48a7e46f6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45129709-b267-4d57-ba3f-62410126368c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be74a46c-6eac-423c-8b82-025dd106b3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29439071-5445-48d5-9d35-8c8de8bee8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c43796-d452-428e-bb50-ea5964fc6681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63896c7d-672e-41fe-8cb3-bd9d5ce06580",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5650dc0-5f32-4a09-839d-be01de8e9165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47baa1a6-8b42-4b83-8c39-f31a14a9d68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42b8133-58dd-4f3d-b853-ae62eccd86af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d21ecfc-eee5-4e84-a037-13ee304c6a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effcd1ea-4066-4a1c-9527-a089e8b7d3e7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2fe131-a346-40a0-bba5-9e1a56195960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f45e856-db08-4d36-9882-0c47b89c4ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c217679-15d1-4493-9788-407784548894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038f403f-c77d-4e22-a6e8-b6d982e22b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e92da42-8557-4a75-9f46-20dfbd03602c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89057e01-b99e-44b9-a6a4-03d69e037114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c4ce33-c420-441e-8d20-f548dcda8be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84f5f37-374a-4587-84e5-c5319a71f9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d565972-38da-429b-936e-f174357b31c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0381ae76-7913-4c5d-878a-356522ff88a3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566ab8b6-1823-44ad-864e-9799932de782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d59c5e7e-f7f0-4723-8dad-f78a0469231d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae5d39f-0cb7-4842-81d5-ece75187c816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01e2e05-2099-488a-91f5-ec1d4c95313c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4e7e56-4907-464a-a0c3-03779be963ff",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dca3a1e-6a46-4fd7-a32a-c63e4469aa27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2011123-c31e-47dd-91cb-5ffea94ea42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b451be27-93ca-4f64-991b-14f974497be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569d5465-28e1-4b84-894b-b762866b2cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bbfe99-ab68-4ac8-b002-df04a23ea753",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033c115a-4321-48c1-8907-4012ec1b0b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df207be0-9a2b-468c-87a4-e55a43932c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908c6699-25c1-47d2-947b-48e3ec733871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921f8029-0f28-42a6-ba3b-6eaccecbd08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb34b723-bb85-4757-9ebf-fe98751f6db0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a8c917-e41f-4e18-9442-83654e4e7e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65af86fa-9017-43d1-8450-81155250a41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5953ba9b-971a-4d60-b555-bc42a2d34eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e581a3-e9fc-4634-b647-20c0d3b8b625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b844ab-f7da-43ed-8533-ab780c5fe6fe",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aafcc14-e28e-450d-8d95-64338e7374bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb1a7d8-9cc4-46f7-ac8e-6f92dac4648f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89213df3-e5b6-4883-9aea-bdbb0a59ab37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277ec8c8-0550-4366-899e-661b0abff51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da55f252-b0d4-43bb-b9cf-61e4429e8054",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82449229-ee86-483f-8bb9-fea76d164a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8baf699a-d10d-4cde-a689-eb8c7931ea2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f67d7b8-c88e-4f53-85db-8a6b5b68ed53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9035f7c4-b904-464c-a97c-d9e4e19e5a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f93076-fb67-4d03-bdc3-3dc34b8573d4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ee1507-9680-454c-9e11-c77f7c0fe0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc86f1d-69ca-4d1e-b2b8-caa323209cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb0bde3-2542-4fc9-866c-dc757dbe32f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4003210c-49f2-49c0-a226-e7d75180a1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263d061c-8f25-4ea7-b604-ec6648383140",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55e1406-7eae-4455-8b27-9ae466d271ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66306d9d-f085-4bca-b984-98d956a21695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c5f3aa-25de-45e0-ac45-61f48e233700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b077a595-c4a2-40be-8543-4cd00cfc7901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3b2fcc-523a-46de-a9c1-e99044360b2a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cb69c1-7d13-4d8f-994e-5509a9535f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81bdb303-7bc2-4e4f-82ee-bdc94ba493b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d3c15d-54c6-4225-b46f-9a01e9f82238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d1bdf7-a0ce-4dda-a7d6-791a8649af20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463e3fcb-a0b3-4036-9409-29f1217feb8d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae165faa-5fef-4796-9133-4a581ae6657f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a00d40f-ae3f-4150-b822-6fe92364c4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0488e3b3-9547-47ed-b2cd-a43c82b3825e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614ffbf0-6dcb-44e3-840d-f4e8c1497a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96495955-0b65-46b5-98c6-490041a4eb8b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f27cb7-04c6-4038-8790-40606f4f60d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e02497-0735-4a60-a380-144eb122f3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed61ac5-ab03-42d8-9c46-6050cea6bb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2cb6b0-90fc-442c-985e-0b4cfe568487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d58fc9-1ffb-4666-8acb-bb9ca974e565",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59c60c6-a14c-4248-a5f5-e9dfe4462efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910bf8f3-928e-4aff-bee0-f2d3d005be09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35193a17-9d8f-425e-afa0-46077640c6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7f199b-b048-4602-9469-4b49a18c6e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88f4fa5-210d-40ab-914e-18bd62aeae3b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8850fd42-1369-4593-ba33-b9311ae8b050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412ff95b-8e2d-4c4a-ac1b-5533facca03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2e566e-f0b3-4f29-826c-f21baf652ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1110fc-cf9c-4907-a37f-762db7bb0914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0b9f16-f4df-407e-8f41-570dec135213",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12f2d9e-6493-447d-a66f-8a423d53d387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7af4d8-6a61-4b4d-bc6c-fc7a6562cada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f664854f-0dbd-44ef-97ca-c9cbc0374f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8e8ed3-4094-4983-b0c0-dac20469e38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa84c621-10b1-403f-b1df-3da7658c4e2e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4221889c-1fff-435c-bf86-759979318e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b49f750-c35d-4783-bcd6-d9841926ed2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffa4f07-48db-4627-810c-8efc290401e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df500d8-be00-418a-a7ce-93f97e535de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293c9bd5-d32a-4981-b795-eac2ead20b78",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb384f5-8e53-4057-b8ca-c525f6404e5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec7b5a6-6f1c-441d-89c8-4ebb91419599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb1dbfb-415b-4c0d-84cb-9df3863ebd5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b0c02e-dfcc-43ff-ad6c-af2d5b3f90f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7827227f-39b3-40c5-b00e-2671d87e69b8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd471650-f6a9-40ba-9702-8b9e78ca34f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "952762e1-32c8-439c-bea9-342ff113ea4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b9fa5a-9758-419c-8318-df5de4245212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a431c3dc-588c-42ae-a4a5-379e323ddb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9db0cac-7fe3-4ed8-8519-8acfe3e5e642",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24c3ae9-6ff4-49a8-884a-da07af804506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a50b5ca-0c5b-478b-8765-7efd4396732b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78ff32d-bd48-4f08-b7d7-93bac1b1da7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35aa1086-56f1-4638-b0fe-19b473efd080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a2dde4-b1a0-46bd-b04a-656329945c3a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd41406-928c-4422-a9f5-c105db5bd36e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114baabf-ca5e-4574-a79f-1e042dffc92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c37ab14-b12d-4383-be6f-8b3176a2b5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b06ccdd-e790-4ea7-9be5-b3acfa68df74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acd5f10-a77c-4f4a-8085-512b6a260576",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afa9ce9-c88f-4da7-9a95-4a6663c0b504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9d8a08-deb1-4246-a91c-34b2a62f67d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad78763d-34b4-4f33-a075-6d01f89a4915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce501a31-5aaf-46ed-875a-de4e8dbdb627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2f6753-9ae4-4164-bb95-bd06b5a56907",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b131849-b58e-4254-8b68-ac4c40455f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45021df6-6c3f-4196-ad84-26c77975b4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2300c6c7-27fa-4099-a08e-5035611faf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d2a163-458a-4374-bce7-101012912d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839ee3d3-50f2-46fa-840f-38c4b541b4b3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318e78e0-a72b-4858-97a5-c6fcd7953088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15db3243-7f2a-4d04-a8cd-ef629e8bd78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd07fc5-f6e3-48a3-80bf-7e02c163927b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e465b498-941d-43dd-9cc1-73ece85009b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0cbf7c-2223-4de5-a8ad-2612ef57cb1d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51dd3bb5-eda1-4e8b-b4eb-b879290d0954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1349ea74-351e-46f5-84b6-d3b5644a564d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7de09c1-ac01-4716-95bc-05de430c1653",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143702b8-ba8b-467d-b5fe-4a03605516dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e290a053-8b25-4dd1-877d-246b50975398",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c4a45f-2e45-4832-bd2e-71b79825616b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a54217a-85d3-4a2d-96b3-4d424ff6e445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3762be5e-502f-46c1-ab9a-07325e096a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbd50fc-591e-4833-939d-a79062580c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b606cf2-797a-4d35-98b8-cbca58dbb170",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d21bac-5ede-4815-b883-ab14dac115ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69af4afe-0d13-4664-811a-3a6104e565e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cb8966-c453-4108-b817-cb80bd9b5684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2444ac14-02b6-4459-8508-74c1bb370a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb442299-96ec-4528-8f77-01778df75fa8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a9dc81-7eac-453f-b822-a730673e5917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23790512-dc86-4cfa-8c1c-08ca8698cbdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8759c95e-9e21-4593-b116-413f56bf0744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03dc04f0-f866-4404-8e96-6430dc78b532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b6c444-a342-4ace-a4ab-c8fc10fac0bc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e24bb5c-077d-4b6b-80d8-cd3743cc9fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c44e04a-26c1-4711-8e8a-2c36b26474a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafe2f80-8c9f-4f86-beb6-de7111df1bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed086e7a-f143-4887-a8f5-5a3f21a574a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6149ce9-db3e-4abe-9cb6-ec3297a6eaf6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b31619b-eb65-446b-b67d-df3d82cfeb33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a1cedf6-838a-40f5-a157-33e5b665df80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d943bc-f013-468a-9c18-21dc48a178e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af5563d-5620-4bb1-aa2e-723cad4a55d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01fd3b9-c68d-4913-a9af-26d14883859e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c178438-5493-45df-9c1f-a17dfae87a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f208cb57-e4e2-456b-846c-3e86f8f17c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5c0ae7-6de1-4033-9bed-61dd5b117b0c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30d3cd8-87d4-4f3f-b488-bb727eadc1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472530bb-08a0-44cb-a6a7-82b78df27c10",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a8211b-e22f-4854-9bcd-040fe41445e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e38abf-508c-494b-b831-7e8f0e17229e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa0c6cc-c7fa-473a-9405-8f00da7d8ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a894fb-c9a0-4133-9a82-211c4a009e8a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb5dae19-33f4-4c41-bba1-4143cae5e06e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1795bbcb-3021-47e5-8ba7-3e0f40e62acb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26ffed99-d223-40d9-93a2-6d1030c7ff44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a75ebf09-24f7-4c89-88db-f1f135277617"
                    }
                  }
                ]
              },
              {
                "id": "e600b620-ac84-4847-9e9d-1e030379ddb0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97356d28-7449-4bfe-b9f7-aaf678835861",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9268b88b-e7fa-44df-99a8-f9a34a994260",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "894b7a05-f744-4f0b-ba70-ac678a4baa80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b83fc9-f6cb-40d0-9e32-f8ef5b324848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a35b7b8f-5ca7-41c2-bfac-2db445f7a964"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea7cc8b2-1b04-4e39-9864-925432278369",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d1d5066-434a-4187-83dc-cbbf221d0873"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1deb1185-af4b-4563-95bf-fb509b3e1777",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9298d99-8050-4f61-9570-4b921662ace3"
                    }
                  }
                ]
              },
              {
                "id": "c45c79c5-5811-4f79-b893-6de586af1e90",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6bd9f1d9-a0fa-4a63-82a0-4865d26c5722",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33efe5d-5009-4611-b846-c3f8f27f0a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3414da3e-9ae8-47ec-9aef-6151da5bb61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3371351-8d6d-4e8b-a9cd-8b1ca04f6a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86db648e-4a5a-4a21-b5ca-aefbb0ef72b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a35c81eb-c3aa-4deb-88da-55c870b8e5c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e7b4d45-794f-4c4e-afa3-7bb30e77ec54",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "694875f4-47cd-4863-8f13-372e8de004b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a26a92d3-526e-4a1e-9403-5694c14b31dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a116398-8a98-42bd-95e4-d0e13a908ebe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24cbb8c6-7783-42b9-9606-b5701171da1e"
                    }
                  }
                ]
              },
              {
                "id": "bf21003e-7ef2-424b-b16d-45219afb8389",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a370216-e36a-4caa-b50c-1a399151da00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4f8d5d68-bc09-4393-b1c1-bb91d647e5b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d8790ed-9c2f-4797-9032-88ac96b5e223",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ca7f16c-585a-479b-a389-c5d90bccb62f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "382fb926-5200-4be7-aaa3-c822bcf19cf3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1c267530-9e0d-4107-87b4-dc07306d3a13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca06941b-e520-4bc7-b3fa-b0b22e58e134",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e42acf17-55e9-4285-b1ad-c3ac8bb14a80"
            }
          }
        ]
      },
      {
        "id": "80deafdf-7bcd-46d6-a597-fdfd60d58085",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "30a67a43-e0b0-4aff-bcc3-110e4fe8ae12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f99be9f1-88e1-4696-9405-c921bb1d8265",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1b66b95-6404-41df-b8e5-63f6c40c433d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff1d008-d87c-41f8-a278-96ffabe9f007",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4d918807-bd4d-445c-b7bc-74f5f4fb31a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0948ea-62e2-4dec-be32-66a86c1f3501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0edc0627-c125-409b-9c11-ed0d84f56e05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "900b0335-1f2d-4f7c-bf78-c2b3b59a9cc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "391240f1-6e9a-43b3-b77c-b099c4774645"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdb1064c-9b01-4253-bf17-44c59cb3cb2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcfe04a1-ba24-4d2c-beb6-3df3b33fbf24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "272cb7fd-c261-4586-984a-6fb850716424",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b7c0b1a2-29e2-4092-9f15-82602efdbdac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c333f839-254a-44cb-9b05-03651c5d1606",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cc1617e-a1d7-4720-907a-f7cadf6fc0e1"
            }
          }
        ]
      },
      {
        "id": "4f35789c-0c4c-4a48-a400-016277cacf6a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7134713b-0909-460d-b47c-62f48cc171dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef6b65aa-d13a-4d14-ba5e-1310e5099438",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ac0f904-e1ad-4f82-a180-3663f5371db6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eab84ea-eb50-457e-8fab-836e1867d847",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3d91452-7339-4edb-9dc5-7d30794a1650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647c94c6-7959-49f7-b3fd-d03dec36f8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fa0b848-5b18-4cff-8ee1-45f2c9207f64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f4e47a9-940a-4e74-8957-abf08c8c6fd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "223685fc-95be-4035-b844-a2f20009ac37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed25d89a-a41e-4c05-9be4-9ae471d69286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c268eb1-bc21-455e-9451-8c7bc5a56d65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "016d16be-8f16-407c-b0ac-8cc309bb4b97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "464ac325-a216-4b7f-affb-3ef1491c6485"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdb4e3b3-5091-4b81-85f4-0d77da5a6a6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b122c66-b6eb-4d40-883a-17ce73f54ba5"
            }
          }
        ]
      },
      {
        "id": "04986116-67b9-4039-9807-943ae6f4555a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8c6047c5-ff90-4455-85bd-d20ea10ab89f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cead98a-a5f3-4b5f-91ec-64a39507f30c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81b36833-b822-4953-8448-9713c9aa507d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4670dfe4-91d5-4e4e-bf7f-069f21196698",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f522ce91-4784-4935-87b6-7efe4ccb69f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bce5837-e0f7-4560-b850-3b91819c8235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "763d9c4d-9746-4bd8-ad3f-20e6887a8881"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2845b039-7f26-4b51-ba41-99932a27a0c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68e2b144-f775-4609-8757-e7094e39de41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdde5804-6c4f-4799-b4d4-6327bf1114eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a40346b1-79f9-49d3-b5f3-557e60a4b8db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b96e6d08-e8e4-4fc3-b794-d9809c8cf659",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66cfb4d2-b852-4f17-9e1f-834ee1fbd08b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec75ef1e-d7a4-4174-9f7c-c9018814a58c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "722b2700-b141-4bcd-82da-52ebe0a53591"
            }
          }
        ]
      },
      {
        "id": "3654f680-acf0-4e64-a868-82b6efc042b7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3926f02-2b78-4064-a13d-554a3e44474f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "435b71b7-d1f4-44dd-b438-d84554586972",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cf809aa4-8f45-464a-8a41-eae20bf64478",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec15b50c-f326-48dc-9e9e-898b4c952081",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebb52ed9-ccd7-4f28-99a3-842d4dd60b03",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 50.911971830985934,
      "responseMin": 18,
      "responseMax": 4104,
      "responseSd": 243.09948985827063,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690850724543,
      "completed": 1690850750599
    },
    "executions": [
      {
        "id": "efa13672-d08f-4c67-8498-17400843a5f4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9ac5608d-3657-4fc6-aade-7a8541e3d4cf",
          "httpRequestId": "22abf4bb-d3ed-4c80-806f-ef1624d7a786"
        },
        "item": {
          "id": "efa13672-d08f-4c67-8498-17400843a5f4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2852337c-83e8-4678-aec1-c027f9c2a0dd",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "5289347f-33e3-4060-9da0-a139ad38194a",
        "cursor": {
          "ref": "4a9927e5-9eed-4a2a-b55e-d24f93e050ec",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fc263f6a-8a2a-49f4-9547-0187ca5e8b65"
        },
        "item": {
          "id": "5289347f-33e3-4060-9da0-a139ad38194a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "36bf1f7c-c979-4063-bd2a-045add91e520",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "41a26d0f-a16a-41ca-a0de-a42509ebff10",
        "cursor": {
          "ref": "6aa3c393-fb61-41b6-8155-7d42d032630e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ff798729-fd1d-44bd-a8c1-2a833e8a796f"
        },
        "item": {
          "id": "41a26d0f-a16a-41ca-a0de-a42509ebff10",
          "name": "did_json"
        },
        "response": {
          "id": "491a5f92-7814-449d-9dab-25776a50babb",
          "status": "OK",
          "code": 200,
          "responseTime": 4104,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9714d316-9c37-498d-99be-ada923f997fb",
        "cursor": {
          "ref": "49a8b9bd-311d-4b72-a660-41a683ffebe9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e01e924e-283c-44f3-b9c0-585b0f7b5cf9"
        },
        "item": {
          "id": "9714d316-9c37-498d-99be-ada923f997fb",
          "name": "did:invalid"
        },
        "response": {
          "id": "25a24dae-f65b-49c2-a562-34f0ff758b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9714d316-9c37-498d-99be-ada923f997fb",
        "cursor": {
          "ref": "49a8b9bd-311d-4b72-a660-41a683ffebe9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e01e924e-283c-44f3-b9c0-585b0f7b5cf9"
        },
        "item": {
          "id": "9714d316-9c37-498d-99be-ada923f997fb",
          "name": "did:invalid"
        },
        "response": {
          "id": "25a24dae-f65b-49c2-a562-34f0ff758b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0b4a01-de35-4655-8ce1-e7c13f5c7ac3",
        "cursor": {
          "ref": "cd91d73f-f363-42e2-adaa-647238c35a53",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9c27be88-2d13-4e72-a624-6842f1ff5da1"
        },
        "item": {
          "id": "6a0b4a01-de35-4655-8ce1-e7c13f5c7ac3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8efff657-4535-4ce3-830c-a2560b7eec6b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 104,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d09e4e-5a82-43a6-9f1d-6fb532347bff",
        "cursor": {
          "ref": "375bcc47-d9c6-4034-a1de-06ce7ec54c68",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4753345f-87bb-4cea-980d-02e4f3137680"
        },
        "item": {
          "id": "d1d09e4e-5a82-43a6-9f1d-6fb532347bff",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f58e476b-702e-4e6b-9533-0ad2761efaf0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d409b2-732a-4a22-8a30-c30b3510dd66",
        "cursor": {
          "ref": "9aac9988-4e8b-4f74-82b4-d4573f608138",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "39444a96-c12f-4eaa-9709-ab5c6a959d8d"
        },
        "item": {
          "id": "03d409b2-732a-4a22-8a30-c30b3510dd66",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ee48fa72-0b8d-47bf-9dbf-dec0241d477a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17359cf-05f4-45f2-9d0a-b79c4e38f843",
        "cursor": {
          "ref": "7249f1e5-5bfe-41cb-b498-95acba5159e7",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a7005e8-50b8-438a-b567-8eea02a88aea"
        },
        "item": {
          "id": "b17359cf-05f4-45f2-9d0a-b79c4e38f843",
          "name": "identifiers"
        },
        "response": {
          "id": "6f914612-7f0a-43da-bc2e-37cdde3506ee",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4f77af-c7b5-45e9-af00-9623d55dd8e5",
        "cursor": {
          "ref": "0997cff3-86c5-407c-ab53-8cc76aa7c340",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6705e88e-3dcb-446b-8c1d-1f81d92e0bbe"
        },
        "item": {
          "id": "3c4f77af-c7b5-45e9-af00-9623d55dd8e5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e9034f7-ec79-418e-a623-b663af297e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86f9292-af5b-417e-afc0-53073915fc07",
        "cursor": {
          "ref": "172b4d39-277c-48d1-a40e-14e87c2ffbaf",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "204e4f5f-47d5-4828-b8b1-dded22ca28e4"
        },
        "item": {
          "id": "c86f9292-af5b-417e-afc0-53073915fc07",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ed4de5e5-8d45-46af-9bd2-98bf42280013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e50590-3e25-4b9c-ab37-33a60d4ad337",
        "cursor": {
          "ref": "e90f9d86-7859-445a-a56d-633576d7a510",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "75070008-154b-4c73-af61-e92b6e59b9a9"
        },
        "item": {
          "id": "13e50590-3e25-4b9c-ab37-33a60d4ad337",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "75eb50fe-a355-4179-b8aa-f45cf3b0844a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac7247b-8d44-4c5e-b6de-b249c6d244d2",
        "cursor": {
          "ref": "53fb59fb-5e5a-4130-adaa-2327e3c83c7b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "db7b67dd-b6ef-4f90-81c8-51720e637048"
        },
        "item": {
          "id": "fac7247b-8d44-4c5e-b6de-b249c6d244d2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e9d32c78-ef67-4323-a047-74827f3b7aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38791905-75a1-436f-a9ca-6ab86fb2058c",
        "cursor": {
          "ref": "f6950285-0622-493b-bc36-834c76feb202",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "159ecaa6-a176-4964-a494-bc444c5a0598"
        },
        "item": {
          "id": "38791905-75a1-436f-a9ca-6ab86fb2058c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6c8ba5f7-70a2-4b47-9e64-80f6f242fa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938dd8e9-96c4-4e7b-9a96-b36575a76047",
        "cursor": {
          "ref": "0edbd51b-0a3b-4dd2-90c0-22f22e8a048d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9632fac3-1c68-4c8e-8110-93c7ae10fa20"
        },
        "item": {
          "id": "938dd8e9-96c4-4e7b-9a96-b36575a76047",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c642ce4e-8f48-4172-a5b3-883f8ff74707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fce44a4-771c-4cdd-bf0c-b11d05342062",
        "cursor": {
          "ref": "dd65c748-3c74-4855-ae9f-bb6fe704c633",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c7e68f1b-9b7a-4578-be8f-7d341bc0064b"
        },
        "item": {
          "id": "9fce44a4-771c-4cdd-bf0c-b11d05342062",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1301d0cd-36f8-463d-9d33-3154a97e1859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126b7bcc-18a6-461d-a3eb-62c54bb7e0b9",
        "cursor": {
          "ref": "6310c1c7-6a9b-4d5d-a8ae-21ad1297d5aa",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c43b8809-ec94-4a71-831c-ebcc88f8b2be"
        },
        "item": {
          "id": "126b7bcc-18a6-461d-a3eb-62c54bb7e0b9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2494ac9b-c958-4d8e-9514-3c97515eb8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebb0c01-03a2-4a49-91a0-de3b2c7d8d11",
        "cursor": {
          "ref": "979841af-2eda-4ff3-8882-66511f0fbbc2",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "db691024-42e6-466e-b973-951804cd7d95"
        },
        "item": {
          "id": "bebb0c01-03a2-4a49-91a0-de3b2c7d8d11",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "846e9531-f549-4d39-9318-eaaefc33420b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a5b051-9edb-4eee-8bed-aaf567cba138",
        "cursor": {
          "ref": "b9f56cfd-29c8-4237-9f2b-84d145ee2b8b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "af17e61d-5ae8-4f78-a47a-dd76a64ad51b"
        },
        "item": {
          "id": "c0a5b051-9edb-4eee-8bed-aaf567cba138",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5f0020bd-d11b-4a55-a211-5a72ab209368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8be104-094d-4aee-9303-ccbcf67700b4",
        "cursor": {
          "ref": "41118d6c-39f0-4758-a82e-a8c37cd4a8b5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ba865762-2206-490d-8b21-c99c21e86bc9"
        },
        "item": {
          "id": "3e8be104-094d-4aee-9303-ccbcf67700b4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "984a56cc-b45d-4d29-9f40-cf2885f1c06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032a7d3e-7e3d-4912-8ac1-5b514f7ab7af",
        "cursor": {
          "ref": "2846d7e3-c7b0-4246-b314-d96d9e0a9ae6",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7bd284a8-fe5d-41ed-939b-e28840cd058a"
        },
        "item": {
          "id": "032a7d3e-7e3d-4912-8ac1-5b514f7ab7af",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "af875dee-2a14-435e-8a46-7de5e77daab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38657a17-f4df-4c68-ae18-08f5dadc3f94",
        "cursor": {
          "ref": "ce20fe6a-bda8-46f4-843c-6bfc81e62633",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a36a814b-9848-413b-b1d1-40e1efe54004"
        },
        "item": {
          "id": "38657a17-f4df-4c68-ae18-08f5dadc3f94",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "85a0a57f-7c4e-47b9-8b03-e24cac919a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d85d8d-f377-4e5b-921e-0cb5f9c5d6c7",
        "cursor": {
          "ref": "52da5e33-ef53-4b2a-a0f8-ae06d72f4490",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7f8a424a-7a90-4d95-a2df-3d8eeb1fdac7"
        },
        "item": {
          "id": "c9d85d8d-f377-4e5b-921e-0cb5f9c5d6c7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "57074266-3078-48e1-8862-caeca186691d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be06d508-c0ca-419e-95b7-3da24f46d0b9",
        "cursor": {
          "ref": "f9d774a4-b8f7-4313-a9e6-21ed1f034aab",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "04798dfa-a938-4f83-b0ac-500d8f4ce349"
        },
        "item": {
          "id": "be06d508-c0ca-419e-95b7-3da24f46d0b9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ef278847-988f-4c8f-91f7-917bad922592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39811c1-1164-4a41-ba0d-c2afb4acf27d",
        "cursor": {
          "ref": "888d7d01-68b0-4df0-8c36-ecab6f0cce02",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0863a0b4-5625-40af-bb4e-3ca583069e49"
        },
        "item": {
          "id": "d39811c1-1164-4a41-ba0d-c2afb4acf27d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9d05381e-e5a5-4052-bf38-3e9f1c219dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dd75fa-3042-4366-abab-254786dc59e8",
        "cursor": {
          "ref": "2b4220be-aad7-451a-84f4-57b786e6a6af",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cdcb4cb3-58a6-47a7-b20f-091e198c32da"
        },
        "item": {
          "id": "a0dd75fa-3042-4366-abab-254786dc59e8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9a614310-6004-4a52-8701-549364c9a777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9973669-522a-44f4-97c4-2637ef689131",
        "cursor": {
          "ref": "eafeb970-c7cc-4fac-920f-a056e328c604",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "55a9e3ae-cdc0-4f0e-a5fe-4db7a46fc32e"
        },
        "item": {
          "id": "b9973669-522a-44f4-97c4-2637ef689131",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "649b67ee-85bb-4ba6-af2a-8dc23e2729fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf06acb-6db3-405b-b5de-e0b185b217ed",
        "cursor": {
          "ref": "b78e4daf-9424-418c-86d9-aa946bd7c045",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "103d82f1-8a6c-46f3-9907-d51589967f6b"
        },
        "item": {
          "id": "ddf06acb-6db3-405b-b5de-e0b185b217ed",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dcdb6eb3-1c5a-4af5-b019-1c2aafcb5759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd74aac-d946-4267-bde0-f41c2682beed",
        "cursor": {
          "ref": "30fdddb6-4811-4f36-a710-69cfc39c1e18",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bc727acb-28ca-459f-a280-0c5dbfd86680"
        },
        "item": {
          "id": "9fd74aac-d946-4267-bde0-f41c2682beed",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3148a0ba-5e05-4f14-acfd-81713152b178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79058406-27da-486e-8d01-948530a7ff11",
        "cursor": {
          "ref": "be56a30e-36c5-443f-b3d1-d38fb7c50089",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "524e710d-09f5-40b7-9191-2e983955d705"
        },
        "item": {
          "id": "79058406-27da-486e-8d01-948530a7ff11",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2d275f8a-338c-434b-8ca5-03c048f9b719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66485207-133d-40b6-94ab-e42d550ea52f",
        "cursor": {
          "ref": "2f4e965f-9653-41d3-840d-7c9dfc591127",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d51703a7-9b3a-4275-ae83-ae02406ae8e7"
        },
        "item": {
          "id": "66485207-133d-40b6-94ab-e42d550ea52f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "91f4d9c0-d90b-46bb-aabc-7a84cd39e5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3287b2a-d85f-4fd5-bae7-a1ffd01bc047",
        "cursor": {
          "ref": "7835374e-b1a2-416f-9ce7-ccab42ea5a38",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8d5fd7d7-f8c3-41ff-b4e4-f623c77cb643"
        },
        "item": {
          "id": "d3287b2a-d85f-4fd5-bae7-a1ffd01bc047",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "64399934-9ba9-408f-a6cc-71ab6d0881da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e415630d-4b20-41f8-97b0-7130a7d5f3f1",
        "cursor": {
          "ref": "d02fe68c-55db-4641-931b-f2538192dc6b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a084f0d4-79bb-4be8-bf61-771024216935"
        },
        "item": {
          "id": "e415630d-4b20-41f8-97b0-7130a7d5f3f1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8bcc3b63-870b-4a51-a67a-151fd4d6840f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f046715-4818-4510-bb3e-8e55fceb9d06",
        "cursor": {
          "ref": "6c2c7ce6-2281-42c3-ae3d-31a170495074",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4388e8ea-2a2f-4665-99a6-b464d6c25ecd"
        },
        "item": {
          "id": "1f046715-4818-4510-bb3e-8e55fceb9d06",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5a19fc26-ea6d-4ed1-88d5-40d3bb8ef55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8f0d17-7571-4b73-b734-78cc21405fd1",
        "cursor": {
          "ref": "211ff7bf-5ee8-4330-9b7c-a15e07bb3838",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1bd48a3e-0fb6-49c3-9ada-ac3dd13c2937"
        },
        "item": {
          "id": "ff8f0d17-7571-4b73-b734-78cc21405fd1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fa65e5bf-62aa-425d-b9e4-13f6203ba26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0407350-772f-46c4-8a8a-010eab7e3b48",
        "cursor": {
          "ref": "8090d2f6-65ed-48b3-ae30-d75be7a8e6f9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c7f53cef-2048-47c8-baa0-64d470360a1a"
        },
        "item": {
          "id": "c0407350-772f-46c4-8a8a-010eab7e3b48",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a24cc655-8f26-4a69-b2a2-641484fee946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140b5989-99ed-4631-99d9-bde2e6168af4",
        "cursor": {
          "ref": "a79fd8ef-4431-4a76-ac8c-c5f28f7a7bf2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a7eb104e-d3c6-4c7c-8962-02bd532ea048"
        },
        "item": {
          "id": "140b5989-99ed-4631-99d9-bde2e6168af4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "23eb521b-4a43-4700-84fa-4d354cc62b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c0e5e-cc66-4c1f-bdbb-6cce9519f2f0",
        "cursor": {
          "ref": "fd0ea8be-b907-4b26-8644-af42cbec08ac",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "90d7d2ca-787e-45b3-949b-488479c0d22b"
        },
        "item": {
          "id": "b93c0e5e-cc66-4c1f-bdbb-6cce9519f2f0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "716f1d52-5e3c-4ca7-893d-3b2175d593cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d81c00-f308-4ebb-85c2-702fec93bff8",
        "cursor": {
          "ref": "74fe399c-f34a-4661-98d8-bf1167a00089",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8150a588-b7df-4c79-93f4-6444a2fbedda"
        },
        "item": {
          "id": "d3d81c00-f308-4ebb-85c2-702fec93bff8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e9336a50-d031-4fa3-9240-1a26980a08ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e5ca67-85f9-4114-8956-d633f86132b0",
        "cursor": {
          "ref": "691c010a-5604-45c2-8f9b-f70eda9fadd2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "442a9167-c006-4488-a82d-ed9e3e7ae124"
        },
        "item": {
          "id": "e3e5ca67-85f9-4114-8956-d633f86132b0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "78fdc699-7f3d-49da-8cab-ef7261f279df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b96f1c-3d75-4b44-8d10-dcdc35c5fd4c",
        "cursor": {
          "ref": "830733f6-c660-40d2-a25f-50adb356559e",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1735a829-d2c6-4afb-b3d3-bf28a38232bb"
        },
        "item": {
          "id": "80b96f1c-3d75-4b44-8d10-dcdc35c5fd4c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0d9125d0-3a31-4ec9-b3b0-48856da4e558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f5dee1-af73-41d5-bfc4-0ec74738d13c",
        "cursor": {
          "ref": "93030fb7-ea1f-4490-8b78-beab573afa39",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "de566d87-86b9-4d62-b1f4-3fb817ddf7a6"
        },
        "item": {
          "id": "57f5dee1-af73-41d5-bfc4-0ec74738d13c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d397fd36-6ce8-4597-9545-771f1194c7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de61cbf-5ffc-476b-b561-08d9dd522d3c",
        "cursor": {
          "ref": "e5f06158-0402-4408-a3bc-f7984fb6aab1",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "91ce7642-51b0-4734-9d4b-f316b94ec587"
        },
        "item": {
          "id": "4de61cbf-5ffc-476b-b561-08d9dd522d3c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "638126cb-b886-43af-b060-192c68f22675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae03a5e0-6c03-42b8-9a1e-5033f7874a82",
        "cursor": {
          "ref": "c4b893f6-5bcc-4d40-83c0-91fad664d7e1",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7fdf5267-bf26-4294-a999-a28a848dc9d1"
        },
        "item": {
          "id": "ae03a5e0-6c03-42b8-9a1e-5033f7874a82",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ed9a6e6f-5191-474d-a8d7-b5faba1ba187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c049755e-fbda-4b24-8d0e-36b35ac1488d",
        "cursor": {
          "ref": "1ede95fa-1052-4f87-a196-7f1547897b1f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c55a2c41-ce83-4f83-b7a3-641bf56b209b"
        },
        "item": {
          "id": "c049755e-fbda-4b24-8d0e-36b35ac1488d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9dccccf7-1b1e-4b03-8d55-b7f1a0ca06d1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51c4674-f09a-448c-b831-d9d5bfac4e45",
        "cursor": {
          "ref": "cc771391-55ca-4f6f-a5e9-d68d0bbb6dac",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cc093708-5be9-4041-9874-7617432687e7"
        },
        "item": {
          "id": "a51c4674-f09a-448c-b831-d9d5bfac4e45",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ba48c63a-b473-4aed-927e-7523d88f6c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59f8c6f-a15e-45a7-a9a1-592fc6198e35",
        "cursor": {
          "ref": "6ff50e6d-bbc3-4712-963d-1407148cfd44",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d03cf780-dd53-4f18-85ea-94aeb7c41084"
        },
        "item": {
          "id": "a59f8c6f-a15e-45a7-a9a1-592fc6198e35",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fd3e88af-10a9-44a5-8a24-c994cd041580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ce01cd-169f-4909-8685-121597ed5d53",
        "cursor": {
          "ref": "592542cf-1cd2-4783-93ba-ef0ef54c2a1f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "032a0424-79fa-49c2-a2e1-02e7bf9f9425"
        },
        "item": {
          "id": "29ce01cd-169f-4909-8685-121597ed5d53",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "487953d4-f2ca-44ec-a91e-c349457a3b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3bd9c8-c603-46c8-825c-74c1ba426c1c",
        "cursor": {
          "ref": "4f494e82-e263-43a5-a7cf-0df04f6ddf20",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "78a53fb9-9d51-4ad9-9c6f-f8f76d94f53f"
        },
        "item": {
          "id": "ee3bd9c8-c603-46c8-825c-74c1ba426c1c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "06065950-5e8a-41d1-9804-0581fdb7df29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebef633-3b07-46e6-ab13-f5c2210f993d",
        "cursor": {
          "ref": "81a5a2df-e87e-4e3f-af8d-cc2ff2ce8db8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "697d9713-d33a-4564-a084-034431f65512"
        },
        "item": {
          "id": "eebef633-3b07-46e6-ab13-f5c2210f993d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8069bd8a-f38e-491e-b0a9-8f699fa4636e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bbc1ab-cbfe-48d7-808f-e473a3407bee",
        "cursor": {
          "ref": "9cc32ca1-801b-499c-a724-d1c78688eb56",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "56ef4d4e-26ef-46ee-9225-516dfd265465"
        },
        "item": {
          "id": "d7bbc1ab-cbfe-48d7-808f-e473a3407bee",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "36e61710-4101-483d-948f-38f7b5a14785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46dc2ec-ad38-44cd-9b1f-cd34667db63c",
        "cursor": {
          "ref": "f99d620b-1a3a-44ab-a9d1-ffba0e31f5ca",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e9a902c8-2fcd-423b-b810-a0f0b1c66ed4"
        },
        "item": {
          "id": "d46dc2ec-ad38-44cd-9b1f-cd34667db63c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "27ba3caf-fd47-412f-a7fd-0beda96655ff",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dbfb7c-14d4-41f1-a623-3c2169e932e1",
        "cursor": {
          "ref": "999f4e00-e6df-42ff-b7d0-a8fda6d4b27c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c7c84dad-ab48-40ad-be41-a631b53e4464"
        },
        "item": {
          "id": "58dbfb7c-14d4-41f1-a623-3c2169e932e1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "904d9061-83ce-42ec-9d81-eabd6a87c109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931f4c6d-98d9-44b4-ba46-07958952ef85",
        "cursor": {
          "ref": "8f6cf4dc-087c-45d1-9151-92b35cc27d0f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1d5f7eaa-a6cb-44d8-8d47-19135953ca8e"
        },
        "item": {
          "id": "931f4c6d-98d9-44b4-ba46-07958952ef85",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f496995f-6796-423a-958e-e7c8112ddf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e196b3b5-c860-4d28-a3ca-0613578aa38b",
        "cursor": {
          "ref": "2f9cc3a1-152a-462a-abb3-84ea2d38d26e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0b81cb0a-81a3-49df-b086-26c99e362d14"
        },
        "item": {
          "id": "e196b3b5-c860-4d28-a3ca-0613578aa38b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0e0941eb-24a7-4824-ae5c-ece1d7198696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a42f440-b646-44c3-85f9-87e222a7aca8",
        "cursor": {
          "ref": "49a0d6cf-9509-47cc-83d0-d6e89f87b521",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f1b29129-8fc4-4d68-9a8d-0fb567c1fed1"
        },
        "item": {
          "id": "4a42f440-b646-44c3-85f9-87e222a7aca8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "134e4f3d-89b1-461e-b44a-3f7b132bbda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67cf5fa-89ab-4643-b39e-c708699e5912",
        "cursor": {
          "ref": "84936ff7-888a-4708-9269-6a6fc72c4ec5",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0d87a26e-ccc2-4725-9daa-340f16921496"
        },
        "item": {
          "id": "b67cf5fa-89ab-4643-b39e-c708699e5912",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "08ed79f7-4ec4-4785-9c36-c70bc3f3b982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c82fb27-b974-4eb3-a422-66f5588218e9",
        "cursor": {
          "ref": "82e72789-d4da-448c-919c-44fa304f2021",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8b143e6b-f895-45b9-9b5d-c66de2d0e986"
        },
        "item": {
          "id": "3c82fb27-b974-4eb3-a422-66f5588218e9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ac1543fe-f614-4167-ad54-313aebd82a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d69809-d70d-4221-b1fc-a8d36bcc1082",
        "cursor": {
          "ref": "52590942-b807-45df-999f-e9e4abffbaff",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2bba1789-5551-4cf5-b640-0e4630af54ce"
        },
        "item": {
          "id": "89d69809-d70d-4221-b1fc-a8d36bcc1082",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7e7b8204-19b3-47bf-b2cc-d35f87f8c83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1885d120-ca68-4d08-95ca-ac499e12801b",
        "cursor": {
          "ref": "dc144681-ddc9-4ceb-82f9-636626d37a93",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5f32997e-48eb-443c-9342-efc0ab954f4d"
        },
        "item": {
          "id": "1885d120-ca68-4d08-95ca-ac499e12801b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c9fdf217-f0f8-4b20-9991-3b809f1570f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2087f94-9d21-448a-83d8-2db01c46e484",
        "cursor": {
          "ref": "7bfb98f2-a549-4a28-a220-4465f07b07da",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "749d631e-3a6a-47e6-882a-b54a427a4d30"
        },
        "item": {
          "id": "c2087f94-9d21-448a-83d8-2db01c46e484",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cf391ac5-6c7c-4063-8be7-e3543247677a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba9969e-747f-4749-a0bf-b47200546537",
        "cursor": {
          "ref": "96500866-d2b1-4543-a1ab-e940be973122",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "922ffaeb-6872-4e5c-9651-92297e9b85a1"
        },
        "item": {
          "id": "5ba9969e-747f-4749-a0bf-b47200546537",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "626f1dc7-4806-4479-8444-cbfe981d72e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b229f4ca-ef90-426c-97ab-e241dea51a21",
        "cursor": {
          "ref": "2f91c201-8558-416e-9f2b-ada84cd79cf0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ce41bf6d-2ab7-4ef9-8f22-74449ff321ad"
        },
        "item": {
          "id": "b229f4ca-ef90-426c-97ab-e241dea51a21",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1b8ab9af-a15b-45e1-98ff-71a7fbbdbb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836091b1-0a5b-49ea-b77b-47258743ce5d",
        "cursor": {
          "ref": "9a7dd500-793b-48fc-9e93-7336934d14b0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "404888f8-27f8-42ab-aa01-1d8992b315a6"
        },
        "item": {
          "id": "836091b1-0a5b-49ea-b77b-47258743ce5d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d17431f6-e1fd-4791-85c0-b8495253f70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba8cb3a-85b2-4c47-8ba2-d6eacea54831",
        "cursor": {
          "ref": "d906fdf9-06ae-4324-a713-fcc31a96f79a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c16a0459-2a67-4fc5-9bdd-8c51be54aae1"
        },
        "item": {
          "id": "bba8cb3a-85b2-4c47-8ba2-d6eacea54831",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dbf3b64c-734e-43fb-bf4d-654304e88a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9cbfed-19c5-43f4-8ef8-d8fb9b21a61d",
        "cursor": {
          "ref": "b65a96e9-2e64-4427-ad82-98583795c381",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fa87d84c-45a7-49b0-859f-67de4fe0e54b"
        },
        "item": {
          "id": "5e9cbfed-19c5-43f4-8ef8-d8fb9b21a61d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "57b09e75-ca9b-4110-8957-f1adb8928648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82cabbc-89d8-498c-a270-d868c0aec1d6",
        "cursor": {
          "ref": "fcbfb053-0e77-44ab-bf1c-d134ff41abff",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6dfbf26e-6a20-4dc1-a5d9-22db25c44515"
        },
        "item": {
          "id": "a82cabbc-89d8-498c-a270-d868c0aec1d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "006224dc-c482-489e-8ade-4266f5c5b4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f5f3ef-8f98-45a6-849f-a198b2c2858b",
        "cursor": {
          "ref": "8b09a1d0-3bc1-4911-af72-ab66cc9ba423",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "87f5ad7d-34d0-447a-8b29-c2bced82db27"
        },
        "item": {
          "id": "f7f5f3ef-8f98-45a6-849f-a198b2c2858b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8f222e88-ad06-4587-ae9c-443780f80120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acef8c9-c73e-4b3c-b22f-10b0350d09ea",
        "cursor": {
          "ref": "dad33a3e-b40c-474b-819d-d9d12dccb399",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a3b3e300-d767-4f3d-950b-72f24574c6a2"
        },
        "item": {
          "id": "3acef8c9-c73e-4b3c-b22f-10b0350d09ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a1b66d8b-7758-4778-a49e-e35028a00926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50d2fcf-0a4b-45b3-9991-e83fc8d2911e",
        "cursor": {
          "ref": "376843ee-f6b0-4347-b831-ec3f32c828d7",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d1070e0a-a84f-43c8-b948-5e0d3ff004bb"
        },
        "item": {
          "id": "f50d2fcf-0a4b-45b3-9991-e83fc8d2911e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8ced72fc-be36-4f15-bba1-c05f21b09eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5fc4b1-91de-4dd1-9fce-068e864df8a9",
        "cursor": {
          "ref": "b756427e-d1e8-41a9-a62a-a01fa22c7638",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a70b24ff-3806-4c17-8b7d-0667fb6fa195"
        },
        "item": {
          "id": "ec5fc4b1-91de-4dd1-9fce-068e864df8a9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1c009feb-afeb-4681-aa2e-f13033c669ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8f6c22-8165-4184-b6cc-dc47ac8d4761",
        "cursor": {
          "ref": "af7172c2-5a14-479a-8c60-2493febc52b4",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f109352e-a22f-4a37-88de-df359b95887e"
        },
        "item": {
          "id": "ac8f6c22-8165-4184-b6cc-dc47ac8d4761",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "172cabd0-d875-4e20-af14-9886ff116522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee562155-e87e-4380-b3cd-c38ae5b4579b",
        "cursor": {
          "ref": "3f077b2b-5a59-48ea-98c5-76c985960e23",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d0a65355-be9b-42ce-a9c6-8219ed7a8efb"
        },
        "item": {
          "id": "ee562155-e87e-4380-b3cd-c38ae5b4579b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "09c2688f-b272-403b-9f4e-698baf259ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb1c241-3229-4b2e-9247-a5c064ab7761",
        "cursor": {
          "ref": "35481508-bcae-491a-a0ed-2319b36fb2c2",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "95f7d608-3c70-4f4f-bdb4-aa69821afa05"
        },
        "item": {
          "id": "0fb1c241-3229-4b2e-9247-a5c064ab7761",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d3bcfc42-7efa-4c3a-b8c8-84516ec4ae37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbefcc6d-fe73-44df-b4cb-8d490ec5ccbd",
        "cursor": {
          "ref": "d52422a2-2b16-45ca-8291-7565c71f6077",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "43351a94-a8fc-49b4-a157-fdd96959c86b"
        },
        "item": {
          "id": "bbefcc6d-fe73-44df-b4cb-8d490ec5ccbd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ba0abad3-c4ea-421e-b263-4da491b1a1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4d2efc-c8bb-440e-a119-48dff600c0c4",
        "cursor": {
          "ref": "736552ff-ebdc-4b83-910c-097079eded24",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4320b44e-f38b-45e5-8372-1dc8574b49a9"
        },
        "item": {
          "id": "8b4d2efc-c8bb-440e-a119-48dff600c0c4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7d47b416-a065-452e-a16f-5a2d05c7a59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcf61d6-dbb5-4812-af33-7c908d292672",
        "cursor": {
          "ref": "49a548fe-2d68-486a-9623-728ac9a408b5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "16678976-5aa0-4a8e-8161-127575426ff7"
        },
        "item": {
          "id": "2fcf61d6-dbb5-4812-af33-7c908d292672",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3860a760-a0f0-46b2-ae26-1d69a53d4568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f85c2-4737-4453-9c7a-476c0ea3b4d3",
        "cursor": {
          "ref": "ea753687-dac5-4920-aeb9-1684ff9ea441",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8ec15793-a4a5-447f-afd0-d408bfbe21e8"
        },
        "item": {
          "id": "a64f85c2-4737-4453-9c7a-476c0ea3b4d3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8bb19c85-9076-41c0-ac24-079149ba77af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b589a333-9215-4a10-9d4b-9997870a543c",
        "cursor": {
          "ref": "00a3f7fc-4022-4957-b1f5-66fe69055cc9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d210de0d-a9ce-45cd-9f59-1910d57c7400"
        },
        "item": {
          "id": "b589a333-9215-4a10-9d4b-9997870a543c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "838ff46f-2d52-482d-9050-f6643ac30cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050cdbad-bdd8-4c15-bfdd-0a5cf7195b3d",
        "cursor": {
          "ref": "200e7b47-b9a5-4d12-8d10-37b6c0d5bdda",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "834caf5d-fa3a-463f-9fb7-aade588f2f06"
        },
        "item": {
          "id": "050cdbad-bdd8-4c15-bfdd-0a5cf7195b3d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5f2a770f-0836-4533-aac2-31e285a8dca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482063cf-9e7d-447b-b015-0bbc91f0b364",
        "cursor": {
          "ref": "796e08a9-9d88-4d1d-a427-04cce405df90",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "02154c1f-31b5-4d7b-a0d3-d28b3deacb9c"
        },
        "item": {
          "id": "482063cf-9e7d-447b-b015-0bbc91f0b364",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "25441911-a0aa-4c3c-86e3-0c23c0493418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53deae6e-9157-4a23-922f-2778a4d636cf",
        "cursor": {
          "ref": "b415da7d-1cd2-47b2-9886-86f8094f44ec",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "54506184-0119-469d-aba2-900222a6cc1d"
        },
        "item": {
          "id": "53deae6e-9157-4a23-922f-2778a4d636cf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "077ac438-2157-4332-b3f7-f082c01b9215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ddb9c3-3b05-41ac-a6d1-20986724d71b",
        "cursor": {
          "ref": "1b3e45d1-802f-47e8-a8f3-9d96ce45ebf4",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7be451fd-ecdb-42db-bbb3-075629606d8d"
        },
        "item": {
          "id": "a8ddb9c3-3b05-41ac-a6d1-20986724d71b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8939b6e9-3311-46f9-8e4d-c9ddea1ac344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962eed74-c883-43f7-a794-3d947a3b1eb6",
        "cursor": {
          "ref": "149901c9-6d60-43cd-a732-72d286b069ba",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "02e210da-b3d3-430d-9296-929b14d6a32c"
        },
        "item": {
          "id": "962eed74-c883-43f7-a794-3d947a3b1eb6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "33e820fa-1630-43b7-8ee6-0c11853a67fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b948d4-47e7-43cb-a747-109ff53c1bda",
        "cursor": {
          "ref": "55ded2a0-d50c-410f-ba10-05c7a7a47b6d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3a2c7556-9e9d-4b62-a321-fb751092045d"
        },
        "item": {
          "id": "97b948d4-47e7-43cb-a747-109ff53c1bda",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "80822565-6369-4e57-b18b-728bab2383b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0e06dd-af26-40e5-982c-dd69d38cc434",
        "cursor": {
          "ref": "becb93b5-ac8c-4c93-8eb3-dcf4c4ea476a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d1919a0b-13d4-4e81-aa94-bd8d214d8cd1"
        },
        "item": {
          "id": "4f0e06dd-af26-40e5-982c-dd69d38cc434",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "75659f4f-80af-444d-870b-a9f78147dc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b859c162-2760-4d79-967a-219bc7262e39",
        "cursor": {
          "ref": "f4278b59-158c-4444-889d-7baf7916d543",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f8bb2df7-b44b-4430-a595-4718ec6f49d0"
        },
        "item": {
          "id": "b859c162-2760-4d79-967a-219bc7262e39",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a138f7aa-86ff-4404-b111-8b9d0b0b3be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966ed91c-cbe4-498a-8144-f52a93464e07",
        "cursor": {
          "ref": "7f846722-b9ac-4594-a068-9dc9d85b2891",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4d2f8670-a78a-4053-9fb1-2b3f686f2291"
        },
        "item": {
          "id": "966ed91c-cbe4-498a-8144-f52a93464e07",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "132afab0-192f-4bf5-a1bf-2b8f639241cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9ce837-0766-461c-988b-c1bafb83d5ed",
        "cursor": {
          "ref": "3edc35f5-a6a1-4900-a15b-f78a40ecd6f1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c34c0f07-8bee-4622-9048-7e199a782a3f"
        },
        "item": {
          "id": "af9ce837-0766-461c-988b-c1bafb83d5ed",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cccf9c8d-76fc-402c-a180-9bf11bf435a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba2d74c-cfde-499b-b2b3-dfb81de3e448",
        "cursor": {
          "ref": "f112a988-0462-4d37-87ae-2c09bc58d4d8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "39b44950-53af-4adb-b19e-3653ec526d08"
        },
        "item": {
          "id": "dba2d74c-cfde-499b-b2b3-dfb81de3e448",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "56771ce3-4844-40c5-a69c-455427c1943a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cba00c0-b4d2-4e7c-b261-a02dea8c4b83",
        "cursor": {
          "ref": "1d6beaeb-2e70-4719-b01d-71b587cad011",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ff9e099e-9336-4c0c-9a1c-a51f55ba77ef"
        },
        "item": {
          "id": "5cba00c0-b4d2-4e7c-b261-a02dea8c4b83",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7e10f06d-d24a-45b9-b2af-74df66c2d697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730da091-eb6e-4fcc-8906-2854a48aeeef",
        "cursor": {
          "ref": "c8dd71a0-1c43-4f10-ba42-0ff5190a0853",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0116da42-fe51-43c8-ac37-e4eeadafba1b"
        },
        "item": {
          "id": "730da091-eb6e-4fcc-8906-2854a48aeeef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ed8eb6f9-fba4-4733-9004-459695dcb40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18905abd-51d3-412f-b962-8190deaafd34",
        "cursor": {
          "ref": "de87b415-442c-4cdc-b883-0a65fe4e4d94",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "22f10584-7572-455f-ab5c-e538cf91d513"
        },
        "item": {
          "id": "18905abd-51d3-412f-b962-8190deaafd34",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8d31dd14-c27d-49d6-8e78-feefa0bc5db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babf37e7-4635-4ac5-9bb8-b391c213c065",
        "cursor": {
          "ref": "16466453-f011-4e8f-9ff2-28f151f4db2c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9e7019cf-dbd4-4f35-8d98-50012599b6a7"
        },
        "item": {
          "id": "babf37e7-4635-4ac5-9bb8-b391c213c065",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bfe37d6d-f662-4e87-852a-06b8f8968cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f899a138-f212-4e3d-9c01-7532595d1b15",
        "cursor": {
          "ref": "707ccb8a-bc5c-4b30-8731-5c99474bc34a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "259786d9-2bd0-45da-ac1f-6cca62a7efc3"
        },
        "item": {
          "id": "f899a138-f212-4e3d-9c01-7532595d1b15",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b4f0b8fa-bf51-47fa-bff6-22f971c8e65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf62c915-3e56-4fe5-a959-e480537c4a3b",
        "cursor": {
          "ref": "c753c60d-7a78-40be-a02b-1466b1b2c47e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c5c07775-69c7-4ba3-8792-41f9ff60be91"
        },
        "item": {
          "id": "cf62c915-3e56-4fe5-a959-e480537c4a3b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "127035cc-8495-483a-9baf-cd05a3de8828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2678ad-aa46-420e-8d40-bb1af89ae429",
        "cursor": {
          "ref": "dda539d7-86b9-4d48-a7f5-cfa54303d105",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a1207971-86bc-4803-8289-5c285e4e8f69"
        },
        "item": {
          "id": "2f2678ad-aa46-420e-8d40-bb1af89ae429",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8b19b71c-7faf-4819-bf7e-0c81323cfd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c402f56-8281-4af6-8f60-a9d16968aa62",
        "cursor": {
          "ref": "0b378b74-4e35-4c49-b772-29a53be40329",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4cf4aed5-6b76-40a3-b84d-d552625318da"
        },
        "item": {
          "id": "8c402f56-8281-4af6-8f60-a9d16968aa62",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3ba1a5fe-df72-4d6a-bc5d-aef4c5da3f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d99055-3818-426d-bd6d-6471335acffb",
        "cursor": {
          "ref": "3fccb7f6-e76c-45e8-ae5d-a09bc77dc72e",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6675121c-4efd-4095-a91c-f7e6470c4d2c"
        },
        "item": {
          "id": "18d99055-3818-426d-bd6d-6471335acffb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5eb2a348-1b6a-4805-b10f-b1a7faae0f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf545f0-3369-492f-92e5-80df664c26f7",
        "cursor": {
          "ref": "966b2511-b7e5-42ce-9404-2d6343b8c00e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f57b4706-f006-4241-a98b-b5aa8a8e5547"
        },
        "item": {
          "id": "faf545f0-3369-492f-92e5-80df664c26f7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "83671ce9-eacd-40a8-b3aa-d8d013d2d504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fa8040-1e4c-4af5-9ff7-0135e36fc5cf",
        "cursor": {
          "ref": "63772be3-231d-4c4b-8fc0-a2c997c6e413",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9c21d563-4dd0-4c7a-87ff-5434d92d0f6f"
        },
        "item": {
          "id": "56fa8040-1e4c-4af5-9ff7-0135e36fc5cf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e664323b-d155-4a19-bf1c-7e95c15e57bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2ade97-85eb-41e5-b236-fc2bba6e4ba4",
        "cursor": {
          "ref": "79a27f38-9544-40bd-b896-a6f8b30f9bd9",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a0d707da-2633-48ac-b313-ff888ee02d3a"
        },
        "item": {
          "id": "dc2ade97-85eb-41e5-b236-fc2bba6e4ba4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "46b1bb0b-c222-40d3-b053-a6499c3dfdd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a75327-e910-4a4b-854f-2b8e23d4c009",
        "cursor": {
          "ref": "dd042ef6-adee-4e8c-8f6a-81eab3a5b6cb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "60b36cef-d0c7-4fc4-9016-d61ea3c983f3"
        },
        "item": {
          "id": "b0a75327-e910-4a4b-854f-2b8e23d4c009",
          "name": "credentials_issue"
        },
        "response": {
          "id": "569354de-d502-4716-b2e2-2d3d9846158b",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b11429-0be5-4738-afc5-0027df6cf51e",
        "cursor": {
          "ref": "48305021-8776-4ea4-911a-4c829adf402f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a8a46b4e-121a-4e48-a612-7fed8a3b9a5c"
        },
        "item": {
          "id": "39b11429-0be5-4738-afc5-0027df6cf51e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e07c1846-38c4-426a-839c-b0a804fb3d52",
          "status": "Created",
          "code": 201,
          "responseTime": 507,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a3ba98-421a-4ff1-84b9-01176e5dc109",
        "cursor": {
          "ref": "5e83e222-50bb-4dc6-a325-f858f29d0114",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7387a66a-74b1-40ca-bd3b-2ad011deb2ba"
        },
        "item": {
          "id": "f3a3ba98-421a-4ff1-84b9-01176e5dc109",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "84a0c2f6-fa47-4d8d-9e6f-e89ce056fc6c",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c625ed7f-2465-4d51-afd6-d0b091d0d0f4",
        "cursor": {
          "ref": "3c68dd68-ccac-443a-ae11-71ba23c88979",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a72cdc86-b8b7-44e5-8115-34e111c4cb64"
        },
        "item": {
          "id": "c625ed7f-2465-4d51-afd6-d0b091d0d0f4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d7bb1544-82f2-4e0e-9310-f93f71a9ff88",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a1231e-d252-46af-9459-086ee29f415f",
        "cursor": {
          "ref": "dc650320-8259-4f3f-aeca-7b5850bf90d4",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e9906a69-f5c0-4c17-be1d-14f772fcbbc4"
        },
        "item": {
          "id": "c4a1231e-d252-46af-9459-086ee29f415f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0159dc39-ce64-4e2c-80f4-d0aa3ffb1260",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2ad57b-640e-4b2e-bca7-b2919c5220fc",
        "cursor": {
          "ref": "ca0e8213-1541-4d59-ad8e-4c6445012838",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b683c489-b92c-4ffd-8954-0822cdbc0016"
        },
        "item": {
          "id": "8e2ad57b-640e-4b2e-bca7-b2919c5220fc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "99a245a7-cc30-4ffe-8e66-401ca189aa49",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e749a11-3dd2-4a3a-b63b-fdd2a63d77b7",
        "cursor": {
          "ref": "1dbdfe1e-c57a-40be-9a30-325f3728dcda",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "84dd4ebd-3eb4-45b5-a1f7-f8d864380eba"
        },
        "item": {
          "id": "0e749a11-3dd2-4a3a-b63b-fdd2a63d77b7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "182f53c9-c33b-47b6-9824-1ea572d80e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a09862a-ce84-4008-9e16-62f1187b7bf0",
        "cursor": {
          "ref": "764838ba-9981-4a58-bcd7-8a5b28454a67",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cb9d2849-2a83-4cb2-8d6b-3ce35d3bb99b"
        },
        "item": {
          "id": "2a09862a-ce84-4008-9e16-62f1187b7bf0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "70df36b3-287d-4b0b-be3f-7bbb4c237eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b11709-2604-4fcd-9dbf-4f31de9c14dd",
        "cursor": {
          "ref": "5d0a0a44-6ca4-4bc5-b9e6-e1d4df5fd794",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6e39009f-83b4-4075-9804-a29f9b5869b7"
        },
        "item": {
          "id": "e5b11709-2604-4fcd-9dbf-4f31de9c14dd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d654328-61e0-4e3d-a446-20fef274c95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7681bf33-3bb6-441f-8680-b83d8330d153",
        "cursor": {
          "ref": "f35589ea-6bd0-42d7-ac2e-33411ff834c8",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "df7e0598-7f21-4e14-8288-cec9310b2134"
        },
        "item": {
          "id": "7681bf33-3bb6-441f-8680-b83d8330d153",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4c455acf-8dca-489f-b35c-1201f82c900f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3be43f-c296-4ced-8c28-546a017e0045",
        "cursor": {
          "ref": "6567acfb-62ae-484c-9757-b0f1ac0da568",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cdde3603-8359-4bcc-87a3-dabe2a0311c4"
        },
        "item": {
          "id": "6e3be43f-c296-4ced-8c28-546a017e0045",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a9281afb-6103-455d-9873-35303c662412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf613c0-0fa1-45d0-a8da-d50250d4c404",
        "cursor": {
          "ref": "74fb8435-ce07-4e0e-80b9-983b26572de2",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d7162854-ae3b-4136-aa09-0ab0f106d0c0"
        },
        "item": {
          "id": "cdf613c0-0fa1-45d0-a8da-d50250d4c404",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cccf87d7-ac1b-447d-9b3c-3ce3be984688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866dccb8-0136-4190-980d-9a9ec966a2b7",
        "cursor": {
          "ref": "3624b076-3220-42d7-8fb8-e4a35568c02d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5e2c363a-f27d-40c1-a09d-2d2fc7a1aa2e"
        },
        "item": {
          "id": "866dccb8-0136-4190-980d-9a9ec966a2b7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f04ee8fb-6caa-44b8-b12f-b606de0508b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2119949d-11ae-462c-a353-5468a4b052cf",
        "cursor": {
          "ref": "56150f89-a083-4713-ac2e-084cb8a103c6",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7ac9bf24-cfd8-4cc7-a749-5fa34936c090"
        },
        "item": {
          "id": "2119949d-11ae-462c-a353-5468a4b052cf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "72a896a8-4f8d-41bc-827c-d73f9e3a4418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d091f983-9de8-4ab5-9c81-b18ce3793354",
        "cursor": {
          "ref": "10a0f2e4-9b48-476c-aa2b-4bfaac695f1e",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6164bae5-16dc-42ed-9472-6933a332b69a"
        },
        "item": {
          "id": "d091f983-9de8-4ab5-9c81-b18ce3793354",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "57e74a88-b69d-4142-8af2-25bc8ce61600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487672e8-1efd-4bdf-946a-6c4318af1cab",
        "cursor": {
          "ref": "96b8c676-e940-49b3-9ea6-21ddb1a07a0f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ac3edde5-5484-42bc-b545-1e9abe23a05b"
        },
        "item": {
          "id": "487672e8-1efd-4bdf-946a-6c4318af1cab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8d2567fe-d4bf-4081-9122-f34960c16013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eb9928-1354-4487-9f5e-0155a2658e96",
        "cursor": {
          "ref": "907ea0a4-53e9-4dc1-8615-4a63ccfd686d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5cb6bb8f-53b1-4b78-a93d-73e9f5591c1e"
        },
        "item": {
          "id": "93eb9928-1354-4487-9f5e-0155a2658e96",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e8f382a9-d3a1-4070-afe5-804898309392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c16c9dd-7877-4b6e-b828-9e49c1ae7329",
        "cursor": {
          "ref": "64c454d1-a8c9-4c53-8ebc-0cfd4300ebf7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "67f0a9b2-39bc-454b-ac7d-79182a3e9da1"
        },
        "item": {
          "id": "6c16c9dd-7877-4b6e-b828-9e49c1ae7329",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "80d7a966-0a5b-42a0-a258-808a71ce82e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8d6b44-502a-442a-a4fb-4480b06bd20c",
        "cursor": {
          "ref": "13342451-1362-437a-ae3f-0c2ac7f00295",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "128b1f82-82f5-4f04-932e-7e2681a6f3bd"
        },
        "item": {
          "id": "1e8d6b44-502a-442a-a4fb-4480b06bd20c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c31a50e-c7ec-4377-91ef-dc49d23d16f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7407a598-46c3-4278-b2ee-fd5494aa8cff",
        "cursor": {
          "ref": "d44c406f-025a-4695-b749-840d05cf5a72",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c7185ab3-a1cd-498a-a2b8-b596c1387bec"
        },
        "item": {
          "id": "7407a598-46c3-4278-b2ee-fd5494aa8cff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f0e82a12-e902-4fd1-abda-30093ea3f2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd22fbde-6d3c-4f24-b231-90476e150ee9",
        "cursor": {
          "ref": "3a1ae90f-7b12-46db-ad4a-2d338ab6a437",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "480ef7eb-0c74-4d95-86b3-08437b6e16cc"
        },
        "item": {
          "id": "cd22fbde-6d3c-4f24-b231-90476e150ee9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fcc60493-5624-4e1e-878d-edc767d3a933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3f9a3c-a7a4-465f-9b93-86a92b6960a1",
        "cursor": {
          "ref": "dd802079-e8e1-4520-873e-0040bc3ad6f8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c9e2dc72-d0a5-42f7-8224-84702134dfd9"
        },
        "item": {
          "id": "8d3f9a3c-a7a4-465f-9b93-86a92b6960a1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "eb6cb9c1-e31f-4121-acd8-bcff214415f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba62d721-ccb9-4531-8e92-3a472a0d91b4",
        "cursor": {
          "ref": "4d98a56a-fdfa-45ed-acac-b5ad12a10d37",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "28a7a60e-d68b-4c88-967e-d2546f8e0f7a"
        },
        "item": {
          "id": "ba62d721-ccb9-4531-8e92-3a472a0d91b4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e648fbc6-bf93-4747-bc8c-dbaa7b76615d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbee7680-173e-4e04-9c69-ba181486430d",
        "cursor": {
          "ref": "e3e7bce5-8970-4405-9aa8-fa9bf3aad403",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "81b95fbb-c13f-4888-b618-adb6b843d85d"
        },
        "item": {
          "id": "bbee7680-173e-4e04-9c69-ba181486430d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9f9ad42f-171c-45f4-aab9-e78cb97cd26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93862b89-59b4-448f-bd85-39fac8ac0c45",
        "cursor": {
          "ref": "df2b5a1a-7179-4eef-85f3-ceec20899a7a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "65a4b194-6707-4721-b628-c6d3ddda9209"
        },
        "item": {
          "id": "93862b89-59b4-448f-bd85-39fac8ac0c45",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f382a6a2-a288-43c4-b4ee-7656d5283f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2539ee4-a70a-448f-847c-0bc4f2c84c62",
        "cursor": {
          "ref": "ee06ad4b-eda2-47f1-8624-534f68a8ae52",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "34193576-7dd1-49b6-a332-0ae9b8e6eaa5"
        },
        "item": {
          "id": "d2539ee4-a70a-448f-847c-0bc4f2c84c62",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bbb6fc9e-e5e1-4094-bc65-99252b8c2d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644d30e7-3f45-4b96-b48c-67c78a8d6985",
        "cursor": {
          "ref": "10c6a264-99af-419d-b906-9a4434fba250",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "75e4f02c-de4d-4776-ab03-45feab5351c9"
        },
        "item": {
          "id": "644d30e7-3f45-4b96-b48c-67c78a8d6985",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b01cb892-e71e-402b-9c02-39e614fdf2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e233e8-5b3e-41be-9c1a-ff94591d3aec",
        "cursor": {
          "ref": "0405558a-776f-4d69-90c4-7d7d1bdc1340",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1f1f70a1-4344-4f46-8e33-792e16fb84d4"
        },
        "item": {
          "id": "c5e233e8-5b3e-41be-9c1a-ff94591d3aec",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e646c007-915a-4a54-8da2-5a64ccf04a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af39843f-e8a4-4c08-bacf-173334d10508",
        "cursor": {
          "ref": "76bbb189-37f0-42dd-82b8-53268b516269",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ec4fd4b6-c175-4221-be0b-163335f0520c"
        },
        "item": {
          "id": "af39843f-e8a4-4c08-bacf-173334d10508",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "25a7e4db-da96-4bf6-add4-8171e6f50d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0d631b-bd08-4535-a8c5-5a7a4ebf393e",
        "cursor": {
          "ref": "f4ad6fb7-32c5-4be8-8b7b-c5c5a3e84e46",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "794c7ff1-0e06-4956-994b-b02fe1cdd315"
        },
        "item": {
          "id": "ba0d631b-bd08-4535-a8c5-5a7a4ebf393e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "24c72b9d-8c51-40fa-9418-f33014d67a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73a92a2-b328-4911-a4ac-acecede4727c",
        "cursor": {
          "ref": "4e3f5b77-c0aa-413b-9e70-500fdc42aa63",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e8d125e6-59c8-4a8e-bcfb-5746011f3d01"
        },
        "item": {
          "id": "f73a92a2-b328-4911-a4ac-acecede4727c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "74782544-740b-47c5-80e6-d45de81b3bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dcb051-dfee-44da-8cc6-284a771c0415",
        "cursor": {
          "ref": "0793cc7a-d376-4ac7-8759-aef080607dff",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "31e4c36b-83d7-4a26-a09e-6eca39679daf"
        },
        "item": {
          "id": "86dcb051-dfee-44da-8cc6-284a771c0415",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1650b940-d61a-43f9-8514-e05d57d0f002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d57f1e-d108-4d0e-b3d6-04902e852529",
        "cursor": {
          "ref": "e7b2570d-7532-4dc6-a619-89fe8c5dfad1",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a43bddaf-e870-4208-ad6d-228f7fe1a414"
        },
        "item": {
          "id": "95d57f1e-d108-4d0e-b3d6-04902e852529",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d76f3f0b-b203-4d00-9e89-20388661c9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a22b5e-ca6a-4a71-a79a-08c04bffde29",
        "cursor": {
          "ref": "af076153-8b25-4dd4-a9ce-69662227c471",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f4bf3efd-d278-4a35-bd4a-a25513e515f6"
        },
        "item": {
          "id": "46a22b5e-ca6a-4a71-a79a-08c04bffde29",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b1d129cf-e88f-4f14-bea1-4f935dcbc907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995152a7-9135-48ec-9a13-3ea7fe933cfe",
        "cursor": {
          "ref": "1b67f69a-416c-44e1-8eca-5c1005b6dc38",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "547f9902-e359-4c5a-b327-1b596de330cf"
        },
        "item": {
          "id": "995152a7-9135-48ec-9a13-3ea7fe933cfe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "299dc919-a0ee-47a0-97fe-709c0b8a83b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454b34bd-1dff-4cf2-aeb1-90c7f3501422",
        "cursor": {
          "ref": "3439c35f-af6b-4961-a083-d9f432579ec0",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b5b3759a-def3-482b-bc3f-a4a19bedf0ac"
        },
        "item": {
          "id": "454b34bd-1dff-4cf2-aeb1-90c7f3501422",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e2dde34-b5d0-428c-9207-a37d38860ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77314e5-380f-4084-bac5-f34113a4ef05",
        "cursor": {
          "ref": "bea134fa-5493-4719-8f47-f3834a06171f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "86d2b88c-d94e-4a39-a629-02afcf163da0"
        },
        "item": {
          "id": "d77314e5-380f-4084-bac5-f34113a4ef05",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f9a59c09-a18f-4cac-875e-c3280eca5571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae3f00a-f046-4f1d-a0a8-2deaa3638ce9",
        "cursor": {
          "ref": "fa08c176-b63c-4320-b0f8-c0c568cffec0",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "12eae6f9-80e6-49a3-b625-793810965fe8"
        },
        "item": {
          "id": "8ae3f00a-f046-4f1d-a0a8-2deaa3638ce9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1dfe14d4-17f2-4e54-9412-a5a466813bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831c1331-20a2-4cbf-871f-9c56e15e1292",
        "cursor": {
          "ref": "d3811b8b-649f-4bca-82a0-74e20fa489f7",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3b5bb2a6-7617-45a6-a4f5-f6e19ad04e6a"
        },
        "item": {
          "id": "831c1331-20a2-4cbf-871f-9c56e15e1292",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "66b28a27-f370-4077-badd-d9159ccac960",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da36b584-6e1f-4c2d-9f45-af8bf148fe3e",
        "cursor": {
          "ref": "8d430096-a3d7-4858-93f7-cffab5de8cf6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a71043b5-74a4-4289-b49f-089f48bb02bb"
        },
        "item": {
          "id": "da36b584-6e1f-4c2d-9f45-af8bf148fe3e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "88de9d30-9de2-400c-8e3f-71771b2190d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1213bf-b64f-4763-a753-23ef083f089e",
        "cursor": {
          "ref": "417582b9-4b16-4258-8750-81ab997d8467",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "926e5f26-c941-48bb-bcdc-859069f231fe"
        },
        "item": {
          "id": "9b1213bf-b64f-4763-a753-23ef083f089e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "84fc6504-9dbf-4191-918a-5bae0bc2e874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015b267d-ede3-40f8-a800-e5f97e17fd8d",
        "cursor": {
          "ref": "40272d0a-0d9f-43ab-97de-e0512cd3d3d6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c9d6fbd9-20ec-44e3-b208-cda0742beb1d"
        },
        "item": {
          "id": "015b267d-ede3-40f8-a800-e5f97e17fd8d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7cd31faf-621e-4254-b41b-ba4c6a61900d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f12c00e-d2cc-414f-bcd3-ace824d12a0f",
        "cursor": {
          "ref": "7682214b-63e2-400b-95b9-d539c10b91ea",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e91ba982-6bd9-43ac-be97-e15899ad85cb"
        },
        "item": {
          "id": "4f12c00e-d2cc-414f-bcd3-ace824d12a0f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8c26a5e4-4c66-4a9d-a1c3-e1ab6a2a88d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc872088-49d4-4f4f-a6ae-054ed0fec53c",
        "cursor": {
          "ref": "a7945dc0-255e-4939-8e21-94145a5a5ba4",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fbd5490e-f647-4809-9512-cc426fea5a6e"
        },
        "item": {
          "id": "bc872088-49d4-4f4f-a6ae-054ed0fec53c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a6d2b31d-16f1-45e9-9008-035031ffade7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58d9855-7d0a-48cd-a42f-471b6638a687",
        "cursor": {
          "ref": "6f32f979-924d-44ff-99b6-23e2a8558b50",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f3866fa4-87cf-45d3-aec5-1243f9c8bea9"
        },
        "item": {
          "id": "e58d9855-7d0a-48cd-a42f-471b6638a687",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8acd1c51-e000-4062-9e65-811215e646de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf36ac1f-a893-4db9-ae10-292867ce05ee",
        "cursor": {
          "ref": "76a840b2-9d3b-4c9a-902a-a2d4d9095e2c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ad8189c5-9aa6-46c0-92e5-b25dd94801ef"
        },
        "item": {
          "id": "bf36ac1f-a893-4db9-ae10-292867ce05ee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3dc0df03-530f-4bb7-8d82-16b040cc54ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1785427-5d0d-4837-ab16-e50502fc765e",
        "cursor": {
          "ref": "29b11a94-c386-49c1-bcb7-ccf455e60be9",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e7e52545-f95e-4f83-a048-63258750d13d"
        },
        "item": {
          "id": "d1785427-5d0d-4837-ab16-e50502fc765e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3a357806-da8b-4b15-b7be-47092618602b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316039ce-b8d7-431e-9fa6-6bd1b4637123",
        "cursor": {
          "ref": "ce0dd3c8-6455-4c26-ab84-b1d798778fed",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d375de04-00e3-4389-a08a-c51b614f9069"
        },
        "item": {
          "id": "316039ce-b8d7-431e-9fa6-6bd1b4637123",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c08a92fa-bdde-494a-94cc-b641fd7d4ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44f565c-32e9-42d7-ba74-d4b5c2a3f7a1",
        "cursor": {
          "ref": "29606c41-b3bc-4a1c-9a6e-82fcae4a4f5d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8742dfd1-7449-4372-89fc-920108960629"
        },
        "item": {
          "id": "c44f565c-32e9-42d7-ba74-d4b5c2a3f7a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0fb5d7d5-dd5d-4d42-8127-9c28a69786d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9a9b88-b98a-4ef2-ab1a-2146a90410e8",
        "cursor": {
          "ref": "36c882e9-4c32-4f4b-86f4-3b8819464f22",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "07975393-00ca-4db7-8dfa-190d1abc8e16"
        },
        "item": {
          "id": "fa9a9b88-b98a-4ef2-ab1a-2146a90410e8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "475b741d-8c6b-43af-8cd9-1cc29a9d9d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f35df7e-01bf-4aae-9f5c-e3f87a47be79",
        "cursor": {
          "ref": "cdecb9b5-b40f-4f8b-89c7-774564f35c82",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9063ef86-83b7-4533-8eb9-7981cd95ac0f"
        },
        "item": {
          "id": "4f35df7e-01bf-4aae-9f5c-e3f87a47be79",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5f1c0dbe-a172-4811-b8d3-970849917ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781f0c78-b9ed-499d-942e-828ad21e086d",
        "cursor": {
          "ref": "7d37ecc8-476e-4c2c-81da-56c3628d660d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9d2a6e72-c38c-4b20-ab6b-c8faf851b650"
        },
        "item": {
          "id": "781f0c78-b9ed-499d-942e-828ad21e086d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1afefb9b-187b-4527-9e81-7db21628b6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c7c7e7-bc3a-46e9-bc04-24a73598f791",
        "cursor": {
          "ref": "fe1d09f2-6f12-4471-ad35-a99d55a8b73b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "630a14d0-7d99-4ce9-bc49-0aef1a1c8739"
        },
        "item": {
          "id": "d3c7c7e7-bc3a-46e9-bc04-24a73598f791",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8564d1fe-744a-4926-a68e-f24cb88b2e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cccdab-e9f7-4dc0-9dda-70266cc07109",
        "cursor": {
          "ref": "960a4e29-f305-45e2-9bc0-0fe86aa009fa",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9d3c9f29-10f2-4ecf-9714-4379b89b9fe6"
        },
        "item": {
          "id": "16cccdab-e9f7-4dc0-9dda-70266cc07109",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c9c8496d-3281-4145-b43e-9dbd434bd77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b58ac6e-b1ed-44dc-817c-1c51ced9fd06",
        "cursor": {
          "ref": "d9c97a38-4234-494f-9762-703e24c40182",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "26b737dd-8581-4edc-b539-0b23e072cb05"
        },
        "item": {
          "id": "2b58ac6e-b1ed-44dc-817c-1c51ced9fd06",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d860a0ba-949e-4940-9bdb-b36d6bd8eb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ebfa4f-d58f-4e6c-97bd-c252b1496720",
        "cursor": {
          "ref": "7ba27b69-8a3e-42dd-9171-162716dfeb9f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b8f395e2-e193-4225-838c-c0c434e396b8"
        },
        "item": {
          "id": "93ebfa4f-d58f-4e6c-97bd-c252b1496720",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "429ed6c2-8008-4021-b8f1-2da4af101977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eeccc6-76c6-4564-9f42-c782a4a65174",
        "cursor": {
          "ref": "87b448b6-d084-47c6-90e7-8cbcf2129af0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "26927dd9-f239-4be2-8e95-fb118ded8479"
        },
        "item": {
          "id": "41eeccc6-76c6-4564-9f42-c782a4a65174",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fed98a4f-ec7b-4a5d-8866-890dd87c829b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9560bd2-0b24-44ef-ab74-1791bd527f51",
        "cursor": {
          "ref": "466f13ca-43c0-465a-9972-40398072a908",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d1ce0f2d-f39d-4c1d-916f-99c7dcb9ecb7"
        },
        "item": {
          "id": "a9560bd2-0b24-44ef-ab74-1791bd527f51",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "59aa39f7-b865-479e-bccf-4d7dc86dcb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cdd95b-ac15-4331-94ac-6daadb6680c3",
        "cursor": {
          "ref": "9e55b8ba-83e7-4fa4-a2d3-eecb9722717d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f910c64d-95a1-4339-85e9-26fa5e8a36eb"
        },
        "item": {
          "id": "c4cdd95b-ac15-4331-94ac-6daadb6680c3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dbe53632-ca0b-47e6-b119-7bc411ab59c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d1eb1c-7b1b-4d3e-b92e-8e72ca1f46cf",
        "cursor": {
          "ref": "217544a4-ac9a-4a83-bacd-9d7d8c2bb2a3",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "42f8b57f-61a8-4a99-8fd1-057b9d7badda"
        },
        "item": {
          "id": "d5d1eb1c-7b1b-4d3e-b92e-8e72ca1f46cf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "58bbe9d0-50f3-4c11-b286-86f1f95048f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ad0b59-2f40-4c0e-879a-fc799255f49f",
        "cursor": {
          "ref": "a776bf22-ba25-46a2-9ec1-125267a02e0f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "67e7b39e-ff7f-4062-82de-bb49e121f464"
        },
        "item": {
          "id": "06ad0b59-2f40-4c0e-879a-fc799255f49f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e192e27-f524-473f-a4bc-d5fda0c8a649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48dad9e-6e3d-4d24-b6c6-fbbc4b93232e",
        "cursor": {
          "ref": "0f81d2da-f365-4de5-bb06-632cdca2e799",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "85804fb9-db12-4218-9024-8da28488cf32"
        },
        "item": {
          "id": "f48dad9e-6e3d-4d24-b6c6-fbbc4b93232e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2e6c760b-0d80-4615-a47b-40ac39358d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930eb0ee-edb8-4171-ae5d-f8e8fe2ceef3",
        "cursor": {
          "ref": "f7a7532f-e3cd-4c30-849a-6c1111379522",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "693203d7-3776-4a9a-8012-d0cfb778a951"
        },
        "item": {
          "id": "930eb0ee-edb8-4171-ae5d-f8e8fe2ceef3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e14bef8b-cc12-453f-bfa9-e82ef3903d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd4e497-3653-47c3-8d7b-69a9e6e5c5d9",
        "cursor": {
          "ref": "f938c0f7-be39-4d28-8ef1-06b02b385453",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8db0da7c-2748-400f-9c09-8fac379a9ee0"
        },
        "item": {
          "id": "cdd4e497-3653-47c3-8d7b-69a9e6e5c5d9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "72b8c986-5bff-45a1-9e3e-e68eabe181ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deb3fa8-b249-4f68-a851-b22e48a6b72c",
        "cursor": {
          "ref": "4309192a-1ea6-4036-8df2-8eb2152eed70",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8a27cd3b-c07c-4219-b67a-424437a5c718"
        },
        "item": {
          "id": "5deb3fa8-b249-4f68-a851-b22e48a6b72c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9ba501e2-9427-4cce-b425-783d33b2ffbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd2a3c0-7ecf-4c5f-bccb-9286a12b9e31",
        "cursor": {
          "ref": "60bf8caf-1779-4584-abff-6f499ae0ed89",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "02bdb99f-15b0-4cb1-88e9-26d7b7ad8ae9"
        },
        "item": {
          "id": "8fd2a3c0-7ecf-4c5f-bccb-9286a12b9e31",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c4aa129b-3390-4dfd-a6bf-6639f812e356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e1be04-4057-4a6d-b54b-ffc74fd4f968",
        "cursor": {
          "ref": "30a4553e-542f-4b6d-811a-99e8dbc44fc4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "21295932-fa17-4755-848f-14f0822cb801"
        },
        "item": {
          "id": "07e1be04-4057-4a6d-b54b-ffc74fd4f968",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7cee1951-9ac8-4a6d-9d6a-27798290e394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39e7455-6219-494a-87cf-246ef8c5ea35",
        "cursor": {
          "ref": "ba5305b3-3fe7-4ea4-a753-1d29bc83ba08",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "739a66da-b3cc-472b-aec1-3e41c0751adf"
        },
        "item": {
          "id": "c39e7455-6219-494a-87cf-246ef8c5ea35",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b0c9d04f-8936-4a28-b0e3-e0ba281bbe10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9e9c3a-cd9a-4bd6-a9f8-48497eb7148f",
        "cursor": {
          "ref": "26eafde9-2c5a-4183-a22f-426e6e66ab9e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ba8525a3-f2c3-4223-8566-d444a6bad607"
        },
        "item": {
          "id": "af9e9c3a-cd9a-4bd6-a9f8-48497eb7148f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "22f04653-f7fb-4d15-9fb2-24afd8c326f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fa98af-8050-4ad4-9c2c-efc8b134c83a",
        "cursor": {
          "ref": "c955f41e-68ab-44a4-a708-aed5739a9b4b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "57d134ed-8b17-4849-bbc3-11cf62cda6f4"
        },
        "item": {
          "id": "12fa98af-8050-4ad4-9c2c-efc8b134c83a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "80988c1a-1054-4fe2-a5cc-a9a89ae57d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aadf71-bb16-40f4-ae48-1920cf5bfca5",
        "cursor": {
          "ref": "155973c3-9498-4295-ad2d-db6d4c38e019",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "77aacde8-266b-403e-9c2c-a23003bb03a5"
        },
        "item": {
          "id": "40aadf71-bb16-40f4-ae48-1920cf5bfca5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fb4175df-2ef2-42a9-ab8c-6325f28f198d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3bffdb-2da6-4377-abfa-959d7b559e64",
        "cursor": {
          "ref": "bae0fc29-5e73-43ef-b992-4b12d972e3f6",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0597d850-c0c7-419e-bf00-4bdc31c23c14"
        },
        "item": {
          "id": "6d3bffdb-2da6-4377-abfa-959d7b559e64",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "554ac177-abda-4085-ba84-f7c954df597a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9f3a86-95e8-422b-82fa-6d454380c515",
        "cursor": {
          "ref": "4281c7c3-7f47-4f2f-9d0d-674ea4aed65a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c270e043-1885-44f9-a9a4-9c71f3a4caec"
        },
        "item": {
          "id": "8d9f3a86-95e8-422b-82fa-6d454380c515",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "21aba9a7-b549-4815-8e7c-808ffb1b079f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0da243-c8fc-4eee-aab7-c8304ff878d8",
        "cursor": {
          "ref": "6a6c0069-fea7-42da-b658-d6343b872254",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "69abe117-7c0c-4870-bdc5-ca5a366aa6fa"
        },
        "item": {
          "id": "8d0da243-c8fc-4eee-aab7-c8304ff878d8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cec3cf64-4892-4f17-a9bb-351649228d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131efbe1-94b4-4a3d-8074-1878cc313c4c",
        "cursor": {
          "ref": "ed31ebc9-0a54-43ca-9fcd-5d8275de40d5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0bdc2069-57ae-4862-a558-1e9e04af493c"
        },
        "item": {
          "id": "131efbe1-94b4-4a3d-8074-1878cc313c4c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5891f94d-2e61-4313-835d-47c630ce47ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a39e495-9356-4609-9907-572e7c74d239",
        "cursor": {
          "ref": "b760122d-d206-49de-b26f-91dbda21411e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f8eee36d-8fbb-4309-8bf2-4980206f677e"
        },
        "item": {
          "id": "9a39e495-9356-4609-9907-572e7c74d239",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dce775fd-94f3-43c3-b3d6-335ff36c5fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d9ae7d-1dad-44a4-ad85-d546d130561d",
        "cursor": {
          "ref": "d170d09d-7cbb-4714-85f5-46bd7884b59b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ca8fd009-0c6e-4d4b-b675-7b3d79d7e57e"
        },
        "item": {
          "id": "42d9ae7d-1dad-44a4-ad85-d546d130561d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "243c22a0-5e40-49fe-b641-c058a61fef42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3136d8de-98b6-46fd-98bb-74e9599226d2",
        "cursor": {
          "ref": "18502d73-8fbc-49dc-a4c1-808ca985c989",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3f99d709-c2c4-4784-ab5d-0e06ecc4e66f"
        },
        "item": {
          "id": "3136d8de-98b6-46fd-98bb-74e9599226d2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "15c9cbae-d245-4d30-8337-d46e5cd2249b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c67c5af-fd9d-4ed5-8d16-bb2e14bb56fc",
        "cursor": {
          "ref": "213e300f-c141-47bb-91ab-5ec07f0c7058",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5316d515-cab4-420a-909c-e3c3e8a1dce0"
        },
        "item": {
          "id": "6c67c5af-fd9d-4ed5-8d16-bb2e14bb56fc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "de41ea9e-1fbf-4a65-a154-ac4bb53a4803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677f45ae-f718-43a9-b30b-739f956bd58c",
        "cursor": {
          "ref": "c6b17cda-463e-4325-8abb-8010eb462e50",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "192bb5c3-e437-476a-a301-02d1dfbdf69f"
        },
        "item": {
          "id": "677f45ae-f718-43a9-b30b-739f956bd58c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b4e420bf-fb74-4409-a404-8c1ce4a99e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4697b93-ca66-42d2-885c-a0278509abb3",
        "cursor": {
          "ref": "6d773167-72f7-4911-ad9a-0d09802713fc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "46352a4e-05c5-4d2c-bfe0-8be76ea8a4b6"
        },
        "item": {
          "id": "e4697b93-ca66-42d2-885c-a0278509abb3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c0d94038-325a-4b1e-9ade-8be500d49bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695f38d8-fe82-47e3-ba04-a52d2057551e",
        "cursor": {
          "ref": "7bfed5ce-9621-47e4-a33f-2a658906e005",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7d291079-e263-43fd-b901-bd0928a6068f"
        },
        "item": {
          "id": "695f38d8-fe82-47e3-ba04-a52d2057551e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "07a5037a-0b7d-46d8-a2f6-cdfe1a397b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9fcd26-de61-4405-91f2-621a91813f06",
        "cursor": {
          "ref": "58d6b0f2-ab24-4ebc-bd45-93772c4b77a8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f115c60c-fd8c-4dd6-a7c9-71d4ef82b8cb"
        },
        "item": {
          "id": "9b9fcd26-de61-4405-91f2-621a91813f06",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "59d3fe03-67a4-4da8-9a92-b832ac37daae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a9370f-45c9-4967-b7b5-ff7b69fb3573",
        "cursor": {
          "ref": "bcde3386-9002-4a9b-8014-617d54076d14",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6876c6ea-e6d4-4785-a999-72d8a686641b"
        },
        "item": {
          "id": "d2a9370f-45c9-4967-b7b5-ff7b69fb3573",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6bec4136-c9a9-48f2-b3f4-3ba71efc005b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b53382-4bb6-41f2-a143-f031c048a837",
        "cursor": {
          "ref": "4ca5827e-3d06-493f-866e-73756cece392",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "29cfaac1-15b9-4b8c-9e84-ee4e4e457a7c"
        },
        "item": {
          "id": "54b53382-4bb6-41f2-a143-f031c048a837",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8684517f-2d61-4da4-85a4-90fbf8a22bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dc3cb5-d5a7-44fd-8d2b-883c990efab5",
        "cursor": {
          "ref": "2790ca07-8d52-48a3-8881-90b13d0abce2",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c3028862-7010-4379-ba3d-a3b831ae34cb"
        },
        "item": {
          "id": "89dc3cb5-d5a7-44fd-8d2b-883c990efab5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0d58a6d2-d30d-4ddc-84e6-a7339792ea1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ed47de-0fec-47ec-8ea7-eda64608f135",
        "cursor": {
          "ref": "f7755164-0c43-4976-a562-40d9e11f6e8a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "45ca5280-1527-4576-9745-0391562161d4"
        },
        "item": {
          "id": "04ed47de-0fec-47ec-8ea7-eda64608f135",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "40a68f64-24e3-4c12-b770-bb7a3f72056f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0619782-3199-4065-9877-5e636e609535",
        "cursor": {
          "ref": "a6340d85-8b7f-47bc-b29e-d8c551c0bc95",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "862370d4-bccc-4eb2-a9e5-731c899144d5"
        },
        "item": {
          "id": "c0619782-3199-4065-9877-5e636e609535",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e28da4b7-0efe-4d3e-ba63-e3af14ee7999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66c3d4b-7920-416e-befa-470b33d71591",
        "cursor": {
          "ref": "1fc1f228-f804-4101-be23-10a3014805f1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6dd85264-63dd-49a2-9b1c-2a1b33e1b178"
        },
        "item": {
          "id": "e66c3d4b-7920-416e-befa-470b33d71591",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2f6c06cb-032f-401a-a4eb-93499519bcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eabe3e0-ee63-4eb2-b4a6-2b92ded71137",
        "cursor": {
          "ref": "c6e7ed17-b817-4c47-87b9-94000c747d12",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6bd7e0aa-21c1-4a6e-896e-79068e382c47"
        },
        "item": {
          "id": "6eabe3e0-ee63-4eb2-b4a6-2b92ded71137",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "981817e8-db84-4bcb-bccf-d4a89419c5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1dae97-9e8f-4012-983f-8142bf1e9794",
        "cursor": {
          "ref": "1125edad-2516-4adc-bb3f-ef84468bafec",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "04bb6a00-7757-447e-91c7-b56a9c603844"
        },
        "item": {
          "id": "9f1dae97-9e8f-4012-983f-8142bf1e9794",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d0e82384-8e83-491b-94a2-7b250aa7524a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed1877c-6b7a-45c2-af38-0ade0cccaff3",
        "cursor": {
          "ref": "053930a0-5104-4fcc-897f-bd315975964e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7ef8b12f-cfd5-4f2a-af45-1c8f95d13015"
        },
        "item": {
          "id": "6ed1877c-6b7a-45c2-af38-0ade0cccaff3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ad231895-486e-461e-8485-dbe00f9deb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5395b542-87e1-4fb3-8031-1b6c31ded918",
        "cursor": {
          "ref": "8d570e70-f76e-4f8a-9f02-120d175c803e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5a3ae51f-659a-421a-8e24-c6308156f007"
        },
        "item": {
          "id": "5395b542-87e1-4fb3-8031-1b6c31ded918",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b5b91ecb-e642-4b62-a918-a75100a25e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e2a2f-0577-4431-a7dd-c84d3dd8002c",
        "cursor": {
          "ref": "78c6b37d-f916-4deb-872f-54c944c28db1",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "465d56e6-7516-43fc-9e88-56083755e643"
        },
        "item": {
          "id": "449e2a2f-0577-4431-a7dd-c84d3dd8002c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6ac44fdd-bcba-4741-8ac6-6a69ff24a114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9b1506-50cc-4bf6-a434-fa7fb41c526e",
        "cursor": {
          "ref": "4690a236-4a3c-4d2f-aed6-167e47cef687",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5c471e11-3f3e-44af-bebd-ddca41bd9e28"
        },
        "item": {
          "id": "ce9b1506-50cc-4bf6-a434-fa7fb41c526e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "688c2310-0994-48e7-bc79-b37ff0b1df08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6d04fe-2693-4c05-a6ed-86ee618e75d7",
        "cursor": {
          "ref": "9c94fe12-3b05-4dc9-9286-86deed5d9d96",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "acbd8323-1f79-4df6-9f5b-30894c62b80a"
        },
        "item": {
          "id": "bf6d04fe-2693-4c05-a6ed-86ee618e75d7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7ba5f414-f588-4119-8f3e-199ff59226cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ac8b1b-c106-47dc-a077-3162f4bd7c2e",
        "cursor": {
          "ref": "6b9828b0-6560-4412-af5d-239716ac6672",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9da724d5-4dd2-4f82-bdff-9e8b1bc8f691"
        },
        "item": {
          "id": "49ac8b1b-c106-47dc-a077-3162f4bd7c2e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0bc534cd-7e8e-4477-b83c-e452a5b9e2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2403cc-541f-4b55-9e5f-6cf24377a27b",
        "cursor": {
          "ref": "9e8c1405-fc40-40c5-bfdf-e2968cdbaa46",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8dcc55e6-0711-4d35-8557-8612bbd8c3d2"
        },
        "item": {
          "id": "ae2403cc-541f-4b55-9e5f-6cf24377a27b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f5e880f8-5873-49c4-8fef-1a97f93e7f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1a7331-b586-4e8c-84c4-64e7c81c923c",
        "cursor": {
          "ref": "24d9f409-cb4c-43d6-b6b8-4d545004f8d5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e3a2ad8c-9231-4939-9176-408147af9d8a"
        },
        "item": {
          "id": "9b1a7331-b586-4e8c-84c4-64e7c81c923c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6dc23ec8-42bd-423c-b519-b0c2a7bef15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c066f2-0cc1-4237-9da6-03e0dd2d215e",
        "cursor": {
          "ref": "f47ce24b-f5f0-4ecf-ae95-edaa4582aa22",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "15132460-314e-44c4-9b2a-f9e62a697d60"
        },
        "item": {
          "id": "b4c066f2-0cc1-4237-9da6-03e0dd2d215e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "431e239b-31d0-4bc1-91c9-a8c533e54bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95baaf1-0d36-4d21-9ab6-731f174c4657",
        "cursor": {
          "ref": "f81a0800-08bf-47e2-9fec-3839b15f9212",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "85e950ca-ebb8-404f-a6ac-ea3902e1b414"
        },
        "item": {
          "id": "a95baaf1-0d36-4d21-9ab6-731f174c4657",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "64848a9e-b792-4208-8d2f-e5d617e75a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c8f94c-4bdb-4841-8696-3283c5c361b3",
        "cursor": {
          "ref": "cd6da213-b23f-44e2-89b5-f596367ec130",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "92aec716-49c2-462b-a5be-b5a999852cbf"
        },
        "item": {
          "id": "26c8f94c-4bdb-4841-8696-3283c5c361b3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a9222a4e-0812-4366-abec-7ec45a06aa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7242673-22ef-4e90-82af-d40cc9b965e6",
        "cursor": {
          "ref": "b55742ca-3b74-4827-b453-8ac92d9388cc",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ff8bd341-9572-4950-978a-9a134c8e48cd"
        },
        "item": {
          "id": "a7242673-22ef-4e90-82af-d40cc9b965e6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ac8956b2-3df2-424a-a942-38ff6936ea51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67896a0c-fcab-47ab-b72f-3177dfe351ae",
        "cursor": {
          "ref": "ede96406-00ba-444b-b897-c46f4a702e14",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "495bba3c-2c81-48b5-979b-82fa6b16223f"
        },
        "item": {
          "id": "67896a0c-fcab-47ab-b72f-3177dfe351ae",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f3057317-4886-4bf7-90eb-f6be432ff9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4c6bbc-4b4a-4e9a-9406-d83ad0b46581",
        "cursor": {
          "ref": "7e9dead2-65e1-4c91-9aa4-12ed6081c727",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3285d761-fa5f-4bae-baa0-d5d96af8011d"
        },
        "item": {
          "id": "1a4c6bbc-4b4a-4e9a-9406-d83ad0b46581",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "81195771-6dcd-4bbd-9944-2323799e1e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af31b5e-7c13-4410-a0cd-398c82ff24e3",
        "cursor": {
          "ref": "4b206f1b-2256-4608-a00e-4552537a851f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f9aba31a-9f8a-408c-bdca-29ebdf6d3ce5"
        },
        "item": {
          "id": "8af31b5e-7c13-4410-a0cd-398c82ff24e3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4663186d-889c-4078-a6ee-6f479fc3e552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d4b884-0e6e-42a3-b655-ef127be7f16b",
        "cursor": {
          "ref": "dd55025e-2d4f-4cb9-a75c-0f0dd690a769",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "edb96ea4-6b61-4f31-883d-8da705d77051"
        },
        "item": {
          "id": "29d4b884-0e6e-42a3-b655-ef127be7f16b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f5cc71c1-d013-40e4-8f61-f7c9b8e14f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039045d8-a248-415f-9723-bedac1a2b14b",
        "cursor": {
          "ref": "161742e5-d8a3-4647-81cf-bcac9a97efb5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b514c106-e6b8-4cd7-a55e-6e8c6bb46ad5"
        },
        "item": {
          "id": "039045d8-a248-415f-9723-bedac1a2b14b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1afab247-6c2d-41a4-b66d-040c2b3ec578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e86e534-0884-429b-8981-edbe4d6732b4",
        "cursor": {
          "ref": "f6a60430-476d-495b-a49c-b45d0fd8d7c2",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7093ae2a-b6dc-44a7-b092-77bd8b2ea364"
        },
        "item": {
          "id": "3e86e534-0884-429b-8981-edbe4d6732b4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "92901e65-6915-4117-ba23-c29a7121a307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4141117-a240-46c4-a5c0-90c30f63c683",
        "cursor": {
          "ref": "8054027f-4b73-491d-a23e-44daa1a65b07",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "77502f7b-fa55-4f3d-b9fd-ee675a398a08"
        },
        "item": {
          "id": "f4141117-a240-46c4-a5c0-90c30f63c683",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "94c301f2-d5f3-4c11-8411-78a017329b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0e41e1-bc40-4be0-9e14-bb62c05f804e",
        "cursor": {
          "ref": "518cc894-2899-442d-aae1-5ac73457db8f",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ca7e557f-26d9-4151-a0b5-38138ff2f4e1"
        },
        "item": {
          "id": "8f0e41e1-bc40-4be0-9e14-bb62c05f804e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4d6dd594-1d29-4c39-b76c-c23561707859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7719ce85-1b3d-49a0-aca9-1190d538d5df",
        "cursor": {
          "ref": "e424a58f-bd52-4844-8905-32ff495fc5f1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8fd38f7a-812d-4bce-9544-4d909f15635b"
        },
        "item": {
          "id": "7719ce85-1b3d-49a0-aca9-1190d538d5df",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2417ba76-046f-4f84-9843-23da896bf564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5ea643-fcbe-4769-a7fd-baabfe7d635f",
        "cursor": {
          "ref": "ab86d780-70b3-475f-9044-08986feda5e3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f162928f-19f6-4b8a-8d28-0b8498f3264f"
        },
        "item": {
          "id": "6a5ea643-fcbe-4769-a7fd-baabfe7d635f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "16787358-b26a-4a56-8724-1d08c6c7656d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5562f9-abfa-4e61-95ef-bb8e6532ae30",
        "cursor": {
          "ref": "ec033146-1e7a-482d-b12f-cb3327fb878d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "059a1471-0770-4df8-ba38-d18fec904bc8"
        },
        "item": {
          "id": "ec5562f9-abfa-4e61-95ef-bb8e6532ae30",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c605ebe8-bfff-4272-bf17-dcae5cc7a208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5fb382-b1ad-4b82-97b0-f771cde192bf",
        "cursor": {
          "ref": "bb8a8744-cba8-4ef3-a8ab-120f3b9e4d30",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d2dc9f49-b02b-42f0-a36f-afa8d5f43057"
        },
        "item": {
          "id": "ea5fb382-b1ad-4b82-97b0-f771cde192bf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d15fc734-8aa3-42a0-9de7-09bf17f99700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b7b5b0-1f7c-403a-8ba6-07d8205a5cd1",
        "cursor": {
          "ref": "e0c00367-119b-4442-a816-47ae58b0a599",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b413519-6a9a-40d0-ab6d-91701c121516"
        },
        "item": {
          "id": "23b7b5b0-1f7c-403a-8ba6-07d8205a5cd1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "15a24611-fb06-4a6a-a774-1527bebf36d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4c2424-9ca3-47c3-a7c2-11ff18fd8085",
        "cursor": {
          "ref": "6f488246-842a-43d3-b0bd-b926c1cf3eb2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a03bd18f-d340-4e5a-bc6a-1155bb8c8f5e"
        },
        "item": {
          "id": "cb4c2424-9ca3-47c3-a7c2-11ff18fd8085",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b8092924-e5eb-46c7-92b7-4e91569afdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c38df10-2873-4b57-9cb8-f1d8a3b5552f",
        "cursor": {
          "ref": "1c3f6356-9bea-4e38-bb5c-e15ef35835c5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ba59a507-e490-435f-a029-46a7fd810936"
        },
        "item": {
          "id": "8c38df10-2873-4b57-9cb8-f1d8a3b5552f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f7ffa5a6-f73a-42ba-b3fb-d171c306dc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adba562-7ab7-447b-85fe-cf572de07a47",
        "cursor": {
          "ref": "d42c762a-4b6f-41b4-8273-52a423d5f187",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cee2d685-100e-4d33-bc92-b877bc10c4b8"
        },
        "item": {
          "id": "5adba562-7ab7-447b-85fe-cf572de07a47",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c417cc03-2ce3-44ad-8554-89b58e7c55d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a34ec2c-452a-478c-be8a-44055f9e0072",
        "cursor": {
          "ref": "9229fc77-3967-46b4-878e-e5543f809454",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "81d1c8cd-0c8b-4714-a655-794fb8bf4e74"
        },
        "item": {
          "id": "6a34ec2c-452a-478c-be8a-44055f9e0072",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "49f0bf2d-f137-478b-96a4-f46db4654944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e124698d-66dc-43e5-a1c9-762e425e0309",
        "cursor": {
          "ref": "2667e0d5-3678-426c-95a2-3e0eacb5c874",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2181b623-8cfd-4d24-95ad-8f072f018b25"
        },
        "item": {
          "id": "e124698d-66dc-43e5-a1c9-762e425e0309",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1acb00d8-35b2-4107-b098-4589ce9e6f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0946ee-1b41-4c8c-b291-f6246384009e",
        "cursor": {
          "ref": "8430a1d9-365f-49b4-afc1-82ac7857866a",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0062c91d-653a-4c8e-a0fc-e5646c46eca3"
        },
        "item": {
          "id": "df0946ee-1b41-4c8c-b291-f6246384009e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bbb29eb1-facb-4ad7-8227-8fdebdbd1b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a1ee52-9c94-49f8-9d99-f0a53a6e0496",
        "cursor": {
          "ref": "33e5ad24-0372-4197-909d-a9b840e3bc19",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a3a3dc52-ad20-4525-b53a-cf78c3770c7b"
        },
        "item": {
          "id": "c2a1ee52-9c94-49f8-9d99-f0a53a6e0496",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ac525ae2-f231-49f2-b619-1fb50f86ea8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72a8b2a-247a-4a1c-9ee0-7042fe71fca6",
        "cursor": {
          "ref": "0f67460c-4c20-41d1-877e-7bfc5040e618",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7e514fa7-82ae-4bad-a71a-818c58381ab6"
        },
        "item": {
          "id": "c72a8b2a-247a-4a1c-9ee0-7042fe71fca6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "953650c3-0128-411f-8709-b6c4ec21b083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edac42bc-f642-4233-be3c-45d3e7afd656",
        "cursor": {
          "ref": "e1683786-8a50-4fea-8fdf-e1985d6e3f6f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "557c8d84-8df3-4da4-8a22-7ef35937cb51"
        },
        "item": {
          "id": "edac42bc-f642-4233-be3c-45d3e7afd656",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "31c44b6a-6f1b-4b39-a9ff-5835c39609bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2a36eb-736b-4744-816e-4d9f4ef42249",
        "cursor": {
          "ref": "66e98f38-7ec1-4202-8df0-2279d391728a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "54e6cd50-2d75-42e8-88d5-8f7201cfbb1d"
        },
        "item": {
          "id": "aa2a36eb-736b-4744-816e-4d9f4ef42249",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6c7c8ca6-6956-401d-9cda-94ec6ae42dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d2f322-28b5-49d7-8ac0-9a3a25a68ce3",
        "cursor": {
          "ref": "43f31b84-bfcc-439b-ae42-3cbf5e226e62",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e9dc07a0-1db0-48d3-ba2e-23624f77367e"
        },
        "item": {
          "id": "32d2f322-28b5-49d7-8ac0-9a3a25a68ce3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a441cd14-a199-45dc-b195-4ddbb14d2611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b120d174-d9a1-430c-9c22-d9c89e5d8615",
        "cursor": {
          "ref": "6d5bb4c9-0e6e-41ac-ab2b-a8f67d0b0602",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f46810c8-f6ae-4850-b39e-6b36e4b33753"
        },
        "item": {
          "id": "b120d174-d9a1-430c-9c22-d9c89e5d8615",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e2823ca6-eeb6-4604-88e4-5f9fe7644f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5700e3-63d6-47fc-b6f9-9a87822b7648",
        "cursor": {
          "ref": "c4ac8175-a278-4ced-a10d-f0ba3c2699ca",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0e55347c-2f33-4eec-bfee-2e31d365e9b3"
        },
        "item": {
          "id": "0d5700e3-63d6-47fc-b6f9-9a87822b7648",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "62900070-4076-4676-9375-d06b3cc645cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7ba65d-13e3-4bce-9eac-132df9427649",
        "cursor": {
          "ref": "05c9b158-d0a3-4328-be5c-1c27723ff6cd",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8adac8bf-7930-4bb1-bbbe-fb5cbb7a1e10"
        },
        "item": {
          "id": "4a7ba65d-13e3-4bce-9eac-132df9427649",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "acd41ef8-3495-4fac-866a-ee557a868bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db31067-3072-4be7-b936-a8b906054e77",
        "cursor": {
          "ref": "82269358-7a7a-4ccf-84cf-f5b3251c7384",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "793f7bd2-3a41-4079-9308-5b89bdf97413"
        },
        "item": {
          "id": "2db31067-3072-4be7-b936-a8b906054e77",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cdacec28-b64c-412e-bd47-59295853a02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92e41b5-b5b5-414c-b3d8-99a617db66f9",
        "cursor": {
          "ref": "6b476cb0-5c5a-408b-9da6-92b91ebc1fcc",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c9209005-a2c6-46a8-b96a-467ccd756d4c"
        },
        "item": {
          "id": "c92e41b5-b5b5-414c-b3d8-99a617db66f9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0b26780f-4d18-4fcb-80dd-1d2f4257215a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a238af7a-2b2d-4712-b8d5-963c9a521de6",
        "cursor": {
          "ref": "279fa87f-e68a-424f-bbc1-107c91215148",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cfcb4d82-ea60-45bd-b428-a16192dd054e"
        },
        "item": {
          "id": "a238af7a-2b2d-4712-b8d5-963c9a521de6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "11302584-6439-4efd-845d-56c56df0a5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6414200-fe81-426d-8dbb-b79239cdbbe8",
        "cursor": {
          "ref": "bbe61c44-402c-4f48-afee-29f7fdbb249c",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cb154c5f-6b48-4cd0-b186-22c450f1d423"
        },
        "item": {
          "id": "c6414200-fe81-426d-8dbb-b79239cdbbe8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5f20bea6-86ee-4a0b-9bdb-25a76255c64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbdd5af-aaad-4000-8327-ae45dadbdb60",
        "cursor": {
          "ref": "4217a990-8072-4123-8df5-d9879756269a",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "da2f15a6-6d7c-4c9b-9066-00ee90926d2d"
        },
        "item": {
          "id": "4bbdd5af-aaad-4000-8327-ae45dadbdb60",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3246f1ec-c4fc-40d7-a78c-365e6697ac4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a06b836-253f-4713-b577-ad844587f964",
        "cursor": {
          "ref": "3264f257-a454-484a-90e0-508fd1e99a4c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e812397a-0fb5-46bc-8368-314d915b71b7"
        },
        "item": {
          "id": "9a06b836-253f-4713-b577-ad844587f964",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ffe9e5ff-d523-4d9c-8de0-153847e77c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9844d83e-9e80-4857-9dc4-c646475c27c0",
        "cursor": {
          "ref": "a41d14c5-d5c3-4649-8979-c253651f1119",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "80bb3ad0-7a93-49cd-a996-2dd93b751f74"
        },
        "item": {
          "id": "9844d83e-9e80-4857-9dc4-c646475c27c0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "78b82983-3b4a-49aa-aa4e-5c3f6389c361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93084357-4794-44d8-9470-ca841f359022",
        "cursor": {
          "ref": "5e1058a3-d633-4bb9-867b-74df755856af",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "872a8f7b-5b31-4fba-85b9-56261f3e941d"
        },
        "item": {
          "id": "93084357-4794-44d8-9470-ca841f359022",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9907820f-9cfd-48c2-a1ab-bf426f9d904b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894df0d2-c0b1-451b-bbde-6de155893d67",
        "cursor": {
          "ref": "fee05f59-3691-40d4-8614-56bb28520f1a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4af4eb6c-91d5-4768-a939-01af85e79662"
        },
        "item": {
          "id": "894df0d2-c0b1-451b-bbde-6de155893d67",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "eb796b4b-8f78-415d-9b0d-56b35d53b699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b80cc3-6e5a-4a7b-ad7e-c426bd2d2738",
        "cursor": {
          "ref": "2150e5df-2698-497a-a32b-59f5e5c59904",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b583f35f-61df-40f1-a3de-1c8b7b6f69de"
        },
        "item": {
          "id": "c1b80cc3-6e5a-4a7b-ad7e-c426bd2d2738",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ed0086ee-4962-4bdf-8426-ecd882ebdb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497e5d49-3c0f-4109-9e90-8de48a7e46f6",
        "cursor": {
          "ref": "690713d2-0f8b-4453-ae94-3de534c46b99",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1b0cfbf9-26e7-4b8e-8933-8b9d0b9a8349"
        },
        "item": {
          "id": "497e5d49-3c0f-4109-9e90-8de48a7e46f6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1a6a091e-af04-4a24-abed-c6ffb45f6b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63896c7d-672e-41fe-8cb3-bd9d5ce06580",
        "cursor": {
          "ref": "2fef843c-de19-43ad-8605-5bda662ea7e6",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "de1e4e72-fa59-48a3-ade1-00a1abfa2174"
        },
        "item": {
          "id": "63896c7d-672e-41fe-8cb3-bd9d5ce06580",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3e21c641-3682-4c3f-b22f-bcb0993f1f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effcd1ea-4066-4a1c-9527-a089e8b7d3e7",
        "cursor": {
          "ref": "6eefe23a-743b-44f2-8fd3-126894377c34",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d8ca2757-d7aa-4037-b242-c566bb5d7abf"
        },
        "item": {
          "id": "effcd1ea-4066-4a1c-9527-a089e8b7d3e7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "13ca8baf-a22a-43fd-a775-c4c1984fd3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e92da42-8557-4a75-9f46-20dfbd03602c",
        "cursor": {
          "ref": "d45f85c2-9012-4d58-862b-98afe4b92e33",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "218e24a7-f18c-46ac-ad3c-baa68099f9d2"
        },
        "item": {
          "id": "7e92da42-8557-4a75-9f46-20dfbd03602c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e5fea3cf-2811-405e-875e-09f410dbb794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0381ae76-7913-4c5d-878a-356522ff88a3",
        "cursor": {
          "ref": "5aa0b5d2-f834-4e6e-9f46-fc0ee36a0b99",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "87aeb366-97ab-4c9a-ac7f-42634706dbd7"
        },
        "item": {
          "id": "0381ae76-7913-4c5d-878a-356522ff88a3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "33f0ca68-0046-443a-a1e3-ded5c2d89bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4e7e56-4907-464a-a0c3-03779be963ff",
        "cursor": {
          "ref": "51cda574-fa8e-447d-9236-1a563efa9a55",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e6eb2fa4-01ca-4d7b-aecf-5e8a44315d4e"
        },
        "item": {
          "id": "de4e7e56-4907-464a-a0c3-03779be963ff",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "52b2b77c-4ec8-481b-a9d7-bda875f147f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bbfe99-ab68-4ac8-b002-df04a23ea753",
        "cursor": {
          "ref": "db19ca46-b613-4e8b-ab5d-c45f291498ba",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f6e3fbab-c867-4ef5-ab4b-f2cd55a42da9"
        },
        "item": {
          "id": "03bbfe99-ab68-4ac8-b002-df04a23ea753",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "42d228b5-78fb-43ed-ab53-b2ac319d4be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb34b723-bb85-4757-9ebf-fe98751f6db0",
        "cursor": {
          "ref": "8dbd98c3-3cc2-4e20-869e-d67c0e2ac41a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f195e322-4a0a-40f8-82df-d589adf7483d"
        },
        "item": {
          "id": "cb34b723-bb85-4757-9ebf-fe98751f6db0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "76a48066-6dfc-4f17-928b-b33f46bf1cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b844ab-f7da-43ed-8533-ab780c5fe6fe",
        "cursor": {
          "ref": "b42977c7-6b24-48e2-99bc-812a28507d86",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "af1289a2-1754-423c-a511-5f4f2f65e1b7"
        },
        "item": {
          "id": "b4b844ab-f7da-43ed-8533-ab780c5fe6fe",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "00224fdd-922a-4ac5-b3e8-64ff8efe6553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da55f252-b0d4-43bb-b9cf-61e4429e8054",
        "cursor": {
          "ref": "7f90e433-2a56-41bd-86df-95f69dacacb9",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "37ce7137-2546-4a81-a173-34d718aed2b8"
        },
        "item": {
          "id": "da55f252-b0d4-43bb-b9cf-61e4429e8054",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ae507037-f223-451b-aa3c-2ca97fff0c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f93076-fb67-4d03-bdc3-3dc34b8573d4",
        "cursor": {
          "ref": "e60ab4a6-3a63-4166-af5a-5cff7a917e00",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2da5195c-2743-4521-8dbb-af078adcaafe"
        },
        "item": {
          "id": "51f93076-fb67-4d03-bdc3-3dc34b8573d4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "24cf78f1-4c18-4d99-8c3f-01529cf2f8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263d061c-8f25-4ea7-b604-ec6648383140",
        "cursor": {
          "ref": "4490f6e0-b868-4238-846c-b986bdce01d6",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "87dd5571-a9ac-4452-a1b1-7fd5fb569243"
        },
        "item": {
          "id": "263d061c-8f25-4ea7-b604-ec6648383140",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a0107175-e471-4f88-9ba7-e32eae6fd4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3b2fcc-523a-46de-a9c1-e99044360b2a",
        "cursor": {
          "ref": "55e13920-1036-4b85-9d25-30921ae6d45b",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7cb27d35-66f6-4338-ba4e-e7c356019884"
        },
        "item": {
          "id": "ee3b2fcc-523a-46de-a9c1-e99044360b2a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1f5e4c21-3e31-4d1e-9532-f71650927620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463e3fcb-a0b3-4036-9409-29f1217feb8d",
        "cursor": {
          "ref": "16a833df-5a0c-463e-a147-2de73059a994",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2b911dce-1c06-4354-a595-f1fbf77bb4d4"
        },
        "item": {
          "id": "463e3fcb-a0b3-4036-9409-29f1217feb8d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "563b8f55-6810-4c0d-880d-1b5e99c8b264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96495955-0b65-46b5-98c6-490041a4eb8b",
        "cursor": {
          "ref": "aacba49a-26b5-422a-8566-ef0193a35ba4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1da36967-d41b-4dbd-bad9-a2882836f2ba"
        },
        "item": {
          "id": "96495955-0b65-46b5-98c6-490041a4eb8b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5ef701e8-694d-4338-bdf6-7cb6dfa49ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d58fc9-1ffb-4666-8acb-bb9ca974e565",
        "cursor": {
          "ref": "06a377f0-2b11-4dce-b362-1f2cbedbbaec",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "253b9e70-088a-429f-ae58-faaf4ad4058d"
        },
        "item": {
          "id": "77d58fc9-1ffb-4666-8acb-bb9ca974e565",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e7037814-9827-4990-b0b7-faec162c57f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88f4fa5-210d-40ab-914e-18bd62aeae3b",
        "cursor": {
          "ref": "ee6ea8ea-13b2-4e96-8812-4eb493498b1d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d32a082f-2a48-4c85-8498-82cb3554e024"
        },
        "item": {
          "id": "b88f4fa5-210d-40ab-914e-18bd62aeae3b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5fd1fbae-3e31-4674-bbc8-aebc9df04db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0b9f16-f4df-407e-8f41-570dec135213",
        "cursor": {
          "ref": "a1f8cf6a-3060-457c-bd21-ea4a3382543c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "936b6f91-21d3-42fb-8718-56bd2ba8acf0"
        },
        "item": {
          "id": "cc0b9f16-f4df-407e-8f41-570dec135213",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "12293c97-6533-4dc4-a59a-355a1675b5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa84c621-10b1-403f-b1df-3da7658c4e2e",
        "cursor": {
          "ref": "01939149-8fd9-49ee-9a6f-b257cfa4843f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8774490a-f483-40bf-8fae-9880374e2218"
        },
        "item": {
          "id": "fa84c621-10b1-403f-b1df-3da7658c4e2e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "56f4ac90-99e6-42cd-99a2-65a5eca4a944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293c9bd5-d32a-4981-b795-eac2ead20b78",
        "cursor": {
          "ref": "e992ca4b-2e78-4294-93e9-603272cb220f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "65f17f1e-2797-4786-86ce-66f885a14927"
        },
        "item": {
          "id": "293c9bd5-d32a-4981-b795-eac2ead20b78",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a333c253-9d3b-4c04-bb69-c437234183c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7827227f-39b3-40c5-b00e-2671d87e69b8",
        "cursor": {
          "ref": "0bad2ae9-7dac-486a-a3b6-375b2991ce2b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1ebc7d22-e54a-4345-9b2b-b46ed940edad"
        },
        "item": {
          "id": "7827227f-39b3-40c5-b00e-2671d87e69b8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7c241271-32f6-4401-b40d-05a52d940fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9db0cac-7fe3-4ed8-8519-8acfe3e5e642",
        "cursor": {
          "ref": "7a7dd0fc-d553-4c5f-b782-c84369986508",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e3a5350c-478e-44a6-930d-7fc448045dde"
        },
        "item": {
          "id": "a9db0cac-7fe3-4ed8-8519-8acfe3e5e642",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6f834aee-a193-423c-9d69-020f35e037cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a2dde4-b1a0-46bd-b04a-656329945c3a",
        "cursor": {
          "ref": "1f52f123-dcb3-4a21-94dd-1cfbd1474fa4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "24cf7d30-f1af-468b-8bc4-c7f992ee0b0e"
        },
        "item": {
          "id": "e5a2dde4-b1a0-46bd-b04a-656329945c3a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "82400ebd-4a30-4995-98a3-411d690cc672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acd5f10-a77c-4f4a-8085-512b6a260576",
        "cursor": {
          "ref": "ae873fb4-d963-49d4-b642-12756c9589a7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "84a9c42a-c9fd-43c1-af28-82d48e5fb8fa"
        },
        "item": {
          "id": "0acd5f10-a77c-4f4a-8085-512b6a260576",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "43846fa2-3771-422e-b1bc-538ad6b5527c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2f6753-9ae4-4164-bb95-bd06b5a56907",
        "cursor": {
          "ref": "3a7ff0b3-910c-41de-9c41-2fe298fe19d1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "58c7d814-68d2-4d6b-b8e1-11b64509daea"
        },
        "item": {
          "id": "8c2f6753-9ae4-4164-bb95-bd06b5a56907",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "752b3ff5-57ad-4455-bc57-bd8aa8f426c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839ee3d3-50f2-46fa-840f-38c4b541b4b3",
        "cursor": {
          "ref": "6846c84e-b1ee-4eec-8af3-a2e1c0e6fc5d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ca982744-84d4-405a-b50c-b78ad447e640"
        },
        "item": {
          "id": "839ee3d3-50f2-46fa-840f-38c4b541b4b3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c04ce33a-b298-4e72-bc6d-eb8af54da983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0cbf7c-2223-4de5-a8ad-2612ef57cb1d",
        "cursor": {
          "ref": "3bb7ee5b-92d2-45d7-a42e-7b7b8261a15e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "11bad552-053c-46f0-8ffe-33192a681564"
        },
        "item": {
          "id": "2d0cbf7c-2223-4de5-a8ad-2612ef57cb1d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2fc696b5-2ba0-49e6-804e-63585102009e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e290a053-8b25-4dd1-877d-246b50975398",
        "cursor": {
          "ref": "e71b7961-5587-49e5-b474-9b5f57838873",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "aebade5f-c88f-4a21-9d19-71f5e3a672cb"
        },
        "item": {
          "id": "e290a053-8b25-4dd1-877d-246b50975398",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "43b545d8-e0fc-4e92-ac06-fae35158c5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b606cf2-797a-4d35-98b8-cbca58dbb170",
        "cursor": {
          "ref": "319a07dd-8fe6-44b5-9c6d-1b24db7b43a0",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0ed6d5c7-0974-448f-a448-655c8bf56a85"
        },
        "item": {
          "id": "4b606cf2-797a-4d35-98b8-cbca58dbb170",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c39271c5-f975-4786-9b57-d0ed33ef8fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb442299-96ec-4528-8f77-01778df75fa8",
        "cursor": {
          "ref": "9f168f9b-e52a-4c2a-b43e-667df84e9855",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6677f656-f6c8-4b41-a47c-3e99303a15b8"
        },
        "item": {
          "id": "cb442299-96ec-4528-8f77-01778df75fa8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b26f650f-3a3d-4430-ab28-9aa5d19dfff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b6c444-a342-4ace-a4ab-c8fc10fac0bc",
        "cursor": {
          "ref": "967a91db-f14f-485e-91c1-1996114da010",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "eb99c103-4964-401f-a173-ab52075d3f93"
        },
        "item": {
          "id": "28b6c444-a342-4ace-a4ab-c8fc10fac0bc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "45149724-613c-4c7b-b601-2dc617dbfe90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6149ce9-db3e-4abe-9cb6-ec3297a6eaf6",
        "cursor": {
          "ref": "869b03d6-a80b-4717-bfe3-fbe0ccaea39d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9069806f-9c48-4458-967c-1e1434d5cca1"
        },
        "item": {
          "id": "f6149ce9-db3e-4abe-9cb6-ec3297a6eaf6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1e10dbdc-7211-4ca4-b3ea-d7b1ce973b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01fd3b9-c68d-4913-a9af-26d14883859e",
        "cursor": {
          "ref": "20f9f0e4-33a3-42ad-be94-b26c42402f5f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "afb2bacc-6bcb-4a66-ac4e-549e1572d0f4"
        },
        "item": {
          "id": "b01fd3b9-c68d-4913-a9af-26d14883859e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b7529f69-456e-4d9b-a9a3-6de7c8d228db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472530bb-08a0-44cb-a6a7-82b78df27c10",
        "cursor": {
          "ref": "b2cc5bb1-536f-44f5-845a-945f8699a3a2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "76fb18ba-93e9-4443-a700-bfad85bb4242"
        },
        "item": {
          "id": "472530bb-08a0-44cb-a6a7-82b78df27c10",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2f3f75d7-ae9e-4d4c-9dc2-46ce03e204c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97356d28-7449-4bfe-b9f7-aaf678835861",
        "cursor": {
          "ref": "24aa6533-22e7-4b1b-b827-6ef0ce7aad6d",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f152d481-47cf-4ad5-aaaa-5bcb9fc37632"
        },
        "item": {
          "id": "97356d28-7449-4bfe-b9f7-aaf678835861",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f901239b-45b1-4860-a298-c86966c45109",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd9f1d9-a0fa-4a63-82a0-4865d26c5722",
        "cursor": {
          "ref": "f0439792-3cbf-46b3-bcac-234d14170101",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dea08674-901a-4e66-92e5-4b936d973ae3"
        },
        "item": {
          "id": "6bd9f1d9-a0fa-4a63-82a0-4865d26c5722",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "991699a5-1682-46e5-b70b-b301060297c4",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7b4d45-794f-4c4e-afa3-7bb30e77ec54",
        "cursor": {
          "ref": "6be71686-edb7-435c-9a88-c222421c7866",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "24e0eae2-fc9a-4cf0-938f-e3f98705605f"
        },
        "item": {
          "id": "8e7b4d45-794f-4c4e-afa3-7bb30e77ec54",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5dc71063-0770-4b08-a3c5-b488e4b72dcc",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf21003e-7ef2-424b-b16d-45219afb8389",
        "cursor": {
          "ref": "aec400a0-15f0-4105-8a01-7eaf7b2475dc",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "11994f4c-8184-4187-be5e-fcbf20e386be"
        },
        "item": {
          "id": "bf21003e-7ef2-424b-b16d-45219afb8389",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b63afe99-35f2-4f30-aee7-0555e6d3c502",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b66b95-6404-41df-b8e5-63f6c40c433d",
        "cursor": {
          "ref": "435ca603-2989-4762-a9c4-d72269b952c0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e0935c12-a508-430a-897e-74318795a250"
        },
        "item": {
          "id": "c1b66b95-6404-41df-b8e5-63f6c40c433d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "867cca6e-3912-459b-b784-ca040f1dce84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b66b95-6404-41df-b8e5-63f6c40c433d",
        "cursor": {
          "ref": "435ca603-2989-4762-a9c4-d72269b952c0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e0935c12-a508-430a-897e-74318795a250"
        },
        "item": {
          "id": "c1b66b95-6404-41df-b8e5-63f6c40c433d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "867cca6e-3912-459b-b784-ca040f1dce84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac0f904-e1ad-4f82-a180-3663f5371db6",
        "cursor": {
          "ref": "3f9c99d6-9b76-4085-af47-9fdb2715581f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "190b9d8d-d778-468c-808e-ac62d6ca304d"
        },
        "item": {
          "id": "2ac0f904-e1ad-4f82-a180-3663f5371db6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0dd6eed1-2a80-4603-bc2b-4f3e8c30de8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b36833-b822-4953-8448-9713c9aa507d",
        "cursor": {
          "ref": "434fead9-5b13-42f3-a5d3-0ffab6e9d19c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c1e6a8b5-0e28-43dc-8914-c83d2e00318b"
        },
        "item": {
          "id": "81b36833-b822-4953-8448-9713c9aa507d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "eb5155b5-a782-42ac-a45b-fd27c1f909ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}