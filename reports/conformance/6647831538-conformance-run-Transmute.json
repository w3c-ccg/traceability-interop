{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9c7b8e89-fbb8-4d06-a975-e25aed8acfd2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "22c36000-a320-405d-975a-b3576d7f0431",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d118dfb9-71f4-4537-9e09-5d87fc45dede",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d3d44efb-ca39-4c45-9dbb-a0f28b5abb1a"
                }
              }
            ]
          },
          {
            "id": "1096b1b0-58a6-4e48-ba8d-63c6b4a2d713",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d13e1950-e16d-43b7-ad9c-f8a2198cc320",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f86b27b2-b04b-49f9-8ffc-ce4de5cb7c29"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "01e34d55-b51d-4a1b-8f5e-206ef85efc03",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8d0c8702-8a05-4599-8bf1-60876810d7bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01746418-0e5d-449b-ae0c-de97609ec7ca",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f56909f-9ea3-48b3-9771-7fbba3cae30d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c562f3ea-275e-444c-83bd-d6c505366f35"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4bb339b-4fb0-477d-bfcc-45c387a9dcb3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2809840-797e-4faa-8555-c6457f33cd33"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "178998a2-f708-4239-92cc-b57028b963e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "771a5368-8b1c-497e-b7c3-3b5acf5e1c71"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "041a23df-d968-4b8f-845e-93408e2559e2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3ea301fb-be39-4828-b532-e5c0a25a25ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68315c2e-e0c0-4ecc-9a11-f2b1fcafd0b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "098ada3e-708d-4f13-a5e9-97ba64491b49"
            }
          }
        ]
      },
      {
        "id": "ddb24749-c470-4c46-984d-7d79d82481d6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "eead7fbd-a454-4810-ac7d-bdeb6d4d33fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "748e0f6c-6c1d-4fca-b928-852a9bde8694",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "044acf4a-f6a3-43c5-9ef9-9c0aca035465",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eba825-e643-453e-bb26-36332fc56106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fbf135f-19f8-473a-bed6-2fc1809e24f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3a1fdf-1510-4916-9181-bebb3496272c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd178e47-2e9f-4022-bdd7-431867159cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa75ce6c-47b3-4053-9441-268250070d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d459b89-acd9-4f23-b3ce-0f60540a32c9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b395eb-0524-4e9e-bb6d-1ac5ac8c9912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5fd8ae1-54e1-4cca-a4d7-2ba2dfb312ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb573664-47df-4fa7-ad63-45b89d5993f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d96a039-3d00-4ae1-a9a6-79fff2b185fb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f38f89-6bac-45f1-832c-7c08f8f0d83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f995a053-3c8c-4075-97a9-29d70ca72d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54eaa49-891d-4904-b4b6-1d71d56d8324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3712c551-12dc-45c3-beab-969993f6f8a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "39bc3abf-c393-4a7d-85be-6c7f54cac103",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fff4d5ef-d67f-49c6-834b-dcbe52ecc357",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d662c33-7f22-4656-8e20-dcf110d96814",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e1ecdc5c-d79a-452d-b505-36723971ef1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0443ed1d-eaab-47db-b559-e4f9bd3fd747",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "73c05883-a294-4a22-bb24-4437387a9877"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bda146dd-7b3f-4a19-bed3-9295eb4c4395",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1af1e51-62c1-47d2-8777-1c93addcdc96"
            }
          }
        ]
      },
      {
        "id": "afc212d1-d70b-4677-86d8-5da2bc518d30",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "adfb1614-2adc-452b-ae6d-8a1f06897e1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fdf16c9-0f37-4e4d-9c4b-68e226320e42",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5ea6d441-03c3-4a66-aeb6-0e584da1dc89",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ed5c4f-8125-473e-842b-3ee4f5dc1a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6811dbd-953e-43b7-b6e2-09a7558ccd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701b2631-5718-4302-bfa4-4fbb2a16761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d6b77e1-2a91-436f-9b7d-ca53072c3756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112db933-9d4e-4708-9e14-303d024d3bd0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ae1f7f-e213-4e24-92f5-7481fdce6148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2ab507-1690-47a4-b7f3-fea036d71264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e72d0d-af3e-41ca-bdfc-8668d7a53a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88ae9262-6ea4-4140-8b64-ed01dbc81708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e73bc4-5079-48ba-b481-6095526f5419",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa2de1a-63c2-405f-8f8b-dd23ea0963e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953ac464-eda8-49a5-8a0d-4db0f8746577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f15f3c-c26f-4fd7-9f0c-2af203400af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91d551f2-438f-4e59-ba6f-b69fe6e40219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d93a414-a654-452f-bea8-7de5ee380582",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd6af6a-62a8-44d6-b76d-cd30ec29cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600cb1c2-d97c-4d2b-a699-61e376fec5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ead66f-641e-4321-b417-6d4e0a9e4b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfffee30-367e-4858-913b-2f628296d340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3becc86b-a827-4217-a675-cc23ed8593a4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8bf777-4f4f-419c-8389-96d6d5d1d2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2f7685-f36c-42b0-8daa-f8db96dc47a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999c0a60-a337-428b-af5a-2b9f7d8d6362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8322ef4-2953-464d-ac87-53c5efcc3a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab273d2-a685-4f04-b7d4-5f1cb8cda555",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c37af6-a811-4678-b36e-eec431f07649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a216904-ee23-44e9-8369-e672a826a4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc3dd1c-1483-4daa-a7b7-9d82aca66507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7fef6f9-caec-44f8-84c3-1254f8d0ed5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9473ec02-923e-43d5-ae5f-21d067b786ea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b20a3b9-e5b1-478e-9000-1f399d794a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dede7239-3c1d-4aef-97be-f744ae51092a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f0539e-4631-40ec-8c1d-ef390006be58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb208b9d-d890-4797-8687-a402c72a8d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5ab5af-a1c1-4ccf-8b1e-fa25fc4495e9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c2985b-9014-4b3a-a07b-9e3a0006df51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e06998-b796-42e4-82c3-296dd3f7e1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe5dda7-1488-488d-8c33-1fea024946a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8738e57-0f84-48a4-9aa1-b98d47175e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb750264-bde2-40fd-a880-2bdca6caba66",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f6590e-3346-4de0-b69b-20c83ee35094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5f95d2-bd91-43fa-a7db-dd0e3db2ee42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa69c2b-806d-4805-a2bc-6e152c0be60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2abc40a-ae54-4faa-9e3b-8ccbeff24b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a36b417-e3e6-4d87-9abd-63ab6fdb1036",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ccc17b-a91b-46e0-8333-095b9202b577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb88556f-fbac-47a0-a147-9a5cba31b968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce72fc6-1448-4234-97db-0bbf53cdf717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb0fe63c-61e5-4fd5-9118-07d9aaf5b171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbab2466-ba19-4e2e-a411-d1538558dd22",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283c6160-fde2-4deb-aaf3-e0a76180d470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc9dd7b-e671-47fc-a375-6fd75eefa27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaefd86b-5ec0-45b5-bea5-55b00dfdcb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72994fee-cbf5-45c8-b34e-b36bb7a06bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad8d9f9-246a-4f22-827b-d4540e5d955d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dc8d73-57af-4779-9512-2e34f3f44de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433771ed-8000-42a8-b9e1-6cb70dd54d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efc75e9-d57e-417e-bed1-38a07d819057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ae4d993-9ce9-4846-8c91-41c22b43aeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c899f67-5eb5-4b57-a69b-ff9dff9f9adb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e45163-646e-48fb-8aad-504231c9312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11d098c-2e74-4137-be64-ff5d064825fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba8390a-35c7-4d01-a55c-0e23bf271f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f71662e-48ea-4ab6-989e-7a0e57c90d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110b4260-880d-48e5-8133-b9db8f4fe67b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a8ed02-6d66-449d-a637-259bee5cdfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664b3966-1437-468c-8cab-2e50bd3f9a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd0b01f-ba97-411a-b3ec-f47e676796ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1c17ab7-c966-4b54-a610-2aeee3d23c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8d74ad-29c9-4be3-824a-d0849b3889c5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39179e8-0fa4-4810-a129-bf9bbb08428d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787a0a5a-023a-40a6-b79c-c4f095b47a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bff1d12-de4f-4f8b-8df7-1497f67eb09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6daeda81-c771-439a-aec5-da03ff8e4398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff89e3d-47cf-4b44-858c-c93592de04ce",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc06db79-7939-4729-8474-04b3acf41ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24748058-4b64-431e-9aee-f21937464755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0916bcbb-330f-4549-b0c2-5ba23ab26878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "787219c8-bee2-4a84-bc51-39ccb160eed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9365ac57-00eb-40a8-8ea9-aaf87ea86357",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc88f1bf-9c21-4989-9221-2182058ae6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41008596-6a58-4580-aaae-6fb68d26731d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb26a8c-8242-4bc2-8dbe-737212bd4f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aec0e88-3934-4562-95a3-bb721ce6721c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc4fa03-041d-47e4-9fca-5169c848df6f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e8a4a2-3c13-47d2-9ee4-86dcef116e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb511e53-b727-4ea3-9c78-b1bf529cbaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1765928d-828a-41cb-878f-e3cf182afd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2714fc7e-f7e6-4feb-95c7-1ffed392c98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c492524d-bd09-47af-92f3-8abf60cebe55",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96503de0-318c-46bf-807f-cdd3086d5f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e683076-4a1d-4a14-8123-88660c00210e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdf5270-baf1-4946-9f51-76df410094a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f370175-8c28-4944-8a4b-fac8da37e218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5190fc12-e104-488f-8e69-6d7dec68d8f7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7583361-210f-4b94-920e-92fb51ee4a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fcb2d1-3399-48c3-a94d-ff143fdd76c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd20b89a-f8f7-4cdc-a44e-93bff466fcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fde0a9d7-011f-49d4-a495-06d7f3be470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f739297-e742-43c4-8b13-b459d6f5a65f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfa93d6-fdf9-4606-af10-eaf17a0ac361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4dfd5b-71fc-4776-8a94-0a7c0e843697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45d4d27-1301-49e8-8f94-15055e3d77c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "957fc690-eb19-4ce1-b8b1-d567b6a1e5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0111f296-43b7-43a0-900b-3af67c00aec3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d9fe69-9ede-4c27-82bb-3f241b074a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710a6672-1220-4074-a8a7-9d0288f2f03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f3049b-15c5-419c-9204-5241c0c34cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b18354c5-ee04-4b9b-bc7d-1445a5674361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f6e546-a098-42bc-98ac-2f90b94f4d61",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42adae51-3a48-49c1-b488-6fbfb5b9d022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0de678-3f30-41f6-9c13-49153017f208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeea481-8d31-4cab-982f-9ef914e516ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12174777-8d66-49fd-ae28-eb62ec4cdbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865f4626-8fb3-4e2b-83a9-092d2ab00e28",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad66d778-8b69-4446-869d-d59d445f539a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d8e9aa-2ff1-47d5-a77d-1c5eb1c0e048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c00e6d7-01a4-4e04-9798-ef3881a99f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2e5a5b-52a9-4557-b823-9717888b0c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a3ca43-ce15-4847-96d7-53068604aaa2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6f6e22-f5bf-4104-8dce-69ba04192e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0cd0ce-fa0d-4f9c-9bd5-5bc42795c2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418995da-1b0c-43fc-bf63-2120f8b0883f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "305075eb-9b91-4750-b636-e5aaee70aecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abd45f1-57b0-4a6a-a6d1-e961660a0a98",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0725374e-429e-48a9-a739-6becfc5c8d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac53a302-51e2-4e9c-9f72-73a8dbbdb5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c62df4-52e8-473a-a2c1-8ed6d85dae80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "980828dc-1531-4b3a-b93c-e4481029d462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c9e078-54c1-4462-914a-f86450541379",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad3dd3e-f55c-4574-bcfd-9a4b96aa6229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e22d36-aa2c-4d94-8c00-9d426189154c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca821405-8f21-4dcd-a69b-eae92ae2eb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3af66c8-9582-4813-8a51-bbebdf3e1b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf130d92-b989-4f67-be46-2544a5c0a7e2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30dd82b-a1c4-4bf4-86f9-1a3b5c984525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc75d7ad-8e6c-4bb6-b6f9-170f3356dba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fff58b5-92c8-47b8-b509-72a7e386433a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2c593e-ebfc-40c1-b7b1-93236e03cfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b41959c-300a-484d-af38-d502185f9bbc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd124a0-9df4-4227-9f2f-947f230fbfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee7574a-f417-420e-9aec-9f1952b7e410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bf833c-cdec-4e2a-a561-7eee6d584e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7fb96d-6f5e-4769-9610-0a90f8d8f681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35ab43d-161c-4dcc-beea-032f392ceffd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d114b9c3-8a30-4940-99a6-b35477ddd597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e6b906-75cb-4c4e-a250-0c5589f8f020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71ec42a-7669-4315-b980-fb489936a3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a451a33-da82-452b-9a8f-acb109852f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29464c40-39e2-43ac-97c2-5fb9ee58035d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e54cadb-fa7d-4003-ae65-40f9407de87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de0b7c7-46f2-4b1f-9b88-fedf53b0d7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ca3f44-4dc1-479f-88f7-d4a2d5905e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a84292-4590-463b-ad4e-8678de818566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b398f4ed-4c45-4fca-8a00-4136c0eaf033",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca32b4c-f93e-4026-9803-44c1f770bd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec64a31f-8842-4620-b035-ac1c738db5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b60f60-b605-489d-a2ba-6cd2cca48f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2baf807-3ccd-4e44-9a13-6d6ee926df04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e598a1-4133-4141-8670-8d841a373717",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc58424b-8f72-4a2b-bf4b-297913f38c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae842bc-29aa-4c76-9b6e-de3bdfe9ff40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e18f415-783c-46b1-a9ba-eb05b6d5b708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6345399-657a-4e2d-8708-bd480f219983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae41766-a3d5-4f8b-94e9-a4ac28d7aab7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8459d667-fed1-4eb5-a03c-3f7efd263b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1935e67-b45e-4e9b-aca6-02e6e4cd7fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da5e1be-0292-41f2-911b-0293b629ae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a92cfaef-e4bf-47f0-bae4-9d509a8738a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1c400d-9c42-4155-aa88-45df5d1675be",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fc2be2-6789-471d-9dac-9c7e4fe4bd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6730e5ee-d016-45e6-8997-47e1b5a6bb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7b42bf-351c-4688-9d22-eef48b5fafe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "43539963-2e46-400b-a291-4d39bb68e239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3901ae6-c52a-4e8d-bc11-c4b4de6bdc10",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8c10dd-3f9f-483b-8935-73bdbc1a764d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adc6d203-b65f-44fb-8f80-d01a18362c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb69dd30-181b-4577-8b0c-f9c531bf79c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e454c6a1-7912-4be6-97cc-9d4c9e14be0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c004ca1-0b92-4251-a647-4cdd1e623b17",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e51cc4-e0f5-4128-9ef7-333620524666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c7e000-d853-454e-9970-37ec1875dc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d5cc4f-f4bf-4d12-81ce-657610a439fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9efe83-9875-4e41-bdd7-4188d968f829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666dacc6-ed94-4eee-936b-53b55055462a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49eb3cbe-8d53-4c83-bb6b-b0ae4fb62249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c072803-ba4d-448c-970b-304f260f29d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96504eb2-9dac-4e37-aa14-abf5c0039c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7a40ca-e8a8-440e-b164-114ead55a7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefd04a7-b4f3-4484-a5bc-6521f68fb763",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e084a4f4-c0b1-4d7f-bca3-c1cf710178a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7351e452-6cb6-45e9-8a88-298f9d5444fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cf3a4b-2643-4108-8cbe-ae904f969854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1465ab8e-0988-4262-96d6-4e8c1303a9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41843c4-3a3a-484a-811f-7ec6bdc22a87",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025e040e-1872-4ff0-b221-b52e4a5f2c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de18c6b9-d82b-4431-b381-ad82e234f64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7646e4-9fe0-4dc0-848f-70cf884a5d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b980bf-d394-4baf-9d32-fc441cf0efea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaeef9c-218d-4667-903b-c7cb1d916384",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a30177-f169-4111-869e-a5397f276ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9391d9-3984-4565-834a-53e0f38bc302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62f6aa9-0ecd-4acd-8e39-860381983f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "966c455d-f2d4-4c71-a5c8-dc464068dd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8ffb07-b1be-489a-94de-e2588f9a59fc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bf44de-ffc7-462d-a1c6-3b503029321f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac09596-3977-4f0e-8d69-5bbde0bbb6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37dac39-bae5-415a-993a-eda8728f1dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "df251d3c-b852-4d92-9dbe-7b3758e697d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a74ba97-859f-4ba6-b295-e52b813b271e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2268b47-3a66-46db-b9b7-d61135836790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854c1d67-0677-4827-8893-132729893319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3775f36c-a28a-421b-b3ca-dfd8c970591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e306a8a-2d72-4b8e-9bad-991b744b5283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bd4dcc-5e71-4f0b-9afd-1c0a6e77b885",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73be8328-2d31-4d5d-ad2c-8b0ae8715fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b476e8-e37c-4a47-85ce-bc46368bf0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22ece15-f987-4d53-a54b-861164899256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3092cbfd-40bb-4f43-854a-9729d168fd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c35101-9192-4e98-8255-701009a6e624",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d83714f-6820-4be2-97ca-219ae7efc59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0943b3d4-bdbb-4f73-a2de-bca675515fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d63aaf0-57c6-4887-bc18-b2dca2b887d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40aa743c-5ed6-4cb4-bf3d-984c3503719a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e116fa-c6f8-417b-86b7-cd3d168b7a59",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db373d0-9c04-43f9-92df-5e94c9385a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dc6c4f-b94a-4ac4-9373-b087c0c755c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2f7648-53c4-4b46-9376-ca885f761ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "299ad5e7-3b02-486b-bb47-a83f36306f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de1f8a1-4360-4ad3-beba-ad22db331f3b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e2c09a-7450-482d-9c67-2b35c653858f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab266c6-ac00-4d8f-a411-465234d5d7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d611e952-d878-4ba2-a8c4-f6494086bee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f08db4fd-176c-40a2-9b80-5a36a72b6940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88c5b49-6afb-414a-b1dd-0242316b02b2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa577f08-ab36-4d23-a019-471cbdeae1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfc2fdd-f423-4a94-a5a7-a382f52050c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11913f0e-cdee-4cac-8244-2d06901e420e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6017d9-ef92-4451-9416-b601bee7f55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14aa1ef-23b5-44dd-ac62-b7bc32bedd03",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da686bf2-dc91-4c70-8e3f-b12dcb40df58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0b8e6f-faac-4d0b-ae12-157b74882827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd3f6e3-766a-42e8-a3e3-b9ebe53eaf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d64304c9-21a2-4f26-acaf-ebd62de25cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301b0acd-58f1-4de2-90fc-e1938c48f302",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44b5ae8-034a-4105-988d-be5821cea056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d06ccc-2d5a-488e-9751-c1a80d6d59b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dd68dc-c082-4579-b457-04a8a43781f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e62a5dd4-4f53-45f9-a508-07e6cd5b98ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b808a6-78ce-4ba7-a6c5-75e09a61e061",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e7cd64-4c03-4724-a2fb-15e420657f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3608c4-7e5d-486c-8410-802bc59c0b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5b0989-eed5-4093-ba28-e5dca694d350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "82979ef2-5079-4f69-a471-efda23f92c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e32ad48-a304-4fd7-bcf3-1dea8712dd71",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823ca423-f3b1-48c7-ba76-10b9f3f46f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1c7e1e-5e80-4ffd-9c29-c9e28ae8a5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d45fc53-2e20-4bf2-9dbc-1a903be2d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "008ba2b3-76f2-471b-a505-f9d16ecdd527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d661282-1470-436e-9634-770468d38aae",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621b4a3f-6d36-4f0e-a6fc-ac40bffefb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3f728e-b0a6-481b-8c1f-c1cf760ac8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12b4ccd-2cd1-4548-9a4e-c215a9dd54a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6339a65-4204-43b7-8582-7acd2517dbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1073c168-be8b-43dd-a5fe-293dbb2bce34",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63b43ff-842f-47f6-a83f-9e4d5305a2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e6f944-e047-4c16-af46-485d54a0ff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcae27e-3665-4684-bea4-2455b622dea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a731a1f-e9d3-46c2-9a17-1fb376a2aa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec044465-3089-4268-a45e-4b939b06515e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1930de17-3296-4f93-acd9-9670cc655358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55270cad-9606-4147-ba50-5b4a97b1f6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57d9075-2260-4ae7-b670-0c21644e0be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd03d5e5-9e29-4900-9938-b62e4bb43043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05a3a0e-8b6a-4d70-aa5e-feac3a897715",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8185c2c6-048e-43cd-a380-7c6c7fca4013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b11a2dc-26d5-4905-8961-6978290424f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba7f8c7-88e0-4ca9-a63e-7dfc86438516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b9deee-8f52-4960-9bf0-9b533aed04d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bb2835-a8a8-4227-b434-baeffb70a9ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dbdbe1-f77e-4967-a25a-2cdbcf02470d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9ba74b-e348-4412-886a-42a4f25411af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59309df4-9cd9-43fd-978d-1c40b9507199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76aedd9a-7ef0-4911-9578-8d3be75ff20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af329bcb-f0a1-4f71-99b2-d586e30f1537",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41291754-8dc3-4dca-bb76-d7a28213319a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e405e952-095a-41b6-b408-eb38f0ecfb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e147b167-6c72-4c93-ab7c-a283ade495e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50600b74-854a-4779-896c-e35201727e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c3a25f-5902-46e8-8cdd-f9f8cd2a754a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3090776-ae94-4411-8111-a938f291ada7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f820ba-09d1-459b-995f-77ab75d8169b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c83a4a-7a46-48e9-a061-3f77e9c3dd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb7e27d-f8e4-4913-b296-afd951e24c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa93f68b-2645-4f6c-9483-ea37e0af698b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af48f1e-3e45-4ff4-9c75-96d0647c58b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39e0cd8-82f2-47f3-b6f7-73a3f59fecbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0365122c-f0aa-4c00-9dd2-14a61569b133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "158d0601-6601-4518-b459-c655acb570ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998fd6dc-9374-449c-93fb-835edece7542",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd058366-d66e-407a-90a9-4e7c9a967ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ad7ad0-b504-411d-ab6b-46dc164ecc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c961b2-1356-4707-a51f-262ba129f369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea37e06-1f92-49ca-bdf3-dad755887407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e479a0-bb1c-4f7c-9e6c-3c5d1cd9f827",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650b021c-1fe8-4fa8-a0a4-7a9f571e00d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42b614c-f9c2-4bad-8f1e-38d9fc548d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9862800d-26bf-46d4-9324-dfbb3f0a15a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d1e094-117f-4af9-aad2-0973c2f323e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f16ce72-2371-4761-bbaa-75b5646e0377",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47b2a2f-3d1c-44e4-9402-c271340fd0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048a9856-2c33-4d12-b02e-e2e73cedf635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0cb879-0b0a-4e95-93ea-f2338c3d5045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4194f897-a1fb-4193-a13f-58b89e6b05da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ca4f82-abdf-47f4-9a27-a1639ef13907",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757612d7-bbf9-497f-9336-fad7473fe42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606e116f-0a94-4310-acca-29bc48238384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362bc4f0-0d0d-4a00-a14c-caa7f3135899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c2bb50-13b9-4f73-8fbc-909664a2d855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03be6eec-a5f9-41ae-84b4-134ee712b8d8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de71be9-3f02-4461-b2d4-f9f7c28d415f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de045ff-6352-43ef-bfcb-ff268beb3e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5f34d2-a8cd-4ec2-8d9d-0d64c3171aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfcf918-cdf4-4a81-a9be-67154c246a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604adf50-f69e-480b-ba62-aa9d065a96d6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf79eba3-5b84-4adf-8214-b0e1496d9530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd9771c-f9f0-49ea-96c0-7d0b04372009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e75b15-821e-46a0-bb6e-2a05de17397d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76611642-f174-4526-b740-793843d40196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f0ba3d-1a85-4e80-b40d-07c547ee5787",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19713a69-cd41-4bf9-bbed-ac28e0674475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2285ef6c-9194-453f-9a05-f3e016eb8e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84bf74c-d6ea-4a98-abba-09687e3febd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "451a334f-5195-4741-a12a-acd417a3363f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0decd764-8624-484a-856c-4976809cbdba",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4748dfe3-0bcd-459c-88f3-585ea0f795cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db90b0fc-8823-46bd-8a46-9be30f892fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaa1aef-637c-4fb7-8bdd-b942ad449cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "42b95ab1-02fc-4e09-be34-713ff25eb9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a415477d-feeb-4c7b-a2ed-a4f6d8831210",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9681c7-5334-4a84-b937-8ad755c08d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012fe867-b638-46a7-8ef3-d60d7dc218ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcad98b9-9c8f-43ca-862e-73093c11d1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b49bfb5-ea12-443a-82b9-c0f7b9615a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e574ffcc-f3ab-4c00-a825-ec373e479a5a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b80f3b8-34df-4119-a50a-603c123cf833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19192ce-57cf-4781-b928-fe75a10af621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12d94a3-f663-4318-b92b-56d808e43ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b03287-b793-4c65-ac9a-262d6bf0059b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde83eca-ae23-4a18-a75a-a2927128da36",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5835be7-d560-46f9-ac36-b29478f9a8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d082751-aaca-434a-855c-e6fe17460b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7185bc37-969d-48c4-883d-64fc2e676f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a05251-4c22-4977-a9b5-a09f63b6ca1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258924bb-2094-4bba-9ea2-abc4c1f0e68e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57016d20-3b8d-47f0-a59a-5e7e5146106d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59a86cb-0eeb-4728-af75-23a9cec7e4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55572e3-95f7-432a-b971-f40f1311bbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9960ada5-5ff4-4e7b-96a4-3313e6a31e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519a732d-0634-4108-974a-217d9572ea9d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cb27c8-654f-4244-a81f-522cc09351c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9618814-7f01-4b6d-b7d0-bd888408e235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f5bd62-adb9-45dc-88a9-8b587d45dea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2afab1c3-8d0f-4aef-b2b1-99cdfe34bd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656382be-14a9-484d-8d5d-4f846963c12d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8db433d-2131-4fc5-83a0-b28e24c49f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f274463-61d5-46af-8475-22a6cef77c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e75b440-0700-46d4-81d4-752e492ff448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78912432-dbe2-436a-bd23-185df1c4ae79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf338718-3f2f-41ad-af28-a959f331ddbe",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52157e60-23a6-4df8-b482-6aea57db6319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6642f049-2288-4a2d-b949-8f20dd2a9d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3066aa09-525b-4468-a6d1-569c053b8e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6908e514-5316-45e4-8ae7-efe196fbfe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a7415c-f6cc-4071-92dc-6adc76bebe05",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c3572e-1e1f-499a-8008-52647117f956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2f803b-e7de-45cf-8f01-9071a1fb659c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8ca6ba-9e44-4436-a454-c84f4902590c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad08a6ef-1019-47b8-a723-eec51c578be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f51d95a-4e33-45ad-8ab5-ca7e3186b0d2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac9e7c4-b341-453d-bcb8-59c840ec04df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc64dd6-ac35-4d73-ab6a-578375b2d8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f920ff3-5817-45ab-971c-a4b1e60b4f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5527d6f4-efb4-4846-a57b-d4bced4583f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358ff4cc-12d0-49d3-89d1-a6be0c84e5f9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065d427d-35a2-4e90-a767-9dc20659514c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40e1b57-d6b8-4722-bf31-91cd5f77c44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f59e441-85d2-42cd-b2a8-f7527d664ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64aa639b-539d-4cdc-9e77-2b8382bb9b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a21db7-b439-475e-a246-2f5785e8763d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dc14ef-a089-4d03-a1b4-1fc7926dee05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b7ccb3-f0c7-4925-9efa-e0833de1a1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425ccb1b-b64f-42f6-9f73-3f33546ab65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "510108e9-bcd7-4f45-a5ff-aecbf6247653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff62eed-c19a-4816-b194-ff69246ad001",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27df145-35a7-43dc-a197-0a649b164527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0196cecd-c442-4c55-83dc-ea7173794abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e2d572-6af5-4eff-9cf1-70248b3ac1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac7412c-0fc2-44b2-861b-16e8e9dfc88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eab643d-6be5-413f-8f96-214d0fb75f1f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cac5d1b-f226-431a-bd06-f9ae6ead70bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24538c7-b6ee-4791-a5ba-3254d697d201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82b3075-b708-4add-b337-b7e9a997c5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e48b22-0737-4f4b-8ab5-9836e5c00951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6495ac-cf4e-4dac-9250-821e78f74567",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df188d3-3b97-48f7-aeb0-2e6521da5caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4f1c2d-1972-4e56-9f49-63273dfc8248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6041d230-4b40-4385-bf39-9de44179272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "965617ae-cddf-4411-9fd7-89dcfeea2145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4071537-9044-416d-889c-85d002bf8a89",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780618de-8619-473b-b6d1-82d46deef630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3246e623-3152-4775-ab31-849d006ac470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ddced4-3fa4-48fc-8b8a-d46cc32c0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbf58ef-c96b-40d9-82c4-8d7b00d84174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a3c290-40c5-4498-a62d-2d5aef3c69e5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8a7e87-3066-424a-942a-bad6c6b535ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae45c7bf-d96f-4ad9-924c-641a25841519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d5d022-db9b-4535-9a6b-231cc78b5fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b57d6393-4465-49f8-92fc-61d596135e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e595b820-286e-4e84-968e-1ab3e0abef80",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54767b85-0a77-45f2-b7cc-a3bee68a2cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df55e014-f810-461d-ba9c-1376adf75ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9740a717-f1ac-4225-874a-290378d75d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9df4b9-3ade-4d23-9c2e-443e50659c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce7ade8-f6ab-42ad-9434-ebf1d14c3c2a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c4796c-cae7-407c-a837-76df6494cd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711597ec-ebed-4afb-aa64-cd4d3ed9640d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791eb991-54ef-4c83-a7c0-325b88e5582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1ab906-d49c-4bb1-867a-d8cbf4ebc288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fc45a4-02d6-420f-874b-4441518d10e3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f700d74-5451-4661-aaa6-672708db7554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8637b940-f9ad-4802-bcea-aadcf41b2e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9717604e-5326-4940-b737-7b47b051677f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a4e915-91bf-49bf-9122-a4c751aa883b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4048b14-72b2-4f65-ad8d-b41acf0c136f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617e4d1a-e433-47db-bf76-d55404face9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c9aeaf-c7e2-4ad6-acb9-88e7477ba3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41332b3-3c9c-46db-b231-4f6697750cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "85340f8e-dbcc-4fc5-a6ff-123ba2cc60c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf313e93-050e-4244-a8f0-766d45debbe8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5038c359-388a-49cd-a938-bb1e50a35f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627e9533-c6bb-4451-8c2e-16b537d407eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2df5e9e-a5a5-4dc3-a1a9-391f7912ce0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "131c062d-bce9-4854-862d-f94b9546b767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ab1c40-70bb-43a6-81f2-a8042f90c969",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9210e06-4a70-459e-a14d-286b897455a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51d8caf-daf9-434d-8a2e-71e6d2d91b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb7f94-a9f3-40d3-a8e0-0e2fd3b114da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d1edf1-9684-4385-ac44-bfe5c3fb0111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20bcbda-e0d7-4a7f-b9aa-692fb60c31a1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b6b3e2-d4bf-4466-b594-37826c87ecd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9274ae8e-a7ff-4952-bd98-8c69f341a1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e64f6b-b9b0-4c24-b63a-20aeb554229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d612d53-9e1c-402b-b195-013f2b5f9c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8997a3b7-33fc-41a8-9284-fc3fd98687e0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a9ae15-045a-4618-ae91-5b79c4123f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f47e8d7e-3c74-420b-81fb-d54cc8a2ad40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d2b4de-8da5-43a0-b387-319f0ab27eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2045b8da-4db2-478e-a7f6-8b91d889121d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f98358fd-60d6-4daf-b331-56cc4cc54f0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49b52b6c-f32e-4c75-aef8-9641c0f37f8b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80173c7-fe9b-4bc2-91aa-8d1c7a1af7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "245d2c61-d6a8-4ea3-b5aa-cb6e2f551f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e0de12-2f6c-476a-9dcb-462a5426d374",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1ef18c0-6d18-41c1-9b71-47a95e514cab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c839061e-db0c-48fa-a1c0-ec8b089822ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cb6c1bb-8eb9-4082-ada5-31422fc8f605"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53f57af6-4f05-4a2b-9e3f-975fe2e6081b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4db53c2b-548f-4e35-9407-3a760d502946"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0025fb2c-55e2-4a81-b10b-b57c5af40d45",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7eb89671-e14c-459e-b693-be0d41cc1177"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ffc58f48-b967-473c-85d2-2870c30ac065",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b60e7b88-dc2f-438c-b1c0-9d7ac4e64fd3"
                }
              }
            ]
          },
          {
            "id": "2d2380ec-5d97-4ac4-8e00-3bbfa467843c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3c4d65d6-c77b-4d0c-a998-a514ce01d89a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8becae67-9079-4eac-bee1-b2e54dece4c2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312c5f4e-92cd-4625-87e1-3c592241a29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "885b4748-5753-40b9-9acb-7511b9782e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec8ae60-af06-4d91-b055-c48cb4ec0dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7afc936-17e5-43d4-a3f3-f01cf37c0f00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb57c903-0bbe-44d7-93e5-05e34aef48ff",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "658e11b7-e584-425e-b0ac-6baca8dbb994",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18008442-3191-418e-973e-da72ea4f0950"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4866a5d7-fa9b-4bf6-afc3-b61c1a45bb01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd35fcc3-6db2-41c1-80c8-37985d7a5993"
                    }
                  }
                ]
              },
              {
                "id": "f26b2d18-db6e-4d47-bf96-341a71498272",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "914f0d42-ec34-46d2-a446-cda70807d0a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d91ad36c-7ffc-4d58-bc54-14872be76984"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a51b172e-3442-4161-b613-ecd378b9d48e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd611930-68a1-4327-9d55-c5c356bab234"
                    }
                  }
                ]
              },
              {
                "id": "f7c77f45-6bf9-4c47-982f-6a47ab069afd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a6da2d5-905c-4072-beb3-1cad2ca91720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0807b24a-37c2-4e4c-9b37-f59c7f829dc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98dc2063-8265-48b8-9fe0-214d4dde5f6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bee70b9f-5ea1-49c9-9cce-022851fd8761"
                    }
                  }
                ]
              },
              {
                "id": "55c1aa9a-fbc7-4bf8-adc3-daef3109fcb2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "849a64ca-0a4f-47f3-af9d-e33205ef949e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02726f54-ba90-4278-881f-2e375d445adb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a22a2f1-732d-4542-95f7-77ce038cecbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bf7de2f2-d6db-45a4-8d8b-b444c5ae8fec"
                    }
                  }
                ]
              },
              {
                "id": "4c7f8fbc-8bdc-4482-85e5-db98d0b0aed4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c426977-9c44-4e34-b460-7789f22794dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69cce2ff-b9bc-4d81-bdac-de2e4b1af284"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ace8d10-ef7c-4b02-8cdd-566501aa3b84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "db85a9c4-cac2-4d15-99e8-52bc0d933e5b"
                    }
                  }
                ]
              },
              {
                "id": "2a370c65-f9b5-4e50-b5f0-f0adb4e75f2f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75e1b77f-7edd-4783-acee-6b43e5a46cc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b2182c4-7de5-45e3-8a0b-2a821ee30094"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f2badad-e214-47b9-9264-4bfbfedc1f99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e95c3cff-9936-40bf-ad20-f6e03333220c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "914cc455-c997-4637-958e-2d445e674c5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6e0da82-7f3b-48ed-9057-d1997ec6b7df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a9a9959-60a2-4cec-904f-979497e4572a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50cbea69-3166-4832-baff-ab081b867332"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef9c5b09-ce2e-4ceb-b90a-ecdb48cde1a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "70f2a64b-371e-4d26-a861-14a01c4c4546"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "384c6c39-67a5-4728-9507-7636b2b96324",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c9af91a-5e83-4fa7-8047-f2d9452d736f"
            }
          }
        ]
      },
      {
        "id": "b631eab5-e86d-4962-8629-a8c504bcc7c5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "574358bc-2ff0-47ba-86f5-dcd993f22c64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5614167a-b238-4730-b0c6-77f2ff5c987c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "002eb29a-b387-4dc5-96dc-6dfcb5d7637d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61db563-364f-45c6-8575-7e0180760988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea71867-2ce0-431f-b6f8-ebea3f34881a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a764bc-2878-4939-ac5b-2137bd34533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b1cf6f-f74a-46d1-94a2-9f297e19ec74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cfe9d8-629c-4064-8cae-c8dbf18a7b62",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd91a0b-1eea-49db-a145-a719939c716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8676603-2705-4fd9-99d9-485f640d37ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8104b815-e242-4880-9302-f746492ded9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f400f38-e36a-468f-be3d-a8ab7ec793f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bca6beb-a7e3-44ce-ab49-11f6030a3bd4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baea5c1-1b60-4129-9f75-1caee1658d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92b902a-4178-444e-98a2-8a57a73930fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0543d8-69d5-46c8-af41-35a2f9105e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a0a83b-ed1e-4fc8-bd76-5489d042bb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236a465f-80b8-4d22-990f-7c443af4244c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a81677-968e-48e6-a029-8290e20e7749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79c8c83-ba12-4a5c-a31c-338170e5e3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e2003f-936a-41b9-9742-58d037e0d731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ee3327-5303-434a-85b8-8c5615e50b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d0df67-c2f0-43e7-9cf1-14d226de8343",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b87a492-a000-4fac-b4a8-753414d6189d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c7b95a-ee8c-4d0c-aec1-ff755e485292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20dc8f06-a676-4faf-983e-dcaa30e3e461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5170fd0c-033b-44a1-a176-e8ffbc421cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d242f33-f08a-48da-922b-8331033a628e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3c0c66-89dc-4687-90ed-10b94014ed9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9db7d01-82fa-4305-ba44-9ea25aa48944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5a85b2-593b-43ff-9e03-afa06a3c571f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f86374f3-836a-41b3-8d81-48d388e8b3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712ef381-0b3d-4517-8dbe-89a9585358cf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84e6f84-acb8-4b2b-ae59-718bf96a2ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e8e3fb-dc70-4da7-87ba-f5f64cb5f08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60184d21-5c0e-4421-b0b7-ea2a5a561364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee51f55d-dabb-49a8-8952-c3cf018e9d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd9ee69-cbbc-4ab4-8ae3-baddadef2230",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639cf2f6-4dcd-4255-bc1b-6c725814d778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323f33ec-4d98-4d46-b8e0-02a3db59cf1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33ee05b-e5d4-4b3a-8aff-57be2933d2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d10a98d-0f1d-4cb8-8241-7ab302c69765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec5d938-7707-41b0-94b5-1823306c53ee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afecdca-08c5-4aac-ac0a-fa5518e18f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e41a23-a491-47a4-951e-44e71d106d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd53e68-86b5-4bb5-9f1c-437067c36c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c04b9d-1d80-4b0e-a673-f1d557aaf28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eed7b8-3de4-4746-8709-5ff517779687",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea8951e-64a0-41e7-9337-d86a9bb27dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d4e34b-5d68-48f4-9707-6a0661be8c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d288a9-b691-4931-b642-0f3d27868a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1215b09a-fb26-4e9a-8ce0-3a593e45f428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d552aa6-cff2-4d26-b732-82cc618ae6d0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b900f19-1798-4a27-8b48-eebbb165f7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7d8d48-3396-4a1b-88e0-2e9c72b31e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c066deec-c21a-4342-a75d-3138d1f1e342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4211978f-a528-4177-b802-1de669ad1d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f840eac3-981d-4c5a-b712-57787271df69",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790a7c5d-7452-4599-a434-e803a48e5d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f11e242-15a3-4a0d-bffc-e79f0d1921e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7846aed8-c860-4aea-a701-d614e072cf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "487580c2-fb10-471f-b280-da34381708da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e51ced-1598-47e4-b43a-00a505d5a26f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6a0ed5-9923-4093-a187-c29b5125f2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac8ffbf-1309-46d2-bd7d-81c5c440759c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1693fe-f477-4a57-9f3e-7a08f951b4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c50e1b-577c-4cb0-9611-ab869c0822b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ac8ab8-fd9f-433b-8b77-45a24c229bc6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364892b4-f771-4c0b-a71f-3d449ed037be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd28018-16fe-48c0-8358-654061d49157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28d8629-c890-4373-a6b0-c82fd1880152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7d0e65-225e-4f0e-9d03-67e01c4e15e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46eb411-5294-4426-892f-4898bf8f9f77",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3fe05b-d31c-4623-97d9-9ef45a65806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fc5710-130f-4ff6-8b51-8fc79927f0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdaa38c-4d8c-4066-a4ab-4fcb5097e452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "93e885fa-491c-4b35-a2e8-0dbd58bc6a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edd9d11-0c8d-4b95-ab58-7d7938108c3d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4434d1-450f-4a6d-bf3c-0f232e8d1e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84609538-ca76-4464-a03b-841473a3e4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de430c03-1d8b-432f-aab0-e5e90c301e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "046133f8-d2cd-4a99-81c0-0db466cc28d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860747d2-4e65-4ac9-a8d3-0f3ce6a8fa4a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8baa29-b6a3-4933-93e4-f0f6bf151378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6225e251-a944-4ad6-bee1-352ec748f1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9299f9d9-8acd-4112-8e31-f01b765fadbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "321ae7f4-9477-40bb-99b3-7c194cc9fc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b296f96-f96d-4f27-a3bb-8e6ebbf69127",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da23432b-f6b2-49c1-9cf9-bd13d79d46e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff571d9-c935-41f6-bf2d-536b85425cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c69aabf-8b64-4a27-ba8a-3aeebe64cf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3399035b-5ce0-4528-9555-cb4dd7223907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea44abe-5491-4d97-b0f0-f026bf2271aa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecffcebc-9c48-4737-859d-fdcd58a626ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baeed5a-c1f9-4002-998c-ba80ce8c9625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae70db3e-8550-4966-9977-eb75181a59d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e6e51d-600b-4df2-b0c3-02ae68056e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8240e22d-cabf-4e71-97bb-ff090237a0d6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ee93a2-03d5-4de8-b58f-01fa2a4ee78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25481cf-6d94-497f-8111-dd32093fae43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb29596-5fd0-4a32-84c2-d5d121bee004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d10aa1e-71bb-488a-942f-1ec8f4721bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e928420-d614-475a-bc4f-882ddd357d7b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff54d98b-600d-474d-a9f5-8081b45db34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d57757e-58b7-4e6c-a78e-17179a31e4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef76d432-a4ae-4c94-8d12-b38fd31f2316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a8f613-0abc-4e1d-94b0-fd28138d6b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012f8bd5-d620-4230-a121-54b8209deb2e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac7e8dd-8888-4c87-9b78-8f458e0a8089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e37544d-3821-406a-8bca-3171048427bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dbe739-ac8a-454b-babc-3b1d2ee0629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04758907-73e6-424b-922b-a8582d7bf76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e82025-f965-48d9-877c-48183465b87e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c116295a-02b2-4f3f-82d8-1984cb8a53a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e830cc3e-6eaa-4b27-bdb3-e3d2193c36f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64e4e3d-a00d-4017-b66f-936485bf8b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe06096-1c63-431a-a6b5-7efa5f6dafcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87aa52a0-76ec-4dd7-a9cd-138ce926df80",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bd4ba3-9aac-4c79-8091-f941e30c8f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4995f47-f1e2-4717-abad-ecccf3dbf33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee2f234-94c9-4e57-99ed-07f927bd3929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc9ab8f-14a2-494f-8e54-8cc2956ab9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd4bdfd-3eee-45fe-bee3-cc19424a2ee9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838c6c1e-7412-48e0-8477-ff83040190c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38c7ec6-0cc4-424a-a1a4-fa19fc7ad3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9158a556-2df9-4225-81a0-7b64e33cd353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13223c94-3f67-44fb-be85-547bd316df9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d4bc8c-f415-4f47-9800-11f1ec028a2a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d93933-c5d2-4e8e-8df3-bd36115283f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcb6a7f-0259-4450-abe9-5a1725c3c931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6fc9a0-7496-40dc-91ae-a4f92c090112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7a598c-fc0a-44ab-afec-ba236a6315fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2af1364-79eb-4cf2-a0ec-237530b042ad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65689ba2-24d3-42d1-956b-195aed441b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d98ed63-7257-4607-adbb-b62bbcccaac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5688db12-6345-4dc8-b9d8-7411c4196ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67dae8c3-0bc8-4507-8d4f-aba17c35c511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca0145f-3f30-45f9-b014-5c5548a6cba6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61375604-7f70-4ebc-875d-fa2600db537c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cc5136-2d1c-4346-8b77-a79a90455723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8362ca-e13a-4889-b037-7861c0df8a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc3a151-fd25-478d-8842-465425c7cc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3658908b-428f-441b-afc2-794b5cf93322",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e1c973-e241-406f-bdec-be46077171e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1404cc9b-5d1d-463c-809a-477f07709a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58a2d6c-5f02-4ae5-be39-ffbb69a97f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df41e41-82f2-490e-8401-5a8f73d704b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d47da6c-72bf-4682-95d1-81c0b151bd61",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51a5ab0-1124-42b8-a4f8-d0ed5e1e2a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb43d26-e793-4bd1-8ec0-d7ada68d8d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0ec771-d232-4793-bff0-f2b9c9cbb33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca63b25-3062-4bbd-8753-87db72b2a22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd18f7e-cb43-4355-9ed0-21b38ea3bfaf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b9c7ee-20b5-4b7c-ae21-9509820fdad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39d9db3-55fc-45b2-9726-cf8ad678fb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c18457e-feae-4419-a055-8022fc564c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f19591d3-01c8-4ac6-b949-6169109c58c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0d69c3-413f-4543-b6de-d131cabd8161",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335e34cd-fa4c-4a6a-84bd-82a254f14c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f9576f-f28e-4d65-93ea-b51435d6ad1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e8c4b3-c78d-4c79-87f3-7c13caf1f052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb24b77-b4c0-45fa-ac16-719dd43e04bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01db513d-ab8a-4c5b-ae66-7820c2e99a91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f623ac21-d2aa-4880-be27-c05c2dc9758e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096a47fd-8045-46c9-81d3-ff09106789d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48099122-bf82-4caf-8263-a7a02f63d326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8452af38-d2e4-4301-b48b-961464efa982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6504974b-d45e-4408-ba00-e7a54b7e6270"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "455abb2d-3f4d-45a1-9b99-2d4c568288c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f3ff879-76b1-4519-a04d-bffd6ddd745a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c46e68a1-178e-450e-a0c6-995d3457e4de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85d3f7fe-d731-44f4-bf1a-6f045e18c288"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27d05eef-f500-4d83-bcfe-a5c3d9c8e414",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "391bf629-a856-4da9-8f73-842c612bc58b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27173898-902a-4eea-bf75-cb60c0e49a21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1239364-a54d-41ee-8008-81d690e6baf1"
            }
          }
        ]
      },
      {
        "id": "8822354b-907c-4a6c-9d1a-396d6d6afbaa",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "38d66939-f6d6-4618-872c-d0395ec05df0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0eed730a-cdd5-42cd-960b-a17e02ed71e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76b4b07b-2ad5-451c-a7b8-39fc4d27cc02",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e256e870-e02b-485c-a433-9454acbee291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ee5581-c182-410c-be7f-1c246f6eb07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eff6c57-04aa-4c1c-8a93-55453aa4a888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e802fda2-1ba6-401d-9bce-caa65b405882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b32f4e-bb8d-470b-a46d-6baf2128c446",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3608116-6c8a-4dc3-a235-c17961438ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a1f576-70bf-4fba-824f-57ff1b1ad35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d88fe4c-c079-4c2f-9b2b-7c5bb37dbf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3617321-8b1d-4853-94f5-b5a01bb9225f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b406fe1-9636-412e-abbd-175596bec536",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3ac0a8-4f92-4980-a6ea-0bf9d9e55459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582f8e70-caa6-47a2-93f5-2f76b353e6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ff1838-f6f4-42bf-b908-35826cf2dc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a383b0d3-e7b3-4875-a667-3c908429824b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74b3ed9-c5cf-4f7f-a777-12befbc74717",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d85a27-8190-4b1f-8d99-cbb9f691244e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e69a5bc-e278-4798-9983-1dba14f190b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365cd0b9-6795-4149-8d9e-3c1058d199b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "569fb849-7deb-4e30-b40e-fb94b45487e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b0e3d8-72d3-4305-bfed-597167779c4b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5beaa1b-05bc-49d8-834f-6e3f7dfae5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12eedee-2969-4ba6-a742-4cb33bcb0470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373350e3-f1ef-4675-b767-b496fc985921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ec7f5f-4682-4e9c-86dd-3488e5b277d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c51156-9b51-4d1d-bf6f-8a8a5b56398a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2480718-a5c3-40f8-9c30-930066f15aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e4022a-2119-47b1-84d4-7b92b210ba75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43391b54-d74d-4eff-906b-0cfab89d90c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f51ca438-49c3-4e83-b311-df803061f937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aacdb8a-5268-4359-86bf-13d591124fea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6124c1d-07a4-4c17-9f04-a1343eaf9292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d4d05a-3dd9-4862-970a-52e0b5a3975d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b50c4a5-dc71-4f9d-b869-afe54cbb2e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6021356c-8c9e-4694-87f7-a7241f4fcc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca44afba-8707-4416-aa52-0630a13e9c41",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fd3e25-690f-4a49-8bfe-b8f48e84b1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f252d40c-a11b-4a2f-89b3-a45ba4020a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2470ac72-4bc2-44ec-ae2d-f570b874f97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c35b1c39-427e-45a4-a8e5-771d196cfbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472185d5-ee3b-42b2-9ab9-ede4e762c79b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edcc1bb-a242-4126-a406-6f59fe2ca38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035c4a47-ffda-4dfc-b198-c9c48450f291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bf37d2-8b09-4ab0-8689-886144c1aafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "072c997c-14e2-4b17-a4db-3771186041b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8168f970-5745-4a98-b99b-0015196f8616",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff219c29-1fda-430f-b0ef-799097f90508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eca5359-1c83-4d43-a137-bbc003b5fd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9906de39-e0a3-4f8b-88bf-f5f38db36189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff62f6f-07a4-4967-94b1-f950e3e7fef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc39b51-f040-4ee8-a5a7-3eb919bbd446",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9961d32-876b-4f68-9105-b5f3d2cf1d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d96e2f9-ace2-4d30-9c7e-c66d380e861e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305c1689-ad7f-40ac-8474-143be5d2c8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22012bab-d94e-41ce-b26e-ae0f8de84162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901ece99-3894-4e7f-9f82-7e8ba280eda0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83c32de-02d4-4f15-bb30-214e145bdf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4a2f1d-1d29-46c5-82a8-8eca458ce089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad2a7bf-566b-42a9-8276-ef7c4e8f26b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df6a7cb9-81ad-4566-9fb4-944ff2cd55cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa9935a-e90b-4fdd-b7fd-c3d21a6253dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3076db30-bfd8-4ec3-a8a3-ca30a132eade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951577b8-29cc-471e-a869-0f25d02b1ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebad6a90-96f3-4113-a3a8-4a0af9016b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7195c5f5-2a3c-4405-b0d7-9de288c84939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d884f4-3f3c-4430-8acf-6fb7dfef3270",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49390a50-68eb-4b25-be30-1cf18f6a1b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2ffe6d-c647-40ff-bfde-74fbf2228714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c74422-254f-4687-8cff-ec39f0f81b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "503199e4-d386-49e6-b254-b45c9e5e90a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05557974-ec72-437a-ae24-d96077103171",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba696e63-edd2-4ab7-8329-bce4478b51b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a9ae4a-8fae-4468-8320-66db8d879f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74451f0e-d657-4caa-ac1f-282c3165b7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "17196d25-2fd1-460b-a38a-5152c4a772c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ee732e-a255-4a07-a3dd-3353c00b7cab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa272d0b-6f2c-4d0d-ada6-1eed98750e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8733576b-a311-4e44-a0b3-42de8ede12fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e87b13-11f8-4a89-8e2f-c01d2d8061c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "177a7369-b673-4966-8d75-4852165425b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1083f81-396a-4602-9d28-19d0b0f1f92b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5781b5a-d1ff-4155-a8b8-413ba7fe2801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdef1161-46da-4000-9f9f-61cbdbac429a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25870ad-5acc-4fb5-99bd-f9547bb76a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbc34e7-efad-430e-8c11-00195d06933a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f0538b-7413-4bba-af85-038c522e3743",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ff4884-e2f0-4e2b-89dc-17ace5e6f6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e6cb19-8d3c-459c-b843-1b84fa8d6b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382c616a-4f8a-4077-af97-7617bf02ddff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe21c9f-0a52-48de-94b1-4cbfaffc93aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af7d6b0-b40a-4a91-806c-779f08012c21",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b64963-4c08-44d5-9c27-d06b57c55a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57424574-5b63-425e-9632-52bdf8c3bbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957719be-e2f5-4da8-8ea1-841a305caeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37696dd7-1796-4551-be54-4ec7da67f7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05d983e-5aa0-49f2-9aa3-cd27b155276b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4205087-3af3-40b4-abe2-790943de3d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd448088-14ff-4162-b4ee-d7b58910d5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb34d3a-0945-4ec5-b824-8093a69e97fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7d8664-f3c2-490e-92fb-a82810925f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be67d53-5aac-4c94-9e9d-82115f765ae3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04421a48-80ba-421a-ad51-c8bca3825b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72a703e-961c-4081-9827-92e8b74a748e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbab09c7-91c3-4fbd-838f-c866fe81c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf28a70-20f0-4c0f-9ebd-802a2729aa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a715b35e-0e79-4380-b3b4-eadf1ec989b9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07ec4c5-3d44-45af-a47a-0245a1d7cf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26be05b-5e8f-4c51-b890-e9c682df51cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6177c9-a6b6-492e-a4cd-40335a143a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1449e95d-cb8f-47c6-ad15-00e52ccc3aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5043cdc-9970-479a-9594-9e579f9c4723",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572f5569-a2e8-43d8-a27d-d15ed090d686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e63380a-a9a5-4655-8676-55a18e223484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bdc65d-4d4e-4506-b989-3832b630dc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38f606d-7f56-47ee-8de0-c8389bb8bc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e9a8f7-f3d1-4f39-b958-b3671a94e1b5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3410e961-2720-45e4-9ff5-e9fae946ae0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c246708-0299-442e-b877-0d8b67c643cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7c7299-ad21-48d1-bdaf-6325cd244ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5928fee1-99bd-4f73-bede-759fabdc6e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a42232-df0f-4695-a2ee-606c83238056",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fceaab-619f-4c11-bfbb-a7736b74cfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f18ad4-e3ea-432b-bb3d-7ff3e114d3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9b8b0b-24f0-457c-a8d5-a0f973b463b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f54786f4-b2ed-402f-8489-d038779af00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0288d58a-b44d-406f-9595-5ecd60abcfd5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c543c2-4474-4b5e-9f89-1552406c5ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42ec59b-6693-45f2-8e61-4474d59b212b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9372d2-9e9f-4371-baea-df82919e6af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cb97b9-c6f1-4391-bc9f-04fb445b165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccb49f4-e7ce-4d9d-9bec-4bd456fce987",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b06bcc5-c7f1-443d-9c7b-2e3e9a2637bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae26c537-a52d-4cfa-9d53-11a32a73a9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8ba354-1162-47c7-a520-73fdbd3d0592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5b3020-82a1-4b21-9c60-e9670f85ac52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d021c89-fbe7-4412-aab4-d297f4aa757a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b3b795-5959-4a66-ab62-70addb12bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8811e276-7976-4fb5-875e-b812c78e0c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a13b99-e676-46ab-b71d-95151783fdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b598b31c-263a-4061-89e3-1d687f93455d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4255c3-f16e-4009-a771-85089c3387f5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8910dafd-9076-422f-8eb5-60b43af45a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d2ef44-f6e8-42c7-9be6-f2eccbd14073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418966ac-5ef2-4c2e-9a0d-335c720cdab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71abde6c-a0c6-4783-9395-cd8b61a8ea68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa486f19-00ad-49f8-b656-24d7d7ff4086",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb57e936-6e34-461d-8052-b7cfad5a548c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a77dc6-d726-493e-9ce2-4bede186e188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b89a9e-f5d2-4154-bd05-b2c9bb98eda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45834bf1-1711-4e02-bc04-6cf1fea0895c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ab11ef-1af5-4a87-b217-401795b710aa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b3b5ec-fda4-4f4d-ba0a-66f0040dc09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef588c53-095d-400c-bd2b-74797e4e4b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bbbf34-01cd-4e54-8f7c-2a988d14d436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db43310-e153-43d6-bd5f-c03e4aa7016e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210fa0b0-26f2-4573-84ce-1a7c4f66c125",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134d7d47-d7d0-4722-a94a-c90eb0ede13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6878646c-2636-4b5a-8ecf-aff68c4fd535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f72a453-8c2e-4701-930f-1a40900fa66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46c5af7-869b-455c-92b0-8fb6b10f7e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002893ac-c375-4d1c-8669-a0047bd73dc4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91c214e-7f15-4bdd-8cd4-5f2e34d9ac4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccef758-68e4-4863-ad6d-3ccdb8fa6479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f049fe-4784-4b17-b0fd-1cdd8d34b212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a75605-53d2-492e-8123-be0b98892544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bf9364-dc73-43f2-b0f6-bf2af161a8ae",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b89a61-9890-417c-b8ef-d880b82b42ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb386d9-2a23-442b-80bc-ce636db9df5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da7f4d5-158c-45b5-bff1-e4548d9f9b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ba079d-0a1f-487c-a3d7-f96c50c89dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b70291-1a0a-443c-8b77-dda2033f4bfa",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b11a220-39e6-4f88-87a2-943fce304fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3729972a-28fb-484b-8591-1acc8a78c805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d04629-1006-4241-9afa-3be695daa63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f09f64ab-2d1a-4d8b-a4a4-61d88946aa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e31f58c-d755-4746-ab12-bc085b387553",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bac1d4-d4c7-4e97-9ab1-c7f271b85346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35c4456-fef6-4ecc-81cf-8ebe0f818a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dddf4c0-2978-4b31-a478-4f72c44b5c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "043f41c6-62ba-47fc-ba10-edd94d002eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1345518d-2190-4f3d-8e2d-f94750e452e8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0980d69f-7493-4912-be97-857f7a1636dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813fd46e-316e-4cf1-9c09-11817491747b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e7ff6e-ad4d-4d4e-9a3a-1b4c0d5cccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b763270f-35fc-4300-a4f1-216253bec1ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e5b754a-f84d-4b92-a25a-72e799b06bf1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe1e5246-b445-447d-8849-fe9b8e8c8e5c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb69e4d-1cf0-4406-876e-b57ee719bc19",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c42dae-3ed5-49ce-b86d-d0e181f3ce7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4508736-e2a3-4118-92ea-ef57c4efa09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cac16ab-24eb-4ec0-b45b-ac28f38a2591"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ad45b24-752e-4e2a-acfd-5ec92b45f566",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f66fb5a5-4a2e-4cd8-88ff-5f2e1e8a8f33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4213062a-b2b3-4383-ad43-83014b488f01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fd98c2e-7cff-40e6-b4cc-389430ccc996"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f5307a7-e44d-440f-b079-43a21d5df572",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd3918ad-22fc-49b1-b197-99558e2983ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c773e832-0389-475b-b8d2-ab950814c6ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c8b17b6-0e5c-4508-80ab-b8addad6dfba"
            }
          }
        ]
      },
      {
        "id": "2145f0bb-c5ec-46b8-bd78-546f6eeab33a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "01f4a6e5-921e-4e81-9bd0-f321a4a1c087",
            "name": "Negative Testing",
            "item": [
              {
                "id": "290a93f6-65c5-4340-9cbb-4c6673daa3d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5cb6ccfc-43f7-4db3-ab35-fa50d7a632c2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362302a2-62c8-4b16-8139-12e252b36c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582afd18-fc42-495e-a613-5fd3244f169e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a73106-3a39-4583-879c-d1de92f416db",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c390a5-769b-4e66-83fe-10a73fa0932b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9655062-d5aa-4ab5-b0ce-3b9b13668772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2404d572-5c18-4385-8414-dd9fca9a35ad",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9865f1-9862-4e4d-b500-71111298b59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05edc235-d763-4d0a-b0e7-fbdebad2b9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f02f9f4-569b-43cb-bf6a-d470ead38456",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7b2bed-dfa7-482f-9f62-f7d75d5692f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe80c96e-c687-4cc0-8d71-cf2a27cff084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced4b1cf-2266-42dd-b3d7-26827853c17f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa116435-3d7c-4ba0-8aba-085d70428053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6719aa60-6d77-4f3d-b592-636a5f4a6d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80cae57-3c2d-42e5-987d-e0f9516f6378",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc1f28e-c7a9-458e-bc5d-877ea882af9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae582d48-97a4-48b9-9644-cee3dae406aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad9d291-5cf1-4651-8474-2b0adfbee248",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c0e460-deec-41f7-8f93-607cf091d9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01654110-267c-41d3-b70b-a813569b53b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3e1c56-93b2-49e7-b9c0-a0bab3589da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846fcad7-d492-4f48-8dff-2323a2fcbc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ad610a-9f11-4c57-a88d-06da325253f2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932489fe-3479-443e-be7b-7a676cce93d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e911979-a49e-4c06-8a59-e647fcee3bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe3bfb1-8eb9-473d-a65d-ecb571807fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77001c82-73d5-46cd-b45f-4ec1f72f9b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcf70f7-8671-4148-bb79-2769981a38c8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54e1003-0c87-4dd4-b883-1f71da903618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5b2524-d1b3-4c49-b7d7-b8d568e4a8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a5aa07-c528-49e0-9417-b2df9d36b234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f7bc3b-686b-4228-9bcf-5a1f85137152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9bec1a-a583-420f-a02a-55ca68475a96",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3d7083-b662-46d2-85d9-f3c7e13d9fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a714aae3-effe-4c76-997d-163b4a259a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61130fa4-1d79-481f-a35c-180f99b97959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0085b096-826d-4aaa-9fd3-21f20f693535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305f2819-5f52-43ab-a3a4-3c48807dbb9e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8efc69d-0b8a-4448-a2bc-5a9c2a87f45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4dd819-8131-4e7f-ac8c-4e15e6c5f585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bca926-2b50-440c-b531-7a56b46eaa08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f967f86d-c605-421a-9734-b1b848a62fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37812e29-c78e-4cee-bb0f-999d85126557",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36912e5-78e9-4588-b9c5-0a889855f2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b45c41-eb28-4ef4-9518-b23998efc437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce87775a-67c1-481a-9eed-18d1f9e60fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e9c08d-cb32-4055-bbc0-94afbd991b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d2150e-ec1b-4966-b3cb-78bab59fef2d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba7e64f-bfcb-40d6-b5a7-ca7f5f71dd16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca7a72b6-f769-4275-83f1-775508606307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9dd07f-8aca-43d8-ae2b-a287455d5dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a405943-bc14-4be8-b9b6-29172a11968d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216eb3b6-2a34-4c90-a1d3-80fbc1aa8f78",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c468d8-2c5f-446c-a458-f25d0a9da439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b89d8cf-11a6-4494-851b-7277f7fa9b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d4e8f9-79c0-4005-b1c2-a8fff4683a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115cf121-5cff-4559-910d-191c412844d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fbe704-6cf2-43b6-8927-fc25474df644",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043a4eb4-0c2c-4a92-880c-399f34af3e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ff4535-f1a1-49ce-8189-d7eed7590633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7597826-2be9-4cd2-8833-53ca01204cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd779ec4-fcb4-48e9-8100-cea42d9024e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3cd710-1af6-458b-bf02-ef10842723b7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e872145e-0ff5-4649-a392-6ac22cbcfe01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37887ab8-b3f9-43dd-a1f9-7d7effd50c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c11741b-a7a1-4aa3-9585-47d981f86252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834c3a78-c7ea-4a32-9205-85fdcbcb8a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ac111b-3e98-4e6e-b3a8-58e24391ad37",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d19238-e303-4b7d-afc4-8a21c3115405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04a7c8f-0f0e-45ea-94f9-1756f3a9efd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8f3e5d-48b3-4ec7-89d6-22b4cec25296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ddf705-f190-4e4d-b000-f7fbe216ff32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeab0c7f-de0f-4a03-8b98-e0bbeac9f0a4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2be0fe-d36a-437f-9f40-9d73bd7fd3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e87ceb-f983-4cec-abb7-eb0d327deb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88aebcaa-da5a-480e-9acb-9996c3532dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d2c4ba-b252-4b28-b8e6-8492f3de93ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b99b583-b245-42ce-af1b-5165b66742f1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0131e676-f9ea-490e-ba82-44bb779faa68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab41cc2-dfc4-4f17-980c-b1f507b8adcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5966e0b7-f2d1-42f9-a769-4cfa47a95f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9149f437-96ff-4545-afea-19609b8a28d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b26e93-3134-485e-9ed0-f490f76cc212",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eee6419-e8ec-4107-97df-dcbf9a0212ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2c313b-bc40-4e15-aa71-12b14cfca7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12688ed8-fa31-4158-a0af-72880892f30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d5017e-35cc-42ad-b3c5-a69b01ce3a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dadcbc7-3707-4101-8cdf-a9e28505d24d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a548df17-0d7b-4468-b6ff-dee0f16f41d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a61c042-3624-4283-9d65-2fa8d482f901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7f8e6b-88e2-4328-b86d-412781ab7261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fb48ae-0836-47dd-97a6-7a6feb80b576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25611380-421f-4c68-ab11-2cb405a5c365",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6037ce72-8035-4d15-bb9b-bc72669a2dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9a2662-5382-4ee1-b7a9-5b9186243747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c77cc5-b6af-4d91-ae1d-98a6ad20487d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab80459c-aec8-419a-a3b0-2db4206844e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acb24be-616e-40a8-ab05-a6ed5e771a3d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8461214a-8cf8-4b37-ad60-fdc2d147136a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5f888c-03c5-4215-af32-ced8a04d3a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa512e6-4c39-48cb-8369-9992769bfcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1cd483-0023-409d-8c5a-320c4ffe6cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3e209d-89c7-4c04-90e6-1d7f67cfc914",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d984e12b-77fb-4338-8226-d479170ba34c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4efbb28-e70d-4596-90c1-c522138b19d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9036bd48-1e6d-4e2d-9fd6-74648cc33dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fdf57d2-66c0-4f6e-97e6-69360a5540d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1e9d52-28e6-4b33-babc-9c5ed12c1bc0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cd315b-b224-4889-aff2-4629d6a60ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016fe3ae-6e44-4fe6-ba0d-177d056f66c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee683215-0360-449e-ae13-a02df3d6a7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f0ed81-6a3a-470f-9f3e-70e5144aa909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493d5941-5edc-4129-b72d-12829a2d2065",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34963526-6d56-4869-bf08-861820e034d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd167606-ffa3-4a7a-9612-8ecb6d1ebc0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f837bbae-9637-4eef-8238-5545cb588ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d9b990-d0da-42a1-adeb-c7f3de6ebefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5494a8c7-f666-4f95-80b8-6bc9381567da",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dd74e9-56a6-4e08-a149-b85d03e764d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1185f29e-3655-42b5-b0c8-ca1fcd9689bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40f3090-c140-44cb-b5ad-56cc5ba52cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a5db22-d032-4705-98b0-417c54d52bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bdd2d2-f43f-4dbc-a3ca-ddd6be88e69d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8466dae8-6985-4784-87d4-88a14deac833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7c6ced-730d-472e-847f-1eca6cd1cff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd18436b-6ca0-42e0-88c4-96dfcd55cf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6661d9ea-ea95-4db3-b8fb-5471ba706101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fddec0-b15f-4572-819e-a9fd26854f62",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad136564-5fa7-4a85-be3e-17ff495663e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d6ae4c-1be0-4c77-ab94-189987bb9f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c14defa-5161-4060-b222-36af8cd52ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f52856-2b00-4f67-b9ae-11cd594ee84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d7e3c0-ac34-4d42-857a-71471b3cc364",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530f621d-9cc6-4b53-b859-53788b6af319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd9dcd1-91fd-46d5-9cf9-618b3c46076a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e50ef42-0be4-4b87-9cf8-e41911db78cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e80258-537f-490b-9a8a-1a66cc80f24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef53145-134b-46d4-87bf-6f30510fe0b0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840e6b64-bfbe-4c9e-937f-1bd5c3e54a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e60f94-81c2-41b7-a9ad-30cffef2658b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eb7b94-a52a-4178-852a-f1612b793d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130ac499-c61f-4fe8-a49c-c83003d48a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bf8395-2d0e-448e-ae1a-814176300602",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92163493-bd0e-429b-9b3e-b05213c8e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd11143-028e-47d3-8c21-f0be510c4726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca265ef0-3b6d-4202-8b65-e9566b01bd2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cb2692-1700-4291-8b91-38de4588f0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67897211-b5c6-48e5-a590-efe9361fb238",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1e1bc0-46f1-4f93-a10d-eadbd062b843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a6bc8a-760f-4308-8e4f-dc5e985f02a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f70da3-6a08-4fbd-b238-5572eacc187f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4945c7ae-10d6-4f98-b889-8a0732d18a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d364c691-e3d8-4ca4-8440-6d5d82c43727",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4c89d0-ae92-4276-952a-70367f1a47ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4875056b-1884-4723-bc3b-1fb44653bd19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5875c07b-bcc1-4e16-8452-b69316fa1b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "decd53fc-ab85-43ab-a622-234cc2e337d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4101f429-0011-43f3-a58e-993505b74144",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97945264-ef44-495f-bf22-ab8b06c5b3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ef43ca-5a54-4579-8645-45f547a8180e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d6c8bd-5d73-4c72-a696-a5fd9ea94295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e284ac1-8825-4221-b1b8-d1d52254578b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9e350f-6801-4f02-a1c4-87182428f7af",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa30ca4-1440-4ca9-b668-4f87e900e462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00eecc5-8979-4dc9-a6ad-6157221d0ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72867d36-185a-4eb8-b79e-9ede4b968899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd786510-213a-4c5e-9df5-f0ffcc5c23b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf4f9c6-b024-4d66-9983-ed67661b75d1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b4612c-c4b4-4abf-b1af-fc973c9e1c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed276fa-2eef-4eb3-b697-118c392dd94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43891492-962c-45b7-bd44-622d0e5e6d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1223e66-1400-43eb-9353-16411815a9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effd330c-d237-4daf-b3cd-723b8b2f479c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c0f008-d8d0-43da-94f3-3a25caa17fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c583817d-0056-48d0-b6a0-8063130eb641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83201fb1-1509-46fe-886a-febb58511bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea0bf47-e2f2-4f57-a8ba-542063691495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a831f164-e2cc-49f2-9cad-9055e767be4c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6952964e-8ecc-46b6-b66d-0b4d86c0b67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8874c2b8-1c6c-4894-931b-118ce71f6877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350c5fc4-5b6e-4aa9-aba9-b7c6f0f7ee94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2ab908-dbaf-4ea9-b780-e4059eeaa3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029575dd-e670-485d-b7a0-f250f5bd1795",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eff85e-9315-4794-85b5-e8e8f8aaf6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3671482-984a-495d-a63f-4eba3e408674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f2a964-af30-4ef6-b704-627a487d6fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972e1535-b736-499f-a64a-334592083b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8445e7ef-42a3-417c-93c1-d87b696fd1db",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982cfe80-89b1-457a-961c-8231e9e31a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a384674-180f-429b-a2f2-bf99173c9b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd117e61-342b-48ec-abd1-09d99d6b5167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ac6458-0c6c-4398-96b9-70a4949a8546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba3abab-66d2-4175-9632-02bb4ba47ff5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1722af01-155f-43e6-b400-3bbd4552dc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62410728-19f3-4c6a-9d60-462a3b374811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff27206-dfa1-40df-87ba-c9bbd406341b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5714a2cb-7344-4bcb-b6f8-775f7274d4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7922857c-c3a0-4aca-a0b3-251bc8487e0c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575eafba-e0f9-4b6a-afb1-02c34d2f29cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348d5ce3-d80b-457a-a1db-05e2591c6d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5272c903-b395-4794-b6d1-d23441ae0ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa90b890-c723-4f54-97a4-612c2c762364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534fc148-7563-4761-a679-ebde8e412b4a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec750b9-57a4-43a1-81e4-f4e9f29b1133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2c11a9-b4fa-443a-ad22-403b1e227817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3d9e22-8138-4dad-9937-7a570e6eeebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab22d1b5-dcf2-493e-9e4a-6f453cf9c684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a210cc1-11c1-4894-9644-cdcb85a9b480",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa14c11-b4d2-4705-8ddf-0fc685cf0852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7543ed-64e2-4eb5-8d79-8c108341b583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d92c6e-aeb3-4c19-ae74-45de96e9ed18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c191f7-d466-4fd0-8b9f-0449a783d981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255f2983-4074-468d-a02c-7da90d873e22",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb0affa-76ab-4579-9d22-e268826f5e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c297c44f-f30d-474b-a012-36380a103be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afc44e0-e8c2-41e4-a0c9-f468ec822774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21c9b60-30dc-4d9d-8747-b08500bb66fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20618a97-ca72-4452-9ab2-40398b6af904",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbf689f-bff8-4d7b-bd9b-ce4d5a0aabab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3cabb5-1625-4130-8a19-ce4c9e3036a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b46fa2-8d32-42e2-b55f-afa82e4ed661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54238a5e-9ce1-42b7-9b39-02c0b47cc6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfdad0f-e232-45ac-9919-3d3b9ec9c1bf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b99b38e-fc31-4993-8a70-b64a6894f5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8874e4fc-0d26-4464-b0fc-a7c8cb6fbf75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8d52b4-0ace-4056-bee7-cdf348bcd0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba35e92-dd7f-46a7-a9a2-eb022e888e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b23a08-2543-4f39-9bd3-1d324c4eb49b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0769c0c-3425-4df4-8eb0-7c6dc4353cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88820f63-3c11-42f2-bd05-ccd2ac49fb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0965c5cf-6e75-44ab-a169-84068386dc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed51cedd-4f08-48f1-9d7d-e53b1d7e6a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f75521-428d-4b5d-99f2-e92073ea4119",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d7b54f-7e24-4445-9b87-a440a7e9a511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0014c68-0df6-4906-aa53-07869c363b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926da27f-9e13-4275-9c06-a60736d83e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d59cff-c733-4ea5-9963-25f6b17d3138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb15462b-9106-4716-891d-fefb1ae270b2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63298650-8463-4b96-bf52-af0a3b7573b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf3a582-9fc6-43e8-8cbe-209268b8d206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff91a02e-adca-46a1-99bd-5e5734a7a575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d832b76c-2540-4c92-a7e1-dd826666e933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4521bb4f-039e-4899-8d55-5e31751765b9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4394a80-33a7-4626-b5d3-7dd83fc1eb35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0245af-449a-46f5-ad96-97967848a1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d190acd-2cc3-49f3-be0b-64633df234b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526b3b5f-d151-4bac-b9a2-59545ad014e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a440de9-84ab-4ac3-8d93-804ee23c63f4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74691775-d595-42f7-8661-226bdd32f83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f1dd41-4429-414c-933e-df7e9cc324d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d55ede-5c82-4064-b46a-5fb6cd3229f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ed8d17-7aa9-4e72-b912-807be9405aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083e36e9-1362-4fee-898c-8494d66dfecd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20f2296-5b8b-454b-b689-655ef468c1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db12c748-7e70-4146-b383-a7fe19db348d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f310dd99-19eb-4216-9d36-c21b5e0097e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c80f18d-788c-4d98-bf6f-a775d2dcb831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62739413-1ce3-4727-9adc-a08452250fa0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfa293b-cd78-4ffc-9a6c-2b07eb5eb779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48553bc5-ff8d-4d72-a317-a2c617c6983a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db98f06-56d0-4a3b-bf01-5fc85183f8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c79413f-b054-4402-b8db-c3d426cd9853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750be2a8-2008-4b36-b02b-44a59dead076",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a2041e-cb2c-476d-8122-0bf88ea7f3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ce69b9-eeeb-4f2c-8a63-80c7deb6b65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807900b5-63cb-4d42-8381-43c02271fc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f5de15-9d68-4eea-ae05-d0624d322f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c22e7e-8f24-4011-b836-a0a6efed43eb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b793643-7a5a-48e9-9e20-31cdc2ae9005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76c365b-217e-4195-9d33-c9f1cf2455d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab569bb-4644-4ec2-b248-a3f7add5318d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c73987-8f4d-4108-8f54-48bca1c81a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d97b95e-81ff-4116-957b-c845f733ff5b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da5bdfd-f2cf-47c4-9fb7-64a5fa057fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b348df87-ecfc-4148-a762-4b4ad54f0f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0801dd-afd5-4792-bafd-6747e326d43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e92882-7793-4220-b2ee-ee302d6568e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a11678-5493-4b03-8533-ee683e59b071",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8e549e-ba9a-403a-bd1f-45a1016a9b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3787af-e57b-4130-a8c2-0801de866691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edd6fdb-2ff7-4955-bc1b-d1d7cd36d8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3e39b9-c10f-42dd-8e70-8e10fd2801f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b9de97-a4f5-4a6f-85d4-d25d41e57712",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16fdf8d-2b09-4de6-a932-34433282954c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b6b353-0ca5-47b5-a111-ef0e1a6b5115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647ef7e6-b74c-4282-89a6-e5e31634a570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13ad69f-109a-4e3e-bc10-17d55278ee13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cc4ec4-bae7-47b4-b57f-7933e429698c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d66c240-97b8-4777-987c-4b2de4bb51f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be41d22-7ecf-45dd-83c7-64db4b70a9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf21284-fc02-4f85-bad7-c3b8b517748b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb92f01-38d6-4af4-ab30-e5c982cb8782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba284633-6286-48f6-a504-510e2a8a9c0b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66602864-0e82-4343-8fff-7ababb16c00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c4f043-36b6-4d7b-b490-d43becce27e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d696047-8a4c-442b-8c31-7ded36cbe010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5700c068-adf5-46a8-ae67-24e1a83fd78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124ca676-581f-4692-8892-688969f91cce",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fadc6c4-c214-4d4c-a4d8-b98215e92ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1694a9-2f31-4495-9d95-e377a20e27e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584e3537-ef7e-4c9f-86d0-aa759528d50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf18d04e-d043-45f2-8e76-ff1631e7a872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989c2764-24f3-4129-8a93-4b6616386305",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5acd8b-4ae1-4f3e-ac1a-6f987a87fee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1612dcb-7e06-4ba3-9a05-8e01f2ba8aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f43e322-3ee6-4d34-977b-b3eedf4960bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1488a86-17eb-4944-87b9-0ec1ad62c4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0292d6-bfcf-4427-bf7e-da5c409cc636",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be843ea-486d-4821-849a-d2be3095af58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "864d1720-d20e-4c5e-924d-5fba04688bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e91431-e616-43e2-ad6c-cfd58fceda30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46936d28-bd0c-48f5-b61b-0c09e21e876b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9718a081-5dad-4d12-a5e4-1e35ce6eaac9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373d68ac-7efc-485f-8170-eed297cccbba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b646c6a-42a2-465e-952e-a4e714342fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feffaa1a-4a5c-46c5-905a-a2ea935fa2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a430323c-a46e-4f54-bacf-213100d93809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4bd303-00a6-47fd-aa39-48eaf7a59200",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7800c92a-11ce-4351-9715-232eb391ce60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a7d5bd-5c12-402b-9bb8-8fd0f52a3a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e749aa3e-3bc8-47f9-8b07-b12b1be0f43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe51d81-a7f4-4f2c-86a6-a35340d3817a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25757167-ad32-47ff-a538-d8656cec7a8b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a58d0ee-25b4-4a98-8480-d660da63c3ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278c3c41-633c-4240-9cda-8a7a2e86c000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e98623-c1ca-462c-ada1-94d4ecf15501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99380523-391d-43c7-bf83-6ccbb8979121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c02b82-df72-4f30-95cc-d537a4da5049",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2321b20e-ef1f-43d9-aa09-efec29d6693c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dcbc996-0de3-4108-881a-425c964f639e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b775158c-5f22-4a57-857d-1eae8e6a151e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37e2eaf-3343-4c2b-b02c-413da4ffb102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a73579-0d21-4d91-ba3a-1df2719152db",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd01bfa3-8381-4796-bc26-9e484b7a4af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c7c800-1d37-455d-9078-c30e06e33dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a59c8a-4e40-47f5-b211-e3fa61b544d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec8898b-37f0-40d4-aa73-d2a3383ed1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71aed9e-8d33-4400-8baa-2a5fde415067",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee9df49-2cad-4ed4-aaac-b1b806fef1b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936e6587-059d-4a7c-b37e-7c7610c52a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6b4a69-156b-4ae8-adf5-7cf583afc854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a98f0d-39cf-457a-bd2b-407760fb3713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ecfdbf-b1ab-4b1c-b63b-47f3920c4f10",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b4d89e-b821-4401-93b7-a3c95b241ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d0b3ad-9663-4b85-aacd-aabaf288ae50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8718776d-c8e4-4f7c-a1bc-56de1eee264f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e095281-7fb6-4d96-af1d-0528c927dce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4705bfff-e9a5-479a-8518-3e8ed56ab699",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaad07f-dccd-48ef-bfbf-a81851660cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2914131-57cc-4c7f-a535-803824b7babc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058a46d7-14f2-4ee6-b241-973a704ff840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66b3bdf-ea13-440a-aa48-167c8ede88ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173a4c75-f54b-4cca-a41a-a66875a6e920",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47f95e8-2f27-420c-b8e2-1ba5d4c20a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c108d33d-55ca-4acf-95da-a2250f376917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b66925-1fab-4706-ad24-009ec0229855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef3647d-4d66-4fca-a830-c69f031c1784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e1b400-e81d-4b68-a66f-6631c6b979a4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f601d51c-e972-4984-8577-277e774714b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bcf5f46-16a8-41c7-b3d8-c20f539005fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8abaeb1-559c-4aa8-a559-e31d9a162615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807536bd-6012-4de9-89fe-bebc23c164e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8806ee0f-2e38-4b32-bb4a-62e0cba33853",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc4ca0d-01b4-49b4-b58a-2fc603fb77a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2d6c0e-b925-43c5-9913-a6eedc1ace37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7e6571-406a-4b96-b9db-7a7fa694144c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2c7f3a-3f01-4fdf-bda1-4866356b4815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a22274-bd51-4368-9d43-9d0b58393479",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf179ec2-6882-4fa8-87a4-e2bcab9823b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e2233e-30f8-4d5b-8792-2a2dc4da4baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c8c49d-b475-49bf-a08a-dc88543bd219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efce0ac5-eb70-470a-91b9-7f87e9103b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6839fb0-81b0-4ec5-8ad1-b89a2436ec46",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebe8640-0814-4264-941c-0316e5ee23c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92c92795-8b27-42de-9c5d-bdcfa888cf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fa7d5b-d3bf-457a-96ff-18ece1500bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65916ef0-2084-4e49-8d91-b13489bc0149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333e7878-c8ad-44fe-932a-9418f30f093a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a217718-4edd-4e19-91e6-2d0a0efc60cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1143517d-624f-4a32-9721-e7105d59cfa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7290c7-1ed4-4f14-a17a-ce29d645829b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a5de4b-290e-4125-bf09-7d576f4c7f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7698aea0-a79b-4efd-a6fe-4800ed8dd53e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a020d36-7324-4046-a3f3-ef34051717d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312ac5c8-2bff-4f37-87af-9b89d7dda0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0835246c-ed0f-4a31-9150-9a7183936bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8fedd1-0a16-4f6a-be60-d565300bb48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be46eff-49a8-4865-8ca8-db96121c826b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a71cea-2981-4637-81e0-250dbb7d5ef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a13d987-cb85-40cb-b4b7-41dee2673aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb60ab49-5e9e-4483-b8e9-1a732d9b13b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd667623-b826-44e2-a0a0-e2496c98fd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c276bb5-6e9d-4337-b1e6-ec918792b764",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b7caf2-b444-4f1d-bf98-57548774d2ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246df4e8-88b6-4314-916b-701fca2a3dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deabf84c-9f63-4714-a793-34a161de4a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7971d27-7c0f-45d7-ae94-671242fa8455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fb5fd6-95da-4655-adc7-e8d935ac02e4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63928f67-e8d6-4ebf-88bc-fe41442f44f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e264854-614c-4f3c-824a-1cd30e0e1edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da9eec4-94e7-4663-b421-c9359521dfaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f56591-d074-4fef-925d-8b5dd584b67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0308228b-6277-4705-8125-331630df04a3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c66319b-d2dd-4493-b335-7a3ebc27de65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85974f8f-e855-44af-ba13-eaa683456075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775d2424-17b4-41f0-943d-15a3056dc5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7216965-7c90-44a0-8c81-43230b7c0700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14bb349-5e5a-417b-bda0-c14a7101873b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28825f8d-f5ef-4875-befa-f72fb101cc8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7608825d-611b-4571-86de-0f419ac11034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e5159e-f6c0-4b90-a1c1-de1ecfbf314f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1885138-b10f-4dd1-a832-dc5276595fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05058b2c-21a0-4e9b-991d-d8e7b184600d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25c5c45-af26-4c23-affa-45e3975da4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf4facf-27d9-4d8e-8df8-b7e1ceb0ace3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb83fff3-40f8-45ef-951b-8a670728574c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797601bc-58d6-455e-8494-840c89814f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2db3484-4122-45c1-b5c1-7c596569c3be",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db3c879-cdd3-4aa4-8f99-b26f67d691fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0e1fe3-e438-4586-973f-3319d4b4208a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098a6ae4-75b2-4ef7-9f66-e0dbef79e449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbaf0cf-71fe-4509-86b0-15515a74c9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4091646c-9331-4599-a9d6-318ea4b36a99",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd01358-1ac4-454d-953c-4cd5c92a24bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d19163a-b87e-49b7-b415-fb827dbc84ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d4ffac-9ef5-4d4b-bd4d-4951db91c6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0023de66-1f17-4cdb-98ca-a8a993d113b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b6e203-42e9-43b4-9399-dc2ec9ccc8db",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44542a36-8791-4982-8d35-97a1cd039fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da2b4ea2-188a-4297-8d92-888e5fb2dfe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2544512-6d42-439c-b6a9-ec7ca4d5e6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef63e4b-de1f-427b-939b-c36eb291958d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5728dc27-8157-475a-9565-a7c006843780",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4077f750-8b1a-4bb9-9be5-524ea5975e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c005c4ab-dfac-4f83-98ba-c5dc68ced6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4cedca-b9fd-43b7-bfde-894b6f2f0c68",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368ac735-b134-4b97-8eee-4e13e4834533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d518a7d7-2702-4038-8157-469a615ebc25",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f31e04-816d-4620-b08e-f2347470374c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e97e66-561c-4c34-b5e7-84ef4878fa76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3eed7b-9258-46ee-b141-be0d19e3eb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3767ef5b-cafa-4ee3-ae5d-71419f793896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bea276b-6f9b-4c12-a192-ef5b47bbc83a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf8d69d-4a23-4ba4-a496-aaa4b90d5772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1263e2a-677c-4a93-b072-63fdd4ce7032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdddd51-ed64-41e0-a2d2-8fd2c5e40cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe146af-fdd8-468a-8a49-9a10e173b607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b0d9ab-f4ee-46ac-83a3-a3a049a50708",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf827863-e17f-4373-91c7-10416e3bae27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88bdc3cb-8eb0-42ee-8910-e5e754712400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2482bb9-6219-4a07-a9ec-945240695555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4c5375-fef8-44fd-9230-fb8972a1c776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b5e745-f550-4e89-a1a4-5240c6f3fa66",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed0f5a2-9e61-4a00-9676-c96a1be4109f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3accc025-1b6e-449b-8e6d-0492c01319b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9449d3-c0cd-4df1-83bb-52c6cc74ccfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d9d486-cb7b-4479-9d9f-b6d75f30bbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb2a322-1fee-4fc5-9f95-0ea932dcf95e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a450298d-2ce1-49bd-a357-6ad4f43b4483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b8b27e1-7b57-4d89-903f-4ca4f54904af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c92a9b-d679-4acb-a394-6c628d13bb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b000d5-3945-463a-bb7c-e4cdaf265cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83ace0b-9740-4cf8-8cd2-b3726dff1e57",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb44feb6-f2ed-40f6-8dde-db15e8e1a3a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e7c2ee0-2959-4d81-8a5c-70d7c6ae99de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b0cadc-c258-4603-8da3-55be8eebfe6d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc1c1cc-8355-4ed6-85ff-dbf662e2bdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b7e913-72a0-4517-9415-8b54911a3419",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b368a2db-ee36-4921-b36d-0186e8679c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9f86b2-2095-4f72-8e8b-b6b236fdd6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba634d81-880b-4fe9-89a9-1fdc23f9667f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503697e6-b5b2-497d-ba75-1bfc19b44b7a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a1f1b9e-670c-4f3b-aed4-41995f94b1d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "305991f3-d4d2-4a7a-be7c-462f0f5a80c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e88400a-a562-4880-ae65-2135788ec158",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37741364-2e94-4795-8e79-d2eb3d7a7d47"
                    }
                  }
                ]
              },
              {
                "id": "f1d2f704-6bdc-4b37-b9f3-6438d58721cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53ee5a2c-2a47-41c9-963a-435fd0f481ca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936ab026-492b-4511-804f-39e01b0a8bb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f21c063a-71ff-4cff-858f-111cb64d8a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f17f406-9337-4e29-95f5-f2b4707d40b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fddcb18b-2b1c-4916-8525-8becb09fef42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92ada1da-0650-4aa4-9930-3aa1f0c2d27b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c979f058-5a79-4d16-bca6-419048653a45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eca3e6c-2ad4-4d16-b671-ac263fcf8919",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01954e46-92eb-494c-9b97-11eba9a0cb70"
                    }
                  }
                ]
              },
              {
                "id": "d740d9e7-16c2-41d6-844b-7014927f8aa8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9b36340d-b48c-4085-b2bd-bbad0108f0be",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bd1f24-2455-4cab-a5f2-f9e87834ccdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0284804b-286e-4bbc-b77a-da492b0f2436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8468fff0-1fc5-41f4-afba-2d9cc316db8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db0b46f-9ce7-46dd-96fd-e0680bb921cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0fc4b98b-2502-4a4e-99dd-2806773efd7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81ce90fb-ebd3-4fa8-bb8f-1d9cdae35e07",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58bdd150-5490-4959-a0bb-15c4219adedd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "04de33f9-7f4f-4a2d-8a13-36b66391d8b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d3d82cb-0376-402e-917b-d7e64b42bfe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e31d5974-dfb5-4f4a-96dd-f372da7bb86e"
                    }
                  }
                ]
              },
              {
                "id": "34dd70f7-28bc-432d-a0bd-388c1dcc3af5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33930eb3-38da-40f4-b10d-170efc091fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f62e5c92-f83d-42fe-85c5-ed533ec8aef9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d706e42b-bb94-4610-ad20-33ca015cdf70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10d22f7c-bade-477f-a3a2-a609de223d38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4eb1d46f-a94a-420a-9a46-3064ac617f87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "040b2f7e-b1af-4451-bb5a-145c736bbdec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cc77bfa-b414-4c6d-a6f6-24ed0b5a2074",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e49f05c-eb18-4977-965a-4d32d7243549"
            }
          }
        ]
      },
      {
        "id": "aae791f1-c4dd-4b66-87ab-58421a1945ae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "104d806b-0a90-4cd5-a916-060cc9f660b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f2836e3-3de2-49f2-9143-61ea61078f94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c49d3fb2-63ff-4de9-8f16-a7c2b78654c2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396f716c-9426-4ecc-904d-f8f6679d22a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d0e472ab-1b7a-4dd5-a8d5-1b0b2cae5463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f82cd5-b4fd-4af5-91e2-aed07d89cf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01be1e14-71d9-4eea-980e-10352ea53a62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95100039-d7a8-4632-b1d9-3b1e4d0f61c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a68bbc15-bf4c-4886-88d0-ac3d10637245"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5179232-f45d-4cdd-b783-b52527165559",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12b2f1c8-fcf5-4b3c-ad09-1e43194b2a0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0259574b-be02-4f16-8399-5d3f7a8fc5f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1344a700-3604-44eb-86fc-af7e88b2f50f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda9125a-470a-4f63-8d0f-03969f0ef02c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3146ebc-b1a3-4276-9ac7-8f0a402964fe"
            }
          }
        ]
      },
      {
        "id": "50127df7-e3e2-4aaa-b266-69659a786b44",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f686ed30-0156-410b-97e5-639a7cb2630a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e0b8498-8111-4834-9793-53975b2ef626",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6016688-e5d2-44e2-ba63-84bcb8b1b0f0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b400ee22-4d3d-4e67-bd73-95aa874c9356",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f472d38b-b442-4cb9-8ae9-a9b1b0e46c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d95d28-5984-4a6f-862f-fa96a57039ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e806fcd-3ed9-4b7a-a56a-80f80922cc2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e66f032-c3a1-474c-8052-0a40e3f3cde0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3620cc9a-b54e-4b6d-8901-a1076a35ce43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e05361ff-79fa-4bf4-a6df-3547bc9a0ad4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fc2cb8e-ec9f-4af4-b63e-9afdc746c6ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b72d8961-b57a-4ee3-aca3-ea8db4873080",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "028065fd-01b4-41de-9fb7-4b33d42ae9cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8e3d81f-5482-4c4a-9672-4fa31594875f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "297603ea-2b9e-4bd5-a8c7-c9aa98f8b087"
            }
          }
        ]
      },
      {
        "id": "ffa28fa2-c517-4098-9975-e55608c476d1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e0172c70-2223-49cd-b65b-07b319caa2d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "440c9af5-27c9-460c-b2ea-447f99b7b66c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a284c067-db04-42f9-9eb2-cc069b0f6634",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c6d37f-8f56-4db4-8188-6b9a33e2c4d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc4379e6-a6fa-44be-b9cf-207227969c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fbe095-228c-4bcc-b862-0254e3c381c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6f4e821-a6fb-41e0-a782-fda8817ed9b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3144247d-c4d4-4ae3-8745-b0b93137a202",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8465360a-0c50-4288-b522-552cc0f0a184"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18b98dcd-4d8a-4126-a896-4bfd4bba4c16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "313b2ee7-8c44-4a12-b345-916ea45356f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39f46802-7da4-412a-8341-bcdad6fd8711",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce9bb4cc-eabd-4e13-ab96-85ae0584fd84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26df4db7-9d7e-4a6c-8ca5-8b62ab5d1ae5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2aa3f72-8e88-464e-8a21-f7ce242a0333"
            }
          }
        ]
      },
      {
        "id": "1b70659e-618d-426d-9a08-e017bcc7a1b8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ffdcf3b-3d26-414c-b020-f08f1715c022",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc6b9caa-9813-4819-a094-89ad533fb21b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "28212c47-6d29-41a6-985d-8070af1b6c5a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cfab4f7-0e4e-4a42-853b-5cd0a8861a39",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0a513a3-ed6b-41fa-81ba-236eb9a30b92",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 417.18947368421055,
      "responseMin": 9,
      "responseMax": 12033,
      "responseSd": 1472.7116697932865,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698280366099,
      "completed": 1698280499425
    },
    "executions": [
      {
        "id": "22c36000-a320-405d-975a-b3576d7f0431",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5e9daf5a-f4f6-457e-bf84-14530d6befc2",
          "httpRequestId": "fb217a75-14a9-473d-b5d6-b44ff5db629d"
        },
        "item": {
          "id": "22c36000-a320-405d-975a-b3576d7f0431",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "10e8accb-f1d2-476a-90d2-2dcf7619ee90",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "1096b1b0-58a6-4e48-ba8d-63c6b4a2d713",
        "cursor": {
          "ref": "69998fa1-0cbf-41ae-8520-2d43f0b08d65",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "097a93fa-9739-4a97-b706-973a2fbf6ca2"
        },
        "item": {
          "id": "1096b1b0-58a6-4e48-ba8d-63c6b4a2d713",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6bf299c3-3fb1-4ac2-ba31-8d8a8bb9c69b",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "01746418-0e5d-449b-ae0c-de97609ec7ca",
        "cursor": {
          "ref": "6a9cefe6-7b0b-4c6c-8049-67ca40a27f81",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b03e58de-8a02-45e0-a932-628d074d7cdb"
        },
        "item": {
          "id": "01746418-0e5d-449b-ae0c-de97609ec7ca",
          "name": "did_json"
        },
        "response": {
          "id": "f8b1b14e-9fd1-45f2-9406-3dad7c82dae0",
          "status": "OK",
          "code": 200,
          "responseTime": 2039,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044acf4a-f6a3-43c5-9ef9-9c0aca035465",
        "cursor": {
          "ref": "a2bb2691-e224-4cdc-b754-25a7af10d8a9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "75533886-86c5-4174-ae46-30561a8845b2"
        },
        "item": {
          "id": "044acf4a-f6a3-43c5-9ef9-9c0aca035465",
          "name": "did:invalid"
        },
        "response": {
          "id": "5ef382b0-fbad-4039-b977-1ca70b654ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044acf4a-f6a3-43c5-9ef9-9c0aca035465",
        "cursor": {
          "ref": "a2bb2691-e224-4cdc-b754-25a7af10d8a9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "75533886-86c5-4174-ae46-30561a8845b2"
        },
        "item": {
          "id": "044acf4a-f6a3-43c5-9ef9-9c0aca035465",
          "name": "did:invalid"
        },
        "response": {
          "id": "5ef382b0-fbad-4039-b977-1ca70b654ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3a1fdf-1510-4916-9181-bebb3496272c",
        "cursor": {
          "ref": "e8877155-ab2e-4c7e-9b76-fdb5c0d7a499",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "17cf92a4-622e-4ec0-b94f-07da27ea52f5"
        },
        "item": {
          "id": "aa3a1fdf-1510-4916-9181-bebb3496272c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "aa7e2b2e-24e1-44ea-bb3b-a35141c5f22b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 365,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d459b89-acd9-4f23-b3ce-0f60540a32c9",
        "cursor": {
          "ref": "ac9ff397-d136-4459-bc7a-ae73fc3b9469",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2b09e959-20b6-45ba-bbdc-19815a1ba4fd"
        },
        "item": {
          "id": "6d459b89-acd9-4f23-b3ce-0f60540a32c9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "191b27b2-bc9f-4d0a-ad3c-465a81ad40da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 323,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d96a039-3d00-4ae1-a9a6-79fff2b185fb",
        "cursor": {
          "ref": "90e210ce-9be5-46fa-ba73-87a8627e6b79",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4a725703-6f68-45db-88c0-ee921d047883"
        },
        "item": {
          "id": "0d96a039-3d00-4ae1-a9a6-79fff2b185fb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6833081b-aa33-4749-9bf5-041645eb262b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff4d5ef-d67f-49c6-834b-dcbe52ecc357",
        "cursor": {
          "ref": "a5616c22-2e41-45e5-8957-12c6c15a09d6",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0ff856c-b4f7-4a17-a848-407be072be8b"
        },
        "item": {
          "id": "fff4d5ef-d67f-49c6-834b-dcbe52ecc357",
          "name": "identifiers"
        },
        "response": {
          "id": "b4d14c00-0fc7-4227-8a6c-ac4723313f3d",
          "status": "OK",
          "code": 200,
          "responseTime": 1617,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea6d441-03c3-4a66-aeb6-0e584da1dc89",
        "cursor": {
          "ref": "03f872b7-3e80-4954-8786-46fa4fd7e8bb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "374bc7f8-97bb-4bd5-8245-7c788ae2e351"
        },
        "item": {
          "id": "5ea6d441-03c3-4a66-aeb6-0e584da1dc89",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4be343c0-fdae-4c7a-b11c-bdffe0a12943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112db933-9d4e-4708-9e14-303d024d3bd0",
        "cursor": {
          "ref": "8a3e4b5f-a9dc-4eae-b887-64cb86da2e7a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "84c77fd7-dcb0-41f9-922b-cbc512b7e59d"
        },
        "item": {
          "id": "112db933-9d4e-4708-9e14-303d024d3bd0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "759ad480-242f-4c1d-81c6-407bede83ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e73bc4-5079-48ba-b481-6095526f5419",
        "cursor": {
          "ref": "b0ce5116-17d4-403f-8b1d-53a67d686294",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d86a8678-32e5-4383-b1a3-d615c6093012"
        },
        "item": {
          "id": "e5e73bc4-5079-48ba-b481-6095526f5419",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2515f666-496f-40a8-948e-8b11c8f3eb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d93a414-a654-452f-bea8-7de5ee380582",
        "cursor": {
          "ref": "9f192b4b-25a4-448c-bc10-2d8f5a283016",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "53532921-acb5-4ce2-8f73-0815ecb78df4"
        },
        "item": {
          "id": "1d93a414-a654-452f-bea8-7de5ee380582",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2d1f5be1-9a1d-46d5-a9fd-e83a7d9bad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3becc86b-a827-4217-a675-cc23ed8593a4",
        "cursor": {
          "ref": "16aa1d67-63c9-4010-99a1-325361e7f1fe",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b8c32b62-3f56-4bbd-bae8-f0cf2fd3ca2b"
        },
        "item": {
          "id": "3becc86b-a827-4217-a675-cc23ed8593a4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "27e8efdb-9ae6-4d72-9033-c7fedfacb381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab273d2-a685-4f04-b7d4-5f1cb8cda555",
        "cursor": {
          "ref": "2029882e-7fe1-46d4-9cc1-21ddbe576a5c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8c05d255-0fcc-4f8d-810f-b512a060d922"
        },
        "item": {
          "id": "5ab273d2-a685-4f04-b7d4-5f1cb8cda555",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "65f589b3-e2f5-493e-a1cb-51e42128ca94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9473ec02-923e-43d5-ae5f-21d067b786ea",
        "cursor": {
          "ref": "a75941f9-0995-416c-9fad-6eeaf953f08a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "85e55181-a870-4069-a14b-b7b7b22ae514"
        },
        "item": {
          "id": "9473ec02-923e-43d5-ae5f-21d067b786ea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ed6a8868-3c1e-403a-8388-dc6d1788f711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5ab5af-a1c1-4ccf-8b1e-fa25fc4495e9",
        "cursor": {
          "ref": "7ea54505-48e0-45ec-ac30-c429dd4d3880",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9e16037c-ec98-4aad-817f-e9aac52c4860"
        },
        "item": {
          "id": "7d5ab5af-a1c1-4ccf-8b1e-fa25fc4495e9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f9a3d8bc-8160-4430-8cdd-16482d2062ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb750264-bde2-40fd-a880-2bdca6caba66",
        "cursor": {
          "ref": "f8d4b4b0-51fc-4a40-b443-308c10b22a68",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cd9fba98-c5a5-4552-99da-fcf3f414f163"
        },
        "item": {
          "id": "eb750264-bde2-40fd-a880-2bdca6caba66",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d61d1dda-0f9a-4a35-a5fb-4a61e7fd9412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a36b417-e3e6-4d87-9abd-63ab6fdb1036",
        "cursor": {
          "ref": "4d4c9926-a665-4217-95ff-f852056ab58c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cbb5a9cd-3a4c-4c87-aebb-25c3e19de27c"
        },
        "item": {
          "id": "4a36b417-e3e6-4d87-9abd-63ab6fdb1036",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0b238cd1-ae16-4ffc-9e3b-2b8d93bd9317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbab2466-ba19-4e2e-a411-d1538558dd22",
        "cursor": {
          "ref": "f00af2f4-ab58-4099-b7f8-47c30c590503",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f04bb1a0-550a-4445-b65a-fb2cfee3e754"
        },
        "item": {
          "id": "fbab2466-ba19-4e2e-a411-d1538558dd22",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b4e674bf-ed9c-4e8e-8391-7c71da40d4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad8d9f9-246a-4f22-827b-d4540e5d955d",
        "cursor": {
          "ref": "6b6422ec-c76d-4c6d-b35b-d23c2c8b7fd1",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f288afc4-f5ee-45b9-80c1-c88aa0e24285"
        },
        "item": {
          "id": "cad8d9f9-246a-4f22-827b-d4540e5d955d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "370a74c2-01a6-4559-bb7d-79d3e50ac96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c899f67-5eb5-4b57-a69b-ff9dff9f9adb",
        "cursor": {
          "ref": "d0c5c6cb-5d26-4187-85ea-16d43307128a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7ba8aa0e-4d10-4663-a4df-5cfb60779ec7"
        },
        "item": {
          "id": "0c899f67-5eb5-4b57-a69b-ff9dff9f9adb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1288e886-c81a-4267-a917-d65ebff453ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110b4260-880d-48e5-8133-b9db8f4fe67b",
        "cursor": {
          "ref": "8e12b511-f258-41d4-a959-eb84474f5da7",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "62df8d6d-244a-4298-a70b-19813057fcd8"
        },
        "item": {
          "id": "110b4260-880d-48e5-8133-b9db8f4fe67b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "11715ecb-dbef-489e-9de2-f8070255298d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8d74ad-29c9-4be3-824a-d0849b3889c5",
        "cursor": {
          "ref": "5d61c42f-a418-411b-844e-d94b3eac92c8",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1e073ce6-2696-4b3f-9943-1dd8763df193"
        },
        "item": {
          "id": "8d8d74ad-29c9-4be3-824a-d0849b3889c5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9e8c8c03-d97e-4b6e-a2f2-db678d64a4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff89e3d-47cf-4b44-858c-c93592de04ce",
        "cursor": {
          "ref": "9774749f-31e2-4ebf-acd2-8efbc8c1d793",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e9255dd-9168-4a6e-aa9e-ab60c79d37b8"
        },
        "item": {
          "id": "7ff89e3d-47cf-4b44-858c-c93592de04ce",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5fc85dd4-a309-4981-ab02-4f70f191648a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9365ac57-00eb-40a8-8ea9-aaf87ea86357",
        "cursor": {
          "ref": "c557a106-582b-4a01-abef-fffb7f7881e6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9fe0811f-5bea-4e78-9f2f-7d0bd5d0a462"
        },
        "item": {
          "id": "9365ac57-00eb-40a8-8ea9-aaf87ea86357",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "42b51f0b-7024-435d-bd27-c90924f5372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc4fa03-041d-47e4-9fca-5169c848df6f",
        "cursor": {
          "ref": "0912a60e-9482-48cc-b369-652a9f8b869a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "439fad7d-9671-4c03-8fca-d45b9eaba8ad"
        },
        "item": {
          "id": "9cc4fa03-041d-47e4-9fca-5169c848df6f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ff11bbd4-5149-4835-8b44-90f88d8576f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c492524d-bd09-47af-92f3-8abf60cebe55",
        "cursor": {
          "ref": "e6df53ec-4b7a-4b0b-a5a1-19edb33f86c4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7375821f-a2ec-4865-abb0-4eda21626c8d"
        },
        "item": {
          "id": "c492524d-bd09-47af-92f3-8abf60cebe55",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d7a9b0a9-351e-45f8-be47-4d6030bf3bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5190fc12-e104-488f-8e69-6d7dec68d8f7",
        "cursor": {
          "ref": "eb2e3c3e-dab0-45ed-8681-d18e5318f527",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ebee4a69-d7ab-43a9-8644-35ae55ea93b1"
        },
        "item": {
          "id": "5190fc12-e104-488f-8e69-6d7dec68d8f7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c136cead-302c-4892-a7ed-09a44f8d4657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f739297-e742-43c4-8b13-b459d6f5a65f",
        "cursor": {
          "ref": "1f88a991-2fb8-4403-b34b-a86cda043792",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3166e525-18fd-4994-bc7c-408fa90f7ed0"
        },
        "item": {
          "id": "3f739297-e742-43c4-8b13-b459d6f5a65f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f310da48-713c-4d1e-a70e-235c3805a9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0111f296-43b7-43a0-900b-3af67c00aec3",
        "cursor": {
          "ref": "f6b4fef6-4c65-4cc6-828f-6dafa18652c4",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ef4d1aa1-f1d8-4e5b-8fc2-3019347a40ec"
        },
        "item": {
          "id": "0111f296-43b7-43a0-900b-3af67c00aec3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f62caced-def5-4858-9aa5-b7c8f633b5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f6e546-a098-42bc-98ac-2f90b94f4d61",
        "cursor": {
          "ref": "a8a46910-9055-40da-9ce6-552a8220c61e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "360a9fd2-b06c-4202-83f8-a3d99b251695"
        },
        "item": {
          "id": "f8f6e546-a098-42bc-98ac-2f90b94f4d61",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4079b9c5-0366-4a3e-94a2-440df8c815fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865f4626-8fb3-4e2b-83a9-092d2ab00e28",
        "cursor": {
          "ref": "74aaf752-a340-40ba-9ef5-98fbc23e13b2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b32c944b-5e74-47c6-b067-78dde4a6f310"
        },
        "item": {
          "id": "865f4626-8fb3-4e2b-83a9-092d2ab00e28",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "052307a0-d41d-433e-aed6-fdc216b3a0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a3ca43-ce15-4847-96d7-53068604aaa2",
        "cursor": {
          "ref": "76e2bf06-bbab-4b56-9938-aaa9f4e4f963",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ba457d4e-be29-4b53-896b-8979958a831a"
        },
        "item": {
          "id": "59a3ca43-ce15-4847-96d7-53068604aaa2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0ded96ca-6a20-46a4-94c4-f6059dd87e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abd45f1-57b0-4a6a-a6d1-e961660a0a98",
        "cursor": {
          "ref": "40ed5630-dc20-48c9-9af3-41ed744b8a05",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1253603b-5e5a-4b5d-9d6c-a265743f7058"
        },
        "item": {
          "id": "1abd45f1-57b0-4a6a-a6d1-e961660a0a98",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7aa53b1b-9890-411f-8aff-9fff21d556e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c9e078-54c1-4462-914a-f86450541379",
        "cursor": {
          "ref": "ac530a50-9027-405d-9cce-f396edfd1f87",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "19cca86d-a575-4cd5-8048-11c1cec1c762"
        },
        "item": {
          "id": "01c9e078-54c1-4462-914a-f86450541379",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b390ef5a-cefe-4094-91f8-2fa8e09154b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf130d92-b989-4f67-be46-2544a5c0a7e2",
        "cursor": {
          "ref": "0af09af4-505c-466a-8d52-4d4a8ef2f669",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3627aee3-e272-4181-aa36-38f103671507"
        },
        "item": {
          "id": "cf130d92-b989-4f67-be46-2544a5c0a7e2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b8fc2c67-b122-4750-a62b-0361bbea2542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b41959c-300a-484d-af38-d502185f9bbc",
        "cursor": {
          "ref": "cae82e2a-c080-4f5c-b47a-59fe1b5de22a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1985aa5a-358e-4fa8-8ba0-1c62a80ce25e"
        },
        "item": {
          "id": "6b41959c-300a-484d-af38-d502185f9bbc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "628707a8-d04e-4569-a843-0019bdbbb597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35ab43d-161c-4dcc-beea-032f392ceffd",
        "cursor": {
          "ref": "8bc16920-a0f6-4c08-b81a-1436a1c4313f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "aa1beb11-6fe8-45f8-9654-f54708131f9c"
        },
        "item": {
          "id": "a35ab43d-161c-4dcc-beea-032f392ceffd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "67b7b8ab-3b87-47c0-8fc7-d940163e102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29464c40-39e2-43ac-97c2-5fb9ee58035d",
        "cursor": {
          "ref": "54af9f1c-178f-46d8-b46e-084fc9f09a08",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "597d7a7a-73e1-4652-8303-bf67df0f89df"
        },
        "item": {
          "id": "29464c40-39e2-43ac-97c2-5fb9ee58035d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "09253fa2-1bd1-4089-83ec-e4bbc9998211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b398f4ed-4c45-4fca-8a00-4136c0eaf033",
        "cursor": {
          "ref": "b328cfee-4aac-4388-9564-dd2af01f90ac",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "541d621d-3923-478f-986a-e9207ef99424"
        },
        "item": {
          "id": "b398f4ed-4c45-4fca-8a00-4136c0eaf033",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f176de12-32ae-4109-bead-4ddc33237666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e598a1-4133-4141-8670-8d841a373717",
        "cursor": {
          "ref": "1a7080e5-f4ec-4ab8-8f29-7443edb6526f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0aeaf44a-0ef8-447e-9187-ac6fadd02025"
        },
        "item": {
          "id": "c1e598a1-4133-4141-8670-8d841a373717",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ec93da7a-7a4a-4241-8ee5-c12b0384254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae41766-a3d5-4f8b-94e9-a4ac28d7aab7",
        "cursor": {
          "ref": "ccd18af5-33d1-4a42-b7d8-c178da05f519",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "55af5aa9-0bf1-430d-8e92-cd0cdae421cf"
        },
        "item": {
          "id": "2ae41766-a3d5-4f8b-94e9-a4ac28d7aab7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "598ffede-641d-48ae-8c78-cd2cf3ee95e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1c400d-9c42-4155-aa88-45df5d1675be",
        "cursor": {
          "ref": "c28be065-620d-4a4f-82d1-28b3d26b268c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5a5fab13-2250-4ce3-a25b-5151ccbad220"
        },
        "item": {
          "id": "5f1c400d-9c42-4155-aa88-45df5d1675be",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5d9cd8e0-589c-478d-8dbb-ea8b57b9e5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3901ae6-c52a-4e8d-bc11-c4b4de6bdc10",
        "cursor": {
          "ref": "c51b6646-0c31-49b9-989d-fde13e74c3cf",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8ab99793-f325-42c7-b83f-1caad2ddb17a"
        },
        "item": {
          "id": "f3901ae6-c52a-4e8d-bc11-c4b4de6bdc10",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "31f9b154-49fd-4223-9411-62a97c27f2d9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2477,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c004ca1-0b92-4251-a647-4cdd1e623b17",
        "cursor": {
          "ref": "f67e7a95-118b-44fb-a400-7ffe4c7c4010",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ccf27ed0-026b-415e-99db-148e645f002e"
        },
        "item": {
          "id": "7c004ca1-0b92-4251-a647-4cdd1e623b17",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cb72dd4a-af8b-4c67-9c5d-2a974378a5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666dacc6-ed94-4eee-936b-53b55055462a",
        "cursor": {
          "ref": "554dfcfe-d363-4a93-a8e8-5c1492b4646e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b7b8dfc3-abf6-4823-b183-00ea711c1cee"
        },
        "item": {
          "id": "666dacc6-ed94-4eee-936b-53b55055462a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5a329837-af4b-419b-80ca-201da581010d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefd04a7-b4f3-4484-a5bc-6521f68fb763",
        "cursor": {
          "ref": "5dc41540-85dc-4180-a897-212909a4bed1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8fc23805-f20d-46d7-b497-3ede93acd174"
        },
        "item": {
          "id": "fefd04a7-b4f3-4484-a5bc-6521f68fb763",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c9ecb634-f5b5-410d-80af-9f23effdfb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41843c4-3a3a-484a-811f-7ec6bdc22a87",
        "cursor": {
          "ref": "642e00c6-6c8e-4e1c-97b9-b144020aefa3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a95c8447-108f-41d9-b973-25d9aa9fc196"
        },
        "item": {
          "id": "b41843c4-3a3a-484a-811f-7ec6bdc22a87",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e75f19f1-0b78-449e-b906-dbe735f187b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaeef9c-218d-4667-903b-c7cb1d916384",
        "cursor": {
          "ref": "f702fbe9-ccd6-4431-ba92-1790a883697b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "07ac8f22-e232-4974-8aa9-fddc22e014e0"
        },
        "item": {
          "id": "1eaeef9c-218d-4667-903b-c7cb1d916384",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "db88db58-49fa-4907-91b2-705325634a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8ffb07-b1be-489a-94de-e2588f9a59fc",
        "cursor": {
          "ref": "26ac05fd-1357-4b3e-913c-91d20ee90a76",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3554873f-ebb0-4594-a6dd-f53de6f48469"
        },
        "item": {
          "id": "5a8ffb07-b1be-489a-94de-e2588f9a59fc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d42d707f-e769-4cb5-9f5f-35af24d905fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a74ba97-859f-4ba6-b295-e52b813b271e",
        "cursor": {
          "ref": "85b213f1-4299-4127-90bb-0f8fbf3ddf09",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cc4beaa1-971b-4d16-b197-8c1d78c03aaa"
        },
        "item": {
          "id": "9a74ba97-859f-4ba6-b295-e52b813b271e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "799a2695-4818-4ff7-a537-e0baa26eee7c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2371,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bd4dcc-5e71-4f0b-9afd-1c0a6e77b885",
        "cursor": {
          "ref": "c2816d47-9c03-47db-989d-fbef438768c9",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "915a5bfc-1a74-42aa-b1dd-03dcecbb9b44"
        },
        "item": {
          "id": "57bd4dcc-5e71-4f0b-9afd-1c0a6e77b885",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e123ec5a-0dfb-4f10-af42-b2623604b09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c35101-9192-4e98-8255-701009a6e624",
        "cursor": {
          "ref": "44ae0a06-b62c-4c28-948f-4353ecfd1ccf",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "64db600a-0f0a-44ec-9ab8-44b758a00090"
        },
        "item": {
          "id": "99c35101-9192-4e98-8255-701009a6e624",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4085048f-ed6f-48f3-b6fe-55fe88f8032b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e116fa-c6f8-417b-86b7-cd3d168b7a59",
        "cursor": {
          "ref": "f044da42-1605-4e59-9eb3-3bd7a65b7e1e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b7c80116-d42b-4c4b-a345-b9be05f06d05"
        },
        "item": {
          "id": "b5e116fa-c6f8-417b-86b7-cd3d168b7a59",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2c25acc1-6bfc-4c9c-be1b-3e533de6fbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de1f8a1-4360-4ad3-beba-ad22db331f3b",
        "cursor": {
          "ref": "8ea9645b-3d82-4b9d-924c-1d7580669d06",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0d1f5fb2-e87d-4e21-b23a-76259398d252"
        },
        "item": {
          "id": "5de1f8a1-4360-4ad3-beba-ad22db331f3b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "07fee7a4-fcbc-4056-b1c4-1904edd49f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88c5b49-6afb-414a-b1dd-0242316b02b2",
        "cursor": {
          "ref": "feb12733-14f1-4649-886b-be7ccb198ab3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1fe48127-352a-463e-ae4c-d30d56388629"
        },
        "item": {
          "id": "e88c5b49-6afb-414a-b1dd-0242316b02b2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7f89554f-cbcc-41e0-81f7-6ba10aa3b403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14aa1ef-23b5-44dd-ac62-b7bc32bedd03",
        "cursor": {
          "ref": "652ffa6c-f84a-4ef9-8d68-2f720689af04",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3f43aac4-0bfd-46c5-889c-9eb8bb0c9128"
        },
        "item": {
          "id": "f14aa1ef-23b5-44dd-ac62-b7bc32bedd03",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "10517492-9ff2-4476-895d-860660e107f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301b0acd-58f1-4de2-90fc-e1938c48f302",
        "cursor": {
          "ref": "6cbf977a-d190-4582-8272-aafa4e5bfb1e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a5e2fd22-1eef-488a-8a63-edad220749c2"
        },
        "item": {
          "id": "301b0acd-58f1-4de2-90fc-e1938c48f302",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b1e461a5-4844-4ada-987e-92251b582d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b808a6-78ce-4ba7-a6c5-75e09a61e061",
        "cursor": {
          "ref": "9de4404e-ea03-4de8-94e3-cf4bb253d8f1",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e423f074-4402-40a6-b8f7-ae26655803e8"
        },
        "item": {
          "id": "b0b808a6-78ce-4ba7-a6c5-75e09a61e061",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "02e6e7bb-563f-4c8d-8b04-47169b05efa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e32ad48-a304-4fd7-bcf3-1dea8712dd71",
        "cursor": {
          "ref": "56308fe8-a330-4d42-ae40-5c4b867fdd24",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b2362dac-b71f-44b1-89c2-c6b3a5a075c3"
        },
        "item": {
          "id": "5e32ad48-a304-4fd7-bcf3-1dea8712dd71",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "75ba2dd8-722d-4e14-a387-e7e1eaff0297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d661282-1470-436e-9634-770468d38aae",
        "cursor": {
          "ref": "4e12e3a9-1eca-434e-8dd9-5cb436981b50",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5aa54137-8a35-4016-8baa-c32350a39ccb"
        },
        "item": {
          "id": "6d661282-1470-436e-9634-770468d38aae",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9e33cf5e-ea35-4f98-99f3-c8e13263fc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1073c168-be8b-43dd-a5fe-293dbb2bce34",
        "cursor": {
          "ref": "b6178373-54a7-4ec6-a3dd-7952dec8923a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d41dff47-8fe5-483d-8e45-04cdef715f57"
        },
        "item": {
          "id": "1073c168-be8b-43dd-a5fe-293dbb2bce34",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f8935a12-c3c2-4b02-a6cb-90baa6c5fc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec044465-3089-4268-a45e-4b939b06515e",
        "cursor": {
          "ref": "10bff1c7-b65a-4707-af43-618719d93f96",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7e419075-dc17-4407-a439-ee7267f494c7"
        },
        "item": {
          "id": "ec044465-3089-4268-a45e-4b939b06515e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c9cc9801-6e5e-49b1-9942-3e2d1068f40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a3a0e-8b6a-4d70-aa5e-feac3a897715",
        "cursor": {
          "ref": "77a78f0a-7110-4c0f-b97e-0eacdefb5eee",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6d8a68eb-5f6f-4ce6-87da-d3703e8c85a3"
        },
        "item": {
          "id": "b05a3a0e-8b6a-4d70-aa5e-feac3a897715",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ddc0522e-a8bc-49ed-8c2e-bc972362bf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bb2835-a8a8-4227-b434-baeffb70a9ec",
        "cursor": {
          "ref": "f4d75487-3d38-43f6-be96-679cb4a1e202",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1dbbcfc9-5754-43da-829e-d070a43ce9e3"
        },
        "item": {
          "id": "43bb2835-a8a8-4227-b434-baeffb70a9ec",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cc8e167d-0806-4e55-8f03-bde3cef12c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af329bcb-f0a1-4f71-99b2-d586e30f1537",
        "cursor": {
          "ref": "9f79bda3-3c66-47c8-a599-7a12d9a581f8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "35b4925a-e5aa-46dc-9442-4e4459507c75"
        },
        "item": {
          "id": "af329bcb-f0a1-4f71-99b2-d586e30f1537",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "738b389e-1084-4d26-a0e3-f89a9e55188d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c3a25f-5902-46e8-8cdd-f9f8cd2a754a",
        "cursor": {
          "ref": "0f679de3-b1e8-42fb-b820-a372e0730f71",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ff8f6fb8-0da1-42c0-ae04-4c5a369eb257"
        },
        "item": {
          "id": "42c3a25f-5902-46e8-8cdd-f9f8cd2a754a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d70d7143-f891-4d1a-bce5-2d0f94e21331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa93f68b-2645-4f6c-9483-ea37e0af698b",
        "cursor": {
          "ref": "1115e0e2-2f28-429d-b7e6-ab6950c250e2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fc7b8a32-58b2-4f17-8490-5825da222e81"
        },
        "item": {
          "id": "fa93f68b-2645-4f6c-9483-ea37e0af698b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "800b64c7-35c8-49db-bf31-edc413a21be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998fd6dc-9374-449c-93fb-835edece7542",
        "cursor": {
          "ref": "7451ac2f-e25b-4d6f-b680-f68450f5ced3",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3b46b3d1-a26b-475b-a62a-badad0cb3cbe"
        },
        "item": {
          "id": "998fd6dc-9374-449c-93fb-835edece7542",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ed1b5c0f-90f1-4a16-8510-b2b5498faece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e479a0-bb1c-4f7c-9e6c-3c5d1cd9f827",
        "cursor": {
          "ref": "22ae585b-7040-4836-9d6b-8c405ec0f0f2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "39e2827c-e4e6-4bcb-ad19-f55507fe8dac"
        },
        "item": {
          "id": "10e479a0-bb1c-4f7c-9e6c-3c5d1cd9f827",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c7671619-c781-4374-b6cc-b692d39be77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f16ce72-2371-4761-bbaa-75b5646e0377",
        "cursor": {
          "ref": "b9868a41-525d-4d3e-aa56-fa6f88dd3dd0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "382fc244-7c5a-4d76-bf80-9548f21141a8"
        },
        "item": {
          "id": "8f16ce72-2371-4761-bbaa-75b5646e0377",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2c60e42a-246b-4398-9878-6741fd41a246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ca4f82-abdf-47f4-9a27-a1639ef13907",
        "cursor": {
          "ref": "b31cc44a-b7fc-47b1-80cb-01f792d9e921",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8d3c305a-19c4-41ff-b2ee-997ec71ae564"
        },
        "item": {
          "id": "14ca4f82-abdf-47f4-9a27-a1639ef13907",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ed8a4b57-6cc2-4d40-b3a7-14b3a09c7170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03be6eec-a5f9-41ae-84b4-134ee712b8d8",
        "cursor": {
          "ref": "1569fd2e-f326-4b64-be02-d8f1438f76d7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "851aabad-4710-431c-a996-0d3dd761de38"
        },
        "item": {
          "id": "03be6eec-a5f9-41ae-84b4-134ee712b8d8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b1e61501-bdcb-42c6-9168-3e5cb939e75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604adf50-f69e-480b-ba62-aa9d065a96d6",
        "cursor": {
          "ref": "09bb314a-fcbe-420d-9934-44eee8188b28",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c8e39c12-4ee1-486e-b60d-555f7a5fd467"
        },
        "item": {
          "id": "604adf50-f69e-480b-ba62-aa9d065a96d6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d3f6c648-8e06-4868-9cc0-7492c1438d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f0ba3d-1a85-4e80-b40d-07c547ee5787",
        "cursor": {
          "ref": "571665d0-8d28-4428-b42d-fff656fc9ae3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "70c1cde0-8443-4785-8ddd-f025b78a1587"
        },
        "item": {
          "id": "15f0ba3d-1a85-4e80-b40d-07c547ee5787",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7792cbce-def7-43c2-b7e3-f39f054edbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0decd764-8624-484a-856c-4976809cbdba",
        "cursor": {
          "ref": "98786ed9-f471-47b7-84a4-bf010f5dd008",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "391aaa5f-c45b-46f2-811e-815fb84e659b"
        },
        "item": {
          "id": "0decd764-8624-484a-856c-4976809cbdba",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c14e4b63-67ff-48ea-8c05-50731e33f4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a415477d-feeb-4c7b-a2ed-a4f6d8831210",
        "cursor": {
          "ref": "1a68daed-bed3-47df-95b1-0e473da57cab",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ec747a2e-1f4f-41b4-8f7b-b72d503cab32"
        },
        "item": {
          "id": "a415477d-feeb-4c7b-a2ed-a4f6d8831210",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "17b1420f-0cd2-487f-a8cb-429761204199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e574ffcc-f3ab-4c00-a825-ec373e479a5a",
        "cursor": {
          "ref": "088fda75-3192-4ac5-aaa2-2912b3936caf",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "46ed9201-87d4-4cb7-a54a-90d4bd3d7be0"
        },
        "item": {
          "id": "e574ffcc-f3ab-4c00-a825-ec373e479a5a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e1262e01-d136-4611-8f57-751efd2202db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde83eca-ae23-4a18-a75a-a2927128da36",
        "cursor": {
          "ref": "1fee4678-8656-47d0-8fe4-d26f9e6b80bf",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "13b0067e-da09-48c7-bd25-0ebca26ea95c"
        },
        "item": {
          "id": "dde83eca-ae23-4a18-a75a-a2927128da36",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bdb68969-377f-44c7-abb8-9ca65c6e72f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258924bb-2094-4bba-9ea2-abc4c1f0e68e",
        "cursor": {
          "ref": "dda98ffc-5d00-426b-a20b-d39cc234e437",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "51703cab-e679-406f-84e2-066872f0eaa6"
        },
        "item": {
          "id": "258924bb-2094-4bba-9ea2-abc4c1f0e68e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c91e4ea3-4bbd-49c9-8297-0bc65cad5c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519a732d-0634-4108-974a-217d9572ea9d",
        "cursor": {
          "ref": "173287d8-d1a8-4291-9289-a55010b3dc65",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e44963ea-6904-49ae-bb7b-ff38a07d1121"
        },
        "item": {
          "id": "519a732d-0634-4108-974a-217d9572ea9d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "84d654fc-6300-40de-97ed-d74c8d7a93c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656382be-14a9-484d-8d5d-4f846963c12d",
        "cursor": {
          "ref": "b05f98a4-0027-493c-babc-6d9a8f93ca48",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3d78b159-3a61-4129-86a2-73a722cdecb7"
        },
        "item": {
          "id": "656382be-14a9-484d-8d5d-4f846963c12d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1a34e2b0-0c1a-476e-9089-c81e76aae20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf338718-3f2f-41ad-af28-a959f331ddbe",
        "cursor": {
          "ref": "453f2ea7-9194-41dd-a876-50bb99939eb1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "49df3991-93c5-424b-9b67-6b59103f3c58"
        },
        "item": {
          "id": "bf338718-3f2f-41ad-af28-a959f331ddbe",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "be944bed-e770-4afb-be5d-1b10bd571531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a7415c-f6cc-4071-92dc-6adc76bebe05",
        "cursor": {
          "ref": "4326d920-aa1e-4ed0-9911-5c490e0b19e0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "170119ba-9977-4dee-9b10-597400292967"
        },
        "item": {
          "id": "77a7415c-f6cc-4071-92dc-6adc76bebe05",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "59cf6c2f-a1d4-4c36-ab26-08bab4f90021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f51d95a-4e33-45ad-8ab5-ca7e3186b0d2",
        "cursor": {
          "ref": "fec4d59c-d2e3-495c-a328-77c5117ce306",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "55c214e8-757a-4eaf-9ae9-aad6dedbf1ef"
        },
        "item": {
          "id": "9f51d95a-4e33-45ad-8ab5-ca7e3186b0d2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "31108efb-bf7b-418b-91ca-44e0cbade46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358ff4cc-12d0-49d3-89d1-a6be0c84e5f9",
        "cursor": {
          "ref": "c8e9c6e8-bd8d-4b2f-a70b-fb973ce631cb",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "37b334d3-fd96-41e2-9974-ae0f93de5377"
        },
        "item": {
          "id": "358ff4cc-12d0-49d3-89d1-a6be0c84e5f9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "683f6b10-a291-4cd8-a594-7dff1d4da555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a21db7-b439-475e-a246-2f5785e8763d",
        "cursor": {
          "ref": "a190695c-9cc6-463e-8144-60cee52c7a98",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ba412762-82d2-4cd2-b4c6-b3568d047778"
        },
        "item": {
          "id": "63a21db7-b439-475e-a246-2f5785e8763d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "84358fe9-d26d-4fee-a782-4988d9a07a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff62eed-c19a-4816-b194-ff69246ad001",
        "cursor": {
          "ref": "e545a25d-7ea1-453c-9962-d483f0e506bc",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7640fb38-3ca1-45bd-9b18-94ce67403d2e"
        },
        "item": {
          "id": "1ff62eed-c19a-4816-b194-ff69246ad001",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b0c36e7c-4915-47fe-babd-601b2d4bd2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eab643d-6be5-413f-8f96-214d0fb75f1f",
        "cursor": {
          "ref": "d393dcc6-0e5d-4cc6-88f4-ae6d838208f5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ec8fe480-a2bd-412d-b672-4108ad103d5b"
        },
        "item": {
          "id": "6eab643d-6be5-413f-8f96-214d0fb75f1f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4b972c0f-e7f8-4fde-adde-6fcf56872ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6495ac-cf4e-4dac-9250-821e78f74567",
        "cursor": {
          "ref": "8193d467-b34d-4f94-ba7e-11c82cb4db2e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "800201b0-204c-4c38-b035-e99c63854909"
        },
        "item": {
          "id": "0a6495ac-cf4e-4dac-9250-821e78f74567",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fc601d31-6648-4c16-8a23-56e1287a311c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4071537-9044-416d-889c-85d002bf8a89",
        "cursor": {
          "ref": "9df5f759-f111-4138-8bd5-0c93d489b668",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c518d6ed-d0e6-4708-bada-3fa729446400"
        },
        "item": {
          "id": "f4071537-9044-416d-889c-85d002bf8a89",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9c331255-832b-4536-b7a4-553f0c499c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a3c290-40c5-4498-a62d-2d5aef3c69e5",
        "cursor": {
          "ref": "b22a2684-8648-44e1-939e-d25d7d7dc251",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "28144250-4db4-4190-bf01-a5721432795e"
        },
        "item": {
          "id": "57a3c290-40c5-4498-a62d-2d5aef3c69e5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "06c04541-c6b1-4984-b3a7-874f7ed0b3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e595b820-286e-4e84-968e-1ab3e0abef80",
        "cursor": {
          "ref": "67aee5dd-2537-4ad5-aaf1-708d315b92f3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "63361b77-197c-4c67-9b24-c8f6b33266e5"
        },
        "item": {
          "id": "e595b820-286e-4e84-968e-1ab3e0abef80",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ca06577-5080-4250-a708-6ba17f096d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce7ade8-f6ab-42ad-9434-ebf1d14c3c2a",
        "cursor": {
          "ref": "44645bfd-cdb3-45ee-8939-b43ad4e8599d",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e88991d3-13e9-4704-86e0-b14ecdaf72e5"
        },
        "item": {
          "id": "0ce7ade8-f6ab-42ad-9434-ebf1d14c3c2a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bb5289f9-aaef-4ee5-bff9-50608da448b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fc45a4-02d6-420f-874b-4441518d10e3",
        "cursor": {
          "ref": "b750ff1a-9678-4f37-b05b-22eebd2dc5d5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "01600fc3-2cb8-49a6-a552-1472112b7aa0"
        },
        "item": {
          "id": "e8fc45a4-02d6-420f-874b-4441518d10e3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b542053e-7fca-4601-9e75-273318321bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4048b14-72b2-4f65-ad8d-b41acf0c136f",
        "cursor": {
          "ref": "0787fd89-f791-4d4a-9cd9-d7eb6e9bbcba",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "edb8eec1-14e6-4000-833d-b5faca814887"
        },
        "item": {
          "id": "a4048b14-72b2-4f65-ad8d-b41acf0c136f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "abfdc6f8-ad1a-436a-9b0f-e588ba0ab205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf313e93-050e-4244-a8f0-766d45debbe8",
        "cursor": {
          "ref": "75107deb-d90d-4f39-bdf8-0581bc791795",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "147179e5-5e35-443a-b2cf-d1e92b36a833"
        },
        "item": {
          "id": "bf313e93-050e-4244-a8f0-766d45debbe8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4195949d-5d96-4268-bcf3-c3d25362157b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ab1c40-70bb-43a6-81f2-a8042f90c969",
        "cursor": {
          "ref": "467ec32c-4ca0-43bb-8bc0-5feebbeafe08",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a4c552fb-7731-4b06-aae2-d0bd5b36fc2c"
        },
        "item": {
          "id": "35ab1c40-70bb-43a6-81f2-a8042f90c969",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a1402dc4-642b-490f-b01a-8374820bae82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20bcbda-e0d7-4a7f-b9aa-692fb60c31a1",
        "cursor": {
          "ref": "5ec3124c-88a7-454f-958d-2a2727f6a749",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f3c31191-0831-41cc-b6a5-ccf5c05644fe"
        },
        "item": {
          "id": "b20bcbda-e0d7-4a7f-b9aa-692fb60c31a1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a317c7b4-3f05-4c81-9c6e-b8d196e7c38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8997a3b7-33fc-41a8-9284-fc3fd98687e0",
        "cursor": {
          "ref": "da3f86b6-8ef8-4b7f-8a77-7cea8e2e043b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "14629044-075d-45c0-b52f-a92bef7a18cc"
        },
        "item": {
          "id": "8997a3b7-33fc-41a8-9284-fc3fd98687e0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ace2e3b2-109b-4844-ade6-d92c83541374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b52b6c-f32e-4c75-aef8-9641c0f37f8b",
        "cursor": {
          "ref": "5787f5b8-4372-4b19-8241-856cee0d04c6",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e85e6fa6-a5a6-4f67-a36e-d1cc7cdeefed"
        },
        "item": {
          "id": "49b52b6c-f32e-4c75-aef8-9641c0f37f8b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "87d16262-1d0d-4524-a79a-fdf9e5e83fb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8becae67-9079-4eac-bee1-b2e54dece4c2",
        "cursor": {
          "ref": "676c4490-5bd9-46d9-8712-503eac01619d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ddc2bd44-ef52-4cfd-b81b-ab2a62fae628"
        },
        "item": {
          "id": "8becae67-9079-4eac-bee1-b2e54dece4c2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2d8c6970-2c38-4aaf-b0a2-50bb4a16cbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bb57c903-0bbe-44d7-93e5-05e34aef48ff",
        "cursor": {
          "ref": "44a14875-39f0-453e-9f4a-0389ada9c6c1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bbeec10f-321d-4429-99d3-374e9a29f1f5"
        },
        "item": {
          "id": "bb57c903-0bbe-44d7-93e5-05e34aef48ff",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a0a67a15-40d2-486d-9482-669e44c205ae",
          "status": "Created",
          "code": 201,
          "responseTime": 12033,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26b2d18-db6e-4d47-bf96-341a71498272",
        "cursor": {
          "ref": "e5f1c219-6d91-48ec-b0f9-da52813b6701",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "46a6f59e-d616-4cfd-bc2d-6fc3b9249c9f"
        },
        "item": {
          "id": "f26b2d18-db6e-4d47-bf96-341a71498272",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "341a15f7-dbe9-449c-bb18-35db4fc2fc7f",
          "status": "Created",
          "code": 201,
          "responseTime": 11324,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c77f45-6bf9-4c47-982f-6a47ab069afd",
        "cursor": {
          "ref": "ff456a6a-032b-4d21-9b86-c7507a2a8773",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f5b1eb8a-dfde-42f3-b046-b61dabf22eb8"
        },
        "item": {
          "id": "f7c77f45-6bf9-4c47-982f-6a47ab069afd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "55cd23e9-fb95-4973-892a-f9f63b083273",
          "status": "Created",
          "code": 201,
          "responseTime": 10697,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c1aa9a-fbc7-4bf8-adc3-daef3109fcb2",
        "cursor": {
          "ref": "6677137c-73cc-43d8-9cae-4072bb3bdca2",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f3df27e2-b9a9-44e5-9a28-6716e5de33ab"
        },
        "item": {
          "id": "55c1aa9a-fbc7-4bf8-adc3-daef3109fcb2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "73b63464-dab1-46ae-88d6-ff4d17052333",
          "status": "Created",
          "code": 201,
          "responseTime": 11316,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7f8fbc-8bdc-4482-85e5-db98d0b0aed4",
        "cursor": {
          "ref": "69868c60-2631-44b4-b73f-3b5e62899d5b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "35bb7c6f-176b-43f1-98c9-aab0eefae839"
        },
        "item": {
          "id": "4c7f8fbc-8bdc-4482-85e5-db98d0b0aed4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "72d8ed8b-88d3-4df6-a4b8-3ced0193b751",
          "status": "Created",
          "code": 201,
          "responseTime": 10680,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a370c65-f9b5-4e50-b5f0-f0adb4e75f2f",
        "cursor": {
          "ref": "ff8b2dc5-b05b-4b95-853c-1bea0986e6ea",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d7c10f31-33f8-4576-a737-8f47a52ea1a2"
        },
        "item": {
          "id": "2a370c65-f9b5-4e50-b5f0-f0adb4e75f2f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e0ae5339-0af8-41f6-bee7-98d8f50f41d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "002eb29a-b387-4dc5-96dc-6dfcb5d7637d",
        "cursor": {
          "ref": "673da0f0-f10e-4615-8d5c-9e05b0c348b3",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dadd613c-9ee2-4fcf-aa43-6dcded64c1af"
        },
        "item": {
          "id": "002eb29a-b387-4dc5-96dc-6dfcb5d7637d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "690e614a-f63f-44fd-85ef-02f5dde67691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cfe9d8-629c-4064-8cae-c8dbf18a7b62",
        "cursor": {
          "ref": "0466f78b-7023-44c6-a51e-93ecd8acc868",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c6f6857b-f0dd-4a63-9bbf-8c8ca8e70c50"
        },
        "item": {
          "id": "83cfe9d8-629c-4064-8cae-c8dbf18a7b62",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0aae9c22-4d9d-437b-bcba-0e3601605aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bca6beb-a7e3-44ce-ab49-11f6030a3bd4",
        "cursor": {
          "ref": "ad26c8b5-e1e3-41fb-a9f4-e7713405a00f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "446f9c4c-b790-475b-8b6e-13fe6a73bd15"
        },
        "item": {
          "id": "3bca6beb-a7e3-44ce-ab49-11f6030a3bd4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e67c8d21-fda1-4499-abf3-13f02305eb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236a465f-80b8-4d22-990f-7c443af4244c",
        "cursor": {
          "ref": "2f983e47-f070-4b5b-bb9c-6a801e27bbd1",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7372062c-4fb7-4503-beb6-0552f7d45fcb"
        },
        "item": {
          "id": "236a465f-80b8-4d22-990f-7c443af4244c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1dbcc3da-c7c4-48a4-bc8e-20f2aaaf4ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d0df67-c2f0-43e7-9cf1-14d226de8343",
        "cursor": {
          "ref": "265e42e9-479f-437f-8738-706679857e7c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "735fcf50-d96b-431a-ae7b-fa3f38e0af10"
        },
        "item": {
          "id": "03d0df67-c2f0-43e7-9cf1-14d226de8343",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a2be77a4-022d-4dc9-a67b-b3e3ed4a74e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d242f33-f08a-48da-922b-8331033a628e",
        "cursor": {
          "ref": "f7c1f8b3-3250-4963-afe7-e3621d7b7e24",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d5cc9186-e6c1-4e9e-8594-70005cee719d"
        },
        "item": {
          "id": "5d242f33-f08a-48da-922b-8331033a628e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e02d8ec4-f352-48da-b49b-87ffcf805701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712ef381-0b3d-4517-8dbe-89a9585358cf",
        "cursor": {
          "ref": "2ef77181-199e-4c7d-a80c-df563adc036d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d38fee67-dc4e-4148-a78b-87c750dafc0a"
        },
        "item": {
          "id": "712ef381-0b3d-4517-8dbe-89a9585358cf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "69aaed93-16f2-433e-95cf-b6e011257c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd9ee69-cbbc-4ab4-8ae3-baddadef2230",
        "cursor": {
          "ref": "76bca4fd-86a2-419a-aa07-bae4de60979a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4420815c-f673-4717-9a49-ae387d247ce1"
        },
        "item": {
          "id": "5cd9ee69-cbbc-4ab4-8ae3-baddadef2230",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e28c4875-2b25-4ca6-9aed-cea813639947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec5d938-7707-41b0-94b5-1823306c53ee",
        "cursor": {
          "ref": "e173aa59-6d4c-41e9-b09e-a853a40cbf26",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "85657afe-1154-4965-854b-b70c96475f10"
        },
        "item": {
          "id": "4ec5d938-7707-41b0-94b5-1823306c53ee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "29d6c554-29e2-46d0-9298-0e310b99ef35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eed7b8-3de4-4746-8709-5ff517779687",
        "cursor": {
          "ref": "c0dd0c19-a0c6-4f13-9940-aec22ad4dcd1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d8151c92-b127-494f-b921-ee6a208a5ccc"
        },
        "item": {
          "id": "25eed7b8-3de4-4746-8709-5ff517779687",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "920b8d63-34af-445a-9946-7c1c55b7189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d552aa6-cff2-4d26-b732-82cc618ae6d0",
        "cursor": {
          "ref": "92441c89-17d0-4c0c-a1a3-a085ed6853ed",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1d4a5bb1-1074-4219-8a39-a1e89222ebf5"
        },
        "item": {
          "id": "7d552aa6-cff2-4d26-b732-82cc618ae6d0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "33dc78bc-a6f8-4802-90cc-6bb48561ae55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f840eac3-981d-4c5a-b712-57787271df69",
        "cursor": {
          "ref": "4f05cca3-125c-4798-954e-05c971807d2f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c9669cf3-2328-4b1c-883c-ff1de0da34c0"
        },
        "item": {
          "id": "f840eac3-981d-4c5a-b712-57787271df69",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "27c7f3b9-0559-4965-9d53-88bb0b6a3004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e51ced-1598-47e4-b43a-00a505d5a26f",
        "cursor": {
          "ref": "8bd98f9f-2716-4aeb-bf5e-f14bc12785c5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "56e73306-a28d-4c58-9c38-8bab670325de"
        },
        "item": {
          "id": "72e51ced-1598-47e4-b43a-00a505d5a26f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fb4d249a-779e-428f-b756-e3065dc95334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ac8ab8-fd9f-433b-8b77-45a24c229bc6",
        "cursor": {
          "ref": "1895077f-d312-4118-922c-41704e29b858",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e5eb06ce-46c5-41a6-b4e9-cee4f7c137ab"
        },
        "item": {
          "id": "e9ac8ab8-fd9f-433b-8b77-45a24c229bc6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fd2a1211-10c3-416d-b3d2-1bc31eba2792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46eb411-5294-4426-892f-4898bf8f9f77",
        "cursor": {
          "ref": "c0f7dadd-0474-4ec8-bbfb-3a5b6f0b9eec",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "42c14035-59a0-4725-aa87-7a251b85a636"
        },
        "item": {
          "id": "d46eb411-5294-4426-892f-4898bf8f9f77",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c92eea17-2da2-4846-9749-27fb23715266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edd9d11-0c8d-4b95-ab58-7d7938108c3d",
        "cursor": {
          "ref": "3ed59eaf-3e8f-41ad-bcfe-4de4f6c1a03b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a62fa2de-bf7f-4c05-a8f6-e94f0e4a8905"
        },
        "item": {
          "id": "3edd9d11-0c8d-4b95-ab58-7d7938108c3d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6e0be8ec-7c89-401d-9bb9-eddd4b9bc388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860747d2-4e65-4ac9-a8d3-0f3ce6a8fa4a",
        "cursor": {
          "ref": "a444212a-95da-421c-a42f-9efa569ee20d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "42840908-6509-4cb9-af4b-7236a49ff035"
        },
        "item": {
          "id": "860747d2-4e65-4ac9-a8d3-0f3ce6a8fa4a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7ce9da5f-278b-47fe-996c-6f5e3ee3dff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b296f96-f96d-4f27-a3bb-8e6ebbf69127",
        "cursor": {
          "ref": "1cf9de12-8c16-4415-9415-8f9ffb1f5982",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e9a28aed-8269-4b7e-8fd2-a39492b82795"
        },
        "item": {
          "id": "4b296f96-f96d-4f27-a3bb-8e6ebbf69127",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bf4cf1da-2b2b-44cf-bfc2-e14fe21518a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea44abe-5491-4d97-b0f0-f026bf2271aa",
        "cursor": {
          "ref": "015ab966-f4e5-497a-92f7-8f4a95e7ab13",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "96aeee0e-57ea-44e6-bd2a-efb3caa4cd0f"
        },
        "item": {
          "id": "8ea44abe-5491-4d97-b0f0-f026bf2271aa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7a31a067-3387-4b9e-89f2-af855ce000da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8240e22d-cabf-4e71-97bb-ff090237a0d6",
        "cursor": {
          "ref": "ff975a6a-ca37-4e2d-a348-02bde6918a19",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "272621c7-1a2b-439f-9a6a-5cdc72ce3f1d"
        },
        "item": {
          "id": "8240e22d-cabf-4e71-97bb-ff090237a0d6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "401fbe77-9c92-4bb7-b1de-c32e79ac61df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e928420-d614-475a-bc4f-882ddd357d7b",
        "cursor": {
          "ref": "240a448b-47c0-4158-ad5e-8b0c34cd195f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e9c2d79a-572b-4742-a42b-f7b10e9a7fdc"
        },
        "item": {
          "id": "9e928420-d614-475a-bc4f-882ddd357d7b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6f4f29fd-d20a-492f-8714-f4e8611b9ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012f8bd5-d620-4230-a121-54b8209deb2e",
        "cursor": {
          "ref": "f79e0fcd-bfac-4c87-8ad3-5eb113f31e0b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a57dc18d-cdf2-4681-a07a-8cda1605d911"
        },
        "item": {
          "id": "012f8bd5-d620-4230-a121-54b8209deb2e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "abefeb0c-26a1-4dc4-b56d-825863bbe3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e82025-f965-48d9-877c-48183465b87e",
        "cursor": {
          "ref": "860b6fa1-6b95-41d1-aeb3-755f91d435d8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2bfc6902-965f-4908-98c4-82f2cd91ad21"
        },
        "item": {
          "id": "19e82025-f965-48d9-877c-48183465b87e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ddcfd5ff-f32c-484f-acc0-1d1b0a31bdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aa52a0-76ec-4dd7-a9cd-138ce926df80",
        "cursor": {
          "ref": "de1feec0-50f1-4c80-a068-e1040181624d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6286b155-ab8a-4131-9fe4-e90c904abdba"
        },
        "item": {
          "id": "87aa52a0-76ec-4dd7-a9cd-138ce926df80",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0f5fb6f4-495d-44fd-a241-0f431b9439b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd4bdfd-3eee-45fe-bee3-cc19424a2ee9",
        "cursor": {
          "ref": "2ac300fc-c174-4834-b965-1b9daf717f26",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "772b8f0b-9ca6-42dc-850f-2324214ab56c"
        },
        "item": {
          "id": "dfd4bdfd-3eee-45fe-bee3-cc19424a2ee9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "73123b8f-e7e3-4927-bbfc-fc37d165cb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d4bc8c-f415-4f47-9800-11f1ec028a2a",
        "cursor": {
          "ref": "a7fb5d81-55cb-4b03-afe3-0b948586af4d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a1966d44-1fc1-4459-8f6b-4046a8bb7fed"
        },
        "item": {
          "id": "66d4bc8c-f415-4f47-9800-11f1ec028a2a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "17a8c391-9237-412b-b2b9-b377cce15f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2af1364-79eb-4cf2-a0ec-237530b042ad",
        "cursor": {
          "ref": "da9c96fc-8f69-42ef-91e4-f382d541db35",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2a384205-c1f0-498d-ae27-e44a046e262b"
        },
        "item": {
          "id": "a2af1364-79eb-4cf2-a0ec-237530b042ad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ceaac18b-b8e6-4e9d-8871-829c8ed0d14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca0145f-3f30-45f9-b014-5c5548a6cba6",
        "cursor": {
          "ref": "db326c39-b370-4503-a783-83d112be4653",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e46de424-12b4-44c1-90b2-4ce4c16f6dd1"
        },
        "item": {
          "id": "3ca0145f-3f30-45f9-b014-5c5548a6cba6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8be136f3-5b9a-40e4-a344-f2a7ca8ee461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3658908b-428f-441b-afc2-794b5cf93322",
        "cursor": {
          "ref": "8ed439e9-d49c-46ae-9e74-dbd183481c60",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1f766bd8-6bed-4612-865f-6425b6db4447"
        },
        "item": {
          "id": "3658908b-428f-441b-afc2-794b5cf93322",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aaba2db0-b9c8-4ddf-98f2-f766b4e70e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d47da6c-72bf-4682-95d1-81c0b151bd61",
        "cursor": {
          "ref": "4ab852ac-6d38-46ab-8697-f0e4c56e17d7",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5cde3240-e04b-43c0-ac53-ec0ef8add01c"
        },
        "item": {
          "id": "2d47da6c-72bf-4682-95d1-81c0b151bd61",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "56a0b7f7-28f2-469c-a56d-324b975c4e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd18f7e-cb43-4355-9ed0-21b38ea3bfaf",
        "cursor": {
          "ref": "35512e67-3749-41c9-8966-ad3b4e96b8fc",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6e3331ff-dc91-490c-ba39-53b3e13d8c53"
        },
        "item": {
          "id": "2fd18f7e-cb43-4355-9ed0-21b38ea3bfaf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "36794db1-3049-4ed8-b1aa-1b061419ed3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0d69c3-413f-4543-b6de-d131cabd8161",
        "cursor": {
          "ref": "77006e19-ad80-452c-a0ab-2aa3da7faf83",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b751315c-3486-4b45-ae4e-8705934bfd00"
        },
        "item": {
          "id": "cf0d69c3-413f-4543-b6de-d131cabd8161",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "48cb0ded-7b11-4da9-9307-d7e1542ca3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f623ac21-d2aa-4880-be27-c05c2dc9758e",
        "cursor": {
          "ref": "3e0531cd-3258-4073-ba79-7f56d2162d5d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a89960b6-a0e0-4568-8828-aba3e44097c2"
        },
        "item": {
          "id": "f623ac21-d2aa-4880-be27-c05c2dc9758e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cef9995f-b2ec-4830-9d9a-5ef6d71f4cd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b4b07b-2ad5-451c-a7b8-39fc4d27cc02",
        "cursor": {
          "ref": "e878f820-1053-49b5-ae68-6f3593583da2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "92673105-553f-4952-8b4c-b5535a86a856"
        },
        "item": {
          "id": "76b4b07b-2ad5-451c-a7b8-39fc4d27cc02",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f0339767-788a-4de1-a4dd-3e0df2731fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b32f4e-bb8d-470b-a46d-6baf2128c446",
        "cursor": {
          "ref": "78a58cf7-6411-44b2-9721-8b20cf20a6a7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "81dacf34-60cf-4252-a522-e80673f9bb84"
        },
        "item": {
          "id": "b8b32f4e-bb8d-470b-a46d-6baf2128c446",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c331a81f-54ac-42d2-b33d-d982d096bc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b406fe1-9636-412e-abbd-175596bec536",
        "cursor": {
          "ref": "603eb1f1-fefd-4b79-86cf-863cc6ead3a0",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "495e9663-0bf3-4f36-a447-b0584a6140ba"
        },
        "item": {
          "id": "8b406fe1-9636-412e-abbd-175596bec536",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0e7d72e1-36d5-486d-8e87-283c860046a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74b3ed9-c5cf-4f7f-a777-12befbc74717",
        "cursor": {
          "ref": "bbabb0ff-0a98-4a06-9999-1b2dfd7c6c6c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d5788878-ce3f-4fcb-a2b3-4a011ef88c13"
        },
        "item": {
          "id": "b74b3ed9-c5cf-4f7f-a777-12befbc74717",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "32637c7e-ea20-4a6f-9ca4-fe87eed909ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b0e3d8-72d3-4305-bfed-597167779c4b",
        "cursor": {
          "ref": "9932e10c-d3c1-47ea-b9ca-58a14712d668",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e30f714b-502a-4259-bbd8-63dda6b9503f"
        },
        "item": {
          "id": "29b0e3d8-72d3-4305-bfed-597167779c4b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "16f73c5e-d22b-415f-8eeb-7c769e93e9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c51156-9b51-4d1d-bf6f-8a8a5b56398a",
        "cursor": {
          "ref": "a591ffeb-219d-47bf-bef8-2a5f966cd9c8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "10cb7dee-e3b2-422c-bd8e-ab7ddf59b5dd"
        },
        "item": {
          "id": "58c51156-9b51-4d1d-bf6f-8a8a5b56398a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eea4a6dd-f892-4d88-8bd2-b4beeaf2da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aacdb8a-5268-4359-86bf-13d591124fea",
        "cursor": {
          "ref": "8b0810c0-ca13-4dd9-9d35-676c1aefd729",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0ac12bf7-cc7d-4eae-8d09-2b21a6bcb693"
        },
        "item": {
          "id": "5aacdb8a-5268-4359-86bf-13d591124fea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a5887eb0-2da2-45df-a77d-7745f346d390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca44afba-8707-4416-aa52-0630a13e9c41",
        "cursor": {
          "ref": "b6772335-e842-4e4b-aaa7-2472eedb5764",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e3a4b251-9e85-40b8-9451-6a72955518ba"
        },
        "item": {
          "id": "ca44afba-8707-4416-aa52-0630a13e9c41",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "54ed2379-caa4-4024-8a1e-1c49fc44e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472185d5-ee3b-42b2-9ab9-ede4e762c79b",
        "cursor": {
          "ref": "e242d616-006f-46d5-ac02-ed03af5b7b98",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "af9f19a5-b199-4e74-aa7c-2fa61268d129"
        },
        "item": {
          "id": "472185d5-ee3b-42b2-9ab9-ede4e762c79b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4014cc26-d1f8-49d5-8956-e051b556c7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8168f970-5745-4a98-b99b-0015196f8616",
        "cursor": {
          "ref": "d3749515-eb0b-4e2d-a213-ddd085f575bd",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ed67d90a-9b24-45a4-a44c-27fb1b1b1415"
        },
        "item": {
          "id": "8168f970-5745-4a98-b99b-0015196f8616",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e6329cf7-1ccb-4b8c-9608-41b04b9a2191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc39b51-f040-4ee8-a5a7-3eb919bbd446",
        "cursor": {
          "ref": "af5962c9-a296-446f-9294-d65f5e564f9f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7f96c30f-b6f3-4d7d-b0ea-5b86885d4cb7"
        },
        "item": {
          "id": "2dc39b51-f040-4ee8-a5a7-3eb919bbd446",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "30eaffa8-ce2c-46a4-92ac-20aa98a195db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901ece99-3894-4e7f-9f82-7e8ba280eda0",
        "cursor": {
          "ref": "d42d2e56-6685-4063-a9a1-3ab03052a201",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f2dd815d-3ffb-4b59-9994-50e0512fd893"
        },
        "item": {
          "id": "901ece99-3894-4e7f-9f82-7e8ba280eda0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "68678648-4a18-43cb-8d9b-b794ecce7b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa9935a-e90b-4fdd-b7fd-c3d21a6253dc",
        "cursor": {
          "ref": "1955fb65-632a-4195-99f7-3b5b2e01a2e1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fdc6f908-44d4-408a-b627-f426956f4238"
        },
        "item": {
          "id": "cfa9935a-e90b-4fdd-b7fd-c3d21a6253dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "90968503-aeea-4d36-97f6-109eae10e1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d884f4-3f3c-4430-8acf-6fb7dfef3270",
        "cursor": {
          "ref": "172765bd-19cc-423d-8314-3dcd9b819ed9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cd7ac46c-485c-41cb-b4d8-ab648cf405dd"
        },
        "item": {
          "id": "20d884f4-3f3c-4430-8acf-6fb7dfef3270",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "24bc0714-8718-45a4-a7d4-2f228a96e3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05557974-ec72-437a-ae24-d96077103171",
        "cursor": {
          "ref": "4849f309-cdb7-4b1c-8a5f-e345c99955e6",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "80dfae75-0987-477f-8106-f4f3974e3cf7"
        },
        "item": {
          "id": "05557974-ec72-437a-ae24-d96077103171",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fe11a958-d2ac-42f7-96cf-c4b1ae1b5f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ee732e-a255-4a07-a3dd-3353c00b7cab",
        "cursor": {
          "ref": "5e80d05a-5dce-4330-a486-a2f94d999035",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "87a15ff9-ff30-475d-9616-d199a0fe1e40"
        },
        "item": {
          "id": "d7ee732e-a255-4a07-a3dd-3353c00b7cab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "be9c8988-1fb1-4a1f-933d-735aaaf7c4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1083f81-396a-4602-9d28-19d0b0f1f92b",
        "cursor": {
          "ref": "c8fb4719-84c0-404d-9fcd-13e5b8387ab8",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "30259bf2-a707-4775-a6c6-277a01c7937b"
        },
        "item": {
          "id": "a1083f81-396a-4602-9d28-19d0b0f1f92b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "79c09cc3-62ec-4d83-8f75-2b8c2d3a7864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f0538b-7413-4bba-af85-038c522e3743",
        "cursor": {
          "ref": "7ad05707-77c7-4e9b-82b5-2987eaf4171c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a836f6d8-7e70-4dee-ab96-6cf290550e70"
        },
        "item": {
          "id": "b4f0538b-7413-4bba-af85-038c522e3743",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b469a434-0ffd-4cc2-89cc-aeee787f77d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af7d6b0-b40a-4a91-806c-779f08012c21",
        "cursor": {
          "ref": "d075d2d4-c2fe-48d1-9e99-0e1abebab71c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e34c0f2f-6944-4c52-ac9c-3a6544bc7199"
        },
        "item": {
          "id": "7af7d6b0-b40a-4a91-806c-779f08012c21",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a1350622-4896-4422-9212-3a66a1b41b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05d983e-5aa0-49f2-9aa3-cd27b155276b",
        "cursor": {
          "ref": "1c337ec1-dfef-4dc7-b809-ff13e1d3ac33",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "24f77ef3-51b2-42be-ba01-a5f9cc42a1ea"
        },
        "item": {
          "id": "b05d983e-5aa0-49f2-9aa3-cd27b155276b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6e7e67b1-e38e-47c3-9a32-2ae665423643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be67d53-5aac-4c94-9e9d-82115f765ae3",
        "cursor": {
          "ref": "bf04e2f2-f85e-4bcf-8bed-72a849e7d674",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4f534531-b0a9-4b51-824e-83994649b73c"
        },
        "item": {
          "id": "2be67d53-5aac-4c94-9e9d-82115f765ae3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "86645649-3c47-4691-874e-ed213fb4dd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a715b35e-0e79-4380-b3b4-eadf1ec989b9",
        "cursor": {
          "ref": "8d17be0f-9549-42d3-affb-ecfa2cd95c00",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d368df65-0dd8-432d-bccc-9c85a12e4985"
        },
        "item": {
          "id": "a715b35e-0e79-4380-b3b4-eadf1ec989b9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e9e819e5-33c0-4a57-9f72-d1aa1385ef96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5043cdc-9970-479a-9594-9e579f9c4723",
        "cursor": {
          "ref": "03f85c5d-6641-4371-a12f-146d1fe2a1d0",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2f46c4bd-ff76-4d5b-b471-7447f76d550b"
        },
        "item": {
          "id": "a5043cdc-9970-479a-9594-9e579f9c4723",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed3d3969-6ec6-4ace-b3e6-ec1aaf493971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e9a8f7-f3d1-4f39-b958-b3671a94e1b5",
        "cursor": {
          "ref": "3abf686e-7cea-4eb0-b897-ee14fdea2e70",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8c9151c4-182f-4f19-8c0f-59dc883a75fd"
        },
        "item": {
          "id": "c5e9a8f7-f3d1-4f39-b958-b3671a94e1b5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3384bab2-51cc-479a-a0f7-ad227ae6a75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a42232-df0f-4695-a2ee-606c83238056",
        "cursor": {
          "ref": "1fcf993b-55b2-498c-8f5b-0095af3b387f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "15c8fae5-1f09-44f7-acda-5a1c68e3c29d"
        },
        "item": {
          "id": "e1a42232-df0f-4695-a2ee-606c83238056",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fe530218-c502-4788-aff6-660bafb0d315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0288d58a-b44d-406f-9595-5ecd60abcfd5",
        "cursor": {
          "ref": "75104074-f1fc-40ce-8482-9126c2e1e3f7",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c1709bdc-150e-430d-b5e1-5b0655c1e109"
        },
        "item": {
          "id": "0288d58a-b44d-406f-9595-5ecd60abcfd5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dde9c15d-513a-40bb-bec1-b94101eb25e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccb49f4-e7ce-4d9d-9bec-4bd456fce987",
        "cursor": {
          "ref": "2cba5480-d82d-4630-8f82-0e786aead27e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8e2f37e1-85e1-46cb-8816-a189e4d12753"
        },
        "item": {
          "id": "6ccb49f4-e7ce-4d9d-9bec-4bd456fce987",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3b58666f-1e4f-4909-a6e6-2d2e4135b4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d021c89-fbe7-4412-aab4-d297f4aa757a",
        "cursor": {
          "ref": "c8ddc2f7-6909-4b0d-863e-7d507c43dc63",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "932ce722-ec46-4ad4-80cc-18822dfd9990"
        },
        "item": {
          "id": "7d021c89-fbe7-4412-aab4-d297f4aa757a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3a41e185-1e91-456e-8be9-4b286fffc331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4255c3-f16e-4009-a771-85089c3387f5",
        "cursor": {
          "ref": "dbe43720-dd77-4611-ac6f-9323fad25e73",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c92e9a50-4cc2-49ba-bfb8-ecb6ffd784c3"
        },
        "item": {
          "id": "2a4255c3-f16e-4009-a771-85089c3387f5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fb299734-26c9-4238-89d4-befa8fea1bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa486f19-00ad-49f8-b656-24d7d7ff4086",
        "cursor": {
          "ref": "d7b805c6-724a-48a4-bf46-33903595dadb",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "46234469-b1b6-41f5-981d-0abff9cca1e6"
        },
        "item": {
          "id": "fa486f19-00ad-49f8-b656-24d7d7ff4086",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "99d05e78-899c-42aa-8a5d-aec9df909d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ab11ef-1af5-4a87-b217-401795b710aa",
        "cursor": {
          "ref": "90928725-ea90-4573-bb53-beae8410531b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "282653b2-cad3-48fe-b0df-f70d8eb4b569"
        },
        "item": {
          "id": "e3ab11ef-1af5-4a87-b217-401795b710aa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f5f5c1e3-9df9-4b4b-8ba9-cd30ca22cc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210fa0b0-26f2-4573-84ce-1a7c4f66c125",
        "cursor": {
          "ref": "21bf6a7e-20a3-4e0e-93d8-90b38a10523b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7f16a659-64b7-4cd5-a26f-4eb91ad8ee7d"
        },
        "item": {
          "id": "210fa0b0-26f2-4573-84ce-1a7c4f66c125",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a15154a5-ac5e-44c3-8d4e-286816bc5af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002893ac-c375-4d1c-8669-a0047bd73dc4",
        "cursor": {
          "ref": "f0cf83e8-bb52-4991-a23d-960162a32acc",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0e42a3b3-2a36-44a5-8943-37fc83c5dd25"
        },
        "item": {
          "id": "002893ac-c375-4d1c-8669-a0047bd73dc4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "25483471-6fcc-4965-aded-a024995458d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bf9364-dc73-43f2-b0f6-bf2af161a8ae",
        "cursor": {
          "ref": "50caf0ba-f8de-48da-8f54-8944120b496c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aa60e8a9-b61b-45f0-b79c-76a049e08dbf"
        },
        "item": {
          "id": "e1bf9364-dc73-43f2-b0f6-bf2af161a8ae",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fa8e6f3b-2c31-4edf-8557-dd474675b815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b70291-1a0a-443c-8b77-dda2033f4bfa",
        "cursor": {
          "ref": "e82e9864-8346-4c5d-8ab2-8005e2c48450",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "75a187a3-2d7f-4f94-a2e6-233f917fdc2c"
        },
        "item": {
          "id": "b6b70291-1a0a-443c-8b77-dda2033f4bfa",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "36167363-2473-4d48-b2f0-a747b72033a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e31f58c-d755-4746-ab12-bc085b387553",
        "cursor": {
          "ref": "893fd0b4-26c1-456d-a4ba-e49d2abbaa27",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "896bce57-7637-44aa-9da4-9daf3a397541"
        },
        "item": {
          "id": "8e31f58c-d755-4746-ab12-bc085b387553",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8e7d0cab-5b2e-40f9-a26e-efc7df4dbd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1345518d-2190-4f3d-8e2d-f94750e452e8",
        "cursor": {
          "ref": "cbb81c30-629f-4f80-b137-8dc580ce0945",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e18f5e19-fe2b-4c4a-a4e9-31c5e3cae0bd"
        },
        "item": {
          "id": "1345518d-2190-4f3d-8e2d-f94750e452e8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a638a726-ca5f-4422-9b66-55e1007c56ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1e5246-b445-447d-8849-fe9b8e8c8e5c",
        "cursor": {
          "ref": "cb6829a4-fba5-43fb-9219-fc63949a95f2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f1b5c129-dc42-4870-be68-7bc634bb511d"
        },
        "item": {
          "id": "fe1e5246-b445-447d-8849-fe9b8e8c8e5c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e053c1df-6f53-4bf8-ae01-df988747a28f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb6ccfc-43f7-4db3-ab35-fa50d7a632c2",
        "cursor": {
          "ref": "bbeee7ed-2003-4da2-85cb-9918be7861f3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d0b82f4e-16fa-401a-9d42-5968aaf231d4"
        },
        "item": {
          "id": "5cb6ccfc-43f7-4db3-ab35-fa50d7a632c2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8711a129-d348-48f2-996a-3fb906d51ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a73106-3a39-4583-879c-d1de92f416db",
        "cursor": {
          "ref": "a78ab501-ebfb-4b42-9b8f-d73a4d41782a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c455360e-1d8c-430f-8f32-badc23266246"
        },
        "item": {
          "id": "14a73106-3a39-4583-879c-d1de92f416db",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0ff06e64-bd23-4acd-8888-4e4d4544d362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2404d572-5c18-4385-8414-dd9fca9a35ad",
        "cursor": {
          "ref": "60a4d503-743c-4ebc-ae36-8982f23fb203",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ed96f607-04ab-4da7-952f-0d5981b60003"
        },
        "item": {
          "id": "2404d572-5c18-4385-8414-dd9fca9a35ad",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5a95a196-dc5e-412a-9c48-46cceee928a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f02f9f4-569b-43cb-bf6a-d470ead38456",
        "cursor": {
          "ref": "c4cd05bf-b38d-4f2d-8da5-5060492ccafe",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "abecf18e-2b21-4c23-834c-70e94d0450a4"
        },
        "item": {
          "id": "3f02f9f4-569b-43cb-bf6a-d470ead38456",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ee0f9bfd-fb8c-49cb-9235-b1f5ff66aa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced4b1cf-2266-42dd-b3d7-26827853c17f",
        "cursor": {
          "ref": "be84c874-4c8b-4f48-bd3e-0fe01d8d6e10",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7c5a022c-4cc2-4815-92d0-cf9f65f40e64"
        },
        "item": {
          "id": "ced4b1cf-2266-42dd-b3d7-26827853c17f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bdb576c1-a291-4db0-b7b6-0550604dcfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80cae57-3c2d-42e5-987d-e0f9516f6378",
        "cursor": {
          "ref": "185e8b99-808d-4851-a240-93e2cc9cfcb9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b98b9982-47e6-4717-87b9-95ad3fd3609e"
        },
        "item": {
          "id": "e80cae57-3c2d-42e5-987d-e0f9516f6378",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1ee2cd4a-943b-41bc-8bde-10a3e746cff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad9d291-5cf1-4651-8474-2b0adfbee248",
        "cursor": {
          "ref": "58f8ce55-e547-4bc3-8457-29d8d937be8b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0b33b43e-bc5d-487b-b55a-627827addd81"
        },
        "item": {
          "id": "5ad9d291-5cf1-4651-8474-2b0adfbee248",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d6f60f58-a39e-4f9e-a631-e7e1451c9e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ad610a-9f11-4c57-a88d-06da325253f2",
        "cursor": {
          "ref": "ac593ad7-5670-4291-8b01-e93bf6faf045",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "aab6429e-c5d2-49bd-bf12-e522c89d6def"
        },
        "item": {
          "id": "39ad610a-9f11-4c57-a88d-06da325253f2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4b955ce1-563f-49f2-be43-425099209898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcf70f7-8671-4148-bb79-2769981a38c8",
        "cursor": {
          "ref": "4abfa33d-dfc2-4a03-b825-553d8e1889f0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "79eb86fc-6294-4c72-944b-29d3807ef07c"
        },
        "item": {
          "id": "4bcf70f7-8671-4148-bb79-2769981a38c8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9bd649cc-aa49-4adb-80c3-9a4a79d0dbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9bec1a-a583-420f-a02a-55ca68475a96",
        "cursor": {
          "ref": "2c59611c-5776-4c72-bdf5-df1d5e1135b5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f18323f8-76d8-497e-b8bb-3bcf2c65b953"
        },
        "item": {
          "id": "0a9bec1a-a583-420f-a02a-55ca68475a96",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "942091e9-0a09-4e5a-8d2e-32a25a621607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305f2819-5f52-43ab-a3a4-3c48807dbb9e",
        "cursor": {
          "ref": "270ebe0d-a9e1-47a3-81fb-71d24a87b2e4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b5150735-ff16-48ee-9f1b-4dd6468d5ba0"
        },
        "item": {
          "id": "305f2819-5f52-43ab-a3a4-3c48807dbb9e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4df31df4-fee3-4ad7-9df7-88df0f6b8e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37812e29-c78e-4cee-bb0f-999d85126557",
        "cursor": {
          "ref": "30d106df-487d-4f74-8706-84b9a6bdd1f0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3f2cbc11-c15f-40d1-9628-9d78c932c387"
        },
        "item": {
          "id": "37812e29-c78e-4cee-bb0f-999d85126557",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6b80e378-826d-4c00-a6aa-ae8449357715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d2150e-ec1b-4966-b3cb-78bab59fef2d",
        "cursor": {
          "ref": "dbe6476f-0747-4521-9ae3-3b56560d5674",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d2a60693-5fde-447f-9ac6-a83492dcb942"
        },
        "item": {
          "id": "75d2150e-ec1b-4966-b3cb-78bab59fef2d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d20aeaae-6e8e-4d7a-85cb-26ff110d0ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216eb3b6-2a34-4c90-a1d3-80fbc1aa8f78",
        "cursor": {
          "ref": "5b399847-a77b-4802-8094-fdf05e52f3b4",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8dc20a74-cf09-4210-bc7e-751acb07d048"
        },
        "item": {
          "id": "216eb3b6-2a34-4c90-a1d3-80fbc1aa8f78",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "edec602d-b77b-4b9f-af04-61f25b517618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fbe704-6cf2-43b6-8927-fc25474df644",
        "cursor": {
          "ref": "ff1cefe1-e683-412b-8fd0-c10250bc6ddb",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0265cffe-f31e-4543-8be4-f011b5fbe145"
        },
        "item": {
          "id": "48fbe704-6cf2-43b6-8927-fc25474df644",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1784ca62-271b-4d1a-bf93-d19ebc7dc1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3cd710-1af6-458b-bf02-ef10842723b7",
        "cursor": {
          "ref": "cf52a05c-b47c-460a-b85d-39b5a8ca9238",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "09f8b965-d0a4-4037-ac49-386463a396e2"
        },
        "item": {
          "id": "dc3cd710-1af6-458b-bf02-ef10842723b7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "396b4953-8028-4207-9deb-86b52d130427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ac111b-3e98-4e6e-b3a8-58e24391ad37",
        "cursor": {
          "ref": "ae4d4787-3b69-4c94-8563-27898cd70c06",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d619016b-a5cd-4a15-bb34-a5bf1d6a0115"
        },
        "item": {
          "id": "a9ac111b-3e98-4e6e-b3a8-58e24391ad37",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "da4db6c0-86f7-4c6b-ad81-757e25ca549e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeab0c7f-de0f-4a03-8b98-e0bbeac9f0a4",
        "cursor": {
          "ref": "6faf4aed-6fe2-407e-bd19-5052d398fac2",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "89585125-7382-411b-bcc8-50b0f5a79876"
        },
        "item": {
          "id": "eeab0c7f-de0f-4a03-8b98-e0bbeac9f0a4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7756cf7a-40d7-45b5-a2d6-0993b64738ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b99b583-b245-42ce-af1b-5165b66742f1",
        "cursor": {
          "ref": "f43a3cd2-39c9-4413-9b5f-0fd6e993bcad",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ec16b9f1-6d7c-48a9-8f74-4678f90d7a7e"
        },
        "item": {
          "id": "6b99b583-b245-42ce-af1b-5165b66742f1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ef28d666-3d34-4486-8379-bdeb2355d167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b26e93-3134-485e-9ed0-f490f76cc212",
        "cursor": {
          "ref": "aaaee283-dc17-4cab-8256-2114a45dcc78",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e569d65a-e7a8-43f5-bdd1-0cbdba1c23a2"
        },
        "item": {
          "id": "f3b26e93-3134-485e-9ed0-f490f76cc212",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "91a0baca-cb91-4e7a-ac19-4aa2c5b2a057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dadcbc7-3707-4101-8cdf-a9e28505d24d",
        "cursor": {
          "ref": "6109ba2c-025d-4fa2-ba03-58af10b0d655",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d4eb8243-d74f-4df4-bef7-50930e7a272b"
        },
        "item": {
          "id": "9dadcbc7-3707-4101-8cdf-a9e28505d24d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4c68bd80-8b9a-4570-96e3-b14a0c8878f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25611380-421f-4c68-ab11-2cb405a5c365",
        "cursor": {
          "ref": "19a75025-23af-4c2f-a395-7c0955d665fd",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3e88970f-3082-400c-9c00-d783b8ce2e86"
        },
        "item": {
          "id": "25611380-421f-4c68-ab11-2cb405a5c365",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "47a3538e-3ae2-4cb9-a8df-b98c71819eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acb24be-616e-40a8-ab05-a6ed5e771a3d",
        "cursor": {
          "ref": "b9f3152e-d023-4348-aff0-bf915f9cd70f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a38cc278-5ae1-414d-9aea-b72e92f7f0d8"
        },
        "item": {
          "id": "3acb24be-616e-40a8-ab05-a6ed5e771a3d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "84a11c0d-b5ed-4417-9cc9-b9a581f03864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3e209d-89c7-4c04-90e6-1d7f67cfc914",
        "cursor": {
          "ref": "0db14ba1-e5ed-4cd5-ad57-7ad9fb164fa6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "35031de9-9fdd-4ef0-b42d-8e14a44f9d5a"
        },
        "item": {
          "id": "0c3e209d-89c7-4c04-90e6-1d7f67cfc914",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a46248b6-1a45-4c09-84ea-f555ce8fbb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1e9d52-28e6-4b33-babc-9c5ed12c1bc0",
        "cursor": {
          "ref": "3caf6f87-7817-4080-9a0e-2dd39a7b4c85",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5db8253d-0307-4ef6-a81a-f350a5c8a10c"
        },
        "item": {
          "id": "3c1e9d52-28e6-4b33-babc-9c5ed12c1bc0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "eb147114-fc44-40c4-9987-e00baf51fb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493d5941-5edc-4129-b72d-12829a2d2065",
        "cursor": {
          "ref": "cd694896-077a-458a-8828-1269a3954eb7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e2d451ce-4e17-41ad-b312-f231c03f4a94"
        },
        "item": {
          "id": "493d5941-5edc-4129-b72d-12829a2d2065",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ca74716a-23ee-4978-a583-726edab9b5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5494a8c7-f666-4f95-80b8-6bc9381567da",
        "cursor": {
          "ref": "dc35c2ec-2e2f-4b50-b7f4-ecf23ec29aa0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "338ab87d-1a84-4b42-ac1a-68c78090ac6b"
        },
        "item": {
          "id": "5494a8c7-f666-4f95-80b8-6bc9381567da",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8aaef4c7-6585-4fe4-8e72-52eda4cbefaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bdd2d2-f43f-4dbc-a3ca-ddd6be88e69d",
        "cursor": {
          "ref": "eab68325-13f9-437d-959f-269d0aefb483",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4a80026f-cfde-43fd-bd56-b496a756ac96"
        },
        "item": {
          "id": "87bdd2d2-f43f-4dbc-a3ca-ddd6be88e69d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8309e7d2-e8ff-4a64-9d5c-2413155acac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fddec0-b15f-4572-819e-a9fd26854f62",
        "cursor": {
          "ref": "837a9f46-d626-460f-9c0b-6ea4652b5932",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b2fd259d-a8de-4a62-aa94-16215f9216ce"
        },
        "item": {
          "id": "d9fddec0-b15f-4572-819e-a9fd26854f62",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "33b09553-8c4c-44d8-b93b-2af4255b52a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d7e3c0-ac34-4d42-857a-71471b3cc364",
        "cursor": {
          "ref": "55371de4-7f19-4da5-b146-2e8be8d2e9e5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3f3de0a8-4cd6-46cc-a2eb-e944290162c2"
        },
        "item": {
          "id": "02d7e3c0-ac34-4d42-857a-71471b3cc364",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "25d95cbb-fddb-4c45-82e5-34a9806418e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef53145-134b-46d4-87bf-6f30510fe0b0",
        "cursor": {
          "ref": "769f1318-9b4f-4738-9eec-6f94d65c9b2a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "99be8d3a-2fb0-4f19-b068-bbf23004dae7"
        },
        "item": {
          "id": "3ef53145-134b-46d4-87bf-6f30510fe0b0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "626a7f9a-744d-49d2-b534-20c7c500967e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bf8395-2d0e-448e-ae1a-814176300602",
        "cursor": {
          "ref": "78a02747-bf10-4d1e-b14e-79acee66d09a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b5ebbdd6-bd48-4eb4-8d71-757304889c68"
        },
        "item": {
          "id": "75bf8395-2d0e-448e-ae1a-814176300602",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "17d05328-9d1a-4bf4-b464-06743afc2a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67897211-b5c6-48e5-a590-efe9361fb238",
        "cursor": {
          "ref": "09c978ef-de42-4e34-ac1d-8ef24298c5b5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f25f73ab-7fff-4765-b583-04d81f8db42f"
        },
        "item": {
          "id": "67897211-b5c6-48e5-a590-efe9361fb238",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "971ce6c1-b917-48b5-8d13-a799c8d00881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d364c691-e3d8-4ca4-8440-6d5d82c43727",
        "cursor": {
          "ref": "9a15eeec-652c-4eb0-8671-1e2d54e0407b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a113564c-5284-4ae5-a4aa-b41b1a7daba9"
        },
        "item": {
          "id": "d364c691-e3d8-4ca4-8440-6d5d82c43727",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7ecabb6f-966d-498b-9904-3a2bda809f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4101f429-0011-43f3-a58e-993505b74144",
        "cursor": {
          "ref": "1d7a2b68-ecee-4fbe-9e53-d6604c9c2e46",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f4e770ee-29af-48df-bc94-891dd7212241"
        },
        "item": {
          "id": "4101f429-0011-43f3-a58e-993505b74144",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a3d770ca-fe06-4469-97d4-5b2cd1f8caf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9e350f-6801-4f02-a1c4-87182428f7af",
        "cursor": {
          "ref": "e468b43f-fb4e-43f7-880c-ef46af85fde1",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "efa2936b-ee7a-41df-bb53-1d9a9befd564"
        },
        "item": {
          "id": "3c9e350f-6801-4f02-a1c4-87182428f7af",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "74221670-5359-4c02-9399-cdaa10c4ba1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf4f9c6-b024-4d66-9983-ed67661b75d1",
        "cursor": {
          "ref": "1a81558f-1a5a-4c61-adf8-2692a2f299dd",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "15119b4e-9c54-43fc-b10e-33732a9dafd5"
        },
        "item": {
          "id": "dcf4f9c6-b024-4d66-9983-ed67661b75d1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cb54b242-7c24-46db-80ab-7633b98796a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effd330c-d237-4daf-b3cd-723b8b2f479c",
        "cursor": {
          "ref": "e2ef10b9-c183-4105-9d31-f06f285f23f5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a55f9e31-77a2-44dc-8f8d-1fc6a5e654aa"
        },
        "item": {
          "id": "effd330c-d237-4daf-b3cd-723b8b2f479c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "06a5d285-8fbb-4afb-9f81-2634f504e039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a831f164-e2cc-49f2-9cad-9055e767be4c",
        "cursor": {
          "ref": "99c25147-dc9a-4886-95fb-d0684a2d67ce",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c29eb173-fe58-4c42-83d1-e4777167cbc2"
        },
        "item": {
          "id": "a831f164-e2cc-49f2-9cad-9055e767be4c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6b756f46-a1f4-4705-aec2-f9a32434914a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029575dd-e670-485d-b7a0-f250f5bd1795",
        "cursor": {
          "ref": "92c180e5-2ec4-498e-9dde-ef4fd5052ff0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b9ebe707-ca3e-4dc1-ad0c-b7282d097677"
        },
        "item": {
          "id": "029575dd-e670-485d-b7a0-f250f5bd1795",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9de32ed0-73b1-438f-9f22-efb92431c5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8445e7ef-42a3-417c-93c1-d87b696fd1db",
        "cursor": {
          "ref": "fc7958c7-cfed-402a-b4ff-010cf9b9337a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fc47b937-9685-4b5b-a559-9a23f2b1ff59"
        },
        "item": {
          "id": "8445e7ef-42a3-417c-93c1-d87b696fd1db",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4ac89c81-9da7-405c-89c1-8eb43ab26b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba3abab-66d2-4175-9632-02bb4ba47ff5",
        "cursor": {
          "ref": "fda335dd-93fe-4016-ac84-a614da5726a9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f644a7f5-50dc-4f80-834f-feb186a32785"
        },
        "item": {
          "id": "aba3abab-66d2-4175-9632-02bb4ba47ff5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "841b29fe-6537-44ce-8732-ccf08e2cf719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7922857c-c3a0-4aca-a0b3-251bc8487e0c",
        "cursor": {
          "ref": "0bea2105-38b2-42b5-84c5-438e9cf34065",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0b8dc704-d617-4d2d-a6d6-29666181d2ab"
        },
        "item": {
          "id": "7922857c-c3a0-4aca-a0b3-251bc8487e0c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7f7ac429-1413-47b5-9d3d-03123453661f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534fc148-7563-4761-a679-ebde8e412b4a",
        "cursor": {
          "ref": "dd098e68-e80b-4361-ac71-0bf089784b45",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fa71eb4f-8960-4e2e-9d86-58db5bd63cc7"
        },
        "item": {
          "id": "534fc148-7563-4761-a679-ebde8e412b4a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d1e91070-67fc-4d76-9764-4c5cb122ada3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a210cc1-11c1-4894-9644-cdcb85a9b480",
        "cursor": {
          "ref": "63ebf17a-bcfe-4982-9be5-3c77cb31324a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "491c8080-8eb5-405a-8528-480bf0d95409"
        },
        "item": {
          "id": "6a210cc1-11c1-4894-9644-cdcb85a9b480",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2052da34-ea6a-499a-bf71-5d28553c5f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255f2983-4074-468d-a02c-7da90d873e22",
        "cursor": {
          "ref": "cd34eb68-00f4-474f-80d5-b93394543956",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "83b5140e-034c-49b8-8e48-ff8faca93e2e"
        },
        "item": {
          "id": "255f2983-4074-468d-a02c-7da90d873e22",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8935e40e-271c-4b16-a96a-2213c301cf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20618a97-ca72-4452-9ab2-40398b6af904",
        "cursor": {
          "ref": "2af9df06-eb22-41ed-97b9-9097dcd67e17",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7808dbfe-004d-403b-8090-f2af9e695ad2"
        },
        "item": {
          "id": "20618a97-ca72-4452-9ab2-40398b6af904",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "02401ba0-b70f-4af2-8db7-f109a40b2b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfdad0f-e232-45ac-9919-3d3b9ec9c1bf",
        "cursor": {
          "ref": "fc12bacc-2826-4291-9220-95aa5e2344b6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ec110739-6508-424b-b32c-efaa99eb6544"
        },
        "item": {
          "id": "5dfdad0f-e232-45ac-9919-3d3b9ec9c1bf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4b477da6-680f-42ff-a2d4-cd9ef195ae93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b23a08-2543-4f39-9bd3-1d324c4eb49b",
        "cursor": {
          "ref": "d4ec9b3a-d888-47d6-a959-3dd36b6e5a69",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "23b5ece7-9f53-4a11-9099-b60806c06739"
        },
        "item": {
          "id": "d2b23a08-2543-4f39-9bd3-1d324c4eb49b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "003cdff5-c38d-4744-9a79-0ca399ebf58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f75521-428d-4b5d-99f2-e92073ea4119",
        "cursor": {
          "ref": "844f85bf-9dd4-4b36-b3ab-5c99925867f4",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8831c772-0d40-4926-9c2f-03b1986a161d"
        },
        "item": {
          "id": "f3f75521-428d-4b5d-99f2-e92073ea4119",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "85acb7b3-7775-44b0-b8c8-e412b0f2b3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb15462b-9106-4716-891d-fefb1ae270b2",
        "cursor": {
          "ref": "0fee8236-348a-481f-88f9-b3078a1b98e7",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7307f978-da8e-4346-9b61-0f8fd586e3f2"
        },
        "item": {
          "id": "bb15462b-9106-4716-891d-fefb1ae270b2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7da5b748-f714-469e-85f0-ead54e3201ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4521bb4f-039e-4899-8d55-5e31751765b9",
        "cursor": {
          "ref": "0aed72c0-7b89-4c97-a767-3579aff4f6b6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "68048359-e92d-46be-9382-7fd729267127"
        },
        "item": {
          "id": "4521bb4f-039e-4899-8d55-5e31751765b9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0dd34001-7a91-4de2-9868-eb8585719140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a440de9-84ab-4ac3-8d93-804ee23c63f4",
        "cursor": {
          "ref": "98c9002c-deb4-49ba-aee5-ede7b2a64e7c",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c88325de-13d1-46a2-93a4-8a26097ab607"
        },
        "item": {
          "id": "2a440de9-84ab-4ac3-8d93-804ee23c63f4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cc1371c7-82d9-4f97-964a-81b9ccda4080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083e36e9-1362-4fee-898c-8494d66dfecd",
        "cursor": {
          "ref": "6a63843f-7a37-4274-a278-3f32db2bfb4e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a215ae4e-59ae-4a2c-b274-4d9a04acbffc"
        },
        "item": {
          "id": "083e36e9-1362-4fee-898c-8494d66dfecd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6bb1ea14-92ed-407c-95cd-f527c4716055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62739413-1ce3-4727-9adc-a08452250fa0",
        "cursor": {
          "ref": "4924eae9-d179-4286-8c8a-71cc8a2aa3df",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3e847c0b-40a7-4f5a-866b-3e39560a5f78"
        },
        "item": {
          "id": "62739413-1ce3-4727-9adc-a08452250fa0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "557ab808-eed2-4ff5-8805-0e73ee9e5ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750be2a8-2008-4b36-b02b-44a59dead076",
        "cursor": {
          "ref": "213216d6-b4db-4c02-9450-4dfc679262eb",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "91d7ba92-c5cd-49d5-932d-f02149e76f5f"
        },
        "item": {
          "id": "750be2a8-2008-4b36-b02b-44a59dead076",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "767724dd-4a0f-4952-9a3f-dde94a0e2485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c22e7e-8f24-4011-b836-a0a6efed43eb",
        "cursor": {
          "ref": "3ce80f39-12e0-4769-a14d-621be6e4dcab",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a5a0f212-f45f-46b3-8137-54fab17ffc76"
        },
        "item": {
          "id": "e0c22e7e-8f24-4011-b836-a0a6efed43eb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "634703da-d1c4-4dbd-9b0c-0e5aa032a504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d97b95e-81ff-4116-957b-c845f733ff5b",
        "cursor": {
          "ref": "de3fd951-ba0c-4f2c-b009-3e3291f0105f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8a9fc547-bdd0-42ba-8cba-87a639a21b4d"
        },
        "item": {
          "id": "5d97b95e-81ff-4116-957b-c845f733ff5b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "31b3e301-c737-4db6-8215-634970e44754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a11678-5493-4b03-8533-ee683e59b071",
        "cursor": {
          "ref": "017d1254-0a65-41ea-adea-57c32259aa37",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7dbb3989-f1a8-4060-925e-0eee839787ba"
        },
        "item": {
          "id": "97a11678-5493-4b03-8533-ee683e59b071",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dff5f6c1-624d-4428-9d63-3b49a4485ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b9de97-a4f5-4a6f-85d4-d25d41e57712",
        "cursor": {
          "ref": "3fd4072c-d65a-4a21-97ad-67e932123de2",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dcb970f1-4e5b-410a-8f0c-025f6f50a60f"
        },
        "item": {
          "id": "93b9de97-a4f5-4a6f-85d4-d25d41e57712",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5cfa94fc-afa1-4f89-a956-b0f22d396829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cc4ec4-bae7-47b4-b57f-7933e429698c",
        "cursor": {
          "ref": "1fa3a219-0b52-45c8-a030-8947ca6307f5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "12b597b3-e2f0-41b5-b636-c7eb7437bbad"
        },
        "item": {
          "id": "50cc4ec4-bae7-47b4-b57f-7933e429698c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1723b989-2a44-40cc-ae64-add4099b8e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba284633-6286-48f6-a504-510e2a8a9c0b",
        "cursor": {
          "ref": "4f6dd4b9-08d2-4317-9255-4d5954cf5bf1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "340d9d98-6d2e-451c-a8e9-5dd806bbf619"
        },
        "item": {
          "id": "ba284633-6286-48f6-a504-510e2a8a9c0b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d2fab4c2-0768-476e-96e2-f1215918744f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124ca676-581f-4692-8892-688969f91cce",
        "cursor": {
          "ref": "19b31634-1ba7-4a00-a589-0b3e1c6e1750",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a3799fef-9439-4a37-9e7c-efe0d2a992f5"
        },
        "item": {
          "id": "124ca676-581f-4692-8892-688969f91cce",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7c85a7ee-8008-4c39-9ce6-4a3eeacc7f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989c2764-24f3-4129-8a93-4b6616386305",
        "cursor": {
          "ref": "60e28388-1998-46e6-9894-51c42ef590f8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7cc0ff26-b492-47f2-a715-6f8cd0503b83"
        },
        "item": {
          "id": "989c2764-24f3-4129-8a93-4b6616386305",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bda971b5-d45a-4fab-b8df-36940db00320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0292d6-bfcf-4427-bf7e-da5c409cc636",
        "cursor": {
          "ref": "a83a52f0-2e7c-49b0-8509-b8e521d2e9af",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b4062ad8-a631-4593-be3b-38a1afd4559f"
        },
        "item": {
          "id": "aa0292d6-bfcf-4427-bf7e-da5c409cc636",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cd7219c4-c08d-41c0-b947-4c0f98a07280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9718a081-5dad-4d12-a5e4-1e35ce6eaac9",
        "cursor": {
          "ref": "d10e5ed0-66b6-4d4c-9e72-e0ee3b49cafe",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "482d1168-45fe-4d70-b61c-8f57f0244e3d"
        },
        "item": {
          "id": "9718a081-5dad-4d12-a5e4-1e35ce6eaac9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "66d5520f-737b-4046-9e0e-39b2c7d4761c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4bd303-00a6-47fd-aa39-48eaf7a59200",
        "cursor": {
          "ref": "77600a7b-996a-42a1-bfff-afb089b4bceb",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4a37e403-42bc-4aef-af9a-cd05ac42f451"
        },
        "item": {
          "id": "af4bd303-00a6-47fd-aa39-48eaf7a59200",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4d2f41a2-36e9-49f4-801c-ab89904aa052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25757167-ad32-47ff-a538-d8656cec7a8b",
        "cursor": {
          "ref": "fd008969-20d9-4121-a11c-bf58584c2ebb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6c514911-57d6-43a1-962e-8ecdda177899"
        },
        "item": {
          "id": "25757167-ad32-47ff-a538-d8656cec7a8b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d21ed107-1a1c-4dd8-bac1-756ef30e3607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c02b82-df72-4f30-95cc-d537a4da5049",
        "cursor": {
          "ref": "065008ec-dea0-4d88-ad2b-c7bba848908a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c0ae1205-adc4-45b6-99f2-02dd515cb96d"
        },
        "item": {
          "id": "c7c02b82-df72-4f30-95cc-d537a4da5049",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a42c8c1a-01f2-4091-9b02-a251ddb396e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a73579-0d21-4d91-ba3a-1df2719152db",
        "cursor": {
          "ref": "7c40bc2f-e1c8-48d4-b0d6-b0dbdcae87dd",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cae4ebb4-6b4d-4fd3-8b97-f88f036756a1"
        },
        "item": {
          "id": "64a73579-0d21-4d91-ba3a-1df2719152db",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f403ec19-c057-467b-b811-764f75a71781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71aed9e-8d33-4400-8baa-2a5fde415067",
        "cursor": {
          "ref": "a0f872b8-9f36-47c7-befd-51b89c2de081",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "613445f4-287a-4a6e-b1e3-ca78c96f2771"
        },
        "item": {
          "id": "e71aed9e-8d33-4400-8baa-2a5fde415067",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f245fbb8-d790-4f9c-92fa-e1aab1dfe1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ecfdbf-b1ab-4b1c-b63b-47f3920c4f10",
        "cursor": {
          "ref": "2f5e4c9d-d666-4e4f-8b9b-f329b0d4b366",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6936a856-3a4b-4a97-a100-3987af3c9cbd"
        },
        "item": {
          "id": "72ecfdbf-b1ab-4b1c-b63b-47f3920c4f10",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a34d7c1c-1e65-416e-badb-0bdabded761f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4705bfff-e9a5-479a-8518-3e8ed56ab699",
        "cursor": {
          "ref": "1c92eb91-1805-49c1-b9b2-feac1b1a1a38",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "27c18deb-8f72-459f-ac46-e3c7cb05faa2"
        },
        "item": {
          "id": "4705bfff-e9a5-479a-8518-3e8ed56ab699",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7a8e20bc-691f-4e98-89e9-daa71567c60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173a4c75-f54b-4cca-a41a-a66875a6e920",
        "cursor": {
          "ref": "794e8f94-dbc2-47aa-95d5-4e241dbe2993",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "beea90ac-13ff-4597-8949-161368282232"
        },
        "item": {
          "id": "173a4c75-f54b-4cca-a41a-a66875a6e920",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7622642d-9d6c-4c3c-ba19-9c8b4b813a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e1b400-e81d-4b68-a66f-6631c6b979a4",
        "cursor": {
          "ref": "eac2717a-18d0-4d4d-8dbe-0315722d71fc",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "34374bfb-df25-4e9e-811c-939e0643faeb"
        },
        "item": {
          "id": "c9e1b400-e81d-4b68-a66f-6631c6b979a4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2e20a150-b934-4487-a8b9-8d04acb67849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8806ee0f-2e38-4b32-bb4a-62e0cba33853",
        "cursor": {
          "ref": "a8e3ece9-20dc-4e69-89a1-c036ddb5b256",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c64d71b5-13ca-4ffe-a8e4-cc1016e27498"
        },
        "item": {
          "id": "8806ee0f-2e38-4b32-bb4a-62e0cba33853",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "118fbbcd-8880-4816-b313-935e7f389cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a22274-bd51-4368-9d43-9d0b58393479",
        "cursor": {
          "ref": "e2447bc8-7ba9-460c-b912-f82edf63cfec",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0d73166d-6f6e-4881-a5d2-70e942ac587c"
        },
        "item": {
          "id": "19a22274-bd51-4368-9d43-9d0b58393479",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a028edd7-0247-4c5f-856f-a627820e7f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6839fb0-81b0-4ec5-8ad1-b89a2436ec46",
        "cursor": {
          "ref": "a559c18b-b056-4f31-a926-7c508c618c1d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bca36656-c0f5-4366-b7a5-af29a51cbd28"
        },
        "item": {
          "id": "b6839fb0-81b0-4ec5-8ad1-b89a2436ec46",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e2d16cb0-3988-48fa-9cd3-0d9482cf4a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333e7878-c8ad-44fe-932a-9418f30f093a",
        "cursor": {
          "ref": "f2a03c78-adec-4e94-81eb-0113ecf9ae7e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a81a3d24-c874-4682-b366-a67272340fe5"
        },
        "item": {
          "id": "333e7878-c8ad-44fe-932a-9418f30f093a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "80744355-3538-4c45-a670-11fbb0a3ea8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7698aea0-a79b-4efd-a6fe-4800ed8dd53e",
        "cursor": {
          "ref": "6af5ff64-4a66-4f09-9d17-33a48976f0e7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "53273df1-2be2-4f2e-9dd4-454d9058f8dc"
        },
        "item": {
          "id": "7698aea0-a79b-4efd-a6fe-4800ed8dd53e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "744dad04-f8be-4ac0-bf3d-e38cc9f5f90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be46eff-49a8-4865-8ca8-db96121c826b",
        "cursor": {
          "ref": "48de1f64-12aa-47eb-b526-c4121e25016f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0e82632b-2944-4c57-8a62-ec13ca2ca945"
        },
        "item": {
          "id": "3be46eff-49a8-4865-8ca8-db96121c826b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0890504a-1859-43d1-91e8-f23fbb776de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c276bb5-6e9d-4337-b1e6-ec918792b764",
        "cursor": {
          "ref": "5e697792-83e2-42dc-ba72-e152d1724a22",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d7b4766b-cf55-40ca-8dcd-9356c087972d"
        },
        "item": {
          "id": "5c276bb5-6e9d-4337-b1e6-ec918792b764",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "14811228-f476-40a5-8d47-0dc2b3c502c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fb5fd6-95da-4655-adc7-e8d935ac02e4",
        "cursor": {
          "ref": "08142f7a-3eeb-4436-ad54-30f71b41bcb9",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7553cccd-033e-4cd1-8472-2f40e968d28c"
        },
        "item": {
          "id": "f5fb5fd6-95da-4655-adc7-e8d935ac02e4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "263b9ca8-c0da-4eae-9204-5315f0aef0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0308228b-6277-4705-8125-331630df04a3",
        "cursor": {
          "ref": "efaa5aa6-2d3a-4a12-86d0-5775665c9d08",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5a56ee43-8ad1-4ce4-8660-d9be3c969ecd"
        },
        "item": {
          "id": "0308228b-6277-4705-8125-331630df04a3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "40d4c9c5-fc97-4b1c-b945-8e29c4479676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14bb349-5e5a-417b-bda0-c14a7101873b",
        "cursor": {
          "ref": "0bc15829-11fc-4a65-bfaa-609c39b6676f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "acae376c-5868-4946-9f29-d49b22b16994"
        },
        "item": {
          "id": "a14bb349-5e5a-417b-bda0-c14a7101873b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "986f3ec3-c17c-4117-85bd-d9b835ebec09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05058b2c-21a0-4e9b-991d-d8e7b184600d",
        "cursor": {
          "ref": "605b4a5e-0807-4c40-9065-642e1c0cc71c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8ae52bf5-a50a-49c5-8ae4-93294e9f3340"
        },
        "item": {
          "id": "05058b2c-21a0-4e9b-991d-d8e7b184600d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fe1f8102-057e-4036-ab3e-225dd3b2f62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2db3484-4122-45c1-b5c1-7c596569c3be",
        "cursor": {
          "ref": "cc5ea2e9-8761-41b6-870c-af236d5799b3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4e29d91b-3e0e-4a54-8b2f-27d17c7b0378"
        },
        "item": {
          "id": "b2db3484-4122-45c1-b5c1-7c596569c3be",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "01235942-f58a-4732-949a-e33e11e5d30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4091646c-9331-4599-a9d6-318ea4b36a99",
        "cursor": {
          "ref": "1ed16ad3-6329-4669-bfb2-556f80a39e88",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "92f17404-27fb-4e77-8f10-b8c244d8b311"
        },
        "item": {
          "id": "4091646c-9331-4599-a9d6-318ea4b36a99",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e548a5cf-9fa9-418f-a06b-79abfdce87dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b6e203-42e9-43b4-9399-dc2ec9ccc8db",
        "cursor": {
          "ref": "b5956fb4-49a3-4561-ba4f-f82a256aaa16",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6fddbde1-d4d5-42df-bd23-6c0b1ae648a4"
        },
        "item": {
          "id": "78b6e203-42e9-43b4-9399-dc2ec9ccc8db",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2ff088b9-c16d-496e-b605-382b7e5b0b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5728dc27-8157-475a-9565-a7c006843780",
        "cursor": {
          "ref": "d8f98583-e46e-4738-a1bb-bdd449ca96a5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1cc587b7-fec3-4eae-81da-0337cc838187"
        },
        "item": {
          "id": "5728dc27-8157-475a-9565-a7c006843780",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "519a98a0-2c59-4237-a3ff-a5ebf4c4420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d518a7d7-2702-4038-8157-469a615ebc25",
        "cursor": {
          "ref": "86c09cc8-eb0f-4f98-88e8-d90da3eba4a9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1374eb58-7c01-45da-bf90-63b39ef78693"
        },
        "item": {
          "id": "d518a7d7-2702-4038-8157-469a615ebc25",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7f83dda5-ab61-4ef9-bd4e-1b8eedce5c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bea276b-6f9b-4c12-a192-ef5b47bbc83a",
        "cursor": {
          "ref": "618cdee5-e329-4aa3-8d65-dddbc51db524",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "12f12a2f-9b62-42d0-8de5-9b8fcdce4ef1"
        },
        "item": {
          "id": "6bea276b-6f9b-4c12-a192-ef5b47bbc83a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "12af1415-b060-45d1-a02c-23255c5ae8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b0d9ab-f4ee-46ac-83a3-a3a049a50708",
        "cursor": {
          "ref": "723c5934-2cb9-4397-9244-75e7f9d90527",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "79159011-5d1b-4c95-b8fd-6ab3ed1ac123"
        },
        "item": {
          "id": "a4b0d9ab-f4ee-46ac-83a3-a3a049a50708",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4103cd0c-5a3c-4c29-a488-469a47c23cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b5e745-f550-4e89-a1a4-5240c6f3fa66",
        "cursor": {
          "ref": "3772e294-cd66-434f-b100-ca8bb0b16d7d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c61ddc63-4906-42e9-8309-5a76ce0f8d4f"
        },
        "item": {
          "id": "88b5e745-f550-4e89-a1a4-5240c6f3fa66",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d7cda922-c224-4634-856b-fcd6ef0f7437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb2a322-1fee-4fc5-9f95-0ea932dcf95e",
        "cursor": {
          "ref": "a8cfe683-0be3-4491-b11d-508e623bf268",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8107ac0f-03ba-4fb1-91b2-0998151f02fe"
        },
        "item": {
          "id": "bfb2a322-1fee-4fc5-9f95-0ea932dcf95e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "29186031-5d34-43f1-a4d5-23af739f3ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83ace0b-9740-4cf8-8cd2-b3726dff1e57",
        "cursor": {
          "ref": "d19c261c-7689-4e62-b8f6-6ce85c0d5f97",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a34ef45c-25b7-4c35-a368-ff1eb12441d7"
        },
        "item": {
          "id": "a83ace0b-9740-4cf8-8cd2-b3726dff1e57",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d1315a9a-342d-4b85-a0c4-ba482c0b5e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b7e913-72a0-4517-9415-8b54911a3419",
        "cursor": {
          "ref": "d11fad4c-00f5-4644-baf5-6efdc96401aa",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d2223916-8ed6-4217-a00a-b4d71a4f901d"
        },
        "item": {
          "id": "64b7e913-72a0-4517-9415-8b54911a3419",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0247601c-e56c-4400-a443-1fa8066d1792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ee5a2c-2a47-41c9-963a-435fd0f481ca",
        "cursor": {
          "ref": "390416ed-2ea9-4a68-8ab1-49a2dbaeecf1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2364e8aa-41f1-4ab4-a764-4482d1a3d883"
        },
        "item": {
          "id": "53ee5a2c-2a47-41c9-963a-435fd0f481ca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bc2d7916-346d-43fd-ba8f-1e20b28c828a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b36340d-b48c-4085-b2bd-bbad0108f0be",
        "cursor": {
          "ref": "b6ec48c1-5a28-44c3-9dcc-cb047cfe2871",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f7c38247-c049-4478-a680-9e2c9515e1f4"
        },
        "item": {
          "id": "9b36340d-b48c-4085-b2bd-bbad0108f0be",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5d975e67-b58a-4c0a-96f8-699086d7ea10",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ce90fb-ebd3-4fa8-bb8f-1d9cdae35e07",
        "cursor": {
          "ref": "38f74186-a66d-4936-a230-ca543da1394f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4ac0ebe1-2da2-4239-b3c1-cc5ef60761b7"
        },
        "item": {
          "id": "81ce90fb-ebd3-4fa8-bb8f-1d9cdae35e07",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2770e5a0-72f1-40b7-b8b6-fd44a0731810",
          "status": "OK",
          "code": 200,
          "responseTime": 1652,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dd70f7-28bc-432d-a0bd-388c1dcc3af5",
        "cursor": {
          "ref": "e486926e-b61e-4add-b7a9-b98867d55dd2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b38fbfc5-a71f-4a29-bc85-926f1422c062"
        },
        "item": {
          "id": "34dd70f7-28bc-432d-a0bd-388c1dcc3af5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ca509a6e-1e99-4184-a45f-ab867751c3f8",
          "status": "OK",
          "code": 200,
          "responseTime": 1566,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49d3fb2-63ff-4de9-8f16-a7c2b78654c2",
        "cursor": {
          "ref": "e05534ed-045a-486f-ab3f-ab72f0e6717c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "61f63146-2ed4-4b40-a438-058876bf4939"
        },
        "item": {
          "id": "c49d3fb2-63ff-4de9-8f16-a7c2b78654c2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c902314b-7c9b-4c21-848f-9a85530c65b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49d3fb2-63ff-4de9-8f16-a7c2b78654c2",
        "cursor": {
          "ref": "e05534ed-045a-486f-ab3f-ab72f0e6717c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "61f63146-2ed4-4b40-a438-058876bf4939"
        },
        "item": {
          "id": "c49d3fb2-63ff-4de9-8f16-a7c2b78654c2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c902314b-7c9b-4c21-848f-9a85530c65b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6016688-e5d2-44e2-ba63-84bcb8b1b0f0",
        "cursor": {
          "ref": "b1d2a100-32b2-49de-aafa-5d3149a9591d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fc407ff3-2c57-4365-bf6b-de9f4a3764a7"
        },
        "item": {
          "id": "e6016688-e5d2-44e2-ba63-84bcb8b1b0f0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e2ebc4f6-6323-42da-bd01-adaeb2b77f70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a284c067-db04-42f9-9eb2-cc069b0f6634",
        "cursor": {
          "ref": "e1c4b45f-ab24-4d8a-bfc6-3108129cc0a1",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "df3b3e5e-f553-4124-9a88-d3c8bbbf86c0"
        },
        "item": {
          "id": "a284c067-db04-42f9-9eb2-cc069b0f6634",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0afd616-49aa-4c35-929f-07938b693d15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}