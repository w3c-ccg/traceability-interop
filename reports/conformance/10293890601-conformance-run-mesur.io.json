{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "60719e57-82c3-44b2-b047-ab2846e31199",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bde012cf-a5d6-42f9-941d-bf24e97b98a7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60702c44-bc20-488b-99cd-accc3ba8360b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8eab8f52-4530-4e7b-a45e-2738b4ff7852"
                }
              }
            ]
          },
          {
            "id": "08a8303d-73d7-4597-b981-c7fbea1cdcd7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "512654b7-1e4f-415d-a396-56c3b3bd7b6f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dbe881f0-8d24-4549-8e12-f8ae7c49bc39"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fd6c35d7-031f-4cea-a0af-c5c1c9de77d5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "381bf097-8b78-40a9-b323-1cf4bce2022f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ccd2b7b-dde6-4224-afaa-bdeb064eaf5c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f22ffabf-e22f-49b2-9c4a-9bd9e0c6599f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82998cf5-95b0-466d-85e6-868fa9cf3d45"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21dba900-342c-4745-94bf-a209d4f5bc57",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ea50e36-6aee-4577-b317-24327c9ed1cb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eb27d2d8-f8be-4982-8145-fb4cac2a211a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e194f621-b0cd-4d68-b5ac-796110752b91"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34b33708-751e-43af-9963-062347761ff1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e64fdc2d-c224-42e9-bf33-51d215b3df5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd08706a-c010-4f32-ba82-fb56d1e76367",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "055c9b40-b323-4461-9344-8509582ab7b6"
            }
          }
        ]
      },
      {
        "id": "4d8aa8ce-7045-484c-8a24-2ebc6eaaab50",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f4a6e78e-9cfa-4274-80ae-7e915db5e72d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d6a827b-0381-4d48-916e-0ae200ff52a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f57d0fb0-6d0e-4d22-b90e-b92607af32b4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83295ab-1641-41b9-a8e5-f77622292620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45cc8761-602f-4c3e-aa48-d8b09e18f41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79e58e4-aed2-4f7b-b5b0-5a2bfa9f074c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445c8499-0a35-481b-be83-848eaa6b9e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c39acfa7-b2bf-421c-ac12-6ab8724af694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa9e86c-df1f-4dba-a8c3-ce3a359d6b15",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28caf32a-3886-4e76-ab1a-0c15cac9412f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db06d686-ac3c-43df-914d-e6a3b0cd5d7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4943ee9a-3531-4ae4-9384-032003e63684",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "667abef8-fe1a-4d2b-ab49-f7cd9d80647f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5468bf1d-9386-46a6-86d7-678cc0860acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0477f3ce-468b-4a06-a54c-a872077d5a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f2bd6c-5f6c-416e-bb6e-b4a70669c85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4616235-fdf8-43be-a57e-e882cb56cf6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "969ee2ce-b6ce-4e72-b076-3edc251df0b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d9e1373-70a5-4bb8-9f64-8ab0ba81c344",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b1f7de2-5828-4c5e-8c9b-69e28abe4b61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "295dd6ae-db40-4ec2-ae22-e5954c092bf2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4797e651-3516-4040-8279-f5eafc9b6a2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5b4cf92a-26a1-46cb-b5f0-cc4253450932"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cccc900-325b-4a64-8585-662352024489",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93517668-484a-4e58-ac27-38294c9fc817"
            }
          }
        ]
      },
      {
        "id": "89834114-35f3-457f-8295-cb2b5c750ea9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "33d62fd9-3ade-43d6-bd55-3ee727f5421e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98a9779f-8cac-4db9-aa62-c9b0eed15838",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f215813b-d4bf-4494-93c2-8a3142f0d1f6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9aea898-0e59-4d52-a4fa-5d9021f71c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fe26a6-78e9-48fd-8051-8df5e6792b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1961f09a-46ad-45ce-ba36-e705560ab632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2e0862c-1cfa-4174-b22d-143c82ac89fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5534e3-c2e1-402c-817c-2845b296f4db",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccd6c4a-9c85-4c80-a136-a17e2d741616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb69d97-da53-44a7-b4b6-97324698472c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59dedcb-9ff7-4073-a4fe-3d0a27fd8f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f4e4c22-1c55-4ff8-9d68-499f761abd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631a1f10-1558-4a78-b914-cefb5f868206",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42196dad-b76d-4e14-8506-e6b7d8b5f2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55132ed-23ad-415c-92e9-1ef6aed7223a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd985ddd-8c67-4b49-9ef6-925051f76ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9538e5d7-ad34-439e-9538-d3af908bae1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b74067-e721-460b-b235-38e9a1dd1911",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13705989-a0e5-4a26-9b87-61b7d90bc078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468bc696-da15-468f-b2d3-3aab64e8fc04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe0593a-bc40-4527-a483-c69fe630913b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c04e0d0-b272-4c88-a67d-fbfba79abd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc01a80-566c-4e80-b31b-c22b45311185",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638dc00a-d72f-45ed-b015-5fbede8e5da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cca31d2-a301-4d8b-99a8-e607e2e823b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfd9f4e-25cb-47d8-9ef9-62d8d489e0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00218d8f-5c4e-4320-ae0c-b91b281751a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66d08b9-55aa-40b5-846c-5ef497ec539d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8bd5e6-62d6-4964-9650-1a2ceb7e2d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c577f29e-fbee-4344-b384-c8267b223998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c201a7f4-561b-4f44-a02a-c1c74ba91dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ed2ca92-30a2-41c9-a46e-d771550d0511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a41fd6-2b9d-433d-be7a-cf6936021cdf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3b4307-f28a-477a-9869-e9d2fb5473a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be11b9ad-bce0-407c-83ae-dbf414ed8e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f97128-1edb-4404-8bbd-433d1e6f5f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a44ccd5a-ab4d-418e-98e6-c676d607ae52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b693fe1d-789a-4a39-89f1-148641c8e33b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58199d33-c82d-4066-8690-ee9911d10f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ce0b76-7244-4d24-8797-ffdf67b30dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc62f5e2-638e-48f0-814e-7141f8d42378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1bf9531-f423-423b-842f-e472ff81f906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe76714-ad63-4d8e-afe4-330bdf0f820c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b3c068-2b91-4f10-b108-3229522de4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c87c823-aa72-42b7-b668-5ed1c2a38ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0885d4a0-6cd3-435d-a759-91092a63b671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4189cb53-5449-492a-ba5b-a7d2e5098ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a933c19-f77d-4ad8-82b6-e352d1b4d527",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b837a81d-8274-4343-b262-3bc9fe425ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9386c6-9c39-4808-b721-bc9de35516c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9b79e6-badd-48f4-a61e-eb9be556e9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55292d05-18a9-4316-8f25-ac0b737331a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e70788f-d517-4062-ab36-07cd36a08946",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d705b1c6-9e9f-4e92-9326-416cd1f4c8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dd4f72-0802-4432-8ff7-dd3bf7899449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4021ab87-d7c4-4106-8ce9-56e1a7fc9fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70fd625b-c494-4f11-a4b3-1e1d6a36589b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa4806a-79e3-4324-bea9-59e0fd2b858e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9178e6a3-71ab-43b4-9709-64407b7690cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ae515d-79ba-4cf2-99b3-9068205da1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ac0df2-1424-4f59-8eff-e6c8ea027c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97e2ceae-6c26-4b55-ad66-75cfc6f3c909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2375fdbd-61c2-45eb-ac8f-8cb2e57dcb50",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156e29ba-b44a-4c45-8771-b3945b449f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b915e821-0820-4961-9ba8-384ea1b13a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9643f4c6-d44b-4792-913c-638f05ce3bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba0ff8d6-4801-484e-95ab-5d6179ac74f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aef676-3625-435c-9647-3d635e8f8cd2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f9627b-aafb-4392-b5b2-e0317755d100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822a56c0-7c61-4674-9027-59996ab7bb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e210403-9920-4fd7-bd42-26aa0c19f82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736064ba-2f14-4b1c-88f1-5e36b286d111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862b123a-40fb-45f1-b6c8-b418472db939",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872253f4-f438-485b-9ceb-0b29e038d06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ccba41-496f-4144-a659-38c327eac5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f3c01e-5ce6-4fe2-b27f-4399e211bf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6064d157-90c9-487e-a7ae-8a43a8e2d3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fb2d2f-3fb1-4930-a960-0b605ee3aca1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892fe39b-908e-4fd0-adc6-c5c269976217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39902bf2-15ce-45f8-84ae-4e21b3319f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dea20d-a7bb-41a9-b956-be68cfffc301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97eb9995-eee4-4fd3-ab78-6176a6ccd8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf28fcb-7141-48d1-9541-55dda87e4efb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55499379-227c-4067-88d7-60fee49a5b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c55b6b-63b3-48fe-89ea-0cb6cb1dc660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ad2fcf-1b4a-41ff-ab28-f7c498c76ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25870295-795b-4280-8e2f-cff29299d056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283f2291-22bb-4074-be29-2b8f28e30443",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69144066-7dd2-44c0-91c5-f516f6626d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175f7ca2-ff52-41ec-8e72-19d4b426adc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10db3960-0534-4066-adf7-4e62621d7fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb7a658-6039-4123-98af-f1d99e7c6a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1b6367-5099-47f0-9547-3da772cc984e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f59e9fe-deaa-4e76-a6b8-4d280974cb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b98b15-fa22-4c46-ba82-aeb6cb93e1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9eaf05-3ee2-4a6b-9233-0d41469e16f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da59b305-dac8-4775-b3c1-079a5d4aff3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db9013a-31fe-40de-8a3e-dcea3f7eb080",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9c1d32-e204-4f5b-95d2-70c895585f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2a0ddb-fb72-473f-8393-59f0e12a8261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef88453e-c950-4f9a-8d39-acde5b364f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7dea1a2-2f6e-49ca-af6b-bb818bce7c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f139799d-30b8-4587-a233-9c0fc61bc93f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7898b12c-d559-4527-b79c-74f84f076d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81538f90-2a26-45f7-9b57-d26c693ee52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455b199e-c583-4198-ab78-84e92c4f888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d220b43-eeeb-4648-9faa-478b336c03d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a403e217-060e-4ce7-95c3-e692dc23973e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33938b6a-64b4-4f0e-ae01-167c972307cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fe90f0-ebe6-4aa2-87c3-b382cdf43f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453038d3-6402-4b64-b2c1-4c43aa9dbee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12fe3bae-6aab-4079-9b8c-7cdadaaa8820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21375d6b-e884-4bba-b5ef-e58b813cb58a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20770533-3640-48d0-b0b2-4dc8d7cc262b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85484a1-66c7-4b71-b5ed-7309bb569cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5c2ac2-bd98-4d33-a64f-d836774b410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "162951a1-740b-4265-8850-08c96d01e382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb808bd6-c6b1-46db-b8ef-7aaa97c1927e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f6eeb4-f199-4aa0-be71-1aa97b053803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91572558-3c76-470d-949f-7e9e6928f1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340953be-9f7b-493a-8bc9-4ff89324ed5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea72c44-2cb8-4e8d-8555-b00bf4197daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99999b28-f2ec-4ff7-8081-cf7c9455fcf5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a192793-e118-4b3f-967c-24180308a6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d28676-6cb7-4579-b938-5dccb946f3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191f49b7-bdca-4936-96c5-08f632cef9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "955f71c8-13a5-43db-8f83-6047d4fe6419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958f199c-66e5-494e-bf7f-490743d987ed",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957f6943-2840-4e62-b80c-8260e55432ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2bc3ae-2178-4679-8d7b-01cbcc0b0c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec09d83-0495-4ef8-bd1d-cc8a3971f76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f6f980-8d18-447e-a714-e39b8dc10ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8c2488-c02b-4db0-8bb6-2773b9b49853",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae21020-8835-4c94-b6c8-eea6642f3f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd35111-2774-4d99-a007-9080c5b5a9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f24521-11a9-4654-82ce-c36df3fe09fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abcc1b5f-f00f-43dc-b3a5-bc7c2b864cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61b2ef8-09eb-443b-b301-7e18cce98a49",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bf69bc-a929-4457-846b-a40e5d32ff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2823e736-129f-4f4f-a6d9-5291b3077fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1076e783-07ed-4cff-a30e-883046bfa64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e5cc30-888d-4009-b402-cee135393a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2b01e5-be72-44f1-8f97-e523ee98e991",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6742c30a-0ed9-471c-a2e2-44f0a6aa3097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe596978-b131-4a06-8626-68729af07888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c8281d-01cd-4f81-9ecb-12c7d956e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4714363-d0c5-41de-8c4e-cc80d5394655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9362a8b8-0508-4581-b398-356e7844e265",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b781765-fcb7-452d-a46e-ad704f66a44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad75d41-2287-4592-8ec1-7173b3b15871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cab2598-6639-4606-bef0-dda0bf9400c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0810df79-3fb7-469f-9475-9f70ccd50144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f962f9-cf97-415a-b6df-80af94bed606",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2453bd81-6746-4b87-9579-83999d61328d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d685f1c2-fdc3-48d5-be04-2695ea5a44a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632409e6-821e-4710-8763-855b34203199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "566f2d58-c357-4000-95d0-a182a4840a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41dde31-1484-4eb6-8fd9-318f7e0e4a9c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fecc032-7cdf-4f19-a091-430254d62a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8350ce31-5c73-4f4d-ac31-cef395fc2291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6b5ad1-c7a9-4867-a440-e0aad0961da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60178b1b-540a-4349-a08d-9e0c82763a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d6c8bb-f6a8-40e2-8beb-baa46aadd084",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95b49f9-4608-4162-9472-20ac2c250f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837a2337-1123-4ad4-95c7-5b09cad048bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627c96a8-8d02-4daa-ae3e-d7a999e6c18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "450fa8df-da74-4b12-8049-af3dfcc77725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8f7f52-5f97-48f8-a57a-ffb821fdc6a1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8a9f55-3c0f-43f1-a308-d295909a8520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee4f2eb-3161-4014-bf15-c459d94830f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365d228e-bf40-41c3-9154-362ac0220ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ac7f32-b70b-4fa2-9eda-25534cad18a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359cc085-bb19-4192-8feb-e18f63972705",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1822dd18-c948-49fa-aa5d-322a9ac872d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbbfdd9-8c23-4e11-b601-e003b9491d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732682b6-d187-49fc-ab5b-398367163080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0e7148-6e52-48c6-8fcd-facf58d993b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd86a651-3b74-42c0-af81-11e03669b74a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e636dace-7e55-4638-b272-1d868315ca0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "074d491b-08af-4a56-a506-84b636b248ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da21c603-bf0e-4037-aff8-7f7349a83c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2eefdd-365e-4b66-ad7c-a44621a36cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be2ddaf-1122-429b-8935-a641416191c0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb38d2b-96b5-4ab2-a9e2-cf658e74a21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6524b627-b20f-4277-9c64-182030325a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addf49f0-2b6f-4363-a875-bbdd33b35358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e368f03b-f2a0-46ca-b6df-74a518170360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb85b03-8cdc-44d6-be89-546bfbec007f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8d69d3-a07d-41b5-8e3c-15dffbc9ffa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72ac2e4-b763-4461-9a73-ab59db82099b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c790797-c23e-445e-bb98-64eb279d89fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06254b8e-b5ea-4ac5-9b8b-330d041a2764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53345d12-62d4-4ba5-ad62-97a1933803b2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669124b6-fcbb-4f3b-ac3c-e4fb7573d326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f367f6-4da1-449c-9a85-31bbf3a17b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d5ed48-2d26-42ef-8e65-7de105ad1e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2df3652c-ee57-4076-af40-8bb7d7e6d367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce384962-096f-48f9-a7a3-97c0c5869c2e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a61c715-7f67-4d11-a62e-8f943b531b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d84e3be-03bc-47f5-8798-70aaa710756c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd871039-b77f-472c-9700-9397abc971f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f10cba7-d084-43d5-9b74-a9b18f2d3c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393e888c-e706-401e-a49e-e9fbdc0cad93",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c89712-59bb-4dc9-955b-72f85a48f82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307ddcd5-77e5-47aa-915a-2c0ad28a747e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20230919-31b7-4bde-9c52-6d3655a4bb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "104739bc-b81f-474f-9ac3-2749ae58eafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031d6195-3b83-45da-b22d-048cd89f1de6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70425272-af9f-4353-8768-90d7d95b77e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a3458c-f90a-41a9-90cc-3e63dff2ad88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6dc675-b352-4113-9ffc-c38e8acd14d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6562d706-7bae-411e-bd9a-f14b2ea8ee0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e017dd-d122-421e-a10f-0d701705c89c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634dd1a2-54c5-4044-8cb5-2c1caed15cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c441627e-5af8-4056-b065-aa7dbf82fc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723d2f30-fee0-4e52-9e62-0481f24bf998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1a7566-5a37-4fcd-bacc-621905b57d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ea6d38-68ed-445c-a894-8ebadeb2f642",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8015452-f45f-4f1a-a09e-7176935b2e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5e862b-2007-4fcd-a646-0ab6db875cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea11a9d-d9d7-47e9-aa17-87e185b8593e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce8086f-db62-4ba2-a713-4515be97b796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e491c5ea-b30d-4eda-a6dc-a7b46d44343a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e338f4-1059-4bda-bfc5-b3e69e8a892a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb23704f-62c4-4a8f-9ae3-4468b497bced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9767a1-33fd-43e6-b90c-3c46f4ce99f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22ca24b-abe1-4104-9533-2bd1d99a8dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f06701c-3868-4981-a771-8c8b43d85f04",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a32dd0-46f0-4e3b-9950-f5646f8e99c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709a2a04-5dd9-4ffa-a64c-e4b7fa9d9e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c7aca3-62ed-4cb9-a489-b1811e1bd0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "528dda2e-3a7b-4365-99ee-bbb3918bcd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98685b7-42b1-455f-9b14-1e093ec8cfa5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec248ccf-99ac-41bd-aa9b-11aa269e4b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec61369-c29c-4625-a9ce-51e35b33ad77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e42187-7fd8-4bb8-a456-81e2b0f9cf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a01842e-b21e-44c2-a62a-c45f64e7582e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c754fb1e-07d7-4de6-86de-8480195c708b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2902324f-4262-4b3c-85a7-39f9a0f7e36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123af5ad-ec07-4410-b193-f1fc5b6ef9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ded174-756e-4a4d-8503-7b3f90a60ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73868d98-4ce2-4389-a7bf-fd8cb906bf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb513ec3-8950-4a39-825d-bf65283eb448",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd1fe03-0cee-4324-bc6e-2b3e9d67b1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca585166-afd7-41d8-bbcf-c812cbfb001e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403b45c2-b09d-43e1-b869-1c5283cbe915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d96af32-85f2-4bfd-b8ec-95d2e3098ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17071cda-333a-4be1-a2c2-3ca57775a7c9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e74d6a-d46c-4a39-8c90-83685f295fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2694689c-27e9-47d7-8bb8-80e3e3bb316e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c288402a-3602-4b3b-be63-17e297e9f759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51808fbf-64f1-4a2b-be6f-83dcf2f875a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728ac5fa-6db6-40d5-bdbd-caf82747cdad",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4ffd66-8124-4144-a875-702410665227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a0dfe8-87c1-4ba0-bcf8-1d99e67cf2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f04d9c-526c-4a98-94a5-451e72e590db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d14b89c-d00d-4e14-a372-50cd17f5aa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edddf11c-c551-40ef-9669-2b80e2ac2e6f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a977b5-a69e-483f-b0ec-ba2109bcf7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a3ae9c-ae41-485a-9dc9-cd9255c69c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19470c73-e729-45de-b8f8-5dcc65a013db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c080c0-f2c4-4817-b35c-d14f371a950f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85afeff3-a603-407c-8c83-cd17f263c3cf",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce874d0-d20d-447f-9297-822bd414f0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2740238f-8dd7-4094-83b2-bd7caaad1f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99243377-a164-4295-88e1-2d7d2f137128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c41a995-d719-4ce6-a942-87f08a1311c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdeae28f-85a9-42c0-8bad-7748cb9a817a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6915e307-9061-499b-ab12-4c2dce1f912e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe19137e-257b-49bd-96d5-63788818b0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da58fb57-92e2-4df5-9dc4-46474f5fdd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f38a04-5967-428f-84c5-550f4701e307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a99f75e-113e-4148-ad32-9efa6035f7cc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b21018d-f043-47bc-920e-a0841467c799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1156e8fe-e9ae-4428-bb8f-03a020abfc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2df581-ae44-4968-a5b8-6aa9769d31a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb13aa1-bc4f-4051-88e1-a31e80250ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ed6cf8-397b-4ef0-a7eb-639a5bdf3763",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c044e176-a358-48d4-b97b-8b2f1697d4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd77049-1921-4fc4-9cc1-c56b38fc7989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e328be-0e9a-403c-b561-dd085df34022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a47e02b3-f19a-4cff-af83-42978c8547ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b8ec32-3b37-445b-92e6-bf99cd14f645",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d6f558-1ab2-4c8b-9767-8998367ceb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683cb8e2-06a2-47c6-a2a1-fa215b6a9a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802c6dc4-fb82-4eeb-814c-47672ed1e014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1e1767-a881-4761-8f65-f87672815541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a071fd7-e2a8-47a6-8fc8-70702379e72e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b953ce-67ec-4f00-942d-a5113c84f2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2f3a10-d96b-4f7b-940c-24f8285de49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73410d4-d9e3-44b8-9587-942a269aa67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "522a6ec3-da0c-4d1f-b420-d33c16f64635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289cdf69-0ced-4e0c-a615-5d0ca4f38ff3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d31e22-09e2-4dd3-93e5-f832ee84c750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a966ad47-d0a5-4509-8b13-fca1623ebcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd86a1e-4d09-4467-8483-c67e355e3989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "380e3783-5ffd-445e-8cac-b2b489ea09c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9b0a76-f12f-4287-b320-63fa9dafd2ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa40890a-1f1d-4ed4-9ce4-4281abab244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8ba724-a663-4fa1-a0d1-b97a11cb0e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d29414-09f5-4b8f-9d93-60de5e8d1848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49784246-e6fb-40f2-a860-504a5a5e42aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33d031c-ded2-4c18-a79e-d0722deebc03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4246d329-736d-427c-820e-f52780bcda94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fa6db5-5a41-4725-a146-b92cf3d60f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6040977c-708f-4b91-b541-133015d2b881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "41660281-f1de-4fb5-872f-2e107a09f312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd8e04b-824b-4518-898c-34889e2cdf58",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfcd2d7-80b4-49f8-91ae-b96841c8d03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df85ada-888c-46f7-90d5-98aca03d40f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf4191a-a25c-42a1-8488-be0df4b94ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "eddf3cdd-d044-4159-97f8-88b508d10be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4047f2d5-a0cb-4ee8-9473-0e3041a4e3d7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3f10f0-08c7-4ab8-a2dc-3c8c4a93ef91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18ad2a7-a2a9-4e50-b0b7-be250fb9dfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46342a9d-5ff8-4247-83d4-4f8d0610dca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4154687f-f883-47e8-8257-35a3c7376781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e14815-5b3c-4f14-9f41-3c144fb28d48",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2ba8b8-e805-4bf0-927e-761ec689ff10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4edd8f-a934-4c64-8a63-f8d0b84591ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d069109-863a-4b6e-9421-e87878cc9ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa695c25-9fe7-4163-a898-88a4ae2339c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f884c93-c437-4232-989f-6b0820095ded",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32384bab-051b-46d9-b1f4-bc911bf7c003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442320d0-1203-4588-a37a-b762b2b3cd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f62de14-0296-4e2e-9c62-261ef5a8abad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e6d46e-cc49-4f2f-bec8-0103806120df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff03934-da6c-49a3-9a28-0ec1238933d3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a450aa64-b5f2-4517-adaf-7056ddfbfd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7ed280-6a9c-4518-88e9-19b7065c4aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cecb2ee-a389-417e-94d5-e653d303268a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10dcbf36-b84d-4e01-85ec-e1d1ed32c543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cec67e-be9c-4d79-bcf6-f2f464f0960c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a33c52a-303d-4657-bea7-1e2894c37af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a531497-e4ff-407a-9317-ddfa3b781830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d02ada-4dee-432c-932a-bbb1f49fc899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb94664-1cae-4c42-a30d-51eb1b69cb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26cafc3-83d6-4c1a-84aa-3c37f1c73a1b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d8b385-8e27-4576-abec-39afd149b5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e57ef1-17f6-4f02-89ee-a97e01fd6bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1922ce8-04b9-4ebb-af94-cbdc5dbb7895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "601c309f-e2e9-44fa-ad91-4c3ba4ce06b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f9f4d8-44b2-49c8-a595-dd8e74afbde6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1e64fb-0722-429b-88b1-b54347f946e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a433c847-2152-4474-a1b0-229bd2362de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b37c96-7eb8-42db-8351-e2ddbdc8bd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bc3d70-2c34-4ca5-b384-bf1d79ac5410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780ed371-2a1f-4f12-b6c2-f8dd00a89e4d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2929b4-9842-450d-95fb-e404a924bfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543824c8-f7de-439d-b0a8-58361f04ad4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bbf360-7b1e-4be4-9005-69d839dc4e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebde5d54-4637-44c8-981f-fda789a6218b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2fe778-02d2-43f4-9aeb-707c005bd979",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a350b1-b9ec-4f16-8a7a-721269ba357a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9049df-cef7-4c3f-b979-a007eb175280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89b8354-5694-4c54-9b2d-ceb147c849ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e89d41dc-28a7-4687-9b79-eed3e3c08690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d10e7df-7389-4cb4-a4f8-7fb7b37b6bfa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d151b30-086d-47d1-b75b-09efd1de1154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f65b82b-f274-4080-92be-4f6a2d786541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b430f6b6-3ee2-477b-adf4-8a1260f340c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb8ce2c-d17c-470b-8f4b-39a795a325b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31771d4f-f066-46ca-bc8b-1851f9141b2d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9089ca-18de-4483-862f-d3eb6b2972b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f3cf00-8de7-4d04-b203-d925892cae87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06c980e-5e87-424d-891c-38a215cb63eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edb4a1ab-727c-4c0e-a876-84bcd88fedff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd529930-d6b8-47b8-8624-a0ac7ba87210",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc145759-6671-44df-a705-6f74e398565a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631ddbfc-8a28-41aa-ba5e-d49c40bf91c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bfb83f-69e6-4e37-9256-3211764bd4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25b947b8-4402-4363-8bb1-1a3f253db204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d46f960-5c15-4a31-8af7-e2e4f5a8fea3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfc8cc1-d952-4d7d-a02c-a502d269ca8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0bb08d-3eb8-4a5b-b9ab-31f85c4903ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8a8ecf-6dd5-4cab-ac01-175d48d55005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2539962a-f282-41e4-9b4d-1c7527791c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2672ba20-c9ef-4b12-9770-7c0a1a712de3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218e12f8-731e-4da4-a1b8-750baa1a8092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a0dc1a-9eb6-4458-a741-9cebbacd3871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0205d5-e79e-40f0-bc3b-f0c06fd96b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "150552e5-0113-45a0-93ce-6f4414c17fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5485cb6a-b30b-44fb-9ccc-daf8a2e3901e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ac52e9-4d7f-47d6-ac5e-1fd3566001b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7e4c09-9360-464f-9cbf-d367b943e58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455c1dad-d77e-4912-b463-450b0cc5b427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3666394b-bb29-4ca5-9f94-85234f373afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0df3b8-7fff-45fc-9b0e-6e86010150d8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b02110-7bc7-4080-895e-eeb2cd3dd245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acec6b7-8cbb-43fb-84a3-05e1694c11ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ab73a4-96b8-42e4-95e1-dee2d3065015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecfe77e-7feb-41a9-963f-e3f2ef4605e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b945bba-f915-4280-b223-5d1f67b54539",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0103c856-ae10-4556-8546-8a811c8b5fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3a6430-fba5-4a78-8e14-febe3ec3973e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467c04b8-27ed-4001-8902-053fb6e215ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b693ec2b-01d9-4e9b-82b2-0d5a220d7297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0331fb-1048-431e-a1e2-c91c878f2a7a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5067f33b-6dec-4b93-b34c-4e629daa1c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0a3310-c2d0-4b36-b8bd-a0d0c7c81e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e4a3f9-0458-4901-9eb4-847e65623bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a73fc2e-0822-4b59-b4d5-b6795debb475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caf74c2-1775-450e-bae1-c6c61734b116",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a65a1ef-efd8-4e8b-8162-046fa07c2c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8056ef-0eb2-4b41-89b8-fee450ea1777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfecb47-912b-4eff-9ac5-43d49a6dc5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb0f1e9-954c-47ab-b2c6-e0e6a1b6a1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eba4cba-0333-4a3c-b0d9-d36ea96375cb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c6679c-9535-4f47-b216-3976dd9c57f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d30adac-c3be-4a1b-b422-08cdb68e7acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e6f28a-bf92-4d84-8a7a-83ea2094c0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e974b0c-759a-47ea-949e-3ccd5fae8e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3322bc-54a0-4b90-8ff0-70e946a332b0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646e8999-b040-4ca2-985b-09bc9d82a6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383cbff1-b663-4da3-8ac7-031e82059faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55f658c-cec6-47fb-8920-de42b4e1a9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "616957cc-786c-468e-bcf0-c68fb8383e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8d604b-d552-4656-9fce-6481355fc800",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc28182-a31b-4906-8a0a-2edfbd5eb440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d462a54-0a5a-4935-90c4-eec3eab2c51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9ed0da-dc27-4f60-bb72-fb21d917fd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "513cb197-8ab6-44ed-842d-7ce60be13dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c468f04-e252-4d16-8b77-08490edfee54",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eff83c-355b-44c0-85b7-32dba9657ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed67a523-9f19-4244-9336-7ade41a2744b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668b4884-036a-461d-8add-211fd9c4b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf7e9f6-6c59-44da-93d6-5113f016de9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d00ef7-be7e-4687-9991-1833d3289be9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68c1f03-7a7b-4837-b08c-44b354474cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b7a759-6bcc-4fed-a0a0-40cdde63294a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8572d0-c4f8-498d-87c2-eb9791fd276a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0910d1-ec2a-488a-b96b-88197e4d5856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c2f250-6d2f-4f54-a8b4-ff95fdcd2ed7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3652f72-306c-436d-bc19-88c41e74d579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f47c0b-ecc2-4e30-bc14-d05bb9e6cc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdd2bd3-2ecf-4450-baa4-775abc61e138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bae380f-0beb-49af-bf46-bc517ed0212b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39e6586-ee76-48a1-a44d-adc2244774cc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae5f8b3-c398-4729-ba73-9d8e983a15e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f710ad95-15a6-465d-a223-db17676d9b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b190af5a-8bfe-4699-abf6-cc35f746366a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c4da3c-d921-4ff6-a354-99cb4ddcf1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e065f44-aa7d-4f8a-b13a-486720a67fe4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2915e0-7bdb-4693-9020-454ba3c7d1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a52416-bf7d-4c36-b14c-fc7a0f3d8958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cffc62-31bf-4c99-9285-988ba2a81bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c42ac67-925e-40fa-a963-99ca5f9b93b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9e47f6-70c9-452a-b670-ba7c5dd4c31d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0242caa-af17-403c-9982-9878a03f151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148f31de-dc2d-4cc2-8150-5dba5d8a66f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b638940-1585-485c-a9f4-63ca7f9dc427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1792f1b1-45b7-483f-a80a-8de2672c29e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4b53e6-d922-43e9-8b5a-9ac6b9ffb1ae",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f9568f-63e5-4ff9-bb99-1437abb3620a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b658e4e6-6291-46b4-af0c-7e5a5e596850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b559cc8b-21c3-444a-8893-cfa971266995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5254216f-41c9-464b-a5b4-f00e6bdde999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0f1bad-8308-4c4f-835a-59684e332bcd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fb99bb-b669-41fd-907e-3349d49b2818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a853d23-ed33-493b-a15c-087eff72f942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26273f3b-fa3b-4d34-bc58-0645b54251b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd95cc2-02c8-41ef-992f-06774b5aab5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "204810e7-b71c-43dc-a416-7771f8c89c7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c29bcd66-328f-4cd9-9d8d-3ba1660eefbd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1e5edd-ef0f-43c5-9fda-0e92cb497fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6464f8f-f2a3-48a7-8804-541e9f23c8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f80b77-76e3-443f-b02e-ed3006a64e43",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d64963bc-f564-4266-a7ae-871ab07f47c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2644146e-f264-4911-9eec-e55a29d4c540",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2ee45a5-98f8-479e-ae7f-b1bf474b7518"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9face9e8-b448-4270-803f-ebbd0974fe24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54ebe58c-3e8a-4ba3-8a47-32bce38e7f06"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee5b942a-09b8-4946-844d-0ddb8a6c40a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "102f5385-d15e-4b13-af65-d1037d44cd7e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "735f4cf6-c5b6-4084-abb4-2f25fd953f32",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "304a237f-44dd-4be2-a6c5-49322d586ce2"
                }
              }
            ]
          },
          {
            "id": "b82ae3fe-129b-4347-b046-4cab4a77dbc3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c78df2e5-64a8-404a-bf66-55de3fe8c0e0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "823f09cb-0764-4b7a-87da-afda5c953abd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec32b1de-4c99-42ed-8179-4fb315333cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5dfbcc54-82f7-4f26-9523-cfb2195776a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd86b5f-ae80-4a26-b7b4-5266049103f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0104b8-252f-45cd-aa0c-c6a2601f3d91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5866d940-d61b-4a09-85a9-84afc5c5a486",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68bfe8c1-6a1d-4833-ab56-ed02eb23a345",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccce8ae0-44a1-4afa-86f9-503ba176ac24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8f253cc-19ec-4208-9f4a-4102a22a9e46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "508d2107-1d0f-4c83-aecf-0d4d88ffed55"
                    }
                  }
                ]
              },
              {
                "id": "d9cdfebe-d16f-4fce-a371-459ac3758f62",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8d3dd04-bd3f-4b7d-ac0f-346f2d567602",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94d887f7-b627-4b8f-ae72-086fda724a9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e8c74e1-f0e2-4cd8-9585-c6e142d64fee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d17d7d4-88cc-4ed8-b11b-1f7d1246f98c"
                    }
                  }
                ]
              },
              {
                "id": "3f8248e9-c462-4ba0-870b-1ece038a8ae6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cc6d54d-a2ab-4413-9c4b-0c84e8f0b95d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0989d8a6-4c12-4f79-bd77-120f320d5c14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c86a6d2-b766-4a03-9898-6f6f576145ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec43c3c1-899b-41e4-a2e4-726d49bec4ff"
                    }
                  }
                ]
              },
              {
                "id": "bfed3ca2-e424-48d7-aaa8-bfcfcffc321b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da27650f-6eaf-4e88-9b94-732d31baba30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "827ecbc4-1e5c-463d-b0b5-0d879bef51cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03f0cd52-0390-48ea-a482-cc252c17b2dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4f66f420-8619-416d-b096-60184e64a327"
                    }
                  }
                ]
              },
              {
                "id": "c55b9cb1-2a62-463a-b192-b5c58c2ed013",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "710b09d6-05fc-465c-a193-dfb2a529ce2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "968b759e-a9d5-4f27-af89-7d889377bba5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dd18471-2544-496f-9c6a-061deefcf204",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "432ccfd8-ba0b-4741-a992-3cbc627d3ae5"
                    }
                  }
                ]
              },
              {
                "id": "2a41603e-1b0c-429d-86c6-1610bd9cdc9a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c06baba9-fce2-4647-8077-e87ce6e6fbdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac3cd147-1d7d-4775-bd67-35e906c6b682"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac6bc311-e8b6-43b4-86d8-b0f073eaf16c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40fa941e-9a63-4569-ab54-c101ad0cb58f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4461b610-50e2-49d4-8bda-ff6202ec588e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28805984-3230-46b4-a6fb-cfe8e68d0564"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36cf8235-697f-475f-a05e-ab4aaa65451a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3e26f8c-8f0b-43ba-ae9f-13f933baac22"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b1cedf9-343a-4313-a798-d631710338f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "159b13e5-a6da-4fa8-afcb-92a86a70be32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46369715-e181-4683-9fc9-92f3afa88442",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d5f5401-d20a-4d92-8f34-387fb01bad1e"
            }
          }
        ]
      },
      {
        "id": "1f2e37ff-f393-44ba-b4ce-b2a857678694",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fc79effe-2a42-4fdf-aa1d-a5ba2d3c5282",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b9a8913-e1c5-4250-8bae-7320ad4819c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32e74721-cbe7-4d35-ba31-6d240a0bdabd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d350990-76c7-4aea-8cb4-6e7594f2ea02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0118c31-1710-49ef-b7eb-3712baeb2ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75352772-546b-4833-ad48-1c358d650927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a8e4a5-50a3-4767-8a3a-23fcd14090b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15f60d5-3783-4fae-a5d2-12aa90eee171",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737b5d4c-3769-4d96-b35d-95dafd39f119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b0320c-db68-4cfb-8fb6-d8899ef74761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe9b860-86a8-46eb-a0a2-8f198ca6222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e9c3dd-6f80-4421-91c7-f3c5ae14cf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2929ca5c-d4cf-47d0-b8fe-50db15659b26",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82335cfa-52a6-4b88-8a5c-bf33d62c080e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5651e09b-a50c-400e-8c55-3efdb58266bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778a2e18-4b16-4c3f-87c7-f829dbc88e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e90eb051-d4ab-4efb-8953-f7968a4cffb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c0841f-c10c-4b29-943f-b497a249292a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59256a3-de5c-48a3-8cc7-2df74ce0d1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6d608e-6fbc-491b-9c93-78b9ac959bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29346189-e216-432c-8489-b0116cbaace3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "719d7ba7-ecd0-46b2-aeae-fcd62845deb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef169fb7-2217-4b59-9202-17ef325e01da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b11849-1d63-4717-a728-3b84d86a7b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dab55f6-4349-4262-bd9e-f6ae0faa2ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8396522f-861a-4c37-8d17-76719475ec48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3546489-174c-43c5-ab49-7bf3cc6846f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2066be88-17b3-4d4b-8eab-af723f658608",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464e2873-dfdb-4b41-b09c-ca45d5a4f6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba80e6c-4cc6-40d6-93cc-925ffe67a162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5fae03-5380-41a6-9348-3fe7c1b7d517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23c57b00-c597-4497-a612-b7a6aef5d943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67db8deb-f777-40bf-8210-abbe5c11146a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4117764d-9052-4111-8b13-93fd27d1e1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b7ec6b-79fc-4520-a721-6195acf838f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74e1cef-06b8-4578-b60e-5b7487ba0647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f869a29a-05b0-4a4e-9a41-251ede5d65cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09537ee-f6be-40d9-8829-47cb3df6cb9d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae795eb-51c7-4175-9280-194aacf7c02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a8495b-9306-4a3a-bbef-61736548975e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df92946c-2715-46a1-9029-3b4c6bb5456d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3218c3-2268-480d-b0c3-6403c77f561a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72caef26-bad1-46a4-b36d-13dc263ca4fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d55f2e9-9a8e-47eb-be14-f0547a20f716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab91836-45aa-4faf-9d7c-5c0961ad5f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17da495c-a275-448f-a4de-fd8531758527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e21d4372-3979-4c8a-ba37-6521c4657d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1530bbf-61b8-49cb-8a9b-87fa6baa4a18",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b511a763-8ffa-4a61-bdba-666c1fa88d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d1e750-8e51-4024-9271-7ab924798eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6f5a85-125a-4835-b422-007e1390a8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cec3c888-4a03-4320-97b7-b0a899afd941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eea6ad3-bf13-4bbc-8de5-45248ec01037",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9a2d2f-eed1-4456-a1ec-8840bcfeacf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4664bd86-a374-4afe-8449-64979fb9bbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae98288-b914-445a-a199-3ea730d5960e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f509e4-eb6c-4c15-a0a8-1e569fc05b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615db1cd-e6ed-4a06-a831-dc6f1dea0f5e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e3f3a3-5160-4798-a9d2-217a4c75f6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90e1cd9-e465-4d43-bbbf-7b7e7e0a82ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984ae6af-b3aa-45be-a73a-4588718dae64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a086aa-f466-4b65-9595-d96e8f8c5489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5f0c32-31ce-46a1-881b-69907a4c9c98",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b32f874-140f-4ed3-8b75-b046447c69ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6b30db-951e-4ba2-849a-e7f3f30aa460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f028fc1e-9281-4853-9356-b8a18b102721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52efc48d-6e7f-47d1-801f-eac9f2c12bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f2b54e-78a6-41ba-8856-6cc1734b2dd1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35480ab0-673e-4c7b-b75b-9e56aa3dc3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50abcfd1-c00b-48bf-8e3a-6d7670442a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25546d3e-0b9f-44a7-8b69-41b35548453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a734ad9a-9e21-4c9e-a376-d8a065b85a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82c2184-3214-473a-a690-2782452dc711",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e605532b-62fe-4ce8-ad97-cb3bb4d8614a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2524f8-4c3a-4626-894e-062b5ee48879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791c93ce-c024-4ab1-a173-8fbfee7c2e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "907f9238-193c-403c-b9f6-117098af1bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26661da-3317-489f-a015-d8117d44820e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe32e02-2a06-4eea-ab4a-3b2d8c18d9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb39cc23-b304-4b4c-a5f6-353f888b4996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfecf191-63b4-412a-9ed5-e724868ac969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4a2004-3314-4be1-8ce9-e7159d484d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f1fa89-e953-4011-912c-1b3cc30c4d70",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cae2f3-e086-4069-88d7-61023a386693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3155b83f-1f39-4895-adcb-1183d486170c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874c0557-7325-407f-baa3-21c5afcb501b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "937e895f-8186-406b-8007-1147a0bb9327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5dcd09-b557-4a6f-a9db-dad49c842afc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1372d5c0-9b7b-4f96-a52d-81ab494e73ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872dd07f-7a83-4af1-a31e-d1a0aedb09d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6c9e51-f45b-4da4-ac65-38d5059b3b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7e500f-db7b-4443-a5da-c16e7f227745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca684763-ed52-4317-9fb4-178bc55c9f4f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14f9dc1-4e98-4e1f-8665-fe3fc9166dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5baf8e-499b-4cff-bbed-5ae81cc787cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211db553-2ae5-4d4e-b6b9-04de5adbef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "095b9b40-df7b-4211-815a-3e41d7a3bdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2508dbb9-9cf9-42ec-a363-3f7ea747ca39",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e229373-5ba7-4771-a445-a529dbf9ab08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f135fa6-2202-4d7e-8eec-d4f1f9fd7aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c23dcd-80fa-410c-9aa4-030e9520097f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a24244ee-8ae3-4cf2-998c-743a81a2ae84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb14f95a-9d05-4ea8-8607-c40c1f9f65b3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbea02c4-394d-4a28-ac59-ea27c25d2ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b66a6f9-0e63-43f5-b437-63a5116871c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ea998e-3460-4c1b-b62e-4bda8b28d3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7cb083-4828-47a0-8994-36030df67c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06d56d-ccb3-48b9-bb43-1d155c2536f8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ca5acd-1291-48b5-8990-975cbc46a245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2578b4b2-4c93-4405-84b2-59be3abbc8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dbb560-a828-4adb-a4fe-a23b1103e3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a84aceb5-77a3-472d-afb8-18eb4fbc41e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f7920b-5d87-4e01-945f-f2011add58a5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1ecbaa-8ec8-42be-8c51-325f17b573b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37e87f7-4b55-4a41-8db1-df405a6115fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc85e717-893d-4123-9274-3a72dce50d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "733144b9-f67e-4c0a-8759-d5e57e01d121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51338fb-3a68-4707-91ff-0f23bcc3fd9c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9c4e26-57af-4ca2-b1b4-f91786897ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec954ec6-4add-4ab0-9876-c9e78b3dc315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73370c0-eae7-4e7e-bc03-fc2b4c16f3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae17f28-46cf-476d-a46b-5939d6fa6d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743dd1e6-511c-4cbe-949a-3ef5f5871090",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752c74a8-2e76-42f3-bc63-6e4d013a9c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d3ce9a-bcc3-43f5-9c9e-2c55f3bf14c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf21a73-3fb2-4dbc-95c2-8fde3df1cc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60b8eb9a-709d-4ef9-be56-fe03cf1ba8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a751b5-8306-4677-9f00-dbe084b24bb4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ee904a-86e0-43cb-a1c2-fc283bedaac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375a0586-73b5-4a40-b580-dc19542e9997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52767623-83ae-4460-8b72-495064d25f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cd2901-6a13-44f2-9300-de3f4c96a61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d0dee2-85fa-418d-951d-ac788254d39b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6289bdf1-4b08-4429-902a-4b548f20957b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ce7e1c-688a-4be0-bea2-7e55fc920ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebeabcc-0585-4c1d-b951-e834c468486a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bf55c4-7773-417b-8d17-7ae2fd6a9d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3406b1-677d-481d-bb43-8784afce81e6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630383ed-979a-4ccd-8997-1ce5eaf4a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd310c78-e488-4c07-b474-bb23b17946ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c012545-69ea-4fe0-85df-6a4dd86619f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f543d5-c1eb-4c61-9011-4bd437bc7334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fb7780-fe2c-434e-a50a-c4fbe157e825",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f0cd6f-60e8-4e13-95d0-17832451c182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184cf7cc-6b23-47a7-ace6-3537922d2404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a291b38-d0b6-4f92-80ce-068aeead3107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83c1f483-d760-4f1f-97f7-36672c9822e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4a9e87-1232-4e2b-9057-572e83f0e84a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e296739-48f5-4659-a162-c0dea69d172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0afbfd0-d020-4c37-8289-806d39203c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5773ae99-c7b1-4a79-a707-147ec5139eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f38389-b922-49d9-a38d-45ad562e4b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952427ef-d162-4afb-b28d-d39edc8e1ba2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072fdb54-36e1-462e-910e-c9839f2b5105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e70c73-9002-4898-a65f-5db5d4c64c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6560d294-3c4c-4043-8785-fc84c1dacbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9ad915-933b-4f98-92bd-e517f8cd9469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d6ae83-3465-4a18-ae8c-f608a98b3120",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a05bad4-0816-4bd3-a810-62ced97b8e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b205ea17-95f6-47b9-8559-176aa8ad8687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d458e6c7-7591-4ca4-a3d1-224b4756f4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8c25a5-8f9a-4e2b-af45-4179b8360fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99841718-2c81-44f6-b3a8-3ab77684d0f0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a6347d-8d43-4578-a9c4-ed1c962d07b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9049b219-a8d3-4b05-9824-c04bdecb2759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560a7048-a33c-4a77-bfde-79889bb71094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2351dd-63f7-45fb-ade2-30694858fb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb39fc25-2c19-402c-9e82-a738fd14781d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135676dc-5879-46f2-a35c-29d06d3f20c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d5766d-9556-4a16-af16-abbb2778f6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b4f029-6b26-4ddb-a7d5-810a0b48cf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b55942-0d3b-497a-a7c4-5942907190ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc8ac9c-fbc4-4e62-990a-d719b98465f9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece0ce21-2a9b-43e9-8664-d4bcf67a7c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee4df85-63b0-4249-a60f-25eb84722a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3f0f7e-e7ce-412e-b527-b1eee4c23588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e673e42-09ec-4c5d-a944-94f2c6f2bd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4671e90e-05e7-422c-819d-d887bc7933b9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194eed43-de99-4c9e-b6d0-42e27f173087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579f503a-110a-4271-ac36-2bd32cdd7f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a0373b-8426-476c-a971-6dc36c480a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a10bcf0-50f0-4463-adfe-97e8b775cc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acb7adf-8b8c-44e9-b3ae-b9f01e629c89",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c419d1db-38bf-4851-ae20-6ae6e0295597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c88b0bc-ee77-4477-9f14-456910e94f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098f056a-6c99-4844-801e-03d07dd62a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87fb3ab9-414d-4137-82b7-b6f1d63b9de6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "701d1922-9819-40fc-881b-93d88c1760a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbc0c26f-945c-4979-a76e-f00a72a1f2b4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53b36ca-d32b-44c1-9015-17fd981e0987",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "806210a1-e725-441c-8bd7-fa5333ca3b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907b26ca-ce3c-4f8d-95a8-3669177fc4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f993234-ae3e-4ffe-9add-74d14907366f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db1b8843-ae09-48eb-b80e-07f31fb56c53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa4714b9-fa7b-4621-bb0f-356eb51ecbe6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b6cebe1-21a5-4bb7-88a3-6c4fc2ad9ee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f54c374a-6bd2-433b-8344-7c8087fcec3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e45f6421-c2d5-4247-b029-8600adf62575",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "946d4e89-d63d-4695-a13d-3adb3629378e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ec34539-3746-410e-b7d2-626615992f9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7abf7f6-b099-4108-ad8d-8be6e4b68098"
            }
          }
        ]
      },
      {
        "id": "69aed223-9300-4a9e-918c-b947ca66e32b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "69144e08-1361-492d-80f0-f0f930b3fa9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7e7e8fe-8a21-4664-bcb8-c396f27b0075",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cacc5a42-ae20-45d0-8293-f098ed662556",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca1b2ea-4453-4efb-81b1-4426a82f3558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe61b077-9190-4e19-854f-981505b882d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4827a447-1262-4e49-9963-fb6fa3d2b737",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2826c0-36e1-48a8-9e8f-58313e039300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef886f6-0b0a-4140-a7b0-6ddac9811db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24371bf-1ec9-439f-b785-8239546e0cb4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e18722-eec7-4807-a7e9-a5c1b7f52894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638a9548-d558-4407-9fa4-be50ba596dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88511fc3-15e5-486b-83f4-7ae821665be4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311960af-b7f0-4801-9910-4e152d76a736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79616f4f-b2c0-43ec-94e1-598cea32bf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216c2e01-e8f3-467c-b3ba-32b3a56ac96c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee2eef1-e408-41f3-8a1f-244e9867121d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141a467a-f2ef-44a1-9053-699ee4cbd3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ee9412-546c-4fd1-a78b-b75662e5b833",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34946fb6-885b-42e9-a331-58ef372a0cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9744172f-7a37-4da1-8c50-d854564ce9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf07023-193f-4761-a321-14d1f876337c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580769be-0096-4744-bb34-3bcf902f6d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8c5510-30d8-4b0f-8108-18d4c1818c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dd7932-fad8-4d93-a666-c9c822c22365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c843652-89f8-421b-9e2e-575617d45f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2417b1-ba77-4ae9-91b0-e565753b468d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bd1061-0daa-4ee2-b3cd-2fa8d1283e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d326d951-5274-426d-8135-d3ce81a49a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5224bfe-41a6-4f1b-bd85-4df80d4b2da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88468814-a17d-4e06-a02a-41ffb6694ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b40b634-a108-4baa-b005-bccf61e3995b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce19237d-8cd0-4e41-b738-b3233836fdc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b710682b-6057-4476-9e32-d49997c57ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa229d9-4e04-4a23-81fb-aa085f023873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9210f14-6e74-46eb-bfaa-8155f9ac0fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fa27a6-925c-4bfe-a775-0dfe54a8a9ad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04731b04-4317-42e6-9d88-eeaa1684caf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aaa1ded-f2bb-45db-87c8-76e954cdbed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdae5069-b7a4-43c8-96f6-1fedba74390c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fad840-fa64-4297-9060-9b77bdca0648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8095b90-5411-4dd1-89af-881664b3c817",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790f04f8-7198-47a5-b6c1-f690fbdbf2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dfe436-9df3-40da-a3cb-582233cdcbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0516f51a-5fc8-4210-ad39-b64cc9ebe5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f313f9a5-d69d-400c-b70e-48c19e60adae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a52fed6-c200-4bb9-b45f-5eb20d7575b0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac329ba5-9d16-4f4e-bf80-d518c947b1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb36c30-2e15-48a6-9446-e5b11b7d34c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a730a7-7e51-48da-930a-03582b6bf4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c7d887-21f3-4de9-ab9b-a3a6807ac5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114a0725-c996-4730-912b-ecbf013004fa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6a8250-7539-475f-b62d-e2b079293323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d1b999-6c91-4817-acd3-973e78172af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0e9655-dcfd-4f7d-a3c3-90385f87fb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05a1232-aadf-42b2-96c9-6f6dac154559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4366d714-4237-4b65-aa1b-e1066514de06",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b9027e-9862-4e53-b413-ee7bccc2a8cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b16966-1a75-47d3-85a0-892a44bf3d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513344e8-1c4b-42ca-a5ac-b4d443386ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a51d3a-8560-4e05-a80d-275e30ed2cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55492f4f-f876-4957-b0ec-cdc4d1e4a1dc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258f6e1c-f516-4a13-93ca-2bbb006e7f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16194e38-47ae-4549-bc32-d1890672cc85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651a5baf-9e5c-4644-b023-ba99215839ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a30afda-06e0-4ab9-8138-ebb1a63d2155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c54c03-e220-4980-8cff-45b7e12a0e2b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3746083d-e52f-4485-8501-9e43f19fdb2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99bd4d26-9287-4a05-a8f0-3ce1a44dd9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db66bdc-fe05-42fb-b613-990c91a8cfe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c15e20-bfe7-4177-ad96-940671405bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55df514b-86a7-4857-9b2f-d1131ade26e6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efec352b-9e98-411e-9357-5e4e4db2611d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9cd5b8-1250-4255-84dc-7ef61754f105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bfbe5c-1a26-4759-b799-ad066f5c00b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a952be-2a72-4b57-93ab-4c121b3f3922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08715a7f-7589-4504-818e-4cd945f72f0f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9885d5a-bd75-4730-a715-a5229e00699a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c4c0fb-5b0b-47a6-a255-fd87526b85d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff541de-d122-4f81-b8b0-145865a49de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72e7747-e230-4790-a62b-83bda793f6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86beea49-e701-481e-ac08-6904cee8c251",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151229fc-08a0-4b8a-8143-67c38b896bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7288cace-9931-4f1c-8143-ba9aec01246a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb282a6-0838-402d-b7e8-f6048572ef26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a28bef5-1c6d-4d03-98c1-5ec61082e73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541dc629-e7d1-407e-87c0-8c9763fa7f1b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c3db79-1bc5-4bb5-8284-59f4555c7625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7dcc37-9310-4fd6-9788-ed6091c36f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092f53af-cb52-4ce5-ae81-24aa16968750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aaf30b7-457f-4133-9be0-0f76d7284d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c863ab9-cf50-4667-9d4f-3bfb3bbef895",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25467161-8884-4716-9b17-9da9df15bcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7033ef80-abd8-469c-b608-2d538398b29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214d0293-f8c3-483c-93bc-b517603e097a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0633816-6c3f-45f9-b26c-126e081a4b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2e56d9-6df0-491b-adef-4f032cea93d7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38b012f-22fc-4541-aa08-04a826c33389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dfebee-648e-4c3b-adeb-cd8281dbf3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a26bb4-c109-474b-9860-2f035b240199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdecb90-3902-4719-bebe-7862325662bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a13c9f-58d7-4ddc-9808-93f3c9614b59",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4f9a7f-dfdd-43fc-ae3a-bff27ba1ae6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f08e5c9-01d6-4d6f-b7b4-af3c4d8bc43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e71cdc-52f4-4216-9a88-1899490ddb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c4a299-5ee1-4309-a951-52de2b7db9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c35ec7c-0873-4196-9633-3a59dd544829",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff53bb5-e8db-43f0-b938-fba1deaf9679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d7bb8f0-b374-4355-ba83-2c251c53804b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47c51b8-c972-41e1-8522-1f8219cceb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b57842-837f-4135-958a-2834fb123209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c97b94e-c458-4556-b5d8-ca637387599c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983f1984-9db0-49f5-8cd3-7c981ec6694c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015399f7-43bd-4bfb-bc3b-3b622bf6cc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb38480-7e1e-476a-85b1-8d069cce7ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dfc452-2142-45a4-a544-f2b85930898e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6a188e-152f-4bb5-8c82-63f4d350ad1d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11603046-14e7-46a7-b0e4-ed84d942ee19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91dcf60-e4e2-441a-bfc9-09a6189f1b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646b97fd-a63b-4c96-8901-2f15a6166efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff44214-5758-400b-b336-2183557c7c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8528ac31-4bb4-436b-b2c7-2d31b2606ec6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d4ae4d-d53e-4cff-adab-512f1c3bfa23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "454a948f-7012-4bd2-a4f1-2551c763cfb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9add54c8-b3d5-4c1a-ae38-26763ae6604d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410f8fd4-73ce-47ae-b1ac-d042e1b37911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2158a9c-739b-4e93-b18e-8952eb3d0aa1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1c2090-5d13-407d-9075-94d1044b7fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d11e5bf-d7b7-4de3-99ef-5c78d64056cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17b7bb5-ca40-4a13-ac76-89d0e1eccb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dbc544-a6d6-4de7-9dcb-40af0fb2714a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3191701-b5a6-4782-8320-9241b9a9c1dc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bf5dcc-b902-4c8e-bbda-919133c59686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a9ed26-6367-4260-af4f-0b1c24c7b0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4f6f4e-2333-46cb-9aa5-46e5d0ef3e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c359e3bf-fae5-4a36-aa4e-4433cb6552a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e229dc6-3296-45b1-a7fd-3ce751291fd3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea17d9f6-36c4-47aa-aef0-858ae495a62e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f0ae005-5a54-4486-a72e-0a23c2a1bc8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce238a7b-e27c-4468-a4f4-d5fc3e2982b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77ab68a-8f12-4011-ba55-4550a4156a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ddc4a1-7d81-446b-81ab-780ddd0203e4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc50d9ce-3ba3-415d-ab4c-c5ac20a340d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962df0da-83e6-48da-9ead-92289bcebdda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9466e99-a6cf-4e96-b420-83494c80ce9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1db625-4294-4af1-aea2-018fb6ad42fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf84dff-013d-422f-a214-106cb2441017",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04371d6-8c05-4d54-875e-6369ef4b19fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5febbdd6-ef37-44a4-a419-75dad74afc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b594f2-fbe4-4e5f-8ef9-7d3edbf8f4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416bedf8-7058-4c07-9a46-a3918ab5b732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d790e45-e752-439c-bef0-6206bb9058d5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1da3b1b-2ba0-43f0-b316-f6ee57d88bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc6290a-1847-4c29-ad8c-4dbddf7f3669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398a06fc-3523-4e7a-85c7-925c004ee752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f731e5-02a3-487a-8869-4f3cd1e35e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da96eb2-2cf3-4ac4-96aa-4aa38bd2d71c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ed0537-5751-4f90-938e-fd1be0407ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5fe185-da49-4e6f-b66e-47d3e379117e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a73ecd-7919-47f8-8f9e-f03680858674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958692f7-7da1-4f6f-932d-04f2dd073dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6c56f3-7bef-4a90-8237-0c8b541e817b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31910410-d1ca-4618-acb5-2cc78327337c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac2fac6-bdec-4a94-8c2d-736d561b3579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae57199e-a98f-4b79-a01d-9354b3645c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e71176d-5dee-44e0-a9a0-d31d8d8d6acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dd7164-8494-4943-9e44-127423d7c280",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d96ef31-6c32-48fe-9eb7-49acef26434a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f579fb7f-7641-4906-83e1-ab41e0da2986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305dc612-d616-4e06-aac7-774a98ff3e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de92630-dd15-420c-80d7-a60d1fa14670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee96a6c4-ee58-4232-b5da-994b32010bac",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1c7fbf-c6e1-4714-9e73-fd310c72d806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1636d796-6d5e-4189-9a7d-b26278a0d01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f52ec48-0a2a-4be5-8077-fda8809f15c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7107ff0-e2b0-4689-bf00-4f7cbfd321fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9c22aa-1db1-4d84-816b-10b43a5884f0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5b190b-d15c-4ee9-b6bf-3022c4a42d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a88270-a65e-4d68-a2ee-baebf00c1cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc730a2-25ce-4a13-8148-294a5bc711ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4466acaf-9ddd-4744-9af9-2551055ad3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798a5959-5750-46e4-bad4-f0901e8de8ad",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9e1929-a0ff-4dcc-a4af-316fc473cd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c101a7-710f-4673-9309-f51adbbe6308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b65b4a-152b-4e0a-82f8-9f6c93f1d2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d47964-89b8-4fc5-9aad-e9a93dc379e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09c18c1-2d81-4419-80d4-ad6b6463a3ea",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa66852c-e5ff-4868-8db9-07d7f5cc4a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c1596c-e65f-4330-ae81-07305f0aad86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdde52c2-6fc6-493c-b558-cecffd794953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366034e8-618b-4b85-8c50-731640d61293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f3ca20-7905-4239-aca1-9fab6b421cba",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce15d8a6-38fe-41d1-82b3-e52326483362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07afb7d7-ad1c-4db8-a0e7-e4c2dc476767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6907f5a7-49ea-42de-9c61-ff3b41fb0aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d51e37-5023-425f-98fe-306c03b3ff94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4695d8-f6e1-4a73-a625-9b257b1b1eff",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9dfab1-d6d1-47a6-a6cd-f59e54921a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f239801-0b6f-43af-8d35-0009daf1cbf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18b422b-48e8-44ed-b457-8f3b6f0df866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54aa7160-3e6b-4de2-92ed-3e84973c72e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b518e638-5831-45f0-ac4e-9c79ad40c405",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afe222f-6afa-4555-8969-93758ba88b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5968c3f-6a59-4090-bcb6-520f17cad53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e4f5f3-c35d-4fdd-8d12-4593ff25fb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273f0408-8e92-47bf-8947-961038bb5ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3f68aa-d37b-426b-a0f2-59b5c5f60f87",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682c2460-230b-4741-8048-59a6f82ee851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60c95fc-5df1-4afa-b0f2-ffd807e32c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af27bc03-ac2f-464d-90d8-e4dd5f0ba9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0254c18-1519-4ff5-a59a-6d2e48b4cfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0153ec-4a47-470b-b968-188abae6c6d6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2af48d-7ac2-4bcd-b73d-7ff29d4eaf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f757ced-27b4-4aa0-9a6a-bff6689a47f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23df2634-8312-40b9-8ced-6c84613717ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793535c8-22b2-4c40-8c2c-112376a1aa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b759e1cc-4b02-417f-ab66-df5b8f574230",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad6cb60-1644-485f-a310-786111662229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba1fdf6-ce08-4258-b48d-6d739b40def5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40af7a9b-85f6-4ed7-9b0b-3be2f168816b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a52a255-f185-4d50-8c0e-8b2639f7980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35589175-7bfd-403a-ba0b-37456c2eeda5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695691d0-5eaa-4e06-b7ad-d35e2befc0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6ada81-d6d3-4c69-a233-1ea309b0121f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce75e93-c89f-4d69-89eb-fa542fd165d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4047de3-d9b6-40e3-a215-f7cb16cc3b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b518bb52-22da-4097-a3f3-d1d87bf55b7f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554e109d-6f16-4433-9311-9f0ea54078ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7017f1b-cc01-4836-87cf-128aa44fecfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957d5fba-d427-477e-9ef7-592a5d6072cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ea694e-0700-48da-b4ce-c11b52f74498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f16d689-eda2-4393-9e0c-fe167471c1cd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470c6150-e99c-4121-89db-61436a62c0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d472ef-85aa-4d9c-a46f-e82ca26b09d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748dc0ac-ceeb-4c91-9fee-a92eed3e38cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3501c1d-993a-42bf-b262-12b2025688f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2669302-b268-45d7-a4d3-89820682fed7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78727d2-81c9-42f5-ab3d-dd6e6fff25c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d07167-6f6b-4c4c-b098-2e7286da1ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d37ba87-9e08-43ca-8749-839ebb751f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11589d1e-e964-46a9-a56a-558dc9a07270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb57e9d-abe8-4680-98ed-03d20882a31f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2687e01d-2215-4de6-b4f4-a6a4c0802783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a739c703-d20d-43e0-b6b8-f347825d55ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6c9671-032a-44df-8a7e-f0ad42d8a562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d7e114-8734-4236-9b82-4384a473f673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26947984-ca2b-4a22-86cf-9e21ba7f0211",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8fe03d-5f06-4c81-9bb9-3c67bb5019b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64fb7e6-a8cc-4879-8905-72114ade6449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effd6dfb-22dd-40d5-a753-2465c4a74f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1e5db3-ccbe-41c0-bf86-7fe8d16a1921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66ca574-da8c-4bbc-880e-9dcf2deb5918",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac01bc6-45b2-4f44-9897-a5ccf263fac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b060db-1338-4d11-8534-a9feb857d209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089a510c-a7c7-4233-8db2-d1a2f3f81659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bf7381-8189-4166-ac3b-9baf183d5d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334fcc24-d69a-4d6c-8ab6-22a07db477c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fc7a7e-967f-474c-aec4-1c86effc1e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866d5fb2-3cc4-427f-9aa0-8744eb0dbc37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eab9b7b-cf6c-4950-b994-9fec5876da69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed76b11-55d2-47b3-87f7-3ddec119375a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae05458b-9b2a-41a9-b752-82158ddca73d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66e98b3-584d-4150-805e-f89573ede7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e93eb27-b024-4339-8549-686050eec290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11da8ab-e351-4744-90fb-d93e10ee0724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fea002-463e-4482-8302-2934b555b9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f227b28-7d38-46cb-af8b-24333114bf1f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25f9e53-d635-41cb-ab53-012fc9889f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9024770f-55fe-496f-a6b6-3451b322bf48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b034d5dc-faab-47fe-81d6-744f37fabcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324bcf81-19fa-4f03-b2b4-2d01309a90b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed14e826-efd4-4a0d-bf80-06704741c1cf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac239be-2bd2-4e9f-9202-b39889cb799e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efedc5f-e805-4218-9dc7-30ccdbf574c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11aa479b-aff5-41b0-a697-4b22ae68214d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4bf2a0-27dc-4ad1-8370-e0cd7ff3c0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8704b89b-6a55-4141-ac52-677d4f4f974b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4402670b-7795-4e25-9b18-b5630b96d6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1f2db8-7ed6-4315-9582-c1b5cd052fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6758db7c-28c8-4711-9427-d012dc91108e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc4f86c-edfe-4804-a19d-7edeb36305fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a769ebca-0fc5-4a90-820d-57cead4186d4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8830cb7e-dad7-41df-9d44-f63b12c458f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2dc68a-5d24-4985-a24a-c68c1c54e42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7187f8b5-e3e9-4b96-be9a-9d7e2d597d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21348eb9-5813-4b04-8a18-ac73812e5048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cff9d3-0e5b-4cc8-87d7-eab7caefd42e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae39f13-05b4-4bb7-8ce8-643a1f636ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c639346-16dc-4c51-9a47-b52f6b2c315e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f47c42-9922-4626-b4fd-47cdaf8575f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33aa24f7-d86d-4843-af58-26ca1a514f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292cae4f-5ae8-463b-bf2d-e6b41209b106",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4bf082-26a0-4c6a-97bb-e3e52b4d9c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b0d7fb-05da-440e-a9b9-d539be125836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ced8934-aeb5-4611-aa76-3789dc14453e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2783d1d8-5b97-40b8-8828-d8efe20c93e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7719dd87-3923-4865-ae49-0f1ad22441e9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157d3d48-0920-4be7-8000-c447c3261f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721b7f3f-5ef9-488b-a455-ec6441788886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1218d60d-bc4c-4b25-bc5c-86bf09358a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602bbce0-c013-444a-883c-67b86867fce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd0bbc2-ba5a-4afa-87c0-606c0952796f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0410c393-68fb-454b-8a5f-e2b25ec24a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b71f01-ac86-4cae-82f7-4fe13c195f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a867c3bb-cebf-463f-9a01-68bb7cbc75d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449dd62e-dfb2-4379-afcb-68bcf5a38568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a0f3c8-b845-4d58-8614-aaca53b6c6a4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955f9541-f3e8-443b-9591-8eaff1262d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563d1379-4193-44c8-b620-b9bc147bd2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f456cf9-deca-4785-bb37-76bf5c5367a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dbfd37-1976-43a1-bb3f-e04c440e501f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843403b9-21e6-46ce-8e3b-a2ed6b3f9dec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f28449b-6f19-47ac-b817-f8957b8b9474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b20b33-d2c1-4b93-9e00-4c8d52129b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821ec472-d964-4eed-b51d-744872d49407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bca03ef-0262-4376-a9c1-03d639f4b4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a36004f-fb54-40c4-809e-ab3fbc0feed2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd67e07-7c58-4244-b47f-1ac2d85e4856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af5e645-69f6-4cd3-9766-5f428b9b5176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a924998-4150-4aba-937a-095fcf62ebb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9674b449-1af4-43a6-8ef0-5a1a792ed302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b0c4dc-c722-45fc-86a3-6ed0a6320e84",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8879ce17-69f8-46a3-ba92-269f23f2ac67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415c983e-68e2-4fc8-9148-975acea5d287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4652f64-fe50-4e0a-b7a6-6cd51ce41c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c25d6d-c002-4539-98ae-0cf836f3a548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4beb7189-1e96-460b-b794-329ca2e7ad5d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd42a1f-89aa-454e-a627-a286c9c26ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e38c4c-7a91-4e91-8428-d78fef0f4b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1ecd81-e872-4c59-8975-f878c7df1f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1023382d-30b2-4eb7-9e14-419ace4ecc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e5f7e1-afcf-4ca7-a204-af2d2dfc0f35",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936c212d-cb59-4d41-94d2-35571b9c7d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a680f05-8bca-4358-b34c-7c193b5bd439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb53a07-2ee7-44e5-8776-d9b31dc42d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc68ca4-88f8-4cca-a9bc-1e5e027e0bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3766d44-f6cc-4ec8-b973-2c8ce895ffe1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e916f99f-2c56-42f6-8497-3d47f2111c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bca6e29-085d-4f0f-82c2-ae7bfe6d46dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba713e15-5eeb-43a9-b205-c5e9e1500914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06cf55c-0a64-4dee-8746-b6bd8f26aa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ce662d-79cb-4f55-a39b-e65fb8090b1e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae09426a-13f4-459d-9275-23638770a5f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210e585f-d32c-4849-8dfa-2c3b14f145dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cfbec7-8a47-4085-8a34-8407895e2267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91608436-0631-4cbd-bea0-1b6ee1e8a1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ba704b-2658-476e-97b2-dbaba6e27b6a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f6c1c9-4065-42d8-a17c-9a1b14f9bb87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a38b6de-5165-48d0-a797-0cb018cffe95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fc3e04-d3f4-439a-bfad-3fac6eaadca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b400a8-3299-4672-a527-54fa91d06f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67062f6e-0be8-4cd3-8d5d-c710f58a7d9a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0871ce-0327-4202-a813-e04b1b97a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54651212-6f7d-4cbf-ad97-09932c10e255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed22d3d1-2bd6-473f-aeaa-0b62ccc9ce60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65341b51-1b61-460e-b82a-8326ec459138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216fe362-955d-4f68-96ae-3a32b3953d32",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aedc6d9-b8c9-4fd6-925a-b69d62aaf369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e6473a0-815f-4db9-b6f0-339aa9090e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bdf12a-5679-4c00-b59e-7271c51390fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f1f707-9687-4206-98c9-a11423281a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b22ad9-613b-4cd3-9803-59cb26873e1d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b2cc3e-b3e1-4c23-8c40-23215911ee00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c57f0a6e-7d3e-4312-b7ad-0d364a315ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e7c7e9-cc5f-4844-978d-37f3fa018b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3345b00-8751-403a-b906-39555e378175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8954644-b8fe-4ad2-b3d0-1c02676ff0c4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771e20ab-aa93-4460-bf55-ef7c9328edc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac7b217-16d4-4416-b33c-04f7db40bd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c23c90-b3fd-4d1f-a0fd-c0dd701e2f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96429ee-0c48-488b-b372-e71382aa89f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561a49f4-2d57-420b-a69f-775148b7c0ca",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89717e71-89af-47ab-ad4d-f0f4adb0f0d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6257262b-5d7c-480f-a1f4-78e98fe248c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46610946-8345-4a5f-902d-3a5089e26f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efc20e2-19cb-41d9-9a3a-2e71fdd9a6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e3452e-1af2-47e9-bc59-8c72df134113",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea48f475-eaa7-4fe5-8bb9-d8023bd76896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb0b24f-1137-4bb0-9ea2-76e2951080bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2ca3ea-8fa0-4332-871b-2f4d1a524e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbe0fba-39e1-4625-a419-1d435ae635d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b97d1d-a9e5-480c-b0b6-4a6f7372a215",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8cf37d-1c1b-4a21-bbdb-8af909d2ecf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55ac998-ed26-4c76-8ba0-cdd763167917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90def88-1665-422f-9c4d-82ba2d9bf74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794a61c8-c94d-4474-844a-c68db3af5615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319826d4-d4c4-427b-af17-4696bf8b41e5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1517ca50-ddad-4678-817d-1948427803d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "738d546d-b563-47a3-b48a-7787f9c6fd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8debee10-90c2-4232-a76f-5b43e535fc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae8ce11-b507-428e-b688-3d2326d3f5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3321568d-8ebf-4fb6-9e67-c266a5db810c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92c77d7-4aef-4190-bdb3-3aff4c987cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "debadd37-f81a-42b6-b710-b017c17656e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5701762-d27c-40d1-a524-6066ffa6ec36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e06c2f-0410-48ed-8cd0-1ac6c75489a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cefd84-d70c-4904-bac5-e9fcfde5ddfb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648a36df-65f4-4882-8a02-f2d48b3f8087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afccb248-ad84-469e-a79c-bf590fef1c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cede3be-9d08-4525-a420-b0a8b59979a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d164ad-4e12-4f5b-ba61-6e79a44efcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e45ffaf-44ae-49e7-8b81-f2983efff368",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f708c53-599d-4c6b-93ac-1601ae82ed65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aacd0b7-1031-48cf-9d0b-cb6cc4bb2bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b86421-6c0d-4853-a8e1-5eda63a18870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce149f0-9d3c-409a-bcec-fe17e902077b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cd1f82-d0e3-44d6-b46f-b01c00c87b82",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9333bc-5e35-45b5-bd8c-98947c04a652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e6c608-5e2c-458b-8257-a1ec649cf44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf29ce1-9705-4f94-883f-5a929635961a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fe8295-1da2-4b2e-87a5-051c696dbc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6dfee9-1ddd-49e1-a7dd-edbe20749747",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34acf34e-0b6e-46b4-a90b-ea8b92d30a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c22e83b3-2aff-43f7-884b-38419d9c1e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc8fb8b-28d4-4dc3-a51f-2084c4f2ffac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1370162-cb2b-4e9b-ad9f-5507bddeb177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21a7de8-45ec-4251-a73f-ea73c3149dd0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c61b28-c912-43e0-8629-5d2091e46c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b94713-2a67-469d-820d-575305a1d81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f035a32-e4ed-4d3f-bbae-58903e368301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e4d9d2-bc55-4d4c-8a20-468b8263d6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b29f04d-6e95-496b-946e-cc2f63301a79",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf3f888-ca64-4615-8992-ffd962cce512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91aac00-666b-4223-b9d6-e1c449044378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa06af5-8444-4453-9d6d-1a9077fda4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8355a3-acf8-47cf-859b-6d2a7ed37e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92124bcf-ba07-49d4-a784-2edd5d33eb15",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72405886-a854-475e-acc6-d54bfabaaa64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8830b408-73d2-4365-b1cb-ada53aad97e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a86d54-cce5-4124-bfb6-d989af543625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dfb4f1-9a0c-4eb6-930f-f119a6bf3556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d08f54-4fbe-41f2-b21e-3eeb698243b4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2860915-ff4c-4f69-93a3-7ded47552f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028e1044-a13c-42f5-a6cb-871a7aa7028e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7ec108-c107-474a-9fe9-0004a846de56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9cd495-80f1-4a33-9949-b525216deb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6236ef1-48cb-4d29-8d07-b59130ef114b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a1102e-e66a-48bc-897b-965c4842a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec135af-e8c1-445a-a0a0-01e37724f3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc42f91d-42af-40e8-ad4a-b0c2d29f1ce5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a685d84a-01e8-4cba-be71-10f32b254e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb96e9f-d2e4-423f-932a-3b8b709914ee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabec857-1005-4cc0-a718-8178660325b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "595bbbbd-f211-462a-881c-7e4c386a32d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eecb831-d142-4372-a0fe-7595d3c15071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44afdbfe-464a-4c9e-b436-4ebe265e6b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4511a80e-4825-4d42-b4eb-bd24169d1fe6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36e49cd-714c-47ff-86bb-cef6acce08e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5548f2c-d0a7-4a27-8785-ce770618bd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98560303-ab64-4450-8a38-03255ffd4151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc54a44c-feb3-48a0-ab0f-c992b3c480f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca00fdc-505a-4cc9-82ab-d514009a7402",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c387cd-2ac7-46e2-b90a-341a33be0e73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8ccc77-451e-46df-8125-ac266c4d6155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d360a6a-a03d-4f84-95a8-eb8fd9112870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9672f65-dd85-46cb-9b85-53182b819b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0064a98c-2dcb-4bc1-a71e-affcfab5f0fc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18c727b-a057-41d3-b70a-9736223b03a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60255f27-6377-4abb-991e-36380a5f16e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995624e1-e4bf-4d96-abc5-a41ab02e853b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9221d8-0681-4da0-9722-e07add580720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf655b26-1c81-45b5-83aa-64becfbad114",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d139f40-7bd3-476c-b7c9-52d06cab8191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4fe777-bb09-4a8e-a057-1013956d9cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce49e12-3fb6-41b3-b6e2-aedbce2e29c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7458ba51-7411-455a-a599-85d517bfbbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfd7d9a-cc56-45f1-bc34-a6aecc35a10d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e88b390-c8e1-4e4d-a50f-5c62be27f364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c1f149-aa22-4a91-9a98-ce49fb0aea77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabf5285-e6fd-4918-96ce-d5de6bcc52df",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcea2dff-17c5-49af-8b9d-00b494ecdcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e5d7cf-56b2-4f60-ac6d-6b79b1f33afe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b1b4b4-11a4-42f4-8dad-2804b4f00e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00201aea-037e-4811-b544-13135f698b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86eb6c60-e575-4903-8a2f-dbadade893c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4d34ea-e57f-48ea-aa59-e8bbf1c38ba5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0caba83f-43ee-46d5-9c9f-82f9793c2a46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f0e27f7-8f53-4cb2-bce1-d4b389a21f26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da2b59f6-ae11-4839-9bf4-1dac8e031202",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a31d5a6a-c648-4bb6-a68c-1e6589d0aa0d"
                    }
                  }
                ]
              },
              {
                "id": "f29f8447-097b-451a-be9f-583687259d76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20d704f0-78c2-4185-a1f2-c2540b833d5a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c1a00a-0b31-4354-92b9-a621412c70b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9d3ffcbe-c81c-41de-be07-ac17c3374ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34317c4-5381-450d-8287-559bcd29defb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89c99386-21c0-4129-b556-87ec52604ff3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0947cc9-01b9-4066-bf2f-24eb3135559a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcd2c8a4-fb50-4960-801d-057a50d62b3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "775c46d9-ef27-4be5-bbcd-67976515df62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96242b40-344e-4f92-8962-d54a3582ec02"
                    }
                  }
                ]
              },
              {
                "id": "081af58a-14ec-4891-9392-86d14449df89",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f176750e-8239-4fbb-bf3f-525d0e573db9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0290b38-d2e4-47bd-b986-17e40bfa11f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e7408e49-304a-4c54-afca-8db15ca802b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc9e7d3-6d6f-4e6f-bfbd-742010b0c74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fe69b2-39a4-4383-84cb-bcd24af4dd18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b8e0a444-70f8-400f-a44e-f4bad248d2bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9e78e90-4664-4615-9165-6d2617f55de4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b724324-a220-4c36-90cd-a27002fc6c5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "63c0717b-d17d-4ae7-933e-f4a7f394ea9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "283068cc-586b-475d-9929-8d63bd903cc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d906762c-0462-4cdb-8be1-de3eb78d520e"
                    }
                  }
                ]
              },
              {
                "id": "78449a2a-f56c-491b-8df4-fa6d7ca7483a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fbb92b8-af10-411a-9a22-2726293f1dfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "85612449-bcf7-492e-9079-44eb8bcfbdd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "096c4c25-1bce-4cd1-8aef-a96fcafd06fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8fcc9f4-e959-436b-9a73-e6da87109586"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2952743-590e-49c1-8b57-8b8bf02ec5a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "be184e9b-cfb4-4bdd-ba1b-f9266e7a829e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e04f6b9-7d19-42b9-b6f7-35448874c11e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e89990d8-671b-4b8d-8e40-cca8282c0c1e"
            }
          }
        ]
      },
      {
        "id": "25ea0e19-3ee4-42cf-9a82-5b0f520e8683",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "84fed665-096c-4279-9d8f-b7564302125d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94f0f4c8-ba6b-4ade-847c-249fc0f1525e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c7fe28a-fc9b-4d89-82a7-10f467b6430b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b59ed5-59fa-47c2-adc9-868e37a45cd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d36a488-f036-487b-9a81-561b13b6993b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7b044d-c16a-4c42-8666-72a17c1360ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "660151d1-bf68-40f7-9fd8-0e7299ec718c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd689506-87af-409e-be74-e88da7f81b5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f7ef74d-d1c2-429e-89c5-5f900570890c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6371513-f45e-44e0-b450-cd309782ef67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed70e0bd-c10d-4742-aa2b-52d518ca6eb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8570380e-bb72-4a05-b70e-e3d6b8c85188",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6a8013b8-8fb1-4510-9be6-3673bc25a89d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f2ceff8-91dc-4eb9-8918-6c56693bf144",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59bd50af-ecb6-4146-91d1-e8cd12c10c54"
            }
          }
        ]
      },
      {
        "id": "5a92a7e1-250e-4a43-86d7-10c73b7d7348",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "97bc1364-6d57-42a5-870e-12771f4ab6c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "347267ca-5682-4978-9747-113fac5d1e19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3390149-dfa7-469d-aca7-8b86c213367d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b9cd10-78d6-4257-884a-ed36368e1b6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5207e04-a847-4f72-93e7-78c5905cda19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703bce23-3147-45fb-b132-e47a14877a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfe1f314-cd58-4727-8058-fe51ea4950b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e316dd4b-f154-4397-af18-abe09c545e81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20ed4b4c-b089-474a-933c-4faf71072695"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f9bab79-ee5e-4882-a06e-565535e4b66b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "541152cd-b653-4d3c-a298-dad03375cf77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bd83808-f033-4ac2-80e9-c9d7adbc1a1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ce9a59f-52be-4e46-bd58-9b693a8d0bb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5df0808-0af6-46b1-9254-822882d42edc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae9224f3-1a65-4edf-b816-c8dd0b19405f"
            }
          }
        ]
      },
      {
        "id": "4d30461e-9d0f-46ca-b6a4-0947f86fe44b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "614448c8-5269-404e-b8e8-476cbe1d6c0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6c887b4-e28a-44b0-b22e-25b83c14bca8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fed130d4-434e-4998-bd13-c1803d324053",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab915b52-7748-4241-be83-53dae79b246a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fda88e0-d606-45f9-852d-daa5084fbbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c96010b-c167-468b-827c-dc0da4a32d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10c9248c-7e36-482a-a0f1-3583068ebb21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "caa529ef-6a1e-4d13-a85b-f19972a8444f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e28d686e-ede1-41ef-a69a-4fdb75fffffa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ee50151-ca06-4023-96a9-7d77fb66f158",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4962ff4b-b31c-47c2-b759-98cf563e0846"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74fa8002-e0fc-462f-82e1-63cc22c6846d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a497816f-97d4-466b-8ede-889853af754a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "537fc657-2949-41b9-9352-d5a0771a9ddf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27a9bd2e-f8a7-4caa-9b82-e15db6b827ef"
            }
          }
        ]
      },
      {
        "id": "32a2f520-481c-4dc2-a3c1-5d031e3d68df",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cb7726f-42b9-4e14-a073-114692e129c2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93d22a1e-795c-4e91-bb8b-e5c72f74615b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "51e50c1b-200a-44ab-9a9a-1d3f88e94163",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3ddd0cf-89dd-475d-8cab-9d04c76d1ea2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5ebc0d7-a937-487f-a2cb-7d6495bb60f2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.47619047619052,
      "responseMin": 7,
      "responseMax": 348,
      "responseSd": 22.81854379760206,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723077632829,
      "completed": 1723077658330
    },
    "executions": [
      {
        "id": "bde012cf-a5d6-42f9-941d-bf24e97b98a7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "32645f4f-b3a1-45d9-b09a-7f141421d530",
          "httpRequestId": "6807f343-9a13-4859-b67f-c0aefbcd88fc"
        },
        "item": {
          "id": "bde012cf-a5d6-42f9-941d-bf24e97b98a7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8a2b5af2-75d2-46d5-86d6-8b960c66888d",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "08a8303d-73d7-4597-b981-c7fbea1cdcd7",
        "cursor": {
          "ref": "455403dd-1162-4d41-9204-a9ff5130e559",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1656f093-943e-4959-88c1-872030e0705b"
        },
        "item": {
          "id": "08a8303d-73d7-4597-b981-c7fbea1cdcd7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "37c6aa6f-cbd1-4773-b269-f8d188f6331e",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7ccd2b7b-dde6-4224-afaa-bdeb064eaf5c",
        "cursor": {
          "ref": "307ed9ea-f121-485d-8b11-4037184b6bdc",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b2cc64a1-d29d-4d32-bfd9-1a11c797e0a2"
        },
        "item": {
          "id": "7ccd2b7b-dde6-4224-afaa-bdeb064eaf5c",
          "name": "did_json"
        },
        "response": {
          "id": "770b81db-5351-4104-949c-8d7128fb1e2d",
          "status": "OK",
          "code": 200,
          "responseTime": 348,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57d0fb0-6d0e-4d22-b90e-b92607af32b4",
        "cursor": {
          "ref": "0e008764-2ebf-4249-8bc5-991f56db73ae",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "26d83d22-bc11-470c-9d36-36e3cd0c3515"
        },
        "item": {
          "id": "f57d0fb0-6d0e-4d22-b90e-b92607af32b4",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc500621-06c1-415d-9cea-0c0022947805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57d0fb0-6d0e-4d22-b90e-b92607af32b4",
        "cursor": {
          "ref": "0e008764-2ebf-4249-8bc5-991f56db73ae",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "26d83d22-bc11-470c-9d36-36e3cd0c3515"
        },
        "item": {
          "id": "f57d0fb0-6d0e-4d22-b90e-b92607af32b4",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc500621-06c1-415d-9cea-0c0022947805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79e58e4-aed2-4f7b-b5b0-5a2bfa9f074c",
        "cursor": {
          "ref": "ee50fdd1-b5f1-4769-958d-a57ebb801fd6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "68409cc9-86e6-4fce-b96a-791afc4e1a1d"
        },
        "item": {
          "id": "d79e58e4-aed2-4f7b-b5b0-5a2bfa9f074c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe133602-f426-4567-babe-b131faf7850c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 234,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa9e86c-df1f-4dba-a8c3-ce3a359d6b15",
        "cursor": {
          "ref": "7c02e88e-8b30-4bf0-bc08-339b272b446a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f21f024e-5ef0-4645-ad18-365f7563522b"
        },
        "item": {
          "id": "efa9e86c-df1f-4dba-a8c3-ce3a359d6b15",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "802d4d21-b1f4-44a7-a625-a1732313100f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667abef8-fe1a-4d2b-ab49-f7cd9d80647f",
        "cursor": {
          "ref": "cad6b096-15c7-4d00-ae5b-fa3806ff5cb8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5451db60-e20e-4a73-a95b-7d4afd4c6729"
        },
        "item": {
          "id": "667abef8-fe1a-4d2b-ab49-f7cd9d80647f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3b1cab05-291f-4dc0-a55b-6ceea9076d9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9e1373-70a5-4bb8-9f64-8ab0ba81c344",
        "cursor": {
          "ref": "28266674-3205-4eab-82de-fea19acbe185",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cb6ba670-eee6-4908-a02b-045f6d684ca8"
        },
        "item": {
          "id": "1d9e1373-70a5-4bb8-9f64-8ab0ba81c344",
          "name": "identifiers"
        },
        "response": {
          "id": "8f390f1e-f8d2-4877-a3e4-bb11dcb16b2b",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f215813b-d4bf-4494-93c2-8a3142f0d1f6",
        "cursor": {
          "ref": "9fdfd921-2f16-4bfe-bb92-1b6504c4ad7c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "600363c5-9fa7-4302-bd59-976a9cb1819f"
        },
        "item": {
          "id": "f215813b-d4bf-4494-93c2-8a3142f0d1f6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "434d4923-1cd6-4b66-af40-c7fd341e2dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5534e3-c2e1-402c-817c-2845b296f4db",
        "cursor": {
          "ref": "b9c022d5-488a-4956-9b4e-e9af3d2e373d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5a50c6de-4038-4bdd-81a6-cd536fec0126"
        },
        "item": {
          "id": "9e5534e3-c2e1-402c-817c-2845b296f4db",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b208b6aa-8f83-4eea-b1ab-08644b445c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631a1f10-1558-4a78-b914-cefb5f868206",
        "cursor": {
          "ref": "f369b490-5826-471e-9c90-baaf75a5b11e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "410d08bb-06f2-40d9-8caf-c93399fae116"
        },
        "item": {
          "id": "631a1f10-1558-4a78-b914-cefb5f868206",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7b25f173-a0a8-4839-8c14-94bbd6fb13a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b74067-e721-460b-b235-38e9a1dd1911",
        "cursor": {
          "ref": "f90a81a0-4a21-41ce-8fc3-ff96ee1eefc7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "37d95c24-ac37-457c-9206-09ed7337b7f9"
        },
        "item": {
          "id": "95b74067-e721-460b-b235-38e9a1dd1911",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "23be4b97-b4a0-4223-ac2d-0c03bd5f4554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc01a80-566c-4e80-b31b-c22b45311185",
        "cursor": {
          "ref": "0fbed03c-8967-4afc-a157-fd2e3b74bf0e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "afbc4a6d-d9ca-4d84-9667-c308c1769028"
        },
        "item": {
          "id": "7dc01a80-566c-4e80-b31b-c22b45311185",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4174841c-6494-4155-a8ec-71a487e8f829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66d08b9-55aa-40b5-846c-5ef497ec539d",
        "cursor": {
          "ref": "af9259bf-1baf-4dd1-a36f-293b42a1e7ea",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3db9236d-9646-4e0b-83a8-ff187a9ee56d"
        },
        "item": {
          "id": "f66d08b9-55aa-40b5-846c-5ef497ec539d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d909d032-823b-476b-a18c-42ac364e3d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a41fd6-2b9d-433d-be7a-cf6936021cdf",
        "cursor": {
          "ref": "0a1c3803-9dd0-4e2a-920d-a82b7f824958",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "475a7f6c-493f-4083-9049-20d66c07d9f2"
        },
        "item": {
          "id": "a1a41fd6-2b9d-433d-be7a-cf6936021cdf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7e9f595e-94b1-44bb-8b9b-7d7ea568310b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b693fe1d-789a-4a39-89f1-148641c8e33b",
        "cursor": {
          "ref": "7a0e026f-7fc8-4d16-a518-9e4b1b0fc6bd",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4649ab4a-a563-495c-8a03-55f8fac8dfdf"
        },
        "item": {
          "id": "b693fe1d-789a-4a39-89f1-148641c8e33b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e3c75fde-6543-41f2-8f14-5ca0c6fbdf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe76714-ad63-4d8e-afe4-330bdf0f820c",
        "cursor": {
          "ref": "440cf15b-4e5f-4087-ba64-222e259c29b1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ecf97e52-fded-439c-9bd1-b828bc049901"
        },
        "item": {
          "id": "8fe76714-ad63-4d8e-afe4-330bdf0f820c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6a6e6775-6699-44d3-980d-9d2241e3df1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a933c19-f77d-4ad8-82b6-e352d1b4d527",
        "cursor": {
          "ref": "fd938688-da0b-4e45-ad09-0d160dfca1db",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a3003cb2-d9ac-4166-85fa-2986fa9406bd"
        },
        "item": {
          "id": "5a933c19-f77d-4ad8-82b6-e352d1b4d527",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5a721a67-f825-4932-9277-e5ce393fdaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e70788f-d517-4062-ab36-07cd36a08946",
        "cursor": {
          "ref": "d5c43acf-8af9-43c9-a526-90dae7dce671",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cfd8f8b6-0ac0-4346-beab-de2af7b3cbed"
        },
        "item": {
          "id": "9e70788f-d517-4062-ab36-07cd36a08946",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "61b44065-c676-442f-9e00-3c7a3c62f0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa4806a-79e3-4324-bea9-59e0fd2b858e",
        "cursor": {
          "ref": "a8e023fd-0e79-430f-a8c3-e0e3db4ca51d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aaa5963f-e48e-48eb-8ece-ddbfb0bdffd9"
        },
        "item": {
          "id": "4fa4806a-79e3-4324-bea9-59e0fd2b858e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1a022744-7456-4711-aedb-5f3283f30d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2375fdbd-61c2-45eb-ac8f-8cb2e57dcb50",
        "cursor": {
          "ref": "097dcd08-af7d-472d-8f71-2c59437593dc",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2351b9be-6c02-4691-8f72-acc2f0d8044a"
        },
        "item": {
          "id": "2375fdbd-61c2-45eb-ac8f-8cb2e57dcb50",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b5b1c552-ee5f-42e2-9538-70e3ae1a5e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aef676-3625-435c-9647-3d635e8f8cd2",
        "cursor": {
          "ref": "d997a350-21b4-4e3c-b74e-82cf8881334e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "505d5992-a7bc-4dfa-9d9c-cc6ed6b82dba"
        },
        "item": {
          "id": "e9aef676-3625-435c-9647-3d635e8f8cd2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "34d49ed1-1094-4e01-b873-4007fbafd8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862b123a-40fb-45f1-b6c8-b418472db939",
        "cursor": {
          "ref": "adaaa28d-6fcd-4394-9a27-988316b115b1",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e38c6990-c689-489e-bbec-50ebff3f0f6a"
        },
        "item": {
          "id": "862b123a-40fb-45f1-b6c8-b418472db939",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "054d2fcf-67a0-4993-9d0e-c6b72374e301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fb2d2f-3fb1-4930-a960-0b605ee3aca1",
        "cursor": {
          "ref": "c80b5f1b-9070-4358-9baa-6be6f1a152b9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bb80ed7b-8123-4f9a-b728-9734a54d3e12"
        },
        "item": {
          "id": "01fb2d2f-3fb1-4930-a960-0b605ee3aca1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "58cb51d3-3022-4347-97a3-b86ac2d96ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf28fcb-7141-48d1-9541-55dda87e4efb",
        "cursor": {
          "ref": "56554d23-e8d2-4392-8329-c66d8388b854",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7646cb75-e960-466d-8191-2c42c5ce16b8"
        },
        "item": {
          "id": "2bf28fcb-7141-48d1-9541-55dda87e4efb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "deabc93e-80e3-45d1-a73b-466c4fb8dd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283f2291-22bb-4074-be29-2b8f28e30443",
        "cursor": {
          "ref": "6105770c-0a1b-429b-954f-30531af92cfa",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "01bc7eb3-c1cc-4ee4-8158-8c6f765a2484"
        },
        "item": {
          "id": "283f2291-22bb-4074-be29-2b8f28e30443",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3be9ae78-3057-438a-827a-abcfb5456ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1b6367-5099-47f0-9547-3da772cc984e",
        "cursor": {
          "ref": "99fc7614-efba-4254-93c1-dbc6ddbda7f6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4c6d9d29-6744-4931-b554-337457856953"
        },
        "item": {
          "id": "5e1b6367-5099-47f0-9547-3da772cc984e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5ee7dcd6-fb09-42d2-9306-fb80b078035c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db9013a-31fe-40de-8a3e-dcea3f7eb080",
        "cursor": {
          "ref": "d487705d-233e-4f89-b576-68b0492bd441",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2a79dd49-f63a-4d80-89db-249c105eaae8"
        },
        "item": {
          "id": "0db9013a-31fe-40de-8a3e-dcea3f7eb080",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "182f62dc-ee37-46f8-9f37-b9e20cf9a71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f139799d-30b8-4587-a233-9c0fc61bc93f",
        "cursor": {
          "ref": "8da06db3-dc6b-490f-b69e-5a011cc245f9",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1915bdc2-c7fe-4b3f-b521-05c618472270"
        },
        "item": {
          "id": "f139799d-30b8-4587-a233-9c0fc61bc93f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f65901fe-a632-47fb-9740-b84bbc83127a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a403e217-060e-4ce7-95c3-e692dc23973e",
        "cursor": {
          "ref": "d307c1b3-95c9-4ee1-a71f-618ff18e7126",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f6197fd5-0b12-4c04-8088-a15a26a66622"
        },
        "item": {
          "id": "a403e217-060e-4ce7-95c3-e692dc23973e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8d4a4855-7654-4ab2-83df-4fc443556fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21375d6b-e884-4bba-b5ef-e58b813cb58a",
        "cursor": {
          "ref": "8cab511e-9f17-499f-a037-325aa784fd82",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "032c8617-4417-4e2d-9f24-3db24f5fd364"
        },
        "item": {
          "id": "21375d6b-e884-4bba-b5ef-e58b813cb58a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "69d68fac-d5d4-43b7-84ef-37224c41f518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb808bd6-c6b1-46db-b8ef-7aaa97c1927e",
        "cursor": {
          "ref": "f2d92350-a5a9-4145-aa3f-4a2312000fb7",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7ae9235f-5eba-4f75-aeee-72d8e29b4b91"
        },
        "item": {
          "id": "bb808bd6-c6b1-46db-b8ef-7aaa97c1927e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "18f3d9f3-e486-443f-ac6a-d38439a0e3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99999b28-f2ec-4ff7-8081-cf7c9455fcf5",
        "cursor": {
          "ref": "d58d1a26-f5dc-4959-8fc9-781b975dec2b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ae3b8baf-b071-4495-a07e-083dd96e23d4"
        },
        "item": {
          "id": "99999b28-f2ec-4ff7-8081-cf7c9455fcf5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "83d15ef8-0f80-4b42-8617-0893eb8ecb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958f199c-66e5-494e-bf7f-490743d987ed",
        "cursor": {
          "ref": "6058c0ef-16f3-46df-a8fc-bd75171b18c5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a1969e62-e094-4fd0-8bdd-1e8234c97690"
        },
        "item": {
          "id": "958f199c-66e5-494e-bf7f-490743d987ed",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "44011fd6-e8f2-4105-8aae-f2589f51d468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8c2488-c02b-4db0-8bb6-2773b9b49853",
        "cursor": {
          "ref": "a35a068d-93e0-487a-974b-3ba03dd05ea4",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6ed58927-9b31-48f8-930b-3060bf82fc54"
        },
        "item": {
          "id": "3d8c2488-c02b-4db0-8bb6-2773b9b49853",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ac942494-bb27-46f6-bfc4-87da8e18f516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61b2ef8-09eb-443b-b301-7e18cce98a49",
        "cursor": {
          "ref": "79ea0e58-e21d-42cb-af77-69fdf9a3ae3f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1566dcd1-47f2-4c3f-9101-4d12831ea1a2"
        },
        "item": {
          "id": "f61b2ef8-09eb-443b-b301-7e18cce98a49",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0f9faeca-96c1-45ee-9567-c5eb737d45f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2b01e5-be72-44f1-8f97-e523ee98e991",
        "cursor": {
          "ref": "423c5957-677a-43e6-be0a-4189fc64b378",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1c7931bb-1e40-4344-8d4d-63762424b1f4"
        },
        "item": {
          "id": "6e2b01e5-be72-44f1-8f97-e523ee98e991",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6225adf2-e257-4bf5-aa48-9b000283b6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9362a8b8-0508-4581-b398-356e7844e265",
        "cursor": {
          "ref": "bb669ca2-77ae-4b18-83b3-45c0ac657462",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "69402515-cdb4-4786-90ac-3a5429f52972"
        },
        "item": {
          "id": "9362a8b8-0508-4581-b398-356e7844e265",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "199382f9-4292-4f82-ae70-147b5f3a4893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f962f9-cf97-415a-b6df-80af94bed606",
        "cursor": {
          "ref": "9a902d81-753a-4e90-a7d3-4a5a6847c242",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d47b2f4e-5b0f-48ce-a919-031464089a09"
        },
        "item": {
          "id": "13f962f9-cf97-415a-b6df-80af94bed606",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b2d2a609-f468-4bac-81f6-aa8e3160708a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41dde31-1484-4eb6-8fd9-318f7e0e4a9c",
        "cursor": {
          "ref": "28784bbd-92eb-4dbe-8c06-a93881f5d90b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "53bf2da4-f619-45f9-86ce-b3978878ee98"
        },
        "item": {
          "id": "d41dde31-1484-4eb6-8fd9-318f7e0e4a9c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "056421cb-6c03-423e-a8ad-c8d87847393c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d6c8bb-f6a8-40e2-8beb-baa46aadd084",
        "cursor": {
          "ref": "e93c117b-8ca2-47ee-b6ac-5c10cdfbcab2",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "13cc2307-4f8e-43f4-91e8-4296fe4c176c"
        },
        "item": {
          "id": "20d6c8bb-f6a8-40e2-8beb-baa46aadd084",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f480fb24-5387-42fe-a4ba-81bff43b1b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8f7f52-5f97-48f8-a57a-ffb821fdc6a1",
        "cursor": {
          "ref": "6cd503d5-696b-4205-b047-45d5bbc897bb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bab640d7-f49a-4549-8c96-f9c52ddf14b8"
        },
        "item": {
          "id": "8a8f7f52-5f97-48f8-a57a-ffb821fdc6a1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2d2855a1-bb15-4f54-bf47-7dd1ef401439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359cc085-bb19-4192-8feb-e18f63972705",
        "cursor": {
          "ref": "b63a5d22-aaba-4414-a58a-52a1acf1d93f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "822b7406-612e-41cf-b757-328879547df0"
        },
        "item": {
          "id": "359cc085-bb19-4192-8feb-e18f63972705",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "94c89db2-d6f3-439b-9141-73e530409ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd86a651-3b74-42c0-af81-11e03669b74a",
        "cursor": {
          "ref": "1b828cb2-7474-4245-a480-e46d8dbda2a3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2393ab9d-f0b7-4a49-8e6f-b75c284752d8"
        },
        "item": {
          "id": "dd86a651-3b74-42c0-af81-11e03669b74a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e3cdd1db-bee4-41dc-9c3b-96a8a4d2062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be2ddaf-1122-429b-8935-a641416191c0",
        "cursor": {
          "ref": "fc797339-7b12-4211-b43c-8f98b9065d45",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fb1f6a54-6810-4c72-a2a2-616e588bd045"
        },
        "item": {
          "id": "1be2ddaf-1122-429b-8935-a641416191c0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "67eb14fa-4394-4c97-a1d0-1db0a85dae41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb85b03-8cdc-44d6-be89-546bfbec007f",
        "cursor": {
          "ref": "116b140f-5911-4ac2-b180-6631be54a096",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "237584d7-bd34-4ac5-84ad-22bd008dcdb4"
        },
        "item": {
          "id": "bcb85b03-8cdc-44d6-be89-546bfbec007f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9e61b694-dd8b-4293-80eb-6d574784e471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53345d12-62d4-4ba5-ad62-97a1933803b2",
        "cursor": {
          "ref": "8bcb4a19-dffd-465a-bee5-c57c3def33f2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a1ac1f72-6a99-48e1-93ca-509ec91ceeb8"
        },
        "item": {
          "id": "53345d12-62d4-4ba5-ad62-97a1933803b2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3bd96c90-de0e-4c74-9c7e-f4fb1ed4f78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce384962-096f-48f9-a7a3-97c0c5869c2e",
        "cursor": {
          "ref": "8c0240c2-4789-4712-8434-2ec6b179cfbb",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6c64853e-bc4f-4cc2-95af-add4fa8820e9"
        },
        "item": {
          "id": "ce384962-096f-48f9-a7a3-97c0c5869c2e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f1ab48ba-770a-4c39-be97-753722cc7517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393e888c-e706-401e-a49e-e9fbdc0cad93",
        "cursor": {
          "ref": "c99b3a6c-8fef-4024-af19-314f9b6a3924",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "845ed5dd-519d-44d3-ac3b-cb2945d8c0da"
        },
        "item": {
          "id": "393e888c-e706-401e-a49e-e9fbdc0cad93",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "15533f8c-b50c-471e-ac85-5a5686eb8608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031d6195-3b83-45da-b22d-048cd89f1de6",
        "cursor": {
          "ref": "e41debad-f9ac-401b-8802-6be0a435cee7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0a24e971-1c98-473c-ac6e-8ffe1a94e4a8"
        },
        "item": {
          "id": "031d6195-3b83-45da-b22d-048cd89f1de6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ab2f6e4c-a809-475b-b28f-7ab083db508b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e017dd-d122-421e-a10f-0d701705c89c",
        "cursor": {
          "ref": "6ad6f26e-7e4d-4a67-ac76-e0df7dfd2491",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "90160318-55e4-4ca6-8705-753a044f6110"
        },
        "item": {
          "id": "33e017dd-d122-421e-a10f-0d701705c89c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "21ee6d53-9f1d-4981-96c2-c84f100da2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ea6d38-68ed-445c-a894-8ebadeb2f642",
        "cursor": {
          "ref": "562eafe2-19a1-468b-af92-3e727468e571",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "935e8a18-4a5a-49e6-93cb-a4803479bd57"
        },
        "item": {
          "id": "92ea6d38-68ed-445c-a894-8ebadeb2f642",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "32e3b5d0-8f87-45b7-9772-705bdaae7303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e491c5ea-b30d-4eda-a6dc-a7b46d44343a",
        "cursor": {
          "ref": "18040c10-c1c0-4348-b2fb-5a0870b977c6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "14401a55-616d-4411-8155-814dc3424f59"
        },
        "item": {
          "id": "e491c5ea-b30d-4eda-a6dc-a7b46d44343a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2f3f012e-045b-48b4-8dff-6aabd3792e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f06701c-3868-4981-a771-8c8b43d85f04",
        "cursor": {
          "ref": "a276f564-afff-4a6d-aa11-a3a2c4e9550c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f49ac9e3-92b0-47d1-8e7f-74a0c90908bf"
        },
        "item": {
          "id": "6f06701c-3868-4981-a771-8c8b43d85f04",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "16cf6e10-2d79-4758-9eb2-f217c272bb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98685b7-42b1-455f-9b14-1e093ec8cfa5",
        "cursor": {
          "ref": "21912cba-6efd-4eb7-a232-697f9e03eba9",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fa3ad9d5-b0d1-4196-ae38-4449fa72997f"
        },
        "item": {
          "id": "d98685b7-42b1-455f-9b14-1e093ec8cfa5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "05ca825d-ab30-43d8-84a7-3de13dda6479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c754fb1e-07d7-4de6-86de-8480195c708b",
        "cursor": {
          "ref": "0eaf3443-aea3-44e8-a69a-0357ec5d96a2",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4c503fe1-e2b9-49d1-93bd-7d1ce7b78dff"
        },
        "item": {
          "id": "c754fb1e-07d7-4de6-86de-8480195c708b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3d9e4dfb-e10a-4131-8665-fd27d4cac20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb513ec3-8950-4a39-825d-bf65283eb448",
        "cursor": {
          "ref": "38049c04-19ae-4d0b-b8c0-d553ef904c23",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8ec7ff93-8125-450b-8b03-4a4534ad3cfe"
        },
        "item": {
          "id": "fb513ec3-8950-4a39-825d-bf65283eb448",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "529232a8-524c-40c4-9ee1-e8a69ce69de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17071cda-333a-4be1-a2c2-3ca57775a7c9",
        "cursor": {
          "ref": "155c306d-eec5-4412-b2a1-592d423a701d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bec3f17d-d845-47b1-907b-b9b866ca8e49"
        },
        "item": {
          "id": "17071cda-333a-4be1-a2c2-3ca57775a7c9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a86a4a47-b03e-4a01-aa70-dc82297886fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728ac5fa-6db6-40d5-bdbd-caf82747cdad",
        "cursor": {
          "ref": "cac482e8-af59-4fb4-9f52-fd00812a436c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9ede4241-c3a9-4eaf-bf47-5e3a44b08fb4"
        },
        "item": {
          "id": "728ac5fa-6db6-40d5-bdbd-caf82747cdad",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "577661d0-7ffa-43cd-bc2f-19d8beaf2b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edddf11c-c551-40ef-9669-2b80e2ac2e6f",
        "cursor": {
          "ref": "f4adb69c-09e3-4cfd-a5ab-2b43fffb7d37",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2edf2223-4fdc-4201-acd5-c8fbea2b11fe"
        },
        "item": {
          "id": "edddf11c-c551-40ef-9669-2b80e2ac2e6f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "179884c6-c37f-40ec-a4cd-04690527a4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85afeff3-a603-407c-8c83-cd17f263c3cf",
        "cursor": {
          "ref": "b94ddc5b-051a-40ba-a262-b8a8b316b3d8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8ee91019-5ce5-4266-9426-868ad608cd57"
        },
        "item": {
          "id": "85afeff3-a603-407c-8c83-cd17f263c3cf",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c4a4ebca-8812-46a0-b821-3c391f74a16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdeae28f-85a9-42c0-8bad-7748cb9a817a",
        "cursor": {
          "ref": "79a2dd34-2e10-4db5-a7d2-2be67d3f1ffc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "820be5b0-dd7c-483a-b412-1095ca09e668"
        },
        "item": {
          "id": "cdeae28f-85a9-42c0-8bad-7748cb9a817a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "795fa8d5-9992-49e5-acb9-c2fe2c100707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a99f75e-113e-4148-ad32-9efa6035f7cc",
        "cursor": {
          "ref": "55b9efea-461d-420b-967d-4fd6cd180e2c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "19522084-bbf4-4e8b-a41b-b2749c6842d8"
        },
        "item": {
          "id": "6a99f75e-113e-4148-ad32-9efa6035f7cc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0dcf2fb0-4037-4d50-9403-494ff74cb5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ed6cf8-397b-4ef0-a7eb-639a5bdf3763",
        "cursor": {
          "ref": "c942520e-1fbf-48f2-929f-4e3df7da9190",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b5507025-6278-4290-959a-a7165f674558"
        },
        "item": {
          "id": "30ed6cf8-397b-4ef0-a7eb-639a5bdf3763",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b540c815-0706-4c3b-8ca4-ef08bfed5bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b8ec32-3b37-445b-92e6-bf99cd14f645",
        "cursor": {
          "ref": "12ffa693-f307-4206-b709-cbcf9d754952",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "545d3f95-02d0-4670-ac24-b677bbd9e803"
        },
        "item": {
          "id": "52b8ec32-3b37-445b-92e6-bf99cd14f645",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "183558e8-4542-4613-8c16-47788444ffb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a071fd7-e2a8-47a6-8fc8-70702379e72e",
        "cursor": {
          "ref": "917e72b5-f790-474e-97ae-b479759a0a29",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e5a6d1cb-ad46-4151-93ab-e46d4ed7df86"
        },
        "item": {
          "id": "7a071fd7-e2a8-47a6-8fc8-70702379e72e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8d2cf9a2-9e9b-402d-8612-8c18e9efdefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289cdf69-0ced-4e0c-a615-5d0ca4f38ff3",
        "cursor": {
          "ref": "46a2bbd5-7304-443a-af1e-e8bd77ff073a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4726216d-3d51-442d-825b-595f0f7c02c1"
        },
        "item": {
          "id": "289cdf69-0ced-4e0c-a615-5d0ca4f38ff3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a1603ad1-4529-44f8-9f6e-b58d50738c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9b0a76-f12f-4287-b320-63fa9dafd2ab",
        "cursor": {
          "ref": "c844374c-7b34-4717-a8cd-8c25e5f81bd7",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fa610935-e28e-4a4e-b1ff-5e9c2468ad18"
        },
        "item": {
          "id": "6a9b0a76-f12f-4287-b320-63fa9dafd2ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8018d94c-17ad-4138-9304-9c5638978fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33d031c-ded2-4c18-a79e-d0722deebc03",
        "cursor": {
          "ref": "47db2e9f-cfae-4824-b24f-2bcbb574f011",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4b716dfe-4540-4b5d-9f26-c982095072e8"
        },
        "item": {
          "id": "a33d031c-ded2-4c18-a79e-d0722deebc03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "93cd5863-7ba4-41e4-8e34-e79cd628fa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd8e04b-824b-4518-898c-34889e2cdf58",
        "cursor": {
          "ref": "e452e00a-6473-43b0-b78f-5fabf713359c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "66c9e842-4cda-4370-aa08-85a48d5b04f5"
        },
        "item": {
          "id": "dfd8e04b-824b-4518-898c-34889e2cdf58",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c6c67529-b8dc-4e18-8e89-0228adad1117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4047f2d5-a0cb-4ee8-9473-0e3041a4e3d7",
        "cursor": {
          "ref": "3531e799-93f9-4459-90d2-3bc1005e8689",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "df18ddd7-6df7-4fb4-9cdf-84e2ec27fcf4"
        },
        "item": {
          "id": "4047f2d5-a0cb-4ee8-9473-0e3041a4e3d7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "872f91a9-db19-42ad-8b29-700560ace3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e14815-5b3c-4f14-9f41-3c144fb28d48",
        "cursor": {
          "ref": "4567726d-6abc-4655-873c-41334b3b6aa6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "811fef0e-4f64-47c1-aa63-aa9f27b325bd"
        },
        "item": {
          "id": "42e14815-5b3c-4f14-9f41-3c144fb28d48",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "26683463-e594-4553-954e-8a0bc9f40155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f884c93-c437-4232-989f-6b0820095ded",
        "cursor": {
          "ref": "cf26c298-9f43-4867-987a-51c14c1c95a6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ef769732-6f6d-4a59-9b7b-91ff66440413"
        },
        "item": {
          "id": "7f884c93-c437-4232-989f-6b0820095ded",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6fad69b9-09d8-498c-ad03-2ecd58147755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff03934-da6c-49a3-9a28-0ec1238933d3",
        "cursor": {
          "ref": "6074d1fa-bf0f-415c-af0b-2f320945efb0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a1cecd40-fd17-42a2-9e77-5daf6dc9994b"
        },
        "item": {
          "id": "4ff03934-da6c-49a3-9a28-0ec1238933d3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3b39a169-cdfc-4fb0-9680-7dc8e99c4b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cec67e-be9c-4d79-bcf6-f2f464f0960c",
        "cursor": {
          "ref": "4777cf05-8a4e-4202-84d3-765ed2da576e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "76f099c8-bf77-49f3-bed2-c9ba437b323f"
        },
        "item": {
          "id": "24cec67e-be9c-4d79-bcf6-f2f464f0960c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0aeb859a-59d3-464e-aad7-a43167ef4c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26cafc3-83d6-4c1a-84aa-3c37f1c73a1b",
        "cursor": {
          "ref": "fd06619c-3671-4c3f-852c-9c5aadb339ae",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "602030e7-8478-48f2-8f96-feb8f4e1af68"
        },
        "item": {
          "id": "f26cafc3-83d6-4c1a-84aa-3c37f1c73a1b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "181b55a1-9649-4871-b87b-d1de739230e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f9f4d8-44b2-49c8-a595-dd8e74afbde6",
        "cursor": {
          "ref": "bf0f2453-b606-4270-8881-92dfe891c93e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bfbcb4f3-fd7b-42a9-83ac-47414b324f78"
        },
        "item": {
          "id": "e8f9f4d8-44b2-49c8-a595-dd8e74afbde6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "59135985-f94a-452f-85f7-dfe9c83b2981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780ed371-2a1f-4f12-b6c2-f8dd00a89e4d",
        "cursor": {
          "ref": "39d278fb-c35b-427b-ba8b-949aac719797",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5bf7c08b-9ccc-478c-8698-ba86b6284202"
        },
        "item": {
          "id": "780ed371-2a1f-4f12-b6c2-f8dd00a89e4d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "20336ffe-0c4f-4a2f-92f4-090ce136a0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2fe778-02d2-43f4-9aeb-707c005bd979",
        "cursor": {
          "ref": "5e79dcfc-ecf6-466c-bcf5-73df06df68e2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b23cb62a-fbb6-40ea-abcf-bec434552456"
        },
        "item": {
          "id": "8f2fe778-02d2-43f4-9aeb-707c005bd979",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7a60e14d-bdac-4e23-8e91-46bc73b98f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d10e7df-7389-4cb4-a4f8-7fb7b37b6bfa",
        "cursor": {
          "ref": "3613bb69-2dda-4401-a62f-77998992d952",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4117d16d-7112-4770-a5c5-b097dd12c2dd"
        },
        "item": {
          "id": "3d10e7df-7389-4cb4-a4f8-7fb7b37b6bfa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bab262be-e26d-45da-aae0-b120164766bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31771d4f-f066-46ca-bc8b-1851f9141b2d",
        "cursor": {
          "ref": "de312b02-6d9e-4302-9008-964cc3fd8f89",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5f843b25-e662-46c1-9574-a45742762e87"
        },
        "item": {
          "id": "31771d4f-f066-46ca-bc8b-1851f9141b2d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c57d3e93-1ce6-4649-b797-31f1ca0647cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd529930-d6b8-47b8-8624-a0ac7ba87210",
        "cursor": {
          "ref": "1a16e377-9102-42d5-8cee-0a5b02df2ed5",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e0baa63b-afbb-4315-8c60-e45610087964"
        },
        "item": {
          "id": "fd529930-d6b8-47b8-8624-a0ac7ba87210",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "411efcc6-acc5-4121-9549-b24b9bc7c03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d46f960-5c15-4a31-8af7-e2e4f5a8fea3",
        "cursor": {
          "ref": "37b6668e-3abe-4676-b664-a4c7da695b3c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cd856588-f3f7-4047-9002-96c305f23e83"
        },
        "item": {
          "id": "6d46f960-5c15-4a31-8af7-e2e4f5a8fea3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "51a867e8-4052-4218-87f7-f0e07bbd3e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2672ba20-c9ef-4b12-9770-7c0a1a712de3",
        "cursor": {
          "ref": "d2554e3c-18e5-4a05-bcf1-777d40b81baa",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "120df1c4-0cac-4df8-b0b2-8733be7cc3a8"
        },
        "item": {
          "id": "2672ba20-c9ef-4b12-9770-7c0a1a712de3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "eb13127e-427d-432b-a281-b6e68a7b4b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5485cb6a-b30b-44fb-9ccc-daf8a2e3901e",
        "cursor": {
          "ref": "86ba57fa-fc66-4eeb-8d50-1112693bb09a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0309125c-2257-4cc2-a605-3de89afd7b75"
        },
        "item": {
          "id": "5485cb6a-b30b-44fb-9ccc-daf8a2e3901e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "49f2e481-43f5-4a4c-9f91-427dd5762b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0df3b8-7fff-45fc-9b0e-6e86010150d8",
        "cursor": {
          "ref": "411197fa-7b24-40ee-8a69-ca1767d49e2a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a16eb569-594e-459f-8b67-02b72019e43a"
        },
        "item": {
          "id": "ef0df3b8-7fff-45fc-9b0e-6e86010150d8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "44c6f0da-7a77-419e-8ab3-43a0cd2b2bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b945bba-f915-4280-b223-5d1f67b54539",
        "cursor": {
          "ref": "4bd08bb0-b228-41b9-bb40-31183fe46831",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "75091dda-0d0e-4282-8ba1-d67fd233820b"
        },
        "item": {
          "id": "9b945bba-f915-4280-b223-5d1f67b54539",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8160e9cc-3d8c-4503-b811-4d322d775e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0331fb-1048-431e-a1e2-c91c878f2a7a",
        "cursor": {
          "ref": "3389c126-dea4-4daf-bd36-0a2a55cb2077",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "716aca09-c30d-44ef-b07b-ab4caa50e829"
        },
        "item": {
          "id": "fb0331fb-1048-431e-a1e2-c91c878f2a7a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e882b2c2-f100-4cf0-8cc5-c248449264e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caf74c2-1775-450e-bae1-c6c61734b116",
        "cursor": {
          "ref": "994f0e7f-5ad0-4449-9253-1b59a3905e14",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "22ce9f82-8aec-4c4e-ac0d-5daa52835098"
        },
        "item": {
          "id": "6caf74c2-1775-450e-bae1-c6c61734b116",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a6782762-c485-4646-89ef-55fbd2de121e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eba4cba-0333-4a3c-b0d9-d36ea96375cb",
        "cursor": {
          "ref": "759b53da-93b2-45df-a92a-a453b8a5ca42",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "81d7b32b-3997-4536-affe-be41af9ecf09"
        },
        "item": {
          "id": "4eba4cba-0333-4a3c-b0d9-d36ea96375cb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "41dba33a-8515-40fc-837e-e147abd7c711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3322bc-54a0-4b90-8ff0-70e946a332b0",
        "cursor": {
          "ref": "5c571218-323a-40a9-aea4-768d744ccf56",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3866ad47-955e-4630-a23c-b96fbda58165"
        },
        "item": {
          "id": "9d3322bc-54a0-4b90-8ff0-70e946a332b0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5bf200cb-edb9-45e8-b404-20bcfbe67315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8d604b-d552-4656-9fce-6481355fc800",
        "cursor": {
          "ref": "96c9149e-1ee3-4283-ad00-be81240edc98",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "212eb297-8a79-45db-b71c-ef05b255d70c"
        },
        "item": {
          "id": "5a8d604b-d552-4656-9fce-6481355fc800",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8de8006e-d096-4726-b264-4147898f6186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c468f04-e252-4d16-8b77-08490edfee54",
        "cursor": {
          "ref": "4b8f7501-0f9a-4f9c-a703-5eb0749e60d3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f4ca6671-a019-4bc3-8f31-826f699d4f5a"
        },
        "item": {
          "id": "4c468f04-e252-4d16-8b77-08490edfee54",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "08803a6f-7b46-4cdc-92b1-9f4299ed23cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d00ef7-be7e-4687-9991-1833d3289be9",
        "cursor": {
          "ref": "357a0830-4ec4-4ba6-82e7-d1904e9b36c1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "72f0774a-f66e-4faf-bfac-c0e923123a58"
        },
        "item": {
          "id": "39d00ef7-be7e-4687-9991-1833d3289be9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ba827b35-e893-4b1a-bef2-d35601315c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c2f250-6d2f-4f54-a8b4-ff95fdcd2ed7",
        "cursor": {
          "ref": "806d6b06-2ac9-46db-a48a-9788308b771b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "91f2865e-8898-4b1b-866f-80b2faecb7f3"
        },
        "item": {
          "id": "f7c2f250-6d2f-4f54-a8b4-ff95fdcd2ed7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0429d1b1-805d-49be-95d1-a3197f5dc0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39e6586-ee76-48a1-a44d-adc2244774cc",
        "cursor": {
          "ref": "9c6378ca-02c6-49f9-adfe-6565940e780f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4dffe0be-9d8a-403b-b999-a19225ae39b9"
        },
        "item": {
          "id": "d39e6586-ee76-48a1-a44d-adc2244774cc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c6541b19-1964-4cc7-8e39-b69fa2269721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e065f44-aa7d-4f8a-b13a-486720a67fe4",
        "cursor": {
          "ref": "6d8b437d-2a0b-44cc-8d5b-addbbdeaf841",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9ba0a818-8217-4147-94ad-d2213ddaaea0"
        },
        "item": {
          "id": "9e065f44-aa7d-4f8a-b13a-486720a67fe4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6191b5a0-b678-485b-b5ac-b3c772e086a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9e47f6-70c9-452a-b670-ba7c5dd4c31d",
        "cursor": {
          "ref": "0f1064b0-1225-4192-b32b-00063d26f33c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2b2ebf8f-8cf8-437e-a689-ba6265f481f4"
        },
        "item": {
          "id": "af9e47f6-70c9-452a-b670-ba7c5dd4c31d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4267b40c-a510-4910-8f4e-c72a84237a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4b53e6-d922-43e9-8b5a-9ac6b9ffb1ae",
        "cursor": {
          "ref": "970a14db-78a3-454e-9918-b1064a62cc5d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d4b7e43b-bbed-4318-ba57-b0ff0e7db96c"
        },
        "item": {
          "id": "cc4b53e6-d922-43e9-8b5a-9ac6b9ffb1ae",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2db3ba81-a3f9-47ae-8e99-8f61aae916fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0f1bad-8308-4c4f-835a-59684e332bcd",
        "cursor": {
          "ref": "aacfcc83-a7af-432c-9477-72b0487fcb76",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a3e0e257-2fbf-4549-b9ba-5e8ef8d7b064"
        },
        "item": {
          "id": "dc0f1bad-8308-4c4f-835a-59684e332bcd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "119b15b1-b1b7-44ec-ad7a-23d96a725469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29bcd66-328f-4cd9-9d8d-3ba1660eefbd",
        "cursor": {
          "ref": "f7af4ce7-2d72-4de1-80ab-1c74a875ad64",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1622e523-c536-4c72-b014-7e36e80f14bb"
        },
        "item": {
          "id": "c29bcd66-328f-4cd9-9d8d-3ba1660eefbd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0fbb4a3e-cbc0-4e28-baaa-4a560d0f0b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823f09cb-0764-4b7a-87da-afda5c953abd",
        "cursor": {
          "ref": "c1c11a9f-18d8-4a7e-b232-9d618d939910",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "026d9fb3-38ad-4e11-aa40-997690050d4a"
        },
        "item": {
          "id": "823f09cb-0764-4b7a-87da-afda5c953abd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "77b06171-402d-4aae-8d40-9c15ba663fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5866d940-d61b-4a09-85a9-84afc5c5a486",
        "cursor": {
          "ref": "c594b2d7-c03b-4f21-a69f-840145788775",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8edf9484-c407-4b87-b7b5-30286b0e8342"
        },
        "item": {
          "id": "5866d940-d61b-4a09-85a9-84afc5c5a486",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d56b1a6d-a55e-490e-a7ed-3a61b6a05f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d9cdfebe-d16f-4fce-a371-459ac3758f62",
        "cursor": {
          "ref": "f77eaa56-e311-4e1b-931a-fed3b1727b9b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c0ec3bd7-4b62-4f8b-b25d-d6cb2b9c19aa"
        },
        "item": {
          "id": "d9cdfebe-d16f-4fce-a371-459ac3758f62",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "46ac770d-96c5-494c-8171-750b0c6d0807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3f8248e9-c462-4ba0-870b-1ece038a8ae6",
        "cursor": {
          "ref": "03cb2a75-a113-448b-b730-fe4b9080d7e3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9be5e86f-ce59-405e-909d-e4a43ad23e7e"
        },
        "item": {
          "id": "3f8248e9-c462-4ba0-870b-1ece038a8ae6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cce0be0c-9fff-4bad-8f14-d8acc495314f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bfed3ca2-e424-48d7-aaa8-bfcfcffc321b",
        "cursor": {
          "ref": "948ac728-a7c9-4f6a-9026-107f84b68cec",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "06d113d8-90d0-4ff2-bafb-c27673c9c0ea"
        },
        "item": {
          "id": "bfed3ca2-e424-48d7-aaa8-bfcfcffc321b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "22767528-a5dd-4a61-b184-684eb4ccecb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c55b9cb1-2a62-463a-b192-b5c58c2ed013",
        "cursor": {
          "ref": "91774676-5c0e-42a7-94e9-c7f28f5eeba1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e9e29816-95e4-4275-b26c-a653f708f5bd"
        },
        "item": {
          "id": "c55b9cb1-2a62-463a-b192-b5c58c2ed013",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "da79ddcf-3da8-4c60-82b4-3521469c8ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2a41603e-1b0c-429d-86c6-1610bd9cdc9a",
        "cursor": {
          "ref": "349b4e0a-9220-40a1-8335-86bce6310485",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3b8539e4-4d3d-41fc-a622-38afd8b22994"
        },
        "item": {
          "id": "2a41603e-1b0c-429d-86c6-1610bd9cdc9a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4bf5675b-8859-4779-8834-bf8fa171eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "32e74721-cbe7-4d35-ba31-6d240a0bdabd",
        "cursor": {
          "ref": "f906207b-1c17-4625-aeb8-35064e0efff6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "edc2d0fc-92ad-4792-9984-7b63dda5350a"
        },
        "item": {
          "id": "32e74721-cbe7-4d35-ba31-6d240a0bdabd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec4d5e9a-ff50-4351-b065-d84fdfcb3802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15f60d5-3783-4fae-a5d2-12aa90eee171",
        "cursor": {
          "ref": "097be70b-d014-4fac-ac11-cc710860a4eb",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "27a53cec-2909-4576-b31f-63a574461f69"
        },
        "item": {
          "id": "d15f60d5-3783-4fae-a5d2-12aa90eee171",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b1e46219-f5bf-4161-9a16-4bc8b3dd068d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2929ca5c-d4cf-47d0-b8fe-50db15659b26",
        "cursor": {
          "ref": "346aad53-1e2e-4d6f-9c0c-8905c3429342",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4dcfa70c-cf57-4105-af13-74f7c225285a"
        },
        "item": {
          "id": "2929ca5c-d4cf-47d0-b8fe-50db15659b26",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ce5ad186-dd0c-4efb-a7db-6615558b8d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c0841f-c10c-4b29-943f-b497a249292a",
        "cursor": {
          "ref": "07195fda-b499-4f0b-b730-7ac6bad31260",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0ad1458d-00d7-43ba-a408-298984c0b15f"
        },
        "item": {
          "id": "16c0841f-c10c-4b29-943f-b497a249292a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3f398475-d338-4be4-b894-7e9191193756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef169fb7-2217-4b59-9202-17ef325e01da",
        "cursor": {
          "ref": "521de7cd-4f7d-47d0-b2f0-a8f2ebbac147",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7da4ef42-1ee6-47f7-bf03-b09056bd9893"
        },
        "item": {
          "id": "ef169fb7-2217-4b59-9202-17ef325e01da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7609ada1-f0c7-4d6e-bca6-6292de94c75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2066be88-17b3-4d4b-8eab-af723f658608",
        "cursor": {
          "ref": "525e598c-b886-4250-8c1f-b5da182a92dd",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d0719a14-2da7-4851-9eb5-225cf8df4256"
        },
        "item": {
          "id": "2066be88-17b3-4d4b-8eab-af723f658608",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "13b9dce7-62e0-4c19-bff3-bcf39cedc932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67db8deb-f777-40bf-8210-abbe5c11146a",
        "cursor": {
          "ref": "e2ccdc32-901d-49c7-aa5b-a00e857c373c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aa3026ed-5ba1-4d04-be21-698b97b54d55"
        },
        "item": {
          "id": "67db8deb-f777-40bf-8210-abbe5c11146a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "501ad222-9849-48c0-aea2-1d16ffd1e499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09537ee-f6be-40d9-8829-47cb3df6cb9d",
        "cursor": {
          "ref": "727fdc5b-2b26-4afd-8816-7120eeb29e3e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "479eeda7-b5d7-451b-accd-270c2e4d8acb"
        },
        "item": {
          "id": "e09537ee-f6be-40d9-8829-47cb3df6cb9d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6110bc10-96f2-4f62-8d15-3dbc4589e194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72caef26-bad1-46a4-b36d-13dc263ca4fc",
        "cursor": {
          "ref": "ba45f5d8-f5de-4b2b-96c4-3b08842d0b3b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "24c96f71-b299-4976-9f3c-b9d0461fa5cc"
        },
        "item": {
          "id": "72caef26-bad1-46a4-b36d-13dc263ca4fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c618d0f0-025a-4e6c-af8d-7a0ffaf7f116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1530bbf-61b8-49cb-8a9b-87fa6baa4a18",
        "cursor": {
          "ref": "369a688c-14fb-4828-afb4-bbab10c1ba3d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "31bc52ed-6465-4d6f-807c-3cf3a89b90d9"
        },
        "item": {
          "id": "a1530bbf-61b8-49cb-8a9b-87fa6baa4a18",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0de578db-1ece-455f-9abe-0286d6c55687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eea6ad3-bf13-4bbc-8de5-45248ec01037",
        "cursor": {
          "ref": "c85ccc19-ad50-4282-a380-6605f2d2d79f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f05fb8f1-7998-42c9-b09f-f84808e1713f"
        },
        "item": {
          "id": "4eea6ad3-bf13-4bbc-8de5-45248ec01037",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "79d882c7-e72a-47f3-8d57-2ab9c70005c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615db1cd-e6ed-4a06-a831-dc6f1dea0f5e",
        "cursor": {
          "ref": "5bbf4772-b45a-4d02-85b9-9ef5693874b4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "df5a79f0-d3a6-403e-91f8-ab7b5075758b"
        },
        "item": {
          "id": "615db1cd-e6ed-4a06-a831-dc6f1dea0f5e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b49f302c-7b75-46c6-9894-88b2c24f8c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5f0c32-31ce-46a1-881b-69907a4c9c98",
        "cursor": {
          "ref": "39cb7d7a-4ca8-402a-a1f2-256ce4ae9626",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4dd5439b-ed86-4777-8895-04c0488fbc0f"
        },
        "item": {
          "id": "ee5f0c32-31ce-46a1-881b-69907a4c9c98",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c919b543-2f3f-4674-b815-4739af5125a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f2b54e-78a6-41ba-8856-6cc1734b2dd1",
        "cursor": {
          "ref": "14193efe-5480-434a-bfcf-d8a7fb9a83c9",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cd52b7fc-da43-4642-8918-5be016733b35"
        },
        "item": {
          "id": "50f2b54e-78a6-41ba-8856-6cc1734b2dd1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "426dd823-ca97-4241-bda5-0564af4aef05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82c2184-3214-473a-a690-2782452dc711",
        "cursor": {
          "ref": "b62b16ef-db73-4e03-8631-1c1dfdb026dd",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "744e6a26-e701-4eb5-b10e-97a211171204"
        },
        "item": {
          "id": "a82c2184-3214-473a-a690-2782452dc711",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6f963f06-1522-4aa9-8ab4-59b84c887e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26661da-3317-489f-a015-d8117d44820e",
        "cursor": {
          "ref": "cb436b59-5af1-4853-81eb-54192f14a78d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2173ede7-8a35-4ac4-a871-63104abbe565"
        },
        "item": {
          "id": "d26661da-3317-489f-a015-d8117d44820e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "640e5363-a964-4e6b-afd0-27bccf9c9dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f1fa89-e953-4011-912c-1b3cc30c4d70",
        "cursor": {
          "ref": "091377ec-4c0d-4d94-8055-5a5440d3bb1b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ca196040-3112-44ef-a1b4-618afb3b38af"
        },
        "item": {
          "id": "08f1fa89-e953-4011-912c-1b3cc30c4d70",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3ea8c212-1a40-421a-af9b-b245f54a047f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5dcd09-b557-4a6f-a9db-dad49c842afc",
        "cursor": {
          "ref": "b3ffbf86-5931-46b1-9fbe-d129864daf4f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7dcc8349-fddf-46dc-b6b6-580f5c79f20a"
        },
        "item": {
          "id": "0c5dcd09-b557-4a6f-a9db-dad49c842afc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ceb7dcc3-5bc2-42b5-aafe-548cfcc958f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca684763-ed52-4317-9fb4-178bc55c9f4f",
        "cursor": {
          "ref": "f0400d49-68b1-4040-87e2-744d4bf056e4",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2fe67d86-f82b-41e8-a897-35be615d480c"
        },
        "item": {
          "id": "ca684763-ed52-4317-9fb4-178bc55c9f4f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ad0e323-3e04-4a5e-a120-ee049e5f517c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2508dbb9-9cf9-42ec-a363-3f7ea747ca39",
        "cursor": {
          "ref": "add543cf-82a5-4599-81b2-da133cc1242d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dff643f7-6821-45fb-b574-838d4cce377b"
        },
        "item": {
          "id": "2508dbb9-9cf9-42ec-a363-3f7ea747ca39",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "31ebd870-0c37-4fdf-aaba-876877b1f792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb14f95a-9d05-4ea8-8607-c40c1f9f65b3",
        "cursor": {
          "ref": "c5035092-c4e4-4bf8-badb-194095c3a4d0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "325eebf4-a3ee-46a1-973d-7fdcdc1efd61"
        },
        "item": {
          "id": "bb14f95a-9d05-4ea8-8607-c40c1f9f65b3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef7a60c3-942f-465c-aa75-a32a7105327c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06d56d-ccb3-48b9-bb43-1d155c2536f8",
        "cursor": {
          "ref": "c7a5c75b-501b-4eb7-9453-3342e23bd609",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dd0c36f4-c3a7-48f3-809a-f034ed05c478"
        },
        "item": {
          "id": "fb06d56d-ccb3-48b9-bb43-1d155c2536f8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e1568610-2362-4daf-bbd2-21374dca33f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f7920b-5d87-4e01-945f-f2011add58a5",
        "cursor": {
          "ref": "d41b14d5-fa92-4d55-aa5a-e58442192b28",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "557ecfde-3783-4e45-ba3b-2ac4fb8016bb"
        },
        "item": {
          "id": "f8f7920b-5d87-4e01-945f-f2011add58a5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ddfd8353-52c9-4cc8-9beb-dfd5bab4bdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51338fb-3a68-4707-91ff-0f23bcc3fd9c",
        "cursor": {
          "ref": "9749617d-9f84-4c20-9cfe-20acf4527975",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fc6197f0-dd79-46a1-98bd-7c57eefe050d"
        },
        "item": {
          "id": "b51338fb-3a68-4707-91ff-0f23bcc3fd9c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1d342daf-6543-439a-9d8c-8820f45186d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743dd1e6-511c-4cbe-949a-3ef5f5871090",
        "cursor": {
          "ref": "a3c2c448-1148-4686-90a3-2d582418a225",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2b707756-7695-4d34-bfea-3775c3a71c16"
        },
        "item": {
          "id": "743dd1e6-511c-4cbe-949a-3ef5f5871090",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "39abbc6b-c90d-454f-868e-fc4fc1110bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a751b5-8306-4677-9f00-dbe084b24bb4",
        "cursor": {
          "ref": "5cd8407a-398d-4db8-b1de-50b1ea0acc85",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f0c93989-6de4-4c20-ba8c-6a53bef691a8"
        },
        "item": {
          "id": "76a751b5-8306-4677-9f00-dbe084b24bb4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0efd44ff-0040-48f2-b0c0-228ed1914d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d0dee2-85fa-418d-951d-ac788254d39b",
        "cursor": {
          "ref": "3c25dfd7-3949-4ea4-ae1e-5e907acc3299",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2ec6c98b-a002-4be5-bbd8-e7643a2b7fb1"
        },
        "item": {
          "id": "54d0dee2-85fa-418d-951d-ac788254d39b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ee04d687-5720-4659-8401-53ed22ec40a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3406b1-677d-481d-bb43-8784afce81e6",
        "cursor": {
          "ref": "6e06b3d1-d9bb-48f1-ad94-23e3b477d0f1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a21cf12f-8feb-4102-8d66-0db00398841f"
        },
        "item": {
          "id": "1b3406b1-677d-481d-bb43-8784afce81e6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bde0d6f6-8e4f-48e7-8bc2-2e16e21b7193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fb7780-fe2c-434e-a50a-c4fbe157e825",
        "cursor": {
          "ref": "fccbf3f1-c0bb-48ae-9140-f11c51a0585e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "31828735-cf9f-4fb9-8773-1c9d1bbf4978"
        },
        "item": {
          "id": "f4fb7780-fe2c-434e-a50a-c4fbe157e825",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b77f7d43-a2c0-460b-aded-6a81bff8203c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4a9e87-1232-4e2b-9057-572e83f0e84a",
        "cursor": {
          "ref": "cdd2c048-c794-481b-a394-b66654c2bee7",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "84320269-43f8-4e07-9a58-16055763c11b"
        },
        "item": {
          "id": "0b4a9e87-1232-4e2b-9057-572e83f0e84a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "01cc8b2d-b659-4e51-99d9-51d03dfb6c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952427ef-d162-4afb-b28d-d39edc8e1ba2",
        "cursor": {
          "ref": "623aa3e3-ff7b-455d-bdc5-12d6e96b2600",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3d1bd7c4-b023-4d0c-ad08-8483146013ec"
        },
        "item": {
          "id": "952427ef-d162-4afb-b28d-d39edc8e1ba2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "635cb245-1f65-4df4-af1d-7660b3cc0651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d6ae83-3465-4a18-ae8c-f608a98b3120",
        "cursor": {
          "ref": "7a3db725-1115-4562-bbb6-4b245d7f5481",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "54299610-7fa9-469f-babe-6536dcdb4012"
        },
        "item": {
          "id": "77d6ae83-3465-4a18-ae8c-f608a98b3120",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "89ad2fb7-8470-4499-8962-5325883c18e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99841718-2c81-44f6-b3a8-3ab77684d0f0",
        "cursor": {
          "ref": "0500bf4a-bdf8-49d9-8ebc-d8ce075b0c18",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c55e9831-821e-411b-8d8c-ca869dd8f3e2"
        },
        "item": {
          "id": "99841718-2c81-44f6-b3a8-3ab77684d0f0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5ec8bb27-f667-4a0e-acff-bbe9acf5e491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb39fc25-2c19-402c-9e82-a738fd14781d",
        "cursor": {
          "ref": "9bb80798-0487-434a-945d-8b6a9ff72a58",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "85a59024-24f8-45fe-91f2-da707df0362a"
        },
        "item": {
          "id": "fb39fc25-2c19-402c-9e82-a738fd14781d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9d0c917b-b4d7-4909-8433-9aba0b6fa4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc8ac9c-fbc4-4e62-990a-d719b98465f9",
        "cursor": {
          "ref": "3360913d-68d8-4f23-b773-88af3c2d4b90",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7e721d76-4250-4efb-b22f-ad6abe8656bb"
        },
        "item": {
          "id": "4cc8ac9c-fbc4-4e62-990a-d719b98465f9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "571bd968-a658-4f6d-8fc8-84552c439184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4671e90e-05e7-422c-819d-d887bc7933b9",
        "cursor": {
          "ref": "2b2a36e5-dbda-42e3-be78-ff97ff07755c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9a38faff-86f4-49f6-96f9-eac5cc855024"
        },
        "item": {
          "id": "4671e90e-05e7-422c-819d-d887bc7933b9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0ec00836-0590-434d-a48f-b04347ecde23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acb7adf-8b8c-44e9-b3ae-b9f01e629c89",
        "cursor": {
          "ref": "3d0a684c-233f-42dc-91e3-2ab62d129d0e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cce80bcb-7d28-4c85-a0ec-2a077d786e57"
        },
        "item": {
          "id": "8acb7adf-8b8c-44e9-b3ae-b9f01e629c89",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8f30decd-d9c8-4e8b-9eea-928c2e69ed5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc0c26f-945c-4979-a76e-f00a72a1f2b4",
        "cursor": {
          "ref": "b577e3c3-11b6-4b67-a33e-8dffeb25ac77",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "610d3e1a-72c6-4bc0-b3c9-16ae5f202889"
        },
        "item": {
          "id": "dbc0c26f-945c-4979-a76e-f00a72a1f2b4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "11a7f47e-60e7-4dc5-ba99-e3da702ad630",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacc5a42-ae20-45d0-8293-f098ed662556",
        "cursor": {
          "ref": "e9f3545a-2cd8-4186-9b7a-cfa70726ca45",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "25faf062-aed1-43fb-84b7-4fae0d4ad90f"
        },
        "item": {
          "id": "cacc5a42-ae20-45d0-8293-f098ed662556",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ac022108-e931-41bf-a797-9d3259879104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4827a447-1262-4e49-9963-fb6fa3d2b737",
        "cursor": {
          "ref": "ba1c3551-c4d5-4a30-a1ee-e63efe4fe442",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8b7b4d52-38ab-4cec-800d-474956b577c7"
        },
        "item": {
          "id": "4827a447-1262-4e49-9963-fb6fa3d2b737",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d4fe2405-94d5-459d-bfb8-1f9106cba7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24371bf-1ec9-439f-b785-8239546e0cb4",
        "cursor": {
          "ref": "22057e8c-4c5c-4da7-8876-bd4c482d28d9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "01bae93d-8363-48ea-bcf0-18567809e03f"
        },
        "item": {
          "id": "f24371bf-1ec9-439f-b785-8239546e0cb4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2195cb50-b7aa-44a4-bf92-8508cf308cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88511fc3-15e5-486b-83f4-7ae821665be4",
        "cursor": {
          "ref": "b5805ea7-a53a-4f1e-a32b-291705f01d84",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "19813e83-bb55-4428-b40b-0ac43b589af5"
        },
        "item": {
          "id": "88511fc3-15e5-486b-83f4-7ae821665be4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ab2068fc-7a13-49e9-95c5-150a891c8466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216c2e01-e8f3-467c-b3ba-32b3a56ac96c",
        "cursor": {
          "ref": "4b6ef805-9f4c-4a5f-839e-4cf8a1ffb0f8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "44f1ee3f-ebc7-48b5-88f1-4d14183daa1b"
        },
        "item": {
          "id": "216c2e01-e8f3-467c-b3ba-32b3a56ac96c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "653df66b-ca2d-491f-a38e-cfe754a84a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ee9412-546c-4fd1-a78b-b75662e5b833",
        "cursor": {
          "ref": "fc47a250-30e5-4995-a037-d4497a144833",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d9d89a97-c441-4467-b04a-daec2feea8fc"
        },
        "item": {
          "id": "d0ee9412-546c-4fd1-a78b-b75662e5b833",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f2e4e0ae-573c-4488-8998-0450db3d2c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf07023-193f-4761-a321-14d1f876337c",
        "cursor": {
          "ref": "bd9a7099-f094-4c1a-8f3c-2d1e6421755b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "16d77884-906d-4774-977c-0c08b21f2f0f"
        },
        "item": {
          "id": "dbf07023-193f-4761-a321-14d1f876337c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b992ef1c-596f-4df0-9370-f7d06baee8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2417b1-ba77-4ae9-91b0-e565753b468d",
        "cursor": {
          "ref": "5c4d0dc7-2c53-4eb0-b777-98596e461afb",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a9d37a61-d305-47d4-a861-16928190931a"
        },
        "item": {
          "id": "8a2417b1-ba77-4ae9-91b0-e565753b468d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "30f959f1-ae84-4221-8f98-f8a592f97549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b40b634-a108-4baa-b005-bccf61e3995b",
        "cursor": {
          "ref": "b0588e51-069b-4f24-9606-8d2260592571",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f531c4f2-5363-4095-9393-893ce3128697"
        },
        "item": {
          "id": "2b40b634-a108-4baa-b005-bccf61e3995b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f3064b8f-e7fc-4eca-b702-e3adcacdf381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fa27a6-925c-4bfe-a775-0dfe54a8a9ad",
        "cursor": {
          "ref": "bf2fc72c-d1b9-41aa-9647-ab1c220a396e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5772b281-6c26-4fd4-a9f5-d04f32ac0fe9"
        },
        "item": {
          "id": "d0fa27a6-925c-4bfe-a775-0dfe54a8a9ad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cebf7c99-a694-4669-9361-0d561de8bf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8095b90-5411-4dd1-89af-881664b3c817",
        "cursor": {
          "ref": "2d97e2a5-20a7-477d-97dc-5b35f30b8cc3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fa48ab87-3b9e-4c48-8b9f-9bfc5338964b"
        },
        "item": {
          "id": "e8095b90-5411-4dd1-89af-881664b3c817",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "11461806-7556-43bb-a6b5-ef60de0a5676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a52fed6-c200-4bb9-b45f-5eb20d7575b0",
        "cursor": {
          "ref": "33052eb1-744d-41e5-a587-24ebbecfdcb4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5b34abf5-2a8a-48bf-b2de-202c1ce05fbb"
        },
        "item": {
          "id": "0a52fed6-c200-4bb9-b45f-5eb20d7575b0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4620fb31-89df-46c8-9ad9-7ef801534302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114a0725-c996-4730-912b-ecbf013004fa",
        "cursor": {
          "ref": "6f11e208-b81a-473d-b4f4-fef028ebd985",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "006d27e8-9887-434f-ad3d-f0985e5e4635"
        },
        "item": {
          "id": "114a0725-c996-4730-912b-ecbf013004fa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4804f62b-75b5-499f-9d8e-be305837e27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4366d714-4237-4b65-aa1b-e1066514de06",
        "cursor": {
          "ref": "d18264ad-5a39-4b4d-85cc-ddeeef948a54",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b85ccd7d-71b3-43f3-b621-ddc25600ba32"
        },
        "item": {
          "id": "4366d714-4237-4b65-aa1b-e1066514de06",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "48dbaa4d-5a93-484c-89ea-eb993ff4dd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55492f4f-f876-4957-b0ec-cdc4d1e4a1dc",
        "cursor": {
          "ref": "cd30fd08-d040-41ac-abc1-255a21dab639",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cccef34b-0a82-48ca-a44e-59b4714018ca"
        },
        "item": {
          "id": "55492f4f-f876-4957-b0ec-cdc4d1e4a1dc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f6289d9f-00b9-4db8-8114-952063f279c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c54c03-e220-4980-8cff-45b7e12a0e2b",
        "cursor": {
          "ref": "5e99f169-64c7-4652-8c1f-969d5f63eb19",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "48a4fe77-5280-4288-9484-9f3090bd27c8"
        },
        "item": {
          "id": "05c54c03-e220-4980-8cff-45b7e12a0e2b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a7672312-480a-4c5a-9570-a47e701789d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55df514b-86a7-4857-9b2f-d1131ade26e6",
        "cursor": {
          "ref": "a24d95f3-31e3-4eab-9e9f-1d872f36c4ed",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "caf867cb-f44e-4075-869d-00314f679970"
        },
        "item": {
          "id": "55df514b-86a7-4857-9b2f-d1131ade26e6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a4b1fe1a-0d8a-4483-8890-f939d941e0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08715a7f-7589-4504-818e-4cd945f72f0f",
        "cursor": {
          "ref": "3081ff03-4405-49e0-bf87-8797ccc7906f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "52aed475-9785-43a5-953e-0c1de6c30950"
        },
        "item": {
          "id": "08715a7f-7589-4504-818e-4cd945f72f0f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b8a0478b-0c55-453d-b2b4-fd3b9f6d09cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86beea49-e701-481e-ac08-6904cee8c251",
        "cursor": {
          "ref": "00f948af-6c6d-4b9b-83a1-6c644ea2c8eb",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "80478ca8-f48e-411b-8b65-d6acf51421be"
        },
        "item": {
          "id": "86beea49-e701-481e-ac08-6904cee8c251",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "747e77c5-b96e-4e12-8a2e-9128789590b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541dc629-e7d1-407e-87c0-8c9763fa7f1b",
        "cursor": {
          "ref": "4e82ac92-1a73-4b20-b0e9-1c811b3cac6b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "660df8b8-44cf-4a55-9222-a3db3897422c"
        },
        "item": {
          "id": "541dc629-e7d1-407e-87c0-8c9763fa7f1b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "374c926d-631e-47e3-b6cb-e0fa821cf10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c863ab9-cf50-4667-9d4f-3bfb3bbef895",
        "cursor": {
          "ref": "708562c0-f205-4ff9-be73-9a6d634e4f34",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "79526df9-df80-4c7c-b2f8-bfa88b5b5918"
        },
        "item": {
          "id": "0c863ab9-cf50-4667-9d4f-3bfb3bbef895",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a3296451-c44a-4e1d-9f35-086ed6d74c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2e56d9-6df0-491b-adef-4f032cea93d7",
        "cursor": {
          "ref": "662056c0-4d2f-4614-8b3e-fd5d4dd7f1d6",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "127c28a8-85a8-42b2-9bdb-6c28f2dad83b"
        },
        "item": {
          "id": "eb2e56d9-6df0-491b-adef-4f032cea93d7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d782ff1c-4982-4235-8a5b-0d562ad29192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a13c9f-58d7-4ddc-9808-93f3c9614b59",
        "cursor": {
          "ref": "28d8a03d-6f34-452d-9ef8-9105db0bf5b6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "06674407-d38f-460a-b24c-04df98dcf5e0"
        },
        "item": {
          "id": "02a13c9f-58d7-4ddc-9808-93f3c9614b59",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7e87ac4d-2054-4898-934d-0f67d6c6f370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c35ec7c-0873-4196-9633-3a59dd544829",
        "cursor": {
          "ref": "e94fbcb2-edb2-44f7-bc3a-8b437e7f31c5",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c478fec4-3167-4cd4-8b4f-460850a1dad1"
        },
        "item": {
          "id": "6c35ec7c-0873-4196-9633-3a59dd544829",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "311652b2-04de-4414-bc3b-7765e61e6076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c97b94e-c458-4556-b5d8-ca637387599c",
        "cursor": {
          "ref": "3f4091b5-29b1-45ca-8c90-23c928e4c396",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2b0ef91a-b2e9-4169-be38-ff1f285b21f9"
        },
        "item": {
          "id": "7c97b94e-c458-4556-b5d8-ca637387599c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d24ea515-5ee9-44b7-8894-2e5e0c0676f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6a188e-152f-4bb5-8c82-63f4d350ad1d",
        "cursor": {
          "ref": "32addfdb-1895-407b-abff-8103ff061e4e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e15474d9-bcd2-4683-8ccd-c8e2f7da7c51"
        },
        "item": {
          "id": "cf6a188e-152f-4bb5-8c82-63f4d350ad1d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "095de728-f92d-4b8e-a48a-706dcb353cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8528ac31-4bb4-436b-b2c7-2d31b2606ec6",
        "cursor": {
          "ref": "6fe009a2-2f37-44ef-a587-aa4ab49850a2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "744f4361-a75b-4fa5-9059-63aad2200394"
        },
        "item": {
          "id": "8528ac31-4bb4-436b-b2c7-2d31b2606ec6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ddea391b-aa2d-4bbc-a795-258564b490c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2158a9c-739b-4e93-b18e-8952eb3d0aa1",
        "cursor": {
          "ref": "1debabb9-9de9-4213-9768-0b0ddeef7e42",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bdceea9f-8b62-4382-a09b-9076d0b2559f"
        },
        "item": {
          "id": "d2158a9c-739b-4e93-b18e-8952eb3d0aa1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0516e69e-8c53-40a6-af0a-7fcbc70cc14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3191701-b5a6-4782-8320-9241b9a9c1dc",
        "cursor": {
          "ref": "7d10c00e-dde7-4dbe-a70a-61b0062b138b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a8781dde-06b5-4db0-988f-dc1c64247c98"
        },
        "item": {
          "id": "b3191701-b5a6-4782-8320-9241b9a9c1dc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9909fb43-e04d-4dc2-9805-527cd6d37167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e229dc6-3296-45b1-a7fd-3ce751291fd3",
        "cursor": {
          "ref": "08d868c6-26bd-49c4-9e97-08daf2ffcf94",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aa5a44c1-0bba-4d74-a6d8-565a66ede4e2"
        },
        "item": {
          "id": "5e229dc6-3296-45b1-a7fd-3ce751291fd3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5b7bc260-1d72-4e59-b365-a583d8cf00c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ddc4a1-7d81-446b-81ab-780ddd0203e4",
        "cursor": {
          "ref": "8a60410f-a944-41a8-bdae-50ddc2714327",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ec05cfa6-a201-4484-b504-c81f905ea79f"
        },
        "item": {
          "id": "02ddc4a1-7d81-446b-81ab-780ddd0203e4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1fdabcae-c9cc-4251-abfa-a25a907e53b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf84dff-013d-422f-a214-106cb2441017",
        "cursor": {
          "ref": "2b224af3-7b5e-47f1-af31-384ca9eea01b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6ceaeffc-d7e9-4c0d-9bfd-d37ecfcb4f51"
        },
        "item": {
          "id": "0bf84dff-013d-422f-a214-106cb2441017",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fc4229ad-07d7-40e7-9758-577db431f314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d790e45-e752-439c-bef0-6206bb9058d5",
        "cursor": {
          "ref": "c572891f-cb22-4792-9d7e-799011a61e0a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c715e4ff-adf3-48f1-afaf-05096ebd9c8a"
        },
        "item": {
          "id": "1d790e45-e752-439c-bef0-6206bb9058d5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3947ad8c-cab0-4446-885f-43159644785d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da96eb2-2cf3-4ac4-96aa-4aa38bd2d71c",
        "cursor": {
          "ref": "07bd3a92-e297-42bb-a981-2924b96bea70",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "27300c27-cf9e-4684-a384-a2b6a2f71ee5"
        },
        "item": {
          "id": "3da96eb2-2cf3-4ac4-96aa-4aa38bd2d71c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "88383411-d631-40fd-9e7e-8816843e0134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6c56f3-7bef-4a90-8237-0c8b541e817b",
        "cursor": {
          "ref": "2586678e-5a84-4dcb-9088-5c8b5fa8fca1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f410c593-6abe-4b06-8976-8ed388e4673f"
        },
        "item": {
          "id": "aa6c56f3-7bef-4a90-8237-0c8b541e817b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a5887ec7-8169-4cc7-a244-5fc58a1f8e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dd7164-8494-4943-9e44-127423d7c280",
        "cursor": {
          "ref": "e9a88a47-2e73-4349-bfce-311d72171fd6",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7de5050c-5f63-4386-9781-f2ec1550d1a9"
        },
        "item": {
          "id": "75dd7164-8494-4943-9e44-127423d7c280",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9feb8349-0ddc-4c1d-b92b-fb1dab0a36c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee96a6c4-ee58-4232-b5da-994b32010bac",
        "cursor": {
          "ref": "6cbbbac1-7772-4c41-89be-9e6339a3cb5a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e54e6c72-059e-4c5c-a572-a9f1d1de251c"
        },
        "item": {
          "id": "ee96a6c4-ee58-4232-b5da-994b32010bac",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "64c11df2-c74f-48fd-838d-30f7387fb57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9c22aa-1db1-4d84-816b-10b43a5884f0",
        "cursor": {
          "ref": "8792c98f-f74d-43cb-9c2b-db7cd0b45199",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0d41f01b-3e07-46ec-8e51-23defdb6781c"
        },
        "item": {
          "id": "ea9c22aa-1db1-4d84-816b-10b43a5884f0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1397336e-64a6-4fc3-b477-b85169b7fc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798a5959-5750-46e4-bad4-f0901e8de8ad",
        "cursor": {
          "ref": "38764480-1311-4b78-905b-86730694736c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ea3fe17c-7a41-4672-889f-454845a11e97"
        },
        "item": {
          "id": "798a5959-5750-46e4-bad4-f0901e8de8ad",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "299e1525-85f4-483b-8601-92ce8172acb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09c18c1-2d81-4419-80d4-ad6b6463a3ea",
        "cursor": {
          "ref": "dc30452c-9396-4567-aa2c-9b5a3ddc396d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "17e8162f-6f3a-401c-b50a-afbb9b0eab74"
        },
        "item": {
          "id": "d09c18c1-2d81-4419-80d4-ad6b6463a3ea",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7c8feded-ba66-4a9d-8e28-e787d0e87ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f3ca20-7905-4239-aca1-9fab6b421cba",
        "cursor": {
          "ref": "3c09cd68-eab3-41a1-81c6-584175701fe1",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d12fe15e-6f35-41b9-a078-39bd6968ad47"
        },
        "item": {
          "id": "a3f3ca20-7905-4239-aca1-9fab6b421cba",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bd27f1a1-4f4c-4dc9-850e-168a158a613e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4695d8-f6e1-4a73-a625-9b257b1b1eff",
        "cursor": {
          "ref": "d7120ba7-4432-4620-89d0-08d556bf4068",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "38e312df-5379-49b6-867f-852d3de0c032"
        },
        "item": {
          "id": "6c4695d8-f6e1-4a73-a625-9b257b1b1eff",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b2d97766-fdd9-49e3-8e60-36c52b0b4e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b518e638-5831-45f0-ac4e-9c79ad40c405",
        "cursor": {
          "ref": "2cb15626-fce1-4c43-bbd5-1f025eb0fc17",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5d43c1a2-38c3-400e-b040-3fb71d362d73"
        },
        "item": {
          "id": "b518e638-5831-45f0-ac4e-9c79ad40c405",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7450dbae-7d36-4e1d-a0c6-19bb5ce449ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3f68aa-d37b-426b-a0f2-59b5c5f60f87",
        "cursor": {
          "ref": "a857f54a-d287-4e95-9706-232dd45a4817",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b196d7e8-372c-4806-b4f8-85a249a37d47"
        },
        "item": {
          "id": "4c3f68aa-d37b-426b-a0f2-59b5c5f60f87",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6167746e-aeb3-4d0c-9dfa-35cf9bcd3de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0153ec-4a47-470b-b968-188abae6c6d6",
        "cursor": {
          "ref": "9530c249-c9ee-4fdd-9566-4e9cb89e137e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0995bee3-1357-49a3-9562-a9da62d8cd22"
        },
        "item": {
          "id": "1d0153ec-4a47-470b-b968-188abae6c6d6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "292ce5f7-07ec-4232-bc6d-747bf1e5e8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b759e1cc-4b02-417f-ab66-df5b8f574230",
        "cursor": {
          "ref": "3c74f6ab-36ab-4679-9582-a437b50e1141",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "885e6cff-7ff7-427c-87a7-549807fbcda8"
        },
        "item": {
          "id": "b759e1cc-4b02-417f-ab66-df5b8f574230",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8bcc007f-e0ac-4761-a41f-0ff394e2951c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35589175-7bfd-403a-ba0b-37456c2eeda5",
        "cursor": {
          "ref": "dae981de-fa58-4a19-bbe3-7aa11135351b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "41a6f514-daea-4f8c-821b-1188e16ea6ec"
        },
        "item": {
          "id": "35589175-7bfd-403a-ba0b-37456c2eeda5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d315cb03-5286-4f9a-bca2-d24262af7a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b518bb52-22da-4097-a3f3-d1d87bf55b7f",
        "cursor": {
          "ref": "bddef488-2c71-495e-95a8-c2cc0cc6cf49",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "35336699-a714-426b-aaac-50dc298b9a32"
        },
        "item": {
          "id": "b518bb52-22da-4097-a3f3-d1d87bf55b7f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "63bcd30c-6ccd-4e68-ac33-60962f0bb7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f16d689-eda2-4393-9e0c-fe167471c1cd",
        "cursor": {
          "ref": "874502c9-64d3-4c16-b457-52f6a118b48a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9ff6f094-f7da-4691-b8c1-1514f9dc9d26"
        },
        "item": {
          "id": "8f16d689-eda2-4393-9e0c-fe167471c1cd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a1ab9939-606c-4998-bd9e-7692f6712772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2669302-b268-45d7-a4d3-89820682fed7",
        "cursor": {
          "ref": "a4359475-4dc6-47c7-a35a-2a300c8b39a7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "56ab3ad2-82e5-4c97-b3bb-453933a40f3e"
        },
        "item": {
          "id": "d2669302-b268-45d7-a4d3-89820682fed7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5abf10e0-53d8-410a-ab71-efd563ccb098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb57e9d-abe8-4680-98ed-03d20882a31f",
        "cursor": {
          "ref": "8fbcae2d-45ca-4b13-946d-d1d60971d387",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "40d99d5f-454c-4a7b-b185-8dde6fbbc0c9"
        },
        "item": {
          "id": "2bb57e9d-abe8-4680-98ed-03d20882a31f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bb7d4e81-3503-4d2b-bf6d-2019b4ac3f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26947984-ca2b-4a22-86cf-9e21ba7f0211",
        "cursor": {
          "ref": "36dabce1-7347-42d4-a6af-d131a758e7a5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d1a20cf6-241b-4366-a789-512bdcf86237"
        },
        "item": {
          "id": "26947984-ca2b-4a22-86cf-9e21ba7f0211",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "af875bff-dbfb-44ae-a0f1-3559a0bce1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66ca574-da8c-4bbc-880e-9dcf2deb5918",
        "cursor": {
          "ref": "534816a5-1bdd-4659-9af4-de6979788391",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "55e522d7-7dc9-4738-9967-6d0e8b93c4e3"
        },
        "item": {
          "id": "c66ca574-da8c-4bbc-880e-9dcf2deb5918",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0b8f7f75-3b59-4255-8f17-0ae82b3720a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334fcc24-d69a-4d6c-8ab6-22a07db477c9",
        "cursor": {
          "ref": "96751d67-b951-4120-8bcd-46e4c101c565",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3c2dcdd6-688e-4358-9142-700f7b45f352"
        },
        "item": {
          "id": "334fcc24-d69a-4d6c-8ab6-22a07db477c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e56729fe-9df9-429b-8e12-98020fc578d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae05458b-9b2a-41a9-b752-82158ddca73d",
        "cursor": {
          "ref": "917794a0-1a43-4d58-b5f7-7cc9028d809b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "87685e46-eeb4-4f5a-b7bf-1f2f559849b8"
        },
        "item": {
          "id": "ae05458b-9b2a-41a9-b752-82158ddca73d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1555b509-6ed9-42cd-92c3-cd68069bcb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f227b28-7d38-46cb-af8b-24333114bf1f",
        "cursor": {
          "ref": "8b2b4fce-197f-43fd-98f4-2d05ba005333",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2585e5e3-9ae2-4c95-a533-79d304a92546"
        },
        "item": {
          "id": "6f227b28-7d38-46cb-af8b-24333114bf1f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8476f1f1-d70c-491a-b8fc-84121c5566ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed14e826-efd4-4a0d-bf80-06704741c1cf",
        "cursor": {
          "ref": "7a93b71b-e633-488d-8b4d-baae767e263e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9f820d05-6108-4174-a22c-07b4edcef4ca"
        },
        "item": {
          "id": "ed14e826-efd4-4a0d-bf80-06704741c1cf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aeed2b16-4e37-4ebf-b6bc-f53247ee917e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8704b89b-6a55-4141-ac52-677d4f4f974b",
        "cursor": {
          "ref": "96ad8b97-c649-4a32-951f-decdd0cc797d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "04ccb12f-b40e-4831-bbc8-4b3787cc0607"
        },
        "item": {
          "id": "8704b89b-6a55-4141-ac52-677d4f4f974b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ce8f544e-6b85-4b44-9195-6f3cf8deffae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a769ebca-0fc5-4a90-820d-57cead4186d4",
        "cursor": {
          "ref": "edb86b6a-37d2-4aad-9ef9-56654faa2c72",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9d8b5c3b-81a7-48f7-805d-28bb7ecbbab1"
        },
        "item": {
          "id": "a769ebca-0fc5-4a90-820d-57cead4186d4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8a5c869-7bde-4528-93c3-6b7728e247a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cff9d3-0e5b-4cc8-87d7-eab7caefd42e",
        "cursor": {
          "ref": "2b4efdf7-5cf8-4f6a-b50e-7dcc913038f4",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "62f798fb-0662-40d3-8ec8-4b08117d4caf"
        },
        "item": {
          "id": "83cff9d3-0e5b-4cc8-87d7-eab7caefd42e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c1b3488c-4b4d-40ea-b213-76360ea6f316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292cae4f-5ae8-463b-bf2d-e6b41209b106",
        "cursor": {
          "ref": "e4938ee8-f368-49f4-96c5-740fb13d04de",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e48fa610-6a51-4280-a35d-a850068aca7a"
        },
        "item": {
          "id": "292cae4f-5ae8-463b-bf2d-e6b41209b106",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8a720567-41d8-4d09-9e17-818487b21dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7719dd87-3923-4865-ae49-0f1ad22441e9",
        "cursor": {
          "ref": "623a4042-8ad8-4d5b-bef5-df48fca242ed",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0b053db3-20ed-4656-9ef2-62988d15939e"
        },
        "item": {
          "id": "7719dd87-3923-4865-ae49-0f1ad22441e9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "40630ef9-c534-4e73-8e0b-1a04b2766dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd0bbc2-ba5a-4afa-87c0-606c0952796f",
        "cursor": {
          "ref": "b716ddc2-7ca6-4f3f-b2c3-16493b31f95d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6079e18b-b0c2-4c13-b1a5-e8a1b5579f24"
        },
        "item": {
          "id": "bfd0bbc2-ba5a-4afa-87c0-606c0952796f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4ff23769-f541-419e-b328-d5e0306ecfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a0f3c8-b845-4d58-8614-aaca53b6c6a4",
        "cursor": {
          "ref": "61ff4df1-75ef-4310-a094-87bee2bbec38",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8ff75438-0b65-4c9b-95e7-e40f916de85b"
        },
        "item": {
          "id": "c9a0f3c8-b845-4d58-8614-aaca53b6c6a4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4196bd49-2941-4c80-8823-c1b14a6f21cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843403b9-21e6-46ce-8e3b-a2ed6b3f9dec",
        "cursor": {
          "ref": "47c2199c-a5b8-49ea-ac79-3cec0b5aecdf",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3860dab6-952e-48e8-9a5e-1bf9cbdb89aa"
        },
        "item": {
          "id": "843403b9-21e6-46ce-8e3b-a2ed6b3f9dec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8a458750-bba8-4c53-a9f7-e6aee335f973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a36004f-fb54-40c4-809e-ab3fbc0feed2",
        "cursor": {
          "ref": "cbfd14d3-352d-44de-8e85-cb4699561bcc",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "352bec64-44aa-4c85-b89f-fd62b9d9e937"
        },
        "item": {
          "id": "8a36004f-fb54-40c4-809e-ab3fbc0feed2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d7ea5c2b-ad38-4924-b791-839fcadcb7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b0c4dc-c722-45fc-86a3-6ed0a6320e84",
        "cursor": {
          "ref": "63a834cc-a1ee-401c-b139-cabad831e3c0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "70a4ea98-43be-4851-aeb4-0d891770a1d5"
        },
        "item": {
          "id": "c0b0c4dc-c722-45fc-86a3-6ed0a6320e84",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9db94b44-f2d1-4598-a0ed-0d6fcf84a966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4beb7189-1e96-460b-b794-329ca2e7ad5d",
        "cursor": {
          "ref": "0e9c3baf-9f7f-40af-96e0-59c07182bff0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9381e3e7-e26f-4ea0-934c-07dd5d2aac95"
        },
        "item": {
          "id": "4beb7189-1e96-460b-b794-329ca2e7ad5d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bf8c5b36-d7ce-4495-ad0b-0d3c7398b8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e5f7e1-afcf-4ca7-a204-af2d2dfc0f35",
        "cursor": {
          "ref": "90c0c61a-2062-423f-a156-d129e193005d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ca2e3b9f-8ab8-4f56-a447-74ca54af75dc"
        },
        "item": {
          "id": "89e5f7e1-afcf-4ca7-a204-af2d2dfc0f35",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0673bdc4-d456-4e20-b694-d89d294d6eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3766d44-f6cc-4ec8-b973-2c8ce895ffe1",
        "cursor": {
          "ref": "8287f56c-cc97-48a5-a0b9-766f25005da8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aa80fead-f26a-4e41-b2f7-531f329a42ef"
        },
        "item": {
          "id": "f3766d44-f6cc-4ec8-b973-2c8ce895ffe1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c25361c7-b5c7-42f9-a6d2-53c4bb0e8a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ce662d-79cb-4f55-a39b-e65fb8090b1e",
        "cursor": {
          "ref": "4f1ee232-17f8-4ece-842a-78ed097e8c40",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9bbdde46-6807-4d84-a81e-f1c29e90e888"
        },
        "item": {
          "id": "18ce662d-79cb-4f55-a39b-e65fb8090b1e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a1d145f0-d720-4df6-8132-2d71533d8271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ba704b-2658-476e-97b2-dbaba6e27b6a",
        "cursor": {
          "ref": "a3958545-fa38-4f58-8dac-480b84fee8ce",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fbb10906-ad5d-4f47-9f24-dc65ef722713"
        },
        "item": {
          "id": "80ba704b-2658-476e-97b2-dbaba6e27b6a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bf381ab7-01f8-44dc-8f78-5b3eac4df7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67062f6e-0be8-4cd3-8d5d-c710f58a7d9a",
        "cursor": {
          "ref": "e093b040-9884-4135-88ff-c50a9643307c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "06318197-68f9-4b71-b32e-860871777dda"
        },
        "item": {
          "id": "67062f6e-0be8-4cd3-8d5d-c710f58a7d9a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "66790af8-6346-4c13-93fc-e3ee56310888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216fe362-955d-4f68-96ae-3a32b3953d32",
        "cursor": {
          "ref": "6879da4c-c323-42a2-afe0-ea48b135a24b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e86a68ce-f03a-4620-9bc6-df97e4b17d61"
        },
        "item": {
          "id": "216fe362-955d-4f68-96ae-3a32b3953d32",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f9e662a6-e907-406a-a8dc-d1ccf88ccceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b22ad9-613b-4cd3-9803-59cb26873e1d",
        "cursor": {
          "ref": "55133737-2c8a-487a-950f-1ad7a5859121",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1ff89fe8-8cfb-4858-8662-5315719f5627"
        },
        "item": {
          "id": "d3b22ad9-613b-4cd3-9803-59cb26873e1d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "30b75c1f-1567-4ea8-a42c-29f725ecddbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8954644-b8fe-4ad2-b3d0-1c02676ff0c4",
        "cursor": {
          "ref": "ade33100-3d96-433f-ab33-4473c38a6d89",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ff59339a-04f6-4437-ba58-c9b000efd902"
        },
        "item": {
          "id": "a8954644-b8fe-4ad2-b3d0-1c02676ff0c4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "42a0eadc-7c8c-4be2-b8be-ae75568f3c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561a49f4-2d57-420b-a69f-775148b7c0ca",
        "cursor": {
          "ref": "dd6f4bd4-f6e2-47a6-9fc4-a4cd8fd84d53",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "68818385-1eea-49b8-a4a1-32600e936e3a"
        },
        "item": {
          "id": "561a49f4-2d57-420b-a69f-775148b7c0ca",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f7385f15-205e-4c90-80dc-19f7640d2c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e3452e-1af2-47e9-bc59-8c72df134113",
        "cursor": {
          "ref": "6f45550e-7d14-4e62-8538-1eafed04b365",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d3f3766c-207d-46dd-b2b3-c1e6ba810271"
        },
        "item": {
          "id": "08e3452e-1af2-47e9-bc59-8c72df134113",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b56a9c7f-b88c-4271-9ecb-75a3c49a6ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b97d1d-a9e5-480c-b0b6-4a6f7372a215",
        "cursor": {
          "ref": "15973a9c-c10a-45d9-82bf-b8c4545d6802",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2220f8cb-2099-4c73-a0c9-203b6898e977"
        },
        "item": {
          "id": "51b97d1d-a9e5-480c-b0b6-4a6f7372a215",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "56ff5415-da66-4549-90a5-afc86fab986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319826d4-d4c4-427b-af17-4696bf8b41e5",
        "cursor": {
          "ref": "f4d7b8df-043c-452a-86f6-265080398885",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c8ed3379-60f4-4974-8e6b-25ff8fa1dc8e"
        },
        "item": {
          "id": "319826d4-d4c4-427b-af17-4696bf8b41e5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "702a029a-e674-47fa-80f9-9b7eb6e019b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3321568d-8ebf-4fb6-9e67-c266a5db810c",
        "cursor": {
          "ref": "179cec07-0337-4389-9f27-c4687b348aed",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "64b5d114-ec1c-4688-addc-49d3d2d86b16"
        },
        "item": {
          "id": "3321568d-8ebf-4fb6-9e67-c266a5db810c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2297ddad-4f60-4509-9255-6ed36a77bc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cefd84-d70c-4904-bac5-e9fcfde5ddfb",
        "cursor": {
          "ref": "b24810a6-dc5d-4be2-80c2-b89f96b5935e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9e770961-70ff-4c44-9239-098c856cb1e8"
        },
        "item": {
          "id": "c6cefd84-d70c-4904-bac5-e9fcfde5ddfb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7b5dfc1f-f58c-4f45-867a-25475a57695c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e45ffaf-44ae-49e7-8b81-f2983efff368",
        "cursor": {
          "ref": "7d1d04ba-8536-4239-8407-f49f5d2f60bd",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9818ea09-d0f1-4206-b530-3e08e920d429"
        },
        "item": {
          "id": "9e45ffaf-44ae-49e7-8b81-f2983efff368",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "20a401b5-a6f8-4d97-b8e5-62823361ad40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cd1f82-d0e3-44d6-b46f-b01c00c87b82",
        "cursor": {
          "ref": "e5af12bb-a085-4db6-b368-631ccc8f92d1",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7f9a0b2e-be52-4a81-87c6-0050b33aab25"
        },
        "item": {
          "id": "13cd1f82-d0e3-44d6-b46f-b01c00c87b82",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "11219abf-5ce8-4f90-a0e9-8bb6ea94221f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6dfee9-1ddd-49e1-a7dd-edbe20749747",
        "cursor": {
          "ref": "91c633fc-c4a9-46f9-9448-f4d14ba82820",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "22cea162-e1bd-4386-abbf-82431e1b9fbd"
        },
        "item": {
          "id": "8b6dfee9-1ddd-49e1-a7dd-edbe20749747",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cdaa1032-bd49-4a7a-b89c-64915f420383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21a7de8-45ec-4251-a73f-ea73c3149dd0",
        "cursor": {
          "ref": "1c23298f-c373-4e60-b5c1-bcbd7d6ae6e2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "32e644e6-fe07-4c85-9358-d2f48af49f7b"
        },
        "item": {
          "id": "d21a7de8-45ec-4251-a73f-ea73c3149dd0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1b7dea2e-15b5-4532-9be8-49dc46d3e2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b29f04d-6e95-496b-946e-cc2f63301a79",
        "cursor": {
          "ref": "95879b5d-de11-44b8-82b6-11fab38d53a7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d2474a06-e5cd-42c4-80f1-0c8043d5ba1c"
        },
        "item": {
          "id": "3b29f04d-6e95-496b-946e-cc2f63301a79",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1d14dd7a-6db1-4119-8871-dacead566bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92124bcf-ba07-49d4-a784-2edd5d33eb15",
        "cursor": {
          "ref": "ff63612b-ce94-41d8-8f8d-465f114f2126",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "231ef413-415c-4673-8a3b-fed4c8a58f7b"
        },
        "item": {
          "id": "92124bcf-ba07-49d4-a784-2edd5d33eb15",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "455f21cd-a97d-4342-91b9-2d419a885f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d08f54-4fbe-41f2-b21e-3eeb698243b4",
        "cursor": {
          "ref": "cd6c2c6e-43e1-4e9a-b7e7-0c1696dea24d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3f2ba554-911b-477d-8ad0-667679fc3bc3"
        },
        "item": {
          "id": "e8d08f54-4fbe-41f2-b21e-3eeb698243b4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9f255514-012d-4275-abf5-1dd4381bfe34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6236ef1-48cb-4d29-8d07-b59130ef114b",
        "cursor": {
          "ref": "64fe58c4-3d34-4e57-85d9-cd610c9b4d37",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a853c1b9-92b1-43b5-b825-421f95e77299"
        },
        "item": {
          "id": "b6236ef1-48cb-4d29-8d07-b59130ef114b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a783779a-03e5-4c18-82e2-a2d9c5067dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb96e9f-d2e4-423f-932a-3b8b709914ee",
        "cursor": {
          "ref": "df78e98f-fa8d-4a3f-96f9-8abcc5705f11",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ef7bffc1-f899-49e8-ae64-722bdbc8b79e"
        },
        "item": {
          "id": "7bb96e9f-d2e4-423f-932a-3b8b709914ee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d27b8914-52cd-4c44-a151-9b9c44eae878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4511a80e-4825-4d42-b4eb-bd24169d1fe6",
        "cursor": {
          "ref": "d1b73713-00ab-4caa-a123-cac1b8af4e25",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7f43a404-23b7-4573-a057-2e87ae379fb1"
        },
        "item": {
          "id": "4511a80e-4825-4d42-b4eb-bd24169d1fe6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5092f435-9968-4530-98ab-aa78fd38ea56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca00fdc-505a-4cc9-82ab-d514009a7402",
        "cursor": {
          "ref": "fc6787c2-412b-4808-bf93-9b4991debe33",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ead3a364-0ec8-42cc-9ef4-248203952904"
        },
        "item": {
          "id": "8ca00fdc-505a-4cc9-82ab-d514009a7402",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a18c4e52-fd98-4512-a2c6-ceff6f261653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0064a98c-2dcb-4bc1-a71e-affcfab5f0fc",
        "cursor": {
          "ref": "df667eb4-4fc3-4447-a4e7-c9eb0062b409",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bf115dd4-851e-4945-8497-9238dee962fe"
        },
        "item": {
          "id": "0064a98c-2dcb-4bc1-a71e-affcfab5f0fc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a6108d42-a9bc-4888-90b8-effffdf18c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf655b26-1c81-45b5-83aa-64becfbad114",
        "cursor": {
          "ref": "151179e5-930f-4dad-8cb6-6a99a2c4ca06",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f9b8198a-3854-4412-9739-538c7faded2d"
        },
        "item": {
          "id": "bf655b26-1c81-45b5-83aa-64becfbad114",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0b935ced-37c1-49c6-bb3f-55a3ded1648b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfd7d9a-cc56-45f1-bc34-a6aecc35a10d",
        "cursor": {
          "ref": "121f38bc-ed44-40d3-8c46-e5e0b42e3173",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9d664d12-f092-4a38-afe9-b86def456dc9"
        },
        "item": {
          "id": "5cfd7d9a-cc56-45f1-bc34-a6aecc35a10d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ca93f327-1088-4a80-a069-faee4361258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e5d7cf-56b2-4f60-ac6d-6b79b1f33afe",
        "cursor": {
          "ref": "ae7ec4b5-b49e-4b3d-92bd-b05cfbb3c3a9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e129edbe-969a-4370-8b4f-3096501bb057"
        },
        "item": {
          "id": "c8e5d7cf-56b2-4f60-ac6d-6b79b1f33afe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ce47f42c-7106-4f9a-84af-db833a4e2c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d704f0-78c2-4185-a1f2-c2540b833d5a",
        "cursor": {
          "ref": "89b18f63-ac9f-4f69-a081-daf8e31021dc",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2cd824ec-27c6-446c-9d38-166b8d9b160e"
        },
        "item": {
          "id": "20d704f0-78c2-4185-a1f2-c2540b833d5a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3f855b94-6ed6-46b6-b63b-55b82eaa57a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f176750e-8239-4fbb-bf3f-525d0e573db9",
        "cursor": {
          "ref": "6fb003b5-743b-40c6-a191-3d91f996a366",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8112fb81-08f7-44bc-a180-29a78367cf53"
        },
        "item": {
          "id": "f176750e-8239-4fbb-bf3f-525d0e573db9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5fd1dcac-73c8-4a8b-9254-2d306aeb81c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "b9e78e90-4664-4615-9165-6d2617f55de4",
        "cursor": {
          "ref": "c94490dc-d157-4edd-b331-181b3278f507",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b0c2b99b-b829-4f03-8cdd-7f433f02f565"
        },
        "item": {
          "id": "b9e78e90-4664-4615-9165-6d2617f55de4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "01513b6c-3436-4a31-a4c1-0684ff0a26eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "78449a2a-f56c-491b-8df4-fa6d7ca7483a",
        "cursor": {
          "ref": "8ed1203a-c991-4ed5-9a87-4f73b9f3ea60",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "515a71a0-73fd-4c3c-8abd-a4d953d28d20"
        },
        "item": {
          "id": "78449a2a-f56c-491b-8df4-fa6d7ca7483a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f42012b1-e3ee-49e6-a699-e352c5769c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "6c7fe28a-fc9b-4d89-82a7-10f467b6430b",
        "cursor": {
          "ref": "68585b16-64ef-4415-9010-07b437986118",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "94975ee6-d7bf-483a-8f42-553a6db731c2"
        },
        "item": {
          "id": "6c7fe28a-fc9b-4d89-82a7-10f467b6430b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "15ee661e-f829-4eb3-a51f-7e5e0c1976f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7fe28a-fc9b-4d89-82a7-10f467b6430b",
        "cursor": {
          "ref": "68585b16-64ef-4415-9010-07b437986118",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "94975ee6-d7bf-483a-8f42-553a6db731c2"
        },
        "item": {
          "id": "6c7fe28a-fc9b-4d89-82a7-10f467b6430b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "15ee661e-f829-4eb3-a51f-7e5e0c1976f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3390149-dfa7-469d-aca7-8b86c213367d",
        "cursor": {
          "ref": "f8d65e99-40c2-459c-9895-88a5fa7af2c3",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6c891165-346c-4107-b7da-8c262bb91976"
        },
        "item": {
          "id": "e3390149-dfa7-469d-aca7-8b86c213367d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "839019f6-a2a4-4da9-904a-17f2396ce0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed130d4-434e-4998-bd13-c1803d324053",
        "cursor": {
          "ref": "dd7b678b-5fa5-4ac3-a4e2-a7525ae43d22",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "87f14a3b-cd5f-4dfb-9962-6492c3a03d57"
        },
        "item": {
          "id": "fed130d4-434e-4998-bd13-c1803d324053",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7911f3f7-cbd6-4a25-9096-513bbafbe7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}