{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e4fccf98-0fbc-4b1f-9f89-05890e6d291c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ef390200-e5a6-4ac3-a7b9-d7925f7cb2dd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1a5dd20-8eac-4aa7-a5dd-33e254e467aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee123b28-00f8-4ab7-bf22-c38d5a902e39"
                }
              }
            ]
          },
          {
            "id": "a905dc31-94d4-401b-8df2-0a965b50efc2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b3db955-db24-4b89-99ee-458c59486a66",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5a00e9e4-349e-47fb-9dab-3dce3169a0e0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "38916804-262a-4532-835a-aec0dbb8202d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ee4fe689-bbbe-4496-aa2f-5db60072cc98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70aa0a6a-f593-40fd-9bf5-621af0142036",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c28476a-ef89-42be-92b8-c4fc695b437c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9921a991-a24a-4e5a-93d6-2b6ddc9bd005"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a7aa223-4ed1-46da-817f-6e0df610fdeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22203e77-594e-40d9-8e0f-4ca42ac835c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "443ddd3f-3db1-4317-8d10-66272518405b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d31eb4b6-4209-49dc-9d71-ba5667ac0cbe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92170aa8-d92e-433e-abb5-664c74b4f5cd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "03155d86-6c17-4886-aa9f-5655fefa0805"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fb2ccd0-3bf7-446d-91fb-8de97e679c58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1f38f55-191b-49df-9ac4-f6b58937f0dc"
            }
          }
        ]
      },
      {
        "id": "0a421f1d-57c4-4ddb-a6c0-ce14519ae40d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "45afbbb4-edbd-4abf-8d4a-6039b6d48ee7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bfd45b4-2a59-407f-8f8d-49281e7b4bc9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6913f2b-5ea4-4023-a49b-4cc914a4c48a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a79ef4d-123b-477e-bfcb-3bb021b9d0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2009f982-02cc-436e-83eb-af4bee0885f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867cd64b-3f7f-41c7-bebb-3d9c581919cc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c2e1f8-2fab-4845-affd-f5e869ab1b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22af2db0-6dbd-4a7b-ba8f-5d2f732f790b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d520b42-e537-4841-9f78-4c7db36c66e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b5771a-7b56-49e2-b6f2-5ce18fca1cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ba1d596-74a1-4401-84ca-b78d318411a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8caab86-2ab4-409c-a813-4ad52e4a357a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "418f3de6-1875-427f-a657-1eb4dfd3d691",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bf885c-b05e-43e8-92d4-bfb2f1a15fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52ca723d-8504-48bc-baa8-82489a7af1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb12ad5-4a14-4677-ac17-931bf343069b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2043b401-26e7-4efb-9b75-b4e5fd33c183"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66252d61-bc1e-4683-bdf3-0749f4384930",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11d97e8b-83d0-430d-aebf-23d4c7904c3a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2eb5d3e9-c139-4c94-b62d-c26f6094812c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "579a0d72-3119-44f6-91df-f2b6203f866c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3cd79f5-f689-49d4-ab97-72903c4e1c5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "06321874-7e9f-4024-af1e-fd865bf50fa0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0bb5c57-03ef-42b4-86e9-adf5a6609cb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ed7ae80-1414-4cd4-b170-08b1af821e34"
            }
          }
        ]
      },
      {
        "id": "76f76034-4dc1-4582-99b8-f49ea76d8156",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fe2fa4b1-c520-45ec-9050-0dc702840162",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01aa5762-6964-4970-8b6d-9d787d3ee5a7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5ebb617e-5142-46d8-bf85-2fe63d91101d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d77b782-8030-4532-9712-80bd49c9ede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9097e62d-63a2-462f-bb0a-f803ec689e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d8d82c-eb8a-43ce-9ef6-c4d3ecbb2645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f286ae6-15aa-4726-b018-ac6688aed55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2612182f-8b50-49d5-a72e-4aa161b0a3e3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecd4030-6130-4451-bd88-7e1f796814fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58333922-274b-4f5b-9880-5872dafdcf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01996153-73ee-48dc-aa48-8b0f3c9fc323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3093252c-3897-4b75-baaf-cbb50c19efc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86be817f-239e-40fa-8e7f-5f8a6211b239",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6decc060-b051-433b-8929-f27ce5a4f3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe50cd4b-d593-4171-bbb2-57e3f5df2638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87a0122-e791-457e-a8ab-7114e2f8e4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "656a569f-6153-4ca1-88f4-ff76004f6fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb09c78-769d-4f28-b776-fb89a4920969",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0ce46f-4dca-45c5-b002-6773b65f7898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00076a68-fd56-4946-b7cb-9710be0b6954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919a3dcb-0243-48a1-873b-1f69aef8c52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb9ff24d-422e-4ec7-96d6-dc5b87b5d1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e869783-ddaf-41f4-8970-39b83523fcc7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f29ec0-2de8-4850-89b5-79347e34ed99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91014b74-958d-411b-958b-f84c81a2a986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b9572e-2d5c-426b-ab9c-5231f735f933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcd71ec4-86b2-400b-a01c-96c6e26115f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2a114d-d617-4714-a997-6a4374a6813f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cb0acb-6618-48ea-b7a2-ddf39e0e1c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1524ba2-cf49-4a0c-b126-142fb3f45dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc772350-8485-42da-b60a-65c7bf5d7549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5d5674a-3cf7-4303-bffa-d92adc2eece6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca8df2c-3d49-4a39-8afe-90f428d91418",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e3cca2-2a24-434c-903e-7eb2543ac997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9a09ac-3139-49d1-a40b-4a13ad7c1634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0858ff-5141-4033-a3de-243510a748b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92d57fc5-b0e1-462d-bea2-da190d774ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e42f49-9fe2-4cee-99b7-919c12d68b92",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbd8af7-d7f3-4a6e-ae30-065d102ea909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527ca7a1-d4b1-4aa9-9e87-bc01b006c9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b0714b-2f3c-471c-be02-241f82ba736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05f958d0-8934-4cca-900c-3bc94c550f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885e4042-19e0-4061-8fdb-d6bd428c8d46",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0a1bed-e2d2-4b32-8085-5ec5866c2254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd6ad9a-5c03-4b67-882f-24dbf37df2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874261ef-12ec-4477-9762-6fc72ceef259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8fa2751-dba4-484f-a633-6ad8c4ac2152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96bd1a6-31e4-41f0-854c-01283b6ec8b2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52de0cfe-b46a-44c6-bfd3-99b2b5485c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f706ed6b-c4dd-4659-a29c-2fa95e17e809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8514a9-5bac-480a-9366-cf03b22e1872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d441dbb3-21fa-493e-a315-05cdd17c5e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5e44e5-86cd-4def-ad84-5f18a40273d0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ae8ec3-d2a0-4754-8734-c9374b34cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26a7fd1-50e9-4279-9184-fad148b505aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7841aa-2b5a-4aea-9409-c9bca71b97e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9826bab-7893-4af0-9288-f0ec7f910f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27c11c7-04cd-42c2-b714-b2ff339e2173",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e695ae1-136d-4a62-9919-470d6bda17c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdaa11e-f3d1-44bb-924f-85f356f3b898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a0ea88-3a94-4a20-a50e-cadb3bd23c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "402cd945-37eb-4a3d-9fde-07c84831a60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9f55a5-ea9e-4ca6-aa34-ef4f0c5b4fc3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178b181b-b276-431c-ae0c-a237a3f16daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75253328-64aa-498b-9348-3f49345f6dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af052082-1597-4ed7-94f5-ec94662f7408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cae1b9d-b3f2-4646-be4f-0293973765f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7879b8ae-6c95-4621-b36e-2bd3e0ba758d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5363e51b-07b2-4411-b722-c370bca78f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6179599-9ce8-46ed-ac37-0947055313a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e976d45f-3384-452b-adda-c46b3d467b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "645c49ff-e693-4d1d-a2a7-e9489e002f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b09f809-28bc-4447-a129-295289b64c05",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dabaf3-3095-4323-84e7-3a071d37e973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc40fec-a6a1-41ee-b5c2-6e3e949bef6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e124aa-b356-44ba-b8a1-858318ea1b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bbfff2e-c8a0-4f4f-af03-9e33ff582006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9881367-da19-4637-82c1-7cdcc1567ec8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfdfa4d-f3ed-4a99-abdc-068f64510ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0355d3-1b40-4634-97eb-2bc6bcd8805c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c831a012-a5a6-4706-8e41-4b56bc81f8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c89e92e-7003-40bc-9233-28332b62ba99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c3b0d1-b49f-4844-8769-1c43e261c0d3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85919535-fdaf-4410-9742-5b8ab70eec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485a7a41-efbb-48c3-9041-186b6625757a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2442edc-7797-4a51-a90d-ca5b8012addb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad062198-76f5-4dc5-ba3f-28a1d421b7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb041f90-cb39-4945-836d-d5a937490c53",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4769b0bf-8895-4eaa-96c7-a8cb4e1abe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d8299c-f024-49a4-ae04-e6ad06376bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a654c006-b9ab-4b4c-9f56-668420d2ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c78365-d3b2-4f4d-b75b-38fb0f203973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366123d2-93da-4c20-bb55-519228d2d48a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad844481-31c3-4868-8073-3a2e9e37c09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50188ce9-d151-4453-a9b0-dfa0b751be34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596b47ec-2258-4260-afee-9f8b40e192c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5b129a-e0b0-445f-bc50-a96797b1e125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8677cb-bb85-4ec7-a24b-995c1aa1d8bc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34489fd-7c26-4006-8116-0b62f0356aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269a9b14-ef53-4b23-a208-7b0e54c2812f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688dfcea-f3f4-4245-a3ca-15180d5fa670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "656e2755-76ec-4213-96f9-237c5caf7353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e2ce8f-12b4-4d95-93db-5c1b38a2ded7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaca0cd8-03d8-4e13-bf1f-090eb055d084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50675889-2d2b-41c6-8ebe-99d2e3a53e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c41287-ec69-4add-8835-37d7f134ff27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e15827-b198-40fe-91ae-85b174924add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d970707b-bb20-4cfe-b968-d5cac4de1b8d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ff2b54-6272-441e-9807-9443e9d59feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d1a7fc-6f63-4405-8307-84dd6199c0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d351307b-e2c1-45ea-9ed7-ca61a71fd9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "067c7135-faed-4bfe-a97b-cdebe1daaf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67503de-37cf-423f-bd88-368fda8722ce",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d70451-cab2-45af-8abf-dd7ce4c13077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab9ec3c-cc20-466f-9a4f-4890f7ee3885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06fcdda-a947-4dd8-8f7c-e98497037e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f91a92b-14ab-4b5b-9681-af079b79948f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0957d518-8d7c-4f60-a8ae-9925722bf7ba",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d00bd9d-1250-469f-81e1-9b410becd6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6b1743-326b-44a7-b8c3-59c3ffd7c35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1e8a0f-115b-4801-9fcd-6807917d6762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9b1844-9467-41d0-9a58-00f8041c0506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8049445-b0a5-42c8-ba4e-99991056f431",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd06c95a-e71f-445d-b55b-a735575cb1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb6708a-c1a0-496a-aa10-010541b4df9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4de2e0-61db-48b1-b9fa-9d8a65c52609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6cdcd1-641f-4025-8e05-d79f44366d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cab897-7f2d-4c09-ab95-3689badcd048",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa51710f-cccd-492c-9132-71f7ec0c5abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291a6aac-7387-40e4-87e7-e2f5f185c231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94684a78-a12d-4e8a-a89f-6fc1e311495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75bae0ed-4c32-4245-a506-3a6495c046bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309960df-5b0a-474c-ad76-f42dcf605dfa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2907506f-4bf1-4278-bf4c-64b3bb2cb8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0ee339-c01c-4455-9c64-3514c3d724d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b5ee81-dc7b-4596-84a0-074bd2f0ba02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "385e6921-f2b0-431b-b75b-995aa829479f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854d3679-b210-4e4e-90c8-a9895fbe0bc9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ded7ef-b4b5-441a-aa05-b17597e9f015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad64a950-319a-449a-bcbc-4c8e3fd0dc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87417e6a-77b2-422f-a99c-09fbd159a93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ef375d-5287-4ad3-8169-33fb8b46187d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c1bfe1-5bb4-4993-b7fa-e51bb1019657",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbaa067-18f6-473e-a72c-b8eb32d7d86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b207396f-ea5c-42ee-8f34-9d7ffd73b2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a660d85-6e05-4786-a832-7b01a2ad3879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2150a6-2d07-4b18-8731-3dce54f4090b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4becb71f-921d-49df-98a3-d13bcb4f7eeb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c55abb-8a8b-4023-b779-fc68feb3786d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e79f4c-a2b0-41e1-ad99-56fcf3a26c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dad825e-bf6d-482c-9868-8975c21d9add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ece511-d52a-4726-a3ad-d02ba26eb8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c5a7a8-11cd-4251-bc31-2175ee3a8159",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ec8097-4125-4757-8cae-5c55a36a94d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a06207-b34a-452d-b157-f2ce1b92cbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec500e4-8915-4321-828f-7da2464d340a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "170621f4-baaa-47af-95d7-1696ef8bdb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf624a3b-c076-4de9-b928-0b46d7a1dde2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a764fd-7e46-40ba-af9b-16f86b83e999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e624b877-edf7-497b-a589-692ca491e1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0100691-50bf-4b26-a7fd-c5b54cce3f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e612ddb3-f0fe-4864-8e16-bf8e11c538a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d0e2c6-6d8e-4c2f-b506-d1236987cfe4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da468ba9-bdfb-4b03-8230-17674dedeaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c13dbd-b17f-4dfb-a542-c117fd5f7c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4583acb1-2d22-4f6e-b6fd-84f0b807c290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2380cef0-f5ec-42dc-89c0-f8ce1dee5a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d24b9af-85bf-4f40-b05c-17299b2ea586",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55010df2-b44f-4c8d-ab6b-7bf9955782c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60040afd-9475-49a6-abe3-70bf755ba6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459620ae-d10f-43f2-9847-f7ff4cd39841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9133333b-62f5-4993-9e75-160275e595f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6d45dc-89ab-443f-b454-a419577c86d1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a6a3f5-c32e-486e-b55b-1ab35964128c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861f7eeb-7cba-4f8b-bd3d-74ea678fa6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ad9a8c-9861-4294-8d43-61bb382d2322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a3a145-803c-410c-8404-e5ec8162150d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe2f99a-c9c8-4b08-9428-11a8ad8c3443",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc426fd-02a6-4054-9a9d-e4b0156c069d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44cf7afa-d948-4ff6-adda-3aba4f5b5cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f090cff4-bfb4-4804-811c-28b4b1882f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82332d07-4373-4c96-bc0f-9e84f6e0d131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b53283-e7ef-433a-9f77-9522184214ac",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0f9580-667e-43b5-9253-cf5d34d40d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0624f1e1-6630-4258-9dc4-741014455e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf3471f-0db7-4f84-8dcf-4aa6a4fe7ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b531a45-0965-49da-9af1-344b04b294c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63371299-991c-4f00-b68e-34c54efdec2a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252d4c12-3ccb-4b94-876f-2c01753f6b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8724357b-82ea-4208-81d9-d3fa6ae15c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b79639-1bc9-498d-8066-c5970a4e982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7477d3f0-ac9b-46d2-90aa-feb1067c0d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde6b0b0-a80d-4ad7-8bbb-e9d0f12b6b7b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343fef6d-ba0a-4840-9d5e-665833dde72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4c10e2-9b91-4b58-8cf9-93f3f6e80998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7680dd-c857-40de-9b4f-c30889af2506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d031c5da-68e2-4324-b53d-147b81550106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04d96e8-5540-46fb-a80d-904e4ebf4452",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eccaf9-f056-40c5-b25a-110e3f520e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a893269f-181b-4321-b8f1-f0edab26e06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551d6b84-8943-492f-8b14-b269e4aa857d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2bf87b-c9ca-4a9d-af21-4e827eab8216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21ff20d-37ec-4919-88f2-30468f1d5ea8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86869ef5-73d4-4356-8876-c246ab58430b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb36238-955d-4f76-ba96-ba6f5d1e4212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44516769-80c7-480f-a931-e1756ea4fba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7dd6cc-31e8-4e69-be53-af24904e733c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee3972f-4e58-48e2-b7e4-367641ec793e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d48f96-65e7-4f3b-af5a-ec56096d2913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97989ad-353f-47a3-9a62-ef23b710275b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164317b6-8f2b-4704-b6c7-c5c1862a5100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f26c47f1-fbea-4310-b0ad-43c945387ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2369e6-ed1b-4a56-99a7-bc570f063550",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd7f73c-b2de-42c5-85d5-d42e2806cc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02460784-7d00-4c91-b51f-ca92da40b31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a6c090-c0d0-40a5-868a-3855986ef8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4621097-e41e-4de8-bafb-6a4dafc19fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01885b3-713c-4565-a1ab-64d5f2a80081",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0c18b6-b0fe-4f29-b7aa-9d25920fa532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2438a5-025f-4cb6-842a-34f7ac83ac24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccdc6a8-d06b-473e-b10f-0be52579ec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e19ffe9-784b-4f25-a734-25ad271abc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a472798-f19c-4ab7-8014-b94bb5e392f4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aad4c40-20b2-4c14-a6aa-91a4c6d39722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18be87e-e850-4f0b-bcc2-2e9dd6f488f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed0c951-dd4c-423b-b19c-26b540e42354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b380e171-7d69-4879-b7ee-a352a70f9a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae037b8-6496-4d3c-99f4-635e12c6767f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59db908-b142-4367-9b16-718194a47a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38dd24f-243f-4c99-a129-f3e9cb2accbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9f4653-53c3-46ba-a908-f6010563b685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5da3893-fb80-4725-a530-314063dd776d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac744b9e-0942-4042-8c45-9560ac31e243",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080c4fdd-9cfc-4338-a4c3-0ece34ab05e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f464f2a7-f1e5-4af4-a75a-67fa1fedfbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f52f0e-c212-42df-a7af-1b4f5e5ab0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d236c4-c4ac-4ba7-a6ff-e5f5c862dfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d863207-1c17-4700-bc6b-857e00cc208d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e906f6-c791-4b3c-9ba2-7c0aa26a1dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b775cff2-f74c-408a-8ae9-0f129b29a68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f292d74-e532-411f-b995-5a80a878c4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96797150-6130-4922-8a22-948744fe1622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd597ab-e11d-41eb-a21a-444079eaefff",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b08e302-f672-420b-837b-e6f7cb8289bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958b549c-5261-44ed-8d40-f44eed5b2428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cca4fbf-e035-426d-89d1-00faecc3426d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bb4942-b255-497b-a317-d76e7ad73ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72909f6-915d-4f65-81a8-e293bd6aa6d0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fcb010-c10e-47f0-810a-e9412016a589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0892ee4c-44a0-4210-838b-39344d1ce9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a894c7-b0d0-4914-b29b-f3e60223f8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b6ad87-f2db-4d1c-bc31-7c5491f71f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3701d18-ac2c-4f47-a1fb-9b41873a20e1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b73a04a-586f-4880-a306-15902519eb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d49f661-a6c5-47a2-843b-0bbee2d169cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5023852-9e7f-4517-8004-d1f4a6ffaffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db5f8c4-570e-4203-876f-2dd1a9e017d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97b13ed-dd69-4f6e-a260-0876be5b3190",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39799746-b79c-4d5d-b846-bf4aa50c8177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f53ff59-6c52-473f-9cf0-8cafb6f186ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becc36bd-cd10-41b1-a690-ac5b952f942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "381e878d-c0b7-4e89-be82-58bd18484efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e565ac-6c94-443c-9a0c-5ca9b1f39abd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3a5dbf-eddb-4695-bc04-7626888ff32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48626e6-fa8e-4780-ac48-835b6274fa04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb09013-6aad-467a-8537-6a747919b554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ced1ed7c-34f5-42c0-9e23-4a958c99f885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebe850d-b0c2-45a3-aed5-c1e7a3d4e976",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ee9aa7-bf4b-464e-875a-925d9cbe4516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7939f33-f60e-42a2-a8b3-cd9a84b59513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee73e6a-1b97-414f-9e6b-e3b6e52ec6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b677ddd6-d782-4254-8098-27a9a08fc91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5134bc-364a-42dc-91ca-b52ac0a92e49",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188a7c05-5590-455c-ab12-6055d4ed61b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd723c1-0b59-4bbf-bc00-3a0fbaaa6ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7f6e54-b218-423f-8e54-dd524e2543c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a486303f-91fe-4a71-bfb6-3a2580daf5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766cd919-bb60-48ee-b636-41f1c525745b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bf1e66-64ee-45a5-97e1-31035b0697d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2845c0-c103-492e-a1fa-65afc88f1b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e281f21-6e72-4a90-9f1e-061f6b8c0eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2c8040-fa04-4bd7-935b-4918f9f4533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e37c87-4080-4655-8e5e-5fdfccd27822",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719b0a15-8265-4f56-b301-3ff03753503d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366e52ae-e56a-448b-a72b-c321c6e80dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966d6600-93ad-4a35-bd4b-9dcbaca70a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1baea3c6-4580-44dc-9fd5-ab1703454a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d856370-a409-4e66-8c1d-15d5be51fd4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35ad303-1804-4018-95a4-64aaac713606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2413fdb1-18c1-4435-ae67-0aeb354e0c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51906ef0-8cb9-4748-9319-1925af6c58c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec83895f-b359-4a9f-a652-998673e8c140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e634028-060c-44d4-8586-4ab20fcd62dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db79aa32-6181-48c1-bab3-b4e37dffa22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2f2e79-81e9-475f-8147-6e06dd70f26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b384a8d-f105-4851-a753-a6a9fa427ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f3cdd9-2949-419d-bc84-75ec3a745713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fdb413-591b-4c3c-9696-3b0bd179a5b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0ed404-b57c-4edd-b0a6-79deb2b12114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0916bb0c-a797-4ee7-8a95-a91fd60c01a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f839e53d-2d4a-42d8-af8e-0111a1e2fa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb30b97-4172-4cef-9bea-b8ddad65dbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d90da2-18e9-4778-9922-a374c0d11462",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7aa027f-5667-4fe1-a96b-c3dd3191d8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795fe335-5450-43d1-bf35-d6b9cdca0964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7416236-b5ef-4bd8-b1ce-769dff58d060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "72bcabdd-e279-4ef7-9843-995133ae3353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee7c90e-0a30-4d06-974d-4c6b852ebc78",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bd5586-2733-4846-9e19-aa6dc4527978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b371d2-bd1c-40b5-84f4-5eb9755d4afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a87a3fb-36a7-434d-a7f4-6d045984d064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "735008af-1a93-4d5d-9934-45052618b8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452aa4c8-358c-45f2-8b72-a8878ea204c2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67d1605-49f6-4f21-8a36-accafeb5b6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43faeafc-3322-4cdd-b37d-27cbf60d5d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66921f47-b3be-4d44-aae8-b4ee6616aec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4592be20-157c-4a8a-a87c-5d670b17c645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c09029-f183-441f-a657-395bb4dd45a7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7481a05-2750-4f0c-9889-1e0f4d8f3722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5223e4-85aa-4ac0-a047-2c490b5df10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4e2d21-0854-4780-bf12-caa9793d49aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f41a63-12d6-4b4c-bc11-09a5422473c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ffe836-17ab-410e-a651-4e52a298ca46",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30e928a-df15-46c8-a3f5-27e3c920f940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d580e196-1e30-4335-8da5-5b3aafa5164f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728674b6-f99b-4e92-9558-e202c759b5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d5a1d6-622b-477a-90f1-ec11658ef050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e80e03-d9d9-438e-a621-af82a4cab2c4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba75832-ad7f-49cf-a91e-fa3f15860692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7165f7-62de-43d0-97e4-05139f508f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d88594-72b8-4291-9bbe-9ea5cb2af0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce9b2c5-4bdf-49b8-8e62-583a5c23d268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b57891c-c690-42bd-8603-69c16659ddfd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911e1bd5-594a-4d93-baf6-c99263b039e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbebbfb-e0df-4222-8122-2ffc6bff0a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fceadf-522f-4053-9d98-73cad17d9137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31dc78c8-fcdd-48ab-87ef-e8fe0fdc7001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3772fdae-286b-46bd-aeef-9f7ad5438c71",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4f2e79-4400-4f3d-9bbb-7dc4c008fc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0072bc44-d90e-4cd4-911f-e6e0079e1aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b98c87-de3a-46a3-be87-14ca2a52ff92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb206e1-1118-4bf5-afdd-af219c0a4dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b364647f-5319-4eb4-b99f-4f9b9624a32f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d631d3-7576-4ea0-8980-07d7d926da5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3938e44-e5fe-44a6-9fae-2275824604e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fa6f06-bbe0-467a-b706-aa8a8e548293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b26ed1-575b-4c42-895c-534fb2687674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95937b10-6d40-4922-8225-5cf281f103eb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25d4eab-e640-4ebb-87af-f917871f1ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30394775-9f59-4cb3-8f18-923b46f3be43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e72fea-b00e-4549-8a8a-739eed138569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8827e8a8-850f-4274-bdc2-937a62782433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abca8765-600c-486c-8202-579a54eb88fc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7234e083-e355-4559-96f7-a0abec0ecd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66e5f42-caa6-49c7-a63a-6b75eb40a314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ee3933-3d46-4dfe-a90c-6762136acb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2973fe3-32e2-4fb3-865c-b91ac573500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b229581-821e-4b26-94e6-3578600cea8f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb14df42-fb30-4f5e-b0f9-d03546e3024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bd39fe-b2ce-4df5-acd3-db603015c009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99739ed6-f1b9-471b-9967-d7f15164aac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "248a914e-c8fd-48e1-be44-5eda1c16842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc2d067-4af7-4f11-85cb-2b432a7c5611",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8f31e6-9123-4f61-966c-2b4bf247d108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9236261f-6207-426e-996c-97427165c395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e162ac-77d4-4a09-97eb-d0797b8c3469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa75282-9fc1-477c-b3da-7a68fe2f7d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98439b9c-67b9-4f0c-9eff-1279f883c700",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e082ea5-f5d5-4986-8750-997919ad51fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1287e66b-ffcb-401c-ae6b-1b9fddfbd3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58acbd57-8dff-4ec5-ae88-1f5a6acbcfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "036f0055-8391-4bf8-99e6-d110693175cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e9e893-4e9d-42f9-88fd-4a99c661b812",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5818929a-81f9-468d-8292-83d49651720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf2111d-4a88-42e9-b275-9fc6dd7c4875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e965cf-fbdd-4e95-b4fb-fcee84fede36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb9fe8e-e364-469b-ac91-14f121137f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a91787-7164-48af-9419-c1481ec22a02",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c57e63a-2226-4fff-9e4a-f5c27858b06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235a6437-ad45-4871-ac9e-988ef179b403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe496ba9-2733-466a-9541-9800b8517213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1cec7e-44d7-4f95-9e10-7552be66423e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ae799b-16a2-41b4-8aa5-85e8cf9a4b2c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c2614f-1add-43fe-b0e3-c21f411e4120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6cbbe2-c00a-4005-b536-347631f4c3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cec644-3277-460d-a442-bf3675864cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbec547c-89ce-42cb-9ede-038564e8981c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bde46e-cf20-4ea1-a141-408022809601",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba31217-9c8d-4765-bef9-665a330e297b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a78d56-3069-4732-8c87-ce2a2c29ee3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b781d46b-4b87-47ed-9110-4ea2b16721f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc76bc0-d37b-49fd-a2c4-4ff4c132db5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995b8cde-7455-4000-ba3b-2b3f29c717e4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa12247c-cb42-4775-a073-cd86f6b78d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153e1f6c-d86d-439b-bbd3-dbe241745d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec070f33-8f2d-41dd-8a68-73c30dd8be26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78d11320-418e-4758-8cd1-db75cee7072a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27fdb46-fb4e-4ac5-9932-6faa0259b3fe",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08ac1ab-9788-482d-a4f0-067790021708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deca868e-d223-4e7a-b59b-01e7ee2c8e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f698d4c-2910-4d4c-adcf-104f4c115417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7e38a8-bdd5-4619-9049-eea17d6a70b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1014a08c-5ba5-4ffb-ba36-4a4df5df5832",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab3bc75-aeaf-4902-b656-50483729aecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e48150e-450c-4e5c-b8ef-ed4c8b9ede1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beb0c03-0013-4bc7-a516-dd3b1f80cfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c61d9a-135a-427d-9cb1-999194e0d7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8d0c83-baba-4ddb-9381-ffee1946b46a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f33f58-9b8d-4f2f-a26a-c8c01b07c272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e57cab-394f-4f3e-8278-399549246150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68b120d-325d-4c43-a656-effa5391bb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "978197cf-5579-45fe-8103-2f18cdc9d122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea56ef3-042f-408e-ba5b-9d3f68f0c094",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd34954a-21c4-4a59-b866-6bd590450645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f13ad5-234b-475a-9c69-caacd7bfeddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a4da35-4a22-4805-92cb-608e1815abbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0dd72c7-2d46-4c3b-9a49-ed44c77aad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d48430-f28e-414a-879a-06680d87f114",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01d0d7c-0e2f-49e3-b770-9e609e422690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c368ac-8296-4ec1-ad18-15967402104a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed530e9-b83c-4fac-bcc8-07430582444d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c656b923-fed2-4ec6-97ab-7ff10e8fed02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92696da-2155-4fde-a26c-7f4bdb186339",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a36d5e-bd47-4298-aac8-596cc1f29866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30502e4-843b-49a6-b8b5-e806010156cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f87e892-4c6c-4d08-aa40-7dd6c6c35609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9679e9f-c61b-4965-951d-36786c67351a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020a70a6-c7ed-4455-96d6-40654e46e0b6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f21b17d-6df2-4f46-8f7a-9178b7379975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7435e1a-9d12-4e98-9a4e-cbf05b7c4e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d21261-6134-477f-865b-35588dd8cbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a649b67-dff6-4dfb-acf5-97c82e76712b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6127081e-256f-4c2b-b1b4-28e32a80f2a2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d65063-fd6f-4245-9728-01dc3c04b37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ddffbc-e9d1-49c7-8126-3070bf4222b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbd96e0-aac8-4b4a-a8e2-4157e621b2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7de71e3c-6c5d-484a-8c52-f8bff06ae985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b049970-216f-46a1-8fcd-63573ddc3148",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36be566b-28f2-4dd2-8727-ec6844ef70e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef4af9a-133a-45ec-a7cd-5e4738635365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f842d944-6dfa-41cd-8b06-723564b55691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1636d7a-f7e6-46e7-a8bb-e8f7f7d3951c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e4747f-1785-4e4b-8c2e-faec65047263",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fde911-646f-41cb-8916-258d353d7a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f859a4-fec6-430c-872a-a1b58b0f63c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98636dd0-69ef-4f86-8e9e-66f281b7d514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea580c1c-0d68-4bc6-8c0f-239073d8bbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197193c2-123d-4202-81b0-33c253d928ce",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11fb950-8ba8-4a19-8069-62a53e819511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86586155-b860-4879-a7de-794010043a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a3051f-2733-4e33-be44-abfdf7fc72e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "036a00c0-b880-4bfe-bb31-b07cbe4bb0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf266ef8-38e3-41e8-bdd6-40f385222368",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2029ea33-478d-4271-99db-c27533a78e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f098bbce-d571-4cf5-b629-81ed5eccafb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb731a-d5f5-4171-b220-58093d613ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd62c09f-2006-4b70-ab80-ed16b15d9b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e43d880-e470-415f-a4c7-fdb83c330349",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d053f6cc-6e5d-4c40-be4e-1ce1163d2b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "03482ff3-483e-4c5b-a601-99a92063174d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c40baf-b4db-47ff-ba7f-3b18c6cdde59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "36eb2d31-80a5-4ac1-9cbd-11fce1d7dd2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb821b80-87bc-4ba7-8496-1c159e5f2755",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97dc6b85-a7e7-433f-8f00-0e9513f79f2c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e8d719-0a67-4686-a0eb-8ff51ceb8dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed34e22e-44e5-44e0-b798-2da19d2d9985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5383f6-75cd-407c-a244-82a5bbc0103a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe6e1f87-59a7-4390-abad-8b39b8d072d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8bd60eb-6022-4117-bf58-663b43257490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a67f7396-d550-4dd2-b525-0ce31e444d22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e98aa3d-7313-4648-b326-7545dc9a5ca5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "162e69aa-e724-48c8-adf6-f1a230653c1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71623b09-0b2a-4b8b-89b4-bef1061ab4da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5b2b0a6-581f-4d86-9fbf-0e5abb9bb014"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c266c43f-7d1e-4913-9bfd-1114dfe8e0ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "efe1f5a9-1a94-4ccc-8c4b-966cb11cc31c"
                }
              }
            ]
          },
          {
            "id": "0c04e590-a552-4c8b-9273-5f2812082f98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b8471a8-b061-4e98-b2a4-bce409dc7db0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8f2f6d69-56fe-45c6-b100-8e1fa4154f03",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0c4076-697b-4353-9c11-210b0a1785e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7c4e26a6-1410-4415-99b8-764681074002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5696b64-5ac6-4ecf-813e-697851310932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799964a8-1225-4100-b31d-579162eb5184"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb24bc5e-0d3c-4044-97d6-d5d3239502b0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8adec34-54dc-42c4-b7f3-d3504385af77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c9c9116-8665-4e03-acc4-bc3733e4d805"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eda6f36a-5be0-406b-baa6-09efef3a0ec8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5526de4c-8d89-462e-b15c-3ed4407ab2fa"
                    }
                  }
                ]
              },
              {
                "id": "95790827-7742-43a9-862e-d2cf9d2c7fee",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af7a7c48-e58f-4a65-a6dd-6d490043b1aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5d62966-dd9a-488d-b631-52c16ac8daa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49321d73-8c39-443e-a8b6-140fb54b8a2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e95a7f9e-eaab-460c-a851-c4d565322682"
                    }
                  }
                ]
              },
              {
                "id": "777c4260-3e95-4d31-84e1-aa0a79665b3e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b32d2b03-75ec-48eb-a8c0-9b53332b9de2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5b7f870-07aa-4dba-8912-e3b0effa8b2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89cbfb07-0c74-43f6-962d-5dab1e85536b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ddcd18d5-130c-4d9e-bea0-cddb8bd591ac"
                    }
                  }
                ]
              },
              {
                "id": "6da92b7e-83c2-4be3-9bf8-04b16975bccf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45b2c4ce-015d-469f-a51b-af7c05cc8afe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8a187eb-ec2b-4374-9843-71a2b1f9d11b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31d24887-c493-4fe4-9db9-c33c4002637a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d71d80f-f229-4c3c-bf5b-af08ed58174a"
                    }
                  }
                ]
              },
              {
                "id": "ce6af0c9-1b7f-47f7-8547-868e071e2a53",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c765409-0993-4453-833f-56436f27c2af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "120644b3-bcc9-4ca8-97bb-4a440fc3a83e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81c66509-b98d-4b94-a9f4-0c606f639df3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "58a3fa92-df80-459f-b168-cdf4f8c549eb"
                    }
                  }
                ]
              },
              {
                "id": "5ba17dd5-fd65-491b-8dd3-8f6c90cdfef3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35d70d8e-7abd-40f8-bb88-ce669357f3a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9c734e4-a6de-4672-b768-da84483daaed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1428938f-5c1b-4019-bdd6-42eb11760b1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "78ad4e61-87b0-406f-9527-7448eb437343"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1a01787-24bf-4625-8395-65d8a9a35ca2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56a0e498-d2ad-4088-8be2-16554bca1480"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73514759-708b-4d83-85af-894658f09df5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e403ce91-a71c-4178-b51e-21d79e2b5c72"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3b5eb92-77a5-412a-a196-b9dda3001290",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3e837aae-53b2-4a6f-a6a9-7833a806beee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c054a550-eb84-4144-abcd-9612f1b0de59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81a73976-277b-4a6e-861b-ecf162cddfee"
            }
          }
        ]
      },
      {
        "id": "9463277d-2d7e-49c9-9abc-eeb391330d02",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "faad9322-8e6c-46b2-8c4e-e39c4f673921",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee638bdb-645a-4ddf-b95c-5c2f463976b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b1716a5-264f-4f13-961a-fd997e891806",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f91afe8-f6c7-4b75-8b49-a673448c69c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981cd476-688c-4128-b226-71065fa2105f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6eca1f-d999-4690-88d1-6adb3da09bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a094be6-6d53-40e2-b3ad-4f268c2653b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07aaf218-bea2-478a-aa46-e1ba3aed9cbd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d5ac9c-04ab-4e5c-8504-bc3c11ea179d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab28fafe-86e1-4ecc-aebd-15b71bd54c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba454080-ae1f-4860-8384-dee63e969da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a171e0b-ed9d-4580-ac7e-2caae8b74bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f399fc-05fd-46f6-a58b-434f49749ad5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b614abe-251a-48ad-8d9d-18b3e406fc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf2c1ad-9003-45a8-ae95-399d29eeff8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e0aaf3-13a2-4b78-bad7-22f9b2e3b1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c01aa3a3-3b8e-4d10-91fc-382d5a5a1331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be94db1-e1f5-40bc-94bc-c68fe6ca2c81",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770d895e-3a15-47c7-8f30-d5a6db54285a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64acccb1-f0f1-4705-8cdf-18804cfaee7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49888639-a7b8-470c-a0ea-be4d7a5abd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b300baa-162d-47e7-a37e-1a065c78709a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce155df8-b4bd-42b3-8260-3e595f62638f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b37db9-b18d-45d8-9bf3-413e6b1bbfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874720b7-4f38-4a8b-8947-f5ef98bac5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338ab8c2-2f8b-41fc-9301-49294e54cbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac5c9a3-1a2b-48bc-bec7-22252508f929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d87aef1-e0a1-4119-9590-b4b628efd106",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ccd7c9-7b0d-466e-bc9a-68988bfe0e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5faeacac-d9e3-44a9-94f7-029403a209ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1c9667-732c-4d53-99b1-9909de6a6bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca46385-ad4c-4df4-966f-daa6a93ebb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd093d76-882f-4bd0-b2aa-a162ac6b8ef8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ae89ce-38c5-4747-ae14-fb9391a43ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2cff249-04e0-41a4-ba43-1a53b0e12551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c773109-968a-456a-bc65-99d92e0a55d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cc32ff-5c0f-4dd3-a81b-026fd9ad8145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcbeff1-831b-4ab0-bbdb-e950de0458ba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6e84d5-feb3-451b-b3c1-d7d3f1076179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab8a062-7885-48ec-bfde-74fd0297f737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1f9c01-9348-4252-b6b1-25f9749ebde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb1b645-ba9a-4832-a8fa-a431b619f8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751fa443-294d-44df-ade8-14aefe0dace7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266fdfc3-b609-46c1-bb90-5fe6deeb223b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4e57ec-14a8-44dd-8b81-ab801e428003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70164ea-dffe-4d7d-8fec-5b808d6892df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3422f4b3-6e63-4ec3-833d-3271b902926f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791822e8-7461-4428-9c79-850494bfb4a4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9470a46-e83e-4aee-9079-09a1654b4b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490b6759-a326-466b-a7d4-71707bcb5029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3daa559-57f6-4d80-b556-b24dc646886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a057d7e-449c-46f1-a167-eeabc2a896eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3e45a0-ea4c-4428-9a58-b576f05d9a77",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec367654-0924-48b1-9b49-c64378907041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999428fa-ddf9-4500-ac2c-1556c5ef04f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abc9f76-d9c7-42ba-b1a8-0bde35205af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a948ecdc-0825-4350-b062-5495a77aef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44cc7b0-dcc1-4e1c-af92-a41210efc89a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86d9ae2-678f-441f-a227-154782deeb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1e53eb-a878-4841-8928-d254adff877f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf1a854-f9e6-437e-a411-d18a1e88d407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0731ac-ef55-4a4a-b95c-6b380ca139a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b401184-d8c4-4167-be03-c1b48991d2f6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83b4772-a5a3-490e-8008-95ba1c51d8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509ef7ff-7345-4126-a720-9116cacedeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79986b16-8e7b-4741-93af-02ef744dab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3525567-2235-4d44-95ec-a5228d607835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa940f5-13d6-4db4-bc3d-86a7e77b1303",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f99f6b0-6c24-41de-a41c-52268aa31271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbeefede-5dd4-4551-8e86-bd0ccc2fa221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d63ea1c-71fb-4dd8-a0d9-fb032f500fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e145375-1c7e-46eb-8ad8-fc935576b2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cba901-bd91-41bf-b63b-f09268b98009",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7430feb1-f2c4-4132-ab4f-406fc7f887d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d98b13-5836-4d52-a16d-0a0795375387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89097ade-9f7f-44c3-8a9c-a5ead5d9ee12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "902e3aac-36e5-4006-9aa6-5c870b37422f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872e51d4-3f5f-4cfe-9a2b-20f234ca8211",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08b100d-b7f5-4c17-8895-733e9a60e766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfa07e1-a867-47cb-ab76-5bd330d92d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05f8c06-7f9b-40e2-a866-fe67fde85628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94086c2-c41f-4809-8f6e-61430d1be953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695dba5b-434a-4a7a-b437-24eaa649ffb7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a04639-28c5-4afa-a10e-407ec6d97b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d1dcd7-395c-4469-8b8a-94be7c252e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fef454-fc07-4603-b324-801a9dce1183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "90a2d079-b5ba-41ef-8dad-8f172d6b8b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f045f32-c16e-4ef0-ae28-ce36078b7cd3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4307f2-b5af-4d53-a624-b93b023c03cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff33236-caec-4041-9db6-d1c305acea8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872c7b18-c2fa-468f-969e-7653b7e8fcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "60e0d178-47d8-4c1e-868d-820e9a32840d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860a802c-7daa-48a8-9ff7-46cb966f8121",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9d3eb0-ef0f-459e-a60a-15f7b57c82eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20579ad9-a475-4e55-80ef-a034e55fec83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b701e71f-6400-4671-80ec-e8bf5f3afcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f5af12-2831-4e1a-8f39-91a66b9071d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f922fab2-7094-4a2f-9796-ab3f32eca0bd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cbd822-9cb4-4337-bb53-ca888ace060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020cf241-d37d-415f-ad06-47ac51b5ef40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af55aaa-c18e-4a5e-8989-bf23702e4adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96034f65-56eb-4e05-bb1b-4cd3788a015d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dca70d6-21a4-4882-a1c9-2eb099b99947",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795e6e5d-bced-414e-a06f-da1bae618d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddc1f2e-2a30-4990-a6ad-f0660c9024fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e696d5c-7db4-4125-afea-314f1ded8096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5333da95-e781-46d1-8f3f-7b3b0f76f020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df5c95a-f2f7-48cb-8822-09a670a0208b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63710464-fd5d-48e2-aabe-47341df0a5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e018703-7239-49f1-9cb0-136d1c17e216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f55415-1cee-4261-b2dd-652d5867f97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaae2d61-9908-4cbe-b0f4-5906aa7c351a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9da52b-8861-4509-b4cf-c0725ffe710a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b10eb8e-5f4d-4564-b1d2-5ac18b7e3e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c003da3-7e15-4f99-8c82-907db95dae64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134f02a2-001b-4f4b-a01d-27e4167d99a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaccc50-a6fa-4769-ab13-83ce4471d06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bd1b4f-70b0-4db1-9e06-d7596ba15050",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dee5bf4-ed17-483e-977a-ed0ba80c7a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b13898d-7198-4a9a-afa8-946ce22a8ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b98987-5263-499c-91fe-72b7e38449ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c4b580-259e-4998-b2bd-155f320e0cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78ec016-0655-4083-b947-a7481602cb18",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dd4556-1268-4059-ab1d-80c115d19820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8687aaf-1e74-48f1-b18b-5e7cf7282d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b50e91-b32d-4049-8eca-926e693d5cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09169d71-aa83-40e9-8563-e4e1decac8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047b0d57-89ea-41d7-a58d-42b8bc247bb4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da187abd-f39a-43d9-9f40-0e7a3d166e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f45c82-2c09-4480-b66a-96c174b8b536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ec37d8-4bcd-446b-9cb0-d3951405daa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9ba1e0-bba3-4834-b458-3c6cef8a2038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0c3215-1dd1-4261-a487-a2159c53010c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db588d8d-dcf7-4475-bb96-0826b6d11ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad58a95-4e5d-4b09-917b-3aea9ab5d9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948dc5f9-7697-43ab-960c-b7b4343bfde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e1c126-6154-4156-98f2-77586fd4f9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38005721-6b81-4e76-b98c-3c52ff9a3153",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6081ce47-cc08-4893-8e8b-9208dd347362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e35cb7f-885c-463b-8338-3738f1ccb09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563f0343-f000-4e97-a694-1ad338b32f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f0fa61-5980-4b58-a432-1c4692f2f6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1d0863-9875-4a59-a56b-69e9a7e5121d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b317ea0d-36fd-44d6-a670-390429de2ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61f3074-b22d-4df0-baf0-4307e64a37b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afeb876e-d433-4e63-9c84-60e9502992fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae90a46-4778-4bb2-aae0-b720d497cdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab531ba-617a-433a-8b2d-06c2fe14b040",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b05cc6f-4472-4d95-b733-8aeb0e6b0c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49455d5a-f575-4476-b878-230883303310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f03a8d-3d4e-4009-8a58-8787fb92c40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f87a9490-5e6b-4272-9271-f9474fba49f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb31ce83-9433-47a8-b8b3-de3aac6aeffd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5b4710-526c-446f-8694-097a277e3055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78300106-4dff-431d-80d2-40c7019ba6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92c241a-672d-4718-991a-4429e6ee1c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48cba3a7-1d1b-4a2c-b40a-57a24b63d67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85f0c33-a110-43f6-9065-1963d9fbeed8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d070851-8277-45eb-8c5c-3a33e6e2e318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e92cdbd-2c22-404f-952f-c2d761165d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfba0a81-9779-4dd1-bf96-d2e292974ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f75d29-0ccd-444b-af99-e642b758ea71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "428b5497-659d-4ec6-a3d4-1d0bd2afa6c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65b9f9fb-1f2c-4894-bb76-3eb1ec052236",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc14b651-da3d-4306-a196-77c09877954c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d09e41cf-212c-420c-be66-b771ed2073ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fc32f3-96dd-47f5-8cc1-5450af75b962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38b5cd6b-aa81-4820-8d31-d186bcd27e4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6e67c5c-6ab4-449b-b05a-b1db0455fdd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ac6b689-a9fc-4afd-ac0e-214495f4291c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6eafedc-43b0-4fca-9480-8415dd560261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4804b727-4388-4f4b-885d-3f558d185c44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e729f55-e8d6-4a77-9d55-8284435f9d91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9322e28-72d0-40b6-a6e4-9e5993e17cb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f1df9e8-3041-4c21-9890-a2db3a92075a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee6c4bb7-cc89-4da9-9928-2703a53d2b49"
            }
          }
        ]
      },
      {
        "id": "d7a69e08-c378-4d8b-8f7b-c52702a9d206",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f22b4131-b504-44de-802a-e1bd500d3611",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9712196-e6d9-4085-a8d7-e841c2f35a1e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4af8c5f3-4134-4ea9-b2fe-73118a7e5830",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408ed52a-c9af-4672-a93c-53b26d30a871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb53f55d-8301-486d-a942-3a4f04a926dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66473d2b-fbc6-470e-877e-0a78682939fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "62991c7f-6526-4be1-a9d1-3df7f9556474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bd3f68-185a-48a9-88e1-10aff6479864",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00e5045-4d3d-4881-bbdc-6f2ac90f4c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1851678-fa4b-4948-903c-7dee9b960f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce207b5-6624-4433-be39-92508232fcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "686ffc44-9ae0-41c5-b267-4dc51b8430c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cdca33-5ba4-459b-a9cb-50c2fe98d413",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdea4ea8-b24c-43f5-a8c6-eeaf2edc402f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db29cd7b-03f6-4888-8e50-c5dac65bb67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3149f63f-7afb-43ef-99e3-62184dc72ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da1d0bc0-0564-4501-b8b9-926fcad3ae9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fbaa0d-2b1e-48e0-87df-5683598bbc65",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417c6918-6608-473e-92f1-ababd459d275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483aa987-1f58-4a99-985b-95b29fd4618e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e4be56-309c-4431-9bd9-ba21c1625c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34279f44-31c7-446a-94c2-a5d6b671af75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b8fb58-1f9a-4ca1-ae3c-f8d437850bc3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5255fe5c-794a-4af5-8dc0-5f6267c2ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2358a564-0713-4d4e-ae84-15bc20ecbec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b46c887-3ea9-4c44-a9b5-c2a62e118d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27888f55-c3aa-4b05-acdb-31fa1ae9caf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd7127b-f9aa-4b19-9b4e-452dddd0c0a0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57a6581-1fbb-4c27-8be4-782ee1329488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf52a8a-e2e9-424f-834c-7377d890d0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db395d3-3139-48bc-8e2a-fbf1b1ee55b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08301254-e46a-42ea-850b-5b29578140f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d200cc1e-7774-460e-add7-938667a1462b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f39e75-d5b2-44cf-8260-d1fb5224d1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6215a4d-9a3b-4414-bbee-ed4352baf731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb233e3-5af4-408d-8e6c-acdea0857359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "66bb48d7-7f3f-4c09-9b6f-5f776523ded2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f660ef83-ee12-4f12-baae-79c9b51ce39f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac52ba6-533e-4af1-95bd-a669f31e4c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32024f11-0c1d-41e1-8a15-aa6d4b83ac53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f536cc-d464-413c-b6b5-ec5227163664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a214de-3cd1-4675-bd34-b0d0f54109f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b222cc-e196-4ae7-b14a-b11a733f58f5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9513434-4c2e-485e-8daa-b69bfa86d866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cb5e69-83b1-4765-9ea2-9869cdd1f28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea664ec0-b70e-444c-ae82-5e27fc26af52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86701ac-68ef-4528-9bc4-97bc1d31c7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a534d696-3f01-4e1b-9aef-c2bfa1a752c4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287833d3-44ee-4f7b-9c51-a0253ee14504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b55c7eb-82d5-4363-a2d5-eb439b55f453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407a23ae-fc10-4406-83a2-db97b776a020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30f28ebc-5f9e-4fba-88dd-074aa8c110a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9677426f-d0ae-4be8-a9af-64b72010958c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66276abf-2cb2-4b3d-9045-20704646b90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a1fc02-a1fe-4527-8f32-e415a6ecc687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b55cb1c-8e99-495d-9c1d-6635e157ede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db82de09-2a24-4769-b5f8-f7f7cab0354b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ba6e19-f394-43cb-abb4-79978f5ddf99",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492baee4-5624-4337-91c8-363d7544ddea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6106b3f3-e50f-485b-8860-5469afe30698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd16b220-dd1a-428c-944f-0266fb154809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9af9d729-e033-4cf6-a9da-49c7daaead1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194bf353-096c-4bd0-a8d5-7a0435953a21",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7585c986-d83e-4aa6-8bc7-76663cc99215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d9d215-7e1b-4715-b44b-a66ce0d08ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c64d009-0f5f-48a9-9b8a-d6411d1f93c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5c5239-84c2-4805-be90-635676598f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998745f1-3b82-4859-a92a-98b0ec856e16",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9e2393-3443-4bcb-b926-68fe99500c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d073c4-97ed-4855-baca-e1c48e92c0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c31be67-786a-4637-b460-1b369f46e8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "20067891-ec6c-45e3-8f81-70ec6250d961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e576b5b-afc1-4f2b-94d5-5b38f7ff6421",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec2951c-9f1a-4a2e-ae00-ea00497b8037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0697dde6-fc51-4d72-ac90-03e2045e85ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e08ccc3-936c-4b32-b2ce-908b59a2d3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7bd90f-022d-42cd-9aad-110d39eb691a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3baa87-37cb-403e-845c-ddf253a1a321",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efff2dd-cf9e-4456-a4f0-b0d7d5f29d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960aa687-e9fc-4817-9c8b-a6105be04469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cfdefe-5dbb-4d23-b066-3dc570f1bdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ceb5f2c-bb30-4b0f-b11b-463a8341d4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354ecc6e-2bfe-4411-9b9e-d5d256c75fae",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72216af-6681-48f9-8a4f-3104d80d5326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09838a39-d4f4-4a87-a263-05d97b54c486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a717fb-1d94-4be6-ba69-abb69b4021cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "462c0660-f403-41e5-9ba0-50d930dd17e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f51fa0-9ff8-4424-ac5e-0ceb53ad46ad",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda47315-8369-4601-8004-6ebbaf013162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590ac9eb-649c-4a9a-aad8-694185013107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3463b28-e658-4436-8279-5f03d6e75a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12116bb-b0ef-4ada-bf96-ebaf209e491b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85371a26-9655-475a-8619-9732986a0c3a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33140ed-0234-4e08-bf28-1a6edd34b8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505fbed6-ef4b-41c6-bd22-47d4898665a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263c3c01-4f9d-415b-9730-b725870627d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a654877-7064-42d0-ad0c-21d709dca521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e5d107-5b17-490f-8853-74a5b4134df6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c640cd8-81f9-47a1-b994-9c345633c209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed37f300-3cba-42f2-be8b-ad30d5e0e74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42335553-826c-4e8b-9757-274bf925fd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d365bf6-859b-4fea-a67d-6c8cac55d7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7e513b-13a5-492e-be18-a6945fba3e8d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111ce35f-f4d6-40af-ab70-a9a826caae84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0b959e-a239-4292-b120-6e3c5ada5135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957dd175-b494-417c-804b-f69b34042c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "743d8f05-849b-4a1d-8641-5a013a8520ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ef11e4-1303-4df4-aa26-c16e9c3c2fc8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89910d16-8560-45ff-9b82-7cbffaff5ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a3b8cb-8671-4378-9080-f24349752ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8990eb20-1593-4c79-b799-5e36b3869290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44de4b4-b605-4841-9249-baeab8528eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6406c1a3-229f-4dd7-a5ce-25599a4d2cda",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7ce4f8-a538-4649-8e48-53f22ed293db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae92fef-acb7-4e47-b287-3a37b7343625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f57c97-bace-4873-addb-6257bcd1a12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0399af09-ac92-4baf-ae82-e41f0ed5a5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70b7ebc-6560-4499-8a01-9165d8858002",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9dbc40-4083-417d-b378-2e9278b0fa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7039157c-5a81-460d-931d-4efd3fe75914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40249605-a45f-4b0b-9108-de28d7fa88f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a31d63d-a2fa-45a6-bf62-c20097052704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2124a01-6560-410a-83fb-cb0683a37b3a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c37a51f-247b-482b-b45a-ba65e3aa501e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7716f17f-9c4c-4ea6-8276-12d342d36cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e19f28-812a-4755-b0ca-e456af95406e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2901d401-4a9c-4ae4-b4ab-db7bdf6ca429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697c4b25-a667-4d7d-b193-f0f88108d752",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb44a7e-8442-423d-993a-e98621a4608a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc425ebe-3b29-42fa-98d7-06c30dfbcc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a262ce-576b-4cab-aaba-02946133187f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d54717-7508-406e-aa27-25fb6bcfe2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef70d07-82e0-4f94-a55e-03dd739171f4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482759e5-2298-4bd5-a750-3b03ae7e21b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f738cd62-c5b4-4cd9-a4a3-1e2e5e42d528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0676fae8-c3cc-4453-bafe-642151c642ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8f1358-f466-4af0-9076-93fd01d2f5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bdfd2c-d431-4b18-8053-56652dd25d5d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17947eeb-dca2-46ea-936c-53472c30ea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb56a304-e657-43a8-9b53-ee4dabc5aeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a05d76-96f8-44d6-970a-be012f1f1521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50c67bff-1153-4b92-bb14-d3753a5b8f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724b8d15-03d2-4f52-8c75-ca09d15ba4b3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b84b5c-a7e5-4410-a921-78875bf35dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6315082f-dac0-4858-adce-83cd63e5c2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2ab09c-9ee0-4f31-88cc-e8602dce6205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8289c5f4-b0fd-4fb5-8c27-b537a693d059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bf8434-0d7c-4895-89fc-91996e363422",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d8e480-8b80-4c89-9d73-442c52f8f570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72baaf9d-57ac-4688-a7e8-7a83dfbde03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d843a9-e16a-459c-a9c5-0afef458e412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94f9b7f-4941-4bc7-8e0c-5b3dea2ad933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092c79c5-908e-4fcd-8960-e3899f9ae1f1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f52d429-8254-409c-ba0a-82e8ee1fe775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a8b876-31ae-4259-ab68-19a355b2610d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dbbefd-fc93-4968-b8fe-0093d581120b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e5a2c9-1a76-4718-a300-3bb2b68d55d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2882e5-5cb6-4b70-960b-e3c48cce8295",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a0489f-3878-4013-8ada-cdcb881502f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dbeea7-fe1a-4f55-9341-797b30f04a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be79a5ab-3f07-40a1-8d60-5b14c99fc2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be1c02a9-0c5e-4cc3-891f-2eea06c6ae61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7324ab-c68f-4039-b424-e9ba4de15d28",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5fd73a-9d64-49e8-a437-d6b70ba28c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea534e4b-7427-45e7-a805-ab0d3d5c2c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b04228f-8447-455f-8591-947ffc969814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3bcdeb-a850-469f-b3fd-ea0ecec4ceaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6146940-ac9c-4931-b69d-2b229fdc341b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dc7011-e8d0-4bee-9cf0-c5dd213d04cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac76796-e469-47b7-8904-367fee0de494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2398387-b4eb-4f02-aaae-fafe9ca2ce4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a63e0742-96c4-4b73-9ba0-98c5226dffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd5bff1-20cc-4c55-9e13-6710f53bda81",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbefcaf-e49a-4310-ae55-8c49113f9991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41dd813-afff-4514-ad75-7736aa292c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b9f842-e434-4f27-a037-7f56e42ea4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37808fd5-4ea6-4053-b820-25561884097a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c9153e-a603-4e84-a5bd-b46ced0b4be8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aacd16-efff-42fe-a57c-3ef365e31dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f10236b-cc8c-44e0-8b08-ae70da236b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6010d37e-fefd-4be5-abfb-7acf55e6d6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d21358fd-0625-4d1c-9c84-9c0bc0b61266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31073323-6922-452a-b8a1-8f313709a5fc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fbc00d-3df9-4345-b170-8e2240cd8702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54d654d-7d78-4dd3-a757-0d6f1c791fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756af2a0-6c11-44ec-a978-a9f16ac92c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e96ec3-050a-4c41-accb-92860a1d2a1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0659a9d-4034-425f-b965-e49a6d67bb65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85116b8b-79bb-4420-823d-f6dae9594277",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eab453-f612-425a-b26f-99d97d354ff8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1ad0cf-b6b2-4088-8adc-c7f839b94141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ab1514-65d0-438f-a4b4-49e00c9b377d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15495e30-6c7b-4a19-9cf6-de6d7a342c92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef254130-fccd-4215-90d5-4d1ed23bee92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e5e08b0-0b6e-4df3-9eab-f857275a94f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b07cfff-aac2-48a1-8c40-ec14dd3fab10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaf60826-c1d1-4cd1-b178-efa61309b16c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8cf4a2b-c838-4447-8afb-74cc08e90e1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67762ccb-6e9d-442b-bb9c-d7ba7d992151"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a62f006-4a4a-44f2-9111-54fbea60215f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad242774-d3df-4c1c-8d2e-a1e5efcaa2e5"
            }
          }
        ]
      },
      {
        "id": "a9fb1fc5-39cc-466c-8bd2-559be35fc9fd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e232c20d-27ba-4215-9acc-6299e50ddf51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0759ef14-2fdd-4eb1-a6ba-8097fee0ff6b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10e7c064-4f33-4255-91b3-1a3f03bdd0b4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4745a8b7-ee82-460b-85db-a1de3a53cea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4a8387-34b2-48a2-ba21-feea627af809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b66600-708a-47a5-b658-8b6152d30aa0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2616d5-6fc4-4339-8701-e589fe28dc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0864f7ad-dc89-41bb-8fa8-ec171e0458b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829cfc48-b4d1-43ba-8176-9602d7412cbd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6698d7e8-6daf-4567-89d2-cfd8328c2141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f2a1c4-c9fc-4875-bf63-372b9a16c2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09054457-a182-4115-a24c-3350daf53dc1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725bb949-6b53-4b7a-a777-20a2ba544e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d956e0fe-f673-4790-b91b-4d76e8dff6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545603f0-e7cc-4787-ae0a-77a77782d6f7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e40871-64e6-4ece-9a23-ff53095ae2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44185a1-6f4c-4312-bca8-a9b31b4f8958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0526c197-48b0-4274-a3fa-5b5c4814d45b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a597c0-5f44-4dd6-a9a0-79ce214ff4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1722ead-af97-4236-89d1-5fb35d69ac96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6930afe-de12-4160-8e47-106a7d75a2b6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d892d862-7b7e-404f-911b-2b3f4c2b0295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589f5fea-6326-4ec7-a97b-1f6d55e022da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03d6e92-39f4-4761-9c0f-cf876f9c1e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ce4901-b01a-487a-ba60-967de0a8bd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d12f29-e4e1-4412-bd6c-d5254b8cc281",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e08641-6a38-45ae-a84b-1d9b0444412e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78201203-877e-4506-9cf5-2f02a85ed991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41f888a-c61b-4215-93bb-0f895174b82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe61531a-2959-48da-9a75-d106ac86c44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7a0da3-e2cf-4a62-9d58-8e251ffde50f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4fb7db-0018-4d60-953a-8b4092eab92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1293ce7-4ef9-4c82-8717-f14862e935f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e878a9-aa73-40f5-a9c0-c1085d785cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9c992f-a5f6-4398-a52e-0f095f7ceeab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6af9a5-94b8-429d-bb49-24948ef85fff",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d14cc-737d-4788-84b9-8fffefdeb79e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e72deec8-1c7d-4122-9b56-cbd1571e76ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecf4b50-597d-446a-abc3-5fb62be545e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1ca755-9acf-493f-8ca9-b5ddfde282e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d4455f-742a-4bd2-8a90-c267be880e44",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0891d1e8-8794-4bba-99d1-ddcdfaf44df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcde1c5-3f13-42c1-a668-f63ba6b056cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431aeabb-11db-434b-baa2-80e4b6fbc25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc05a17b-f60c-4d84-a470-659a8b898da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b3663d-6a50-4706-9f26-e26fb8109243",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608ed867-a478-4c75-a2a6-f78bd900660a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1319596-3083-4884-ae6b-c069a04c688b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d154649a-e636-45e2-a813-b844786844cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196ba90a-e920-41d9-a9b7-e5afc6f7e3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e729e82b-7b16-4cb2-b5fe-d6a3ed7f6fc7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6578ed-3f37-4ed9-973c-5a433c68a40e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972057d1-b903-4323-bce1-5237dbcd29b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653ee4f9-f1cc-471a-a6e8-851fe1fc7863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de3b5c0-b144-451c-add4-37bb36996e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9e8d19-5671-4ed0-a972-c9cbf2f93dd9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f106d2a-7d05-4395-9731-d9fddfe8085b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "111d6994-a1d8-431f-acfa-b40aa80a0bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bde0f6-14dc-43da-ab3c-a25e0742b074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee29737-fee9-4f14-8bb7-0ad5ba241a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291dd216-49f0-4f89-98f9-ca78275a018b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89958059-5e9b-4c8e-be07-98d1ba32999d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f856da74-c952-4688-a35b-4bd1bf581b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba9c9b7-d750-4967-9a1c-9539ea1646cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6640df-1011-418f-8e31-7c7c76df599b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748bd388-00a1-4201-b742-8ec516799831",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b39a22-97dc-407e-98a9-f94f42eed175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c771ed-062d-4e94-9e50-2b07d460be20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc2c068-ebcc-42f2-bddb-651d01fa8a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f4066b-a331-4bb0-a426-633a88794ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89199cfb-fff9-408d-9202-854434c19e5f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850b02b8-8553-4b69-bbab-465c6657c733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9b3819-c521-4380-a17b-cd8be43da6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d6bf6d-35d3-4faf-a19b-9ea147ec242b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764b28f6-26e5-4e64-a854-364bf5270260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d60d852-ad65-4a5e-8670-da1c1a573230",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930a9ab9-d5e5-4417-93b5-c70ef786e710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b02f4e-47a8-4002-bad5-feeee4c4db3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b648b42-a0e4-4d2d-8184-f3c822505527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c79426-b7ff-4130-ae5d-5fee2657382d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919fad5c-cd52-4ba9-9cc6-3e5a0a626571",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005d8afa-0422-460e-a5a9-c13620a80477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9807f63-fe43-4dd4-8ef6-54bb381eb681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772b6bf2-a9b4-448e-a346-9fa62e7a5d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77fdce2-2095-4a9b-905d-c2ba5b23bdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f637d1-43e0-4eb7-910a-c410fef57b58",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c431e73e-d3db-4fc0-9458-63ca9f72c52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bd9b28-f41a-43ad-8b77-38aada4411d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e50ef0-b0b8-455f-bb50-a99f1e915e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96588290-2113-49be-a6a4-6d38012c420a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130cf0e8-266b-408f-aca1-e4a17a07b850",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7fe907-e5af-4a05-ac0a-e2c0c678bdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69627855-89ed-43b5-9632-3471a5dd8918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aff463-0c4d-40eb-8ae0-c74e0af8bf6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6694ef3e-4aea-43d0-ae35-ee5a0320d5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ae86dd-b1e1-4794-b89c-3849714f9f39",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9a5544-224d-41a8-ae1c-481914ec0ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbc2ac6-5d94-4c79-9afa-3c695e6722d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb7c311-f258-40e0-add9-8e69cb513c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d689ae-6b54-404a-95ed-d6f7f78e5d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf63324-f502-4e4c-a7f9-7a19ebc38211",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3eb726-2ef5-4cd1-b6bf-3385380f181d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f908e377-f2f9-4e60-a5bc-5c9cbf867934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178690b4-0520-4f4b-ad6a-edfd9217dd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8113ee26-9d99-4150-9a0a-dca001009d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0efcf95-1593-459b-a85e-439f13658e75",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9b8f8b-7381-47fe-99c2-25a2cd6e2a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82432529-f68a-4b42-91bc-7deb627e58ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4228b6df-9033-4ce3-b6c8-aa2dd3bf4421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0c0d41-03aa-48b5-9910-c4ea8844a87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21a0ae8-f46a-4059-a42d-bb36b83109b2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725ffcdd-e705-4121-b128-a81fa478ec7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4cd7286-43ef-4d38-93b8-eebc10bf94fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c96871-8fc4-4f79-a726-4b6ca527b2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4960dc51-1f6d-4fbc-af2b-e6b47285ad84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5635cb-0253-4528-88ef-f3274a1c9ac9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f81d829-9b55-40ae-bc2b-6d148e4377e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241e100e-5a5a-409a-97cc-4f0ae2c0e1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba213165-3645-46c2-bd7e-800b3126a7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7617ffdb-2382-44ce-8846-33d7b4af3ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98069255-419b-4099-9fa3-a49f81b39e9d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb85d8a2-0d5a-4c26-b48b-2e7bbce9a50e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b03e869-ddc2-45b6-abb1-54a6056d714a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e96ed7-93d1-4488-a14b-7be5c9f5f9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4107333-86ab-44b5-b280-babe6fc5af0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71f812c-c859-4670-a747-98a6fd375e6f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cf63f4-62a3-4131-8ae1-79db3e27e79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a197245-d70a-494f-9ca3-95816d17ca71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19736350-99b7-4df1-b2fd-5eac1f917811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76263e37-2e1c-40a0-bd52-8c7836771e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d205d62b-e30b-4fb9-a728-ed43e2802d67",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fb9fd2-f214-48a0-aaf1-5dbda0eb69c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf458e6-3ea7-4808-8687-873489a7d9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d4aa45-f2d4-48e4-a80d-efe4fcae2bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861f35f5-7cca-4e77-b647-6a1342c5745b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532c27d0-baca-4a6a-acf3-a55c9b37403f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922154af-33de-4551-9d3b-e1852f26661a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "131d2d7c-2270-4241-bae5-e00d23c6cf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce3d723-0ae5-4fae-9c49-5cbf696bdff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cee9e11-df17-41e4-8d74-a7ddc9f95ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fe74e4-8ea7-4a69-b74e-97f44d15273a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ddad5d-50b9-4a86-b484-54cd2b91424c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb81035-c08e-4b71-982f-226919821070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f6e1d2-987a-44c4-8869-2a05f952273d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ab555e-a990-4742-b7b8-504a6fdb04c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcdde2f-1e06-4009-be4a-282fac73e700",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e76336-eda9-4ac9-b49d-11c48ba52306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90fe7f23-a138-4074-bf09-41e0b14f2be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacf1210-d662-426d-84d4-1a55a0788ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef56deea-f939-4326-ad04-f817a3cab688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f530dd-cf77-4e6e-a800-f6f419feee47",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0720aa5-51a1-4359-8b05-b2b3d34f7583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8075023d-b85c-477f-a978-9c00fab6efee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb33100-4375-4add-ba39-c29a3c406f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84836b7-3981-4cf3-b589-0769508e4b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f032d5-227f-4a61-8fde-b4bd1c15ed89",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c1360a-7993-4012-8333-745078611922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a74946-500a-4aa2-9862-080251561231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50693cb-e881-4fc9-95ba-eeacb8ea525e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e005cc-b19c-4c4c-83a9-7efc612f4440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9c5fc7-fc6a-45a2-ab78-ddd078df7631",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a9219d-ad22-4325-8183-141bac822b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f39ca92-b440-4294-9783-201c6d5525e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7e59fe-c61d-4444-abac-4396f19169ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4887455-7e3c-4056-a4b3-6fa0f7712c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328a728b-5ced-4078-bc47-81270cbaa885",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2ac89b-6e59-4046-a183-e6afb5fa95db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3a1b0b-9fbd-463b-8bc7-dc1e9d66aa61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da7ff50-0940-47a6-9266-5782698a1004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f06ca3-fa8b-43f2-b8b9-8301bc2e9e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c00985-c0b8-486a-9181-e0f19ee702f2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f8c9d5-9753-4982-bc94-174e2650d649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2190a6-3f45-43d8-9e6b-4587b8cd380f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f516c3f-1e82-4fa1-8fe4-6acb9be54727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2679b713-78bd-44bb-9a08-d5d6f3b06d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31464006-8922-4610-8ae4-209b9f31ced0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf81f92-8234-4f7a-b1d9-fa6717b26fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91441aff-90bf-460c-bd33-debeaab1b9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62099b5-3ced-4696-91dc-4d86934d3027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7cb08e-231d-4190-bf3b-744a45ac62b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be65c34d-520c-4e31-9ec4-a5119d085980",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be6e55e-8f05-45de-b6fb-f157b0a399b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71d9815-7ec9-4eea-87b6-e23df1ab6a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e69d12-54ad-46f7-a99e-0bb1cd50077a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98567e96-a852-43b7-8737-fcd645ae0855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4fcb10-4df9-4f06-8c8b-dd42916ad48d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d705d89a-a151-4d09-b06b-6bc6e97052a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b00956-192a-4fc4-9418-3f5363b030eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56163a4-e0f8-4589-ac0f-4367adb9519f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dc407d-8789-437a-b3b9-60f427f5b232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336fe5a2-f2f7-4dd4-927f-f0975577924d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af697b2d-ecd4-464a-813d-42dd87b34815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b418d5-cb29-4248-b1e2-eb2788e42faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec7edfd-4ada-4f5f-bbff-73852567b4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d43133-2374-4b73-8524-2e2e3efc854f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2005d2-c0d8-46da-9da3-490d57ab14b9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1693e0-6405-4533-9def-d6cbed68483c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd3e5f9-635f-432e-86b7-29080acd740c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e805fae9-b7da-46b2-921f-24987d331be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9d1284-1fff-4249-a9c3-59e58f3e726e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a0948e-5a93-4266-ac25-de874b93ac8c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1adcb8-b39a-4563-b552-4313a36afc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d968eca9-5af4-45bc-8cb1-41960156e242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eb9fdd-9f49-41b9-82bf-19b41e2fa186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0561c1-d430-4728-9f0c-ee4ee6536c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5138ea-3366-452e-b012-21c00a3bf921",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8635c7ac-1a45-4196-b8d3-be34ffeae08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ca8b16-e6e2-4ce8-afb8-7b91c5ae64a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2497be59-53be-4f2e-a2d2-cc478bac57ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420e0a44-e0dc-4bb4-8cb9-8583bd711b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e438c0c-9c35-4cf7-9449-80d963127598",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd34184-99dc-425f-a81c-b8ff0a125a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70012e40-b5af-4838-932f-335839a919b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbf9a4d-3911-43b7-8873-19319e06a71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e481a5f8-6d26-46b5-9eb5-fba01438bd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4cadb8-2913-488d-b3e4-4c6f0be37f48",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd57222-7e0c-4f77-9977-13045e4f285e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f922a35a-eac2-4df6-b1de-f451010bf096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c82f4eb-b6e8-4722-ad49-ca729da4b85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c700e0e6-fcab-4eaa-901a-5a3f7050663b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a32783-8ff1-4425-993c-1b9e2255a3bf",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ce38d9-8616-432b-886b-40103f3cdea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a9518b-bdf1-4171-b74d-417c9f29b924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2bf242-1f7d-4fc2-bf4e-b2b637a6e23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144fe35c-4af1-4aa3-851a-be5924a27cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddd1d1a-db53-4f51-84c5-37aa56ac7c46",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a9b72e-6af5-42d2-8969-9a90bdc42c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3291ef96-95cd-4769-afd9-d42b86a7a1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949dc86e-71fc-4484-b3f0-574d1c23a9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1576e6e-d38f-46ba-ab8c-18eaaba4b8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53e19ec-21a3-4c42-ac58-50e808cd081c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad9c15c-b17d-42f1-ab89-1de33a41c189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d5e67f-f16a-414c-923b-99985c823a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ccf8fa-7c52-4dd8-a21d-32ca210211aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1346f7-a423-4675-81d9-73691c92d718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcfdb94-51f4-4e60-9ac6-ea89cbbbb712",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db8a095-576b-4049-8f0a-e74a00cc6358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d3ab2a-e089-40ea-9f72-578c122bcd86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10fcbaf-191b-4217-ab22-68e44307fa54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5105418-57ae-4a99-b4bf-653c148521b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8cda50-05b7-4f57-8e03-5f09d0c844ed",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5e9052-51e4-4558-830c-c18c12518e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b32cf08-07ec-4e66-a033-ef4c455164a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacff174-7ebe-4be4-a6ea-d8a95b9978d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeb0ff0-821e-483b-b9e3-17ce1d8bf8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c16f46-203b-45de-8372-e2997f735214",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd258ce-6877-4745-a780-f1924f55d813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84226db-fb2c-4f00-8233-40beed97d6a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b2a809-9a1e-4f06-ae26-59d7554d3e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c0e6b7-df16-4494-9f5b-2977b9e37ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6bcb1d-4ee9-4c88-b994-f10b55eeeb4f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb435d4-7f07-45d7-90a7-b93463e3d935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ec590f-656a-4533-b383-fdb25a82f9a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af47334b-fb68-490e-98a4-f38ed61602f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602a60a1-e6cc-4dd6-95fe-780c74001417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5882925-43ae-4db4-b64e-52d119bd5999",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2fab1d-58c8-445a-a6fa-782a6c58004a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09d50cc-d993-4be3-96ee-55a0bffc82c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc6bd34-20a6-49af-92d5-c1584999ce94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0229b5f7-da26-40d8-a630-e75cbfc621c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c862f28-284a-4b99-a05c-224a6bb2d065",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224f346a-1b50-426b-a90e-d45d4464f706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3796792-214d-4b41-9d13-d291ab402b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f0d7c9-3375-4557-8d31-770cb4392402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd61aad4-6924-48b2-b265-daaa52a83e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396d1ec7-2dc2-4cc8-ae33-8b36e81a770f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d1938d-60ca-4b34-a207-345af86d36f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b68f04-7981-464b-87b7-920de4218d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9da71c-310c-476f-be77-c10ab13337c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8143dd1a-624e-4852-aa4e-889e94944720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e98f07-e5c5-4d71-963f-28b0fa62393f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbfc1ce-849c-42d7-a955-c0d3ef63fe63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44c69da-3018-4775-96e7-11bd89671d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bcc599-f201-4402-a3b0-67d0bc779103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9b527e-063c-4195-b4d9-d0fa416913fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd52a6-be14-42f0-90f3-67f304a2c60c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764ebe5d-32d4-4065-87c2-7badeba3c4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de67de13-6427-43a8-a048-f0c044f079d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905d947c-4450-47fa-a2f9-24681b982828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dd97eb-69e5-41cc-82d7-5170105d1284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce5300d-f11e-4ad2-9e94-425b4e845711",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80285c8-79da-4211-9c31-1a2db254429c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aaf4951-faeb-4327-8501-1a6394135e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10832f4-cf25-4a1b-be3f-b62bb7b0c8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ee88b4-83d7-4cd6-871c-ab38bd39d67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff5a346-42b5-4e41-867a-c5bbcf5b04da",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb077811-3a5b-487c-b237-58ae2c39a932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aca28aa-802a-4d39-b220-95028f7dc2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6363b10-46c9-4f72-a3e8-be28e7c24452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af132ec9-a559-404e-bfe8-daeaca770e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473b365b-ec86-485e-a8e9-1652c3140e60",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bce9ab-e5f8-427c-bdee-8c1edea4d13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60113213-5e49-4fac-a304-9438065bcc0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb837d2-1b8e-417d-b224-0c95f208c4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af795d9-7561-4047-af9b-478308760d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03744009-0508-47ba-8f4e-76d71de4e1f0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a86756f-4fbe-48fe-ac63-3376585dc7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75215d44-b12f-404f-94f9-9eb7e2b86769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff0f3a4-2664-4b25-9932-f2e3c0288886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647ebf41-2ebc-46b7-8884-a9b74834e1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cbd790-7857-41bb-81c5-8b67d07ca294",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b79ea7a-f064-4abe-b390-bc723db9c706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241390f7-8b12-4380-9c1e-93c565bc887f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eab4674-60fc-4c94-adb6-fccfa053eb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3b9cff-c76f-4957-974d-2767d5e81bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186098a0-54c3-44a9-8278-a5b9d84d0112",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ae5847-eee9-4957-8897-0e45f5d272d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86cbe43c-c0c4-4cc7-822e-9c67fc3cde18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd47be5d-ea6f-4163-bf14-8efa3976f0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddee1aa-071c-421b-afb9-c3dbf661c69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06425f6-01f0-46ea-a4a8-6c765cb4f77d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57c759f-b2af-45f5-afc1-6d90b352ce20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f2a229-1015-40ec-9ff3-817d80fb7fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea957bb-a4ec-4af7-88c8-f4b32b50514e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee93bcb-2a1e-410b-a245-930ccae4fddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f56936-c079-4e63-8a5c-0302188b64eb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d825ec99-8dfb-4db5-8bba-994691ffde46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efdeb9c9-4839-4c45-8bb5-e128e5ca23ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dd106c-a1f9-485d-9bdc-1f1804a870c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28eb2216-e736-4401-9341-441df24ef710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e20ff9-9c30-44b6-962a-eb160f6df776",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fe4078-7a85-4f55-858b-9968a402902a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa4a002-c60d-4873-af63-350af1a4bee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f4f53a-25ab-4a03-88a2-c38612088b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbdcbdc-68c5-45b8-a5a9-bcdf748cd01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f341e05-70c1-4f7a-9df7-da381adea97c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e981219-1f60-458f-bd3a-2ab169fc392d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ac78d5-accc-4b4b-931e-7f764ec68309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233a381d-58d1-4a80-bb94-be829e799bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfbc7d0-9844-4def-b000-cb1ebfea88b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c6f6e4-8664-455a-b654-fdf7dd624ee6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ce8222-116f-4d4e-bd17-192b3522b4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ab3dd8-b45f-4ddd-b864-7520e5a09944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792c8fb5-80ef-4a0c-8333-845361e2b677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b99511-ee30-4a1a-8911-1c5910221435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d229fb8-74a9-4e10-a98d-beca358db186",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd5d707-32e8-4338-82c0-812664a46f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2dbd759-6e37-40f7-b35c-f9d58d3e660f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e99850-22e0-4220-909d-ea492780b919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c92fe6-76e4-4b44-b488-119ec869fe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb18312-cdc3-4628-87f3-9004111b4d45",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9044d728-425d-4ca5-864b-8d2651049a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d62a39-9e6c-40c8-9712-ed741af08d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2c8627-ac1f-43a7-967a-05850db68cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c071b8c-bfda-4611-9e96-a65478bee22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d70e99e-d722-4fc0-b575-2764e3ef4226",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3789e7-d765-4074-ae72-ad5100f8d05b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b382252-51d7-41dc-a3bb-f268894a2890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c64f02-0097-4de5-a206-fc776a659c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb39f46-b952-4081-87f5-31f6e89cc497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61324cf6-b288-4771-98cb-bea99133a1b3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dbe7c3-0f7b-4a7a-897b-775b31d8e120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b0101bc-e2cb-432d-9bc2-9d964ef2dcd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8722e646-d901-40bd-9f78-9adb8bf6ae4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08e583b-26ef-490a-83f0-90a4c193a026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cda75c-1d32-4b00-ad62-b164e018cb01",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b3299a-61d4-4501-9e00-a841eee4e1e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac3eed6-eae1-4c7f-9314-7cc5b45e338e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db83983-d4ed-4038-8415-faf6c469db29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4984c4-d009-4ecf-aec1-70941099ecfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95bec34-bb13-4716-874d-2b7398562d86",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e63ab3-6aed-4b98-bea6-97695064bc55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce10b0d-2a25-453a-948c-c0bc67c51f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69290243-8149-4bf4-bde0-8c59b2ea9594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3607c2a0-dc67-477b-843d-ffb8b6d16398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da13a9b7-d672-4611-a751-f08986754b59",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7e2cb7-e60b-44af-962a-c2ec361a438f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e396d5ec-932a-482b-b847-b20af982ff9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4660b1-6f7c-4bc7-a9b4-970fb2d0f8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be85d375-e0a6-4257-8e85-fd3ed3b17d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08de2797-9d3e-4c9c-b92e-a7b7ab2978aa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba66878-9efc-4825-b70a-175036b93680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1caa8ceb-e98e-489c-85be-b756886ce304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8807538-b154-40d8-9470-56f635b67e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4212c69-04d9-4594-a947-28b090d8d87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e62e05-fa5f-4310-8d2a-1a4c247d44c5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73c6b7c-ddb2-4f1d-ad4d-60430adc5488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47514ec7-99ca-45fc-bfe3-f5cc518ac24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8196a90-e9d1-4dac-a32b-559a7f8514bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae21536-4398-4705-8d93-6b195d7afa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41bd835-8af7-49f7-acde-5f7fe65be3e5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b0595c-c7a5-4105-9393-e065860856d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86206738-e1e3-4278-b93f-10c4a8d59c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2b9918-ded8-4a50-9e09-72ae13e10ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a12912d-87bd-4c0d-90a0-ba9a7ca477dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a32a91-dff9-4439-a774-9a91ce2abbd6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5df2dd-902c-4c62-9a7d-b891434cff09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3336635-e786-4e3a-9907-da24bae937e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141d177a-5c9b-4d35-a192-dda898868c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637f84db-06d8-4236-8cb0-2247464e2c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7f3ffc-9a62-432f-897d-8d32b471b302",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930b2394-896c-49ed-a932-812e08e0c116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9194c42f-2d0e-4ba7-a741-bbbd58447bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabe63c8-0a29-4eff-ac83-2e085722df9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a538a5-9a8b-458c-9c02-758625af164c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33abd5ba-1371-4956-8ebd-d3a1ab7b1af1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bab9ea-b833-4abe-8356-8d0d9c54b8b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e0554c-eeb6-4609-abf0-5f5a10cc922a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7f6c43-6885-485c-868a-abfeb7035f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37405e39-38bb-43a3-be34-ed8ec23a01ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25635059-96ee-4bf0-b815-f19d0c748cbe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5862e9ef-0055-4c68-9a6f-529be3277501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7609918-ad73-4476-9c54-c889f8072b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff75152-9094-4ed5-b04c-ef4708e28795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8305131b-e4f0-4b40-97a5-592c3b9324bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaa6f41-e092-4e5b-a57a-8d5be2571d85",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731aad91-7c01-4ae2-9d3c-ce47c963b673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878d3a4d-82d8-4270-943f-8d85849321fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644f76f3-2aeb-4794-a354-ae1a845a60fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63b4858-a7d5-4072-9324-554eda1cfb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7eeeb4-ce85-4c36-a11e-632330f307c3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a061a3d-13ac-42d2-8797-6acdc6b1cdff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d8eb592-87fb-41de-851f-122377e07f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f99fce9-78d2-42b4-9750-114219f482b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67017054-d979-4563-ad8f-1eb6c6ddb961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ccae05-2a66-4eb8-ad3c-169f97f4c148",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ba24ef-408b-4f7f-abdd-c954ae906c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ae5fa1-3fcf-4f72-ad52-71882a23386e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f8f6e9-c09d-4507-8ee3-ac99a93b3dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5de53a-bad8-4b31-b975-4a6aa1087ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee084249-471a-494f-9dc7-dfa07f6b8c14",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdea55a1-5443-4033-9a03-e3f995110edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "359365da-7ff7-45d7-90fa-6cb7c7fe1283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cb6226-0511-462d-b65a-a8bcceea64af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9938dae6-f8aa-4a86-949f-0da5e624111d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7269b96-7820-43f9-ac32-c8e4f88926da",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3a89a9-688c-44ba-9ef1-5f836699768e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4389843b-69c7-4f26-9c96-4f5b04f1f1e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2f9406-64a7-4bb3-9b64-d9863dbbbde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1dafdb-00bc-4a3d-b050-fac4df89d733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a3f0be-aa07-4454-8239-ef78f1706c37",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afe80fb-a5c7-47a1-8cf2-a90b532abfb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4795e224-285c-4679-9791-a65d5155ac53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a858ab-3726-4232-86c7-c6a3b81f25be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feeaaa8a-80dc-4c13-979a-4063eddb377a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17329816-7956-49fd-a72d-7ccbb034b7ea",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a5ed21-8182-4559-8161-65f94ff4b465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3c4362-c4d7-4bef-aa66-e946891c79b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e36798-f69a-457d-86c6-5da51e647348",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a16ed0-945d-4ce0-8253-5e2498d0b744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dd62fd-199f-4646-8646-5738b0194bee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35d88d8-d4cc-4a68-a2d5-1a10cd9bdf8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c8f7cd-232a-47a1-8791-5001ca610209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef9c0d5-3573-4348-b4b6-d6ef9b332a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b7a7e6-19a1-4446-80c5-837abd4c701a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a76259-47b8-4c98-8afc-805fdf9624eb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26300da-a5b3-4af8-910c-22971ded50db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc796e7-ae4c-4484-90dc-95d4f1f3b6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac2e8e1-ba23-4262-8111-36eda3ba8809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d9acb6-d144-41bd-bb93-9c7e36fa4dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e212d3d-5293-424d-b081-7dc07ff64bec",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14fc8d1-7e3f-4619-8f0e-ae485d4faaf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff315ccc-f14a-4002-a3ed-a5ebfb3fa7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dadab82-03ba-4330-a156-af8173698682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbc0ffc-c13c-4979-87c8-c6166bce1f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e51492c-c35f-4d28-9e1d-f203989c5426",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6983f501-df25-434e-acd1-e6cc30032c13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20afebe9-564f-48ff-a111-07ce372cb6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e321d9-24b2-4633-9114-1a6da4aff7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6308930-3ad3-467b-b0dd-86d891c141ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09fe6d6-ec41-4102-9239-47f57d02eb64",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2ed732-4fd9-4558-9b2f-d3891620f61d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e62803-a749-4b04-bc14-82c8fa6f1340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d48031-81e7-441f-8f49-9b3bbb03e336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcce6c18-1025-432b-8cf1-b85018bf9716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e80b6a-d06f-464a-be0a-5ee36350d4cf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9cebc7-882b-4e05-acf6-2ce1714e0fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09ea20e5-af30-493b-88c0-afacf8f19428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e1e415-e425-4bbc-b316-b195f1cf3bbc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32214a4-c6c0-42ba-867a-ecfc3365d555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5af141-00ed-404e-bdf2-943062108a7e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9262f6fd-ce69-481f-847b-e2de8f52faf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af0c0c23-6f62-4740-b302-582f7554bd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33ca2a2-87bd-4c4a-a4ea-9e343aff473d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ef9f54-c765-4350-8942-874e8212db7a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2dd5063-2eaa-4132-9cdb-5d56fda7f9e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e6a99e4-22e4-4a22-aa61-a58eb9680465"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c40b6791-df89-4505-90dd-3cf91937686c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad9ce003-b1ce-4cb2-8cdb-c325cb288c26"
                    }
                  }
                ]
              },
              {
                "id": "a9d4e9c6-52eb-4936-9798-7067ce0a1aae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dcc561d-5a5b-426f-a45d-1b35820a178a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f581c2-461f-4ac0-8546-f43c6c01619c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7488c23d-afa6-4f93-b57c-ad5945824d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e3384f-7001-4144-9d63-c813fb981b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e365abe-4cdb-45d0-9379-8de20010821e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "caca9cd2-56a9-4e89-98f1-9582c90b04b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffa12634-81ec-4c32-8353-1318befbd2a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8193d0fe-73a9-4850-818d-c6dc739d1890",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fff21e5-d2e3-4c82-a7b8-1bdb210611c9"
                    }
                  }
                ]
              },
              {
                "id": "25b2b687-c22f-4539-81a3-81fca82e935f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f210383d-8a57-4faa-a955-447f8c5810e5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e806381e-27b3-46e9-87e9-e205bc7764db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5153a4c6-42e1-4a5c-a140-4560be0efc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3975501c-6014-467d-a341-61ebd4d76bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4b62f5-a241-4392-b9aa-affc12ad6540"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b34917f4-aa42-4492-9e77-58224e6731a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c89abf9c-7af7-4063-8562-6e59dfaabc32",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f406f66-ab2d-4eed-8fe2-b0fb2812962c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9c88d81e-8c70-4e14-bb6f-ac86b548458d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c23e943-c558-4c2a-8834-09a7a63a2266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8133b884-6462-42b6-a638-a23b085dfb2c"
                    }
                  }
                ]
              },
              {
                "id": "5c2699ef-8519-4be5-9e63-73577953289f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "633c324a-6cc3-4b28-90e1-87e425d659ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f182e64c-29b5-43a2-bfaf-554f91d681b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc2d97d2-102e-411a-8df3-9ae700169c01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0626bbd3-b915-453d-95d5-8ca605a9eb8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f2b64c9-4c72-47a3-8f8f-8d34d192a1b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7d9a0985-725d-4948-b428-15bdad0e02ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94d2d443-99a0-432b-b077-bf9a734709c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "421ee137-bdef-49d3-8455-61a23a3ccbc4"
            }
          }
        ]
      },
      {
        "id": "59e1c11b-8737-4ee9-a896-a082648739ad",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "429388bc-ccf5-4f8f-a26d-0d215327d2f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa670e5c-cd03-45c5-8b9d-fabccbbf1d3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db8be515-759f-4332-9c0e-bfa4d50d97fb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300fe9a2-ed62-42ff-b5f8-e3c20d2d55d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f6396577-bd0f-4fb7-9b14-81bfc25b854f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47907062-3723-44a4-a784-cf9f5c7a8393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa10d2c1-ecff-43da-a354-62d49cb539b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b77821c-47a6-4f1c-93b2-165c4f7741c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f7efe39-f980-400c-a8da-1e7d8eb01b6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f02831bd-a036-4f1b-b213-f9e3bf9d6c32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7842d53-57fb-41f6-8577-2d0812cd9f52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fa47ad6-537a-4157-bf2d-db39de9ba6a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9260f488-a7df-4007-98a3-d8b67327d8c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3a03e58-1e4b-477b-91a5-09aff653d8ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9586dcf9-6cdd-412f-b633-104d5ae434fe"
            }
          }
        ]
      },
      {
        "id": "5e8a92f3-5b76-4b69-be1e-859e74a1be72",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fe600972-1bf6-4176-a251-17185dd2b5d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6f2a67c-87c2-4fe3-9933-aa953b98c0d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "237ee998-ecd6-484d-b373-70b38fdf3c8f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e76885d-a0e8-460b-8284-bfaeb9fd141b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f597e0b5-fa19-4bf0-b804-163c1e85bcf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49742c4c-d6b8-4e76-a953-e535f23ac132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18184bc6-2fab-4cd2-bc9c-517cef1d010f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fee7b2f8-9978-493a-a738-cc4c55c12b56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "299e3a9c-0f81-444f-a141-38be0d5d2d83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16d425ba-d3c1-48cd-ad56-22fe6f9ba467",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8db991b-e57d-417c-b453-823dd2a297ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "183c48d5-efe8-477a-9add-f4a2422c5327",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "423f6749-22e9-4fe0-8fa7-f5769a7fcf69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23f6be86-7804-4dad-b5e3-a785adc3d46c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "482029ae-e71b-4678-9926-1dd7152ede56"
            }
          }
        ]
      },
      {
        "id": "78709a29-0cd8-41ed-a46c-254f50bff3af",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "15f28269-a2b5-461e-983c-a19c78262c2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8674cb7-755e-4d16-95cb-369d5f302c86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5d550c2-07d2-4295-a1ae-5467a089a349",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802be3cf-75a6-40ac-a4c4-b2edd59bf5f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96131605-2031-4078-9621-c53bd885e749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14db256-3538-4067-838f-8c9722a519db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47f03916-c913-4fcd-b35d-0654cfd84a0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dde1c84d-be3a-4b03-8411-c492b7cb443f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dde7a51-13ae-45c2-95e2-b391936ab2bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a3b9348-a700-4996-bfa6-f8fa37cc33a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0409fc2b-0e38-468d-8f5e-b6420c6a7a68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41482e15-3390-47f3-8220-5ddf02426829",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3db98be7-1600-4fee-82e1-b5f2037f0998"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "548ba548-906d-4a92-81a4-9653d8af566d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2fe20a4-1ba5-4b80-8183-74224bcb0b35"
            }
          }
        ]
      },
      {
        "id": "a7ed3a16-da20-4658-9280-fe621bc1bbd0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a08425ba-6d34-43b2-8f21-9ec8b520f9c2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17356fa5-c15c-4168-9e75-870ff255f8a8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "59c11ac6-5177-414d-b10e-1b3dc5b2d851",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "706ac2bd-e044-4a5d-850a-736827d0c82a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9451f52-5500-45a4-83f4-4673c364bf88",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 27.087719298245613,
      "responseMin": 5,
      "responseMax": 306,
      "responseSd": 22.512749371680147,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705970229747,
      "completed": 1705970246754
    },
    "executions": [
      {
        "id": "ef390200-e5a6-4ac3-a7b9-d7925f7cb2dd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "877e7f8b-6db3-4e2d-aeed-efedba30c4ba",
          "httpRequestId": "590b238e-a02d-404b-97be-f6c1adf47083"
        },
        "item": {
          "id": "ef390200-e5a6-4ac3-a7b9-d7925f7cb2dd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9c03eb67-27aa-4fdc-8ab6-ab9ca3168109",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "a905dc31-94d4-401b-8df2-0a965b50efc2",
        "cursor": {
          "ref": "a91fc076-aecc-45d4-ba34-f44e6bdd0339",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "feefe1ee-7083-4ddb-83f5-4e92c2d80878"
        },
        "item": {
          "id": "a905dc31-94d4-401b-8df2-0a965b50efc2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6c5053d8-bb2b-4b30-958b-122218515b21",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "70aa0a6a-f593-40fd-9bf5-621af0142036",
        "cursor": {
          "ref": "079ba001-61ef-4253-adc5-ec71feda27c3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "18d6e3d3-694e-4cc2-afe7-77cbed5279c8"
        },
        "item": {
          "id": "70aa0a6a-f593-40fd-9bf5-621af0142036",
          "name": "did_json"
        },
        "response": {
          "id": "e11ed284-6b2f-4efc-8f68-50edbb819e99",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6913f2b-5ea4-4023-a49b-4cc914a4c48a",
        "cursor": {
          "ref": "915c26a2-0eff-4b30-bb58-ecbb1f13e9fd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4db5350-45b7-424c-bdbe-3a0edb5425cb"
        },
        "item": {
          "id": "c6913f2b-5ea4-4023-a49b-4cc914a4c48a",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ed9f78f-62ab-46d3-921f-90955a76e404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6913f2b-5ea4-4023-a49b-4cc914a4c48a",
        "cursor": {
          "ref": "915c26a2-0eff-4b30-bb58-ecbb1f13e9fd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4db5350-45b7-424c-bdbe-3a0edb5425cb"
        },
        "item": {
          "id": "c6913f2b-5ea4-4023-a49b-4cc914a4c48a",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ed9f78f-62ab-46d3-921f-90955a76e404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867cd64b-3f7f-41c7-bebb-3d9c581919cc",
        "cursor": {
          "ref": "796a661e-7fcb-49d8-8e9b-5df3dce1f533",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ca036111-838e-45ea-9498-d82f85356ae1"
        },
        "item": {
          "id": "867cd64b-3f7f-41c7-bebb-3d9c581919cc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "20c62d19-9f31-411b-9a34-0f5769beac23",
          "status": "Not Found",
          "code": 404,
          "responseTime": 77,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d520b42-e537-4841-9f78-4c7db36c66e0",
        "cursor": {
          "ref": "87b6c694-ed48-4820-af4d-68cfb3d3fa52",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fa0eff9b-b366-49bb-8e20-1d5833ab7769"
        },
        "item": {
          "id": "3d520b42-e537-4841-9f78-4c7db36c66e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c11cb722-348a-4195-8469-cc1de60e8ac9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418f3de6-1875-427f-a657-1eb4dfd3d691",
        "cursor": {
          "ref": "ac74c13a-c70c-4f5a-ab89-35ca28013dbd",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f7268884-396f-469d-b2fa-83c2cc16f6e5"
        },
        "item": {
          "id": "418f3de6-1875-427f-a657-1eb4dfd3d691",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "05e05c35-d365-48e1-8419-122481f79e7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d97e8b-83d0-430d-aebf-23d4c7904c3a",
        "cursor": {
          "ref": "e8a2e659-bf98-4e58-a367-0eaaeac04072",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0247e1c0-5e14-4ac8-b835-a9c39c49f83e"
        },
        "item": {
          "id": "11d97e8b-83d0-430d-aebf-23d4c7904c3a",
          "name": "identifiers"
        },
        "response": {
          "id": "fcd84d63-0e34-4e4a-9beb-a0015eab134c",
          "status": "OK",
          "code": 200,
          "responseTime": 235,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebb617e-5142-46d8-bf85-2fe63d91101d",
        "cursor": {
          "ref": "98e8fa5a-bf9d-4516-af5f-7a2d24a05ea3",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bde2b682-f913-4d4a-bf80-26e4807e0b86"
        },
        "item": {
          "id": "5ebb617e-5142-46d8-bf85-2fe63d91101d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "89c72d8b-f438-4b77-a611-d8a025667c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2612182f-8b50-49d5-a72e-4aa161b0a3e3",
        "cursor": {
          "ref": "bbeffda2-0c2d-44dc-ab68-7c18207b4f19",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a52a9970-197e-45e8-b386-61318a99ab50"
        },
        "item": {
          "id": "2612182f-8b50-49d5-a72e-4aa161b0a3e3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f1631ccf-b232-4542-a2fe-4c35c7724eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86be817f-239e-40fa-8e7f-5f8a6211b239",
        "cursor": {
          "ref": "cea0bce5-981d-4ddd-b58e-9ff8cd5401ac",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "722546c6-85fe-4c77-854e-0bfaef0dd8a7"
        },
        "item": {
          "id": "86be817f-239e-40fa-8e7f-5f8a6211b239",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "64b83f9b-aa1c-4e5a-8580-b6a80e2cfeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb09c78-769d-4f28-b776-fb89a4920969",
        "cursor": {
          "ref": "5955e524-cc0b-4422-a5d1-5547954fdcf5",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3b49297b-df20-44eb-a1cf-3215e987ccc5"
        },
        "item": {
          "id": "fbb09c78-769d-4f28-b776-fb89a4920969",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d2c26813-da4c-4aaf-ba30-f09c9e1385ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e869783-ddaf-41f4-8970-39b83523fcc7",
        "cursor": {
          "ref": "14d7f9a9-4411-4bae-b17f-15c5e8eb45d8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6e031d4d-9a9b-4fa3-b954-8b8a9a45fd39"
        },
        "item": {
          "id": "6e869783-ddaf-41f4-8970-39b83523fcc7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d036fc3f-5763-4c1f-9041-d2e98154fcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2a114d-d617-4714-a997-6a4374a6813f",
        "cursor": {
          "ref": "3a70d842-a8db-4f28-ab23-c73be8d89a45",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c4b7a570-33ac-44df-99f3-31478120e0c5"
        },
        "item": {
          "id": "5c2a114d-d617-4714-a997-6a4374a6813f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e82c119e-b47f-4b1a-9174-047cf4be82e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca8df2c-3d49-4a39-8afe-90f428d91418",
        "cursor": {
          "ref": "dc3da4fa-2fcd-4c94-a8b9-8c15c6407705",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8c40583e-232e-4882-bfbc-2f623b1898e7"
        },
        "item": {
          "id": "8ca8df2c-3d49-4a39-8afe-90f428d91418",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8ebc16ad-e484-4bae-b70a-414183c81c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e42f49-9fe2-4cee-99b7-919c12d68b92",
        "cursor": {
          "ref": "cb73bc5d-258c-4d26-b727-1159c8cbc202",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5b589408-5086-4688-8b08-ae40544e3da0"
        },
        "item": {
          "id": "44e42f49-9fe2-4cee-99b7-919c12d68b92",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3af3ceed-7a58-4c72-938e-1b56b8a5442e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885e4042-19e0-4061-8fdb-d6bd428c8d46",
        "cursor": {
          "ref": "c3d2ebc2-5986-4be1-9f00-bb0ebcfe513d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "67bea5f0-4e50-424b-8cad-341d09276fda"
        },
        "item": {
          "id": "885e4042-19e0-4061-8fdb-d6bd428c8d46",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3df40648-d937-49dc-b9e8-622d795bc76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96bd1a6-31e4-41f0-854c-01283b6ec8b2",
        "cursor": {
          "ref": "1077361b-c1a2-4f69-8dae-fe59fefb60f1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "06467d88-bfdf-4790-90e3-56ab30f6e13e"
        },
        "item": {
          "id": "b96bd1a6-31e4-41f0-854c-01283b6ec8b2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f46ce9a6-eb20-404f-a536-6946e7fe28a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5e44e5-86cd-4def-ad84-5f18a40273d0",
        "cursor": {
          "ref": "a2e40d5b-1563-4f50-a7cc-aca490336593",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e17a62b7-e937-479d-b5e4-0595058b7891"
        },
        "item": {
          "id": "9a5e44e5-86cd-4def-ad84-5f18a40273d0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b497ef7b-a650-4a07-bbe2-0f4711baa527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27c11c7-04cd-42c2-b714-b2ff339e2173",
        "cursor": {
          "ref": "491162ca-8245-43c0-b92a-4b917f9d6f93",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e1c8cbb7-fe1e-453f-9ef5-b62c5ebcd1eb"
        },
        "item": {
          "id": "a27c11c7-04cd-42c2-b714-b2ff339e2173",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "26adc38f-1440-43bc-8ac4-a9d837f70be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9f55a5-ea9e-4ca6-aa34-ef4f0c5b4fc3",
        "cursor": {
          "ref": "fe2b05ce-8032-49c9-b2a8-b9a12fca3f16",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8ffece44-5e2f-4c74-8031-2452cf0fdaa3"
        },
        "item": {
          "id": "6e9f55a5-ea9e-4ca6-aa34-ef4f0c5b4fc3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ef11e182-b3e3-46c7-9470-4a2353ddf5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7879b8ae-6c95-4621-b36e-2bd3e0ba758d",
        "cursor": {
          "ref": "001c97f4-dc62-4577-a964-d8a26e11f45a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "df40e44e-cb12-4ee7-a10d-ce2ac534705d"
        },
        "item": {
          "id": "7879b8ae-6c95-4621-b36e-2bd3e0ba758d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "858ec64a-1980-40b8-a0a8-8dd6f04192d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b09f809-28bc-4447-a129-295289b64c05",
        "cursor": {
          "ref": "5bd6bc2b-691f-4817-9548-b96a15799d25",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1d9231c4-32b3-4863-9739-21be569bb471"
        },
        "item": {
          "id": "0b09f809-28bc-4447-a129-295289b64c05",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fe767b25-f639-48d8-85e4-1c8bb193d959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9881367-da19-4637-82c1-7cdcc1567ec8",
        "cursor": {
          "ref": "cbfb6295-4949-4267-a4e0-7b5b63509a9e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d8afa844-7a5c-4123-ac26-391f7b1e773f"
        },
        "item": {
          "id": "a9881367-da19-4637-82c1-7cdcc1567ec8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d230fe93-9255-4405-8cf8-e22fc58c1d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c3b0d1-b49f-4844-8769-1c43e261c0d3",
        "cursor": {
          "ref": "7b13c6dd-251b-488a-8ceb-fbb6fbcdc48a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e714d97b-2d4d-4830-b141-85741a1f57d2"
        },
        "item": {
          "id": "67c3b0d1-b49f-4844-8769-1c43e261c0d3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7a3f4ea9-82e8-4907-a31b-fcd17e2d6164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb041f90-cb39-4945-836d-d5a937490c53",
        "cursor": {
          "ref": "837f54ad-f52f-4109-a76d-7507b087e950",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ccdf78bd-7d76-4d1e-acf7-4ed5ca02f3a3"
        },
        "item": {
          "id": "bb041f90-cb39-4945-836d-d5a937490c53",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3f43b2ab-1c2b-4e43-ac28-ab0bbe8157c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366123d2-93da-4c20-bb55-519228d2d48a",
        "cursor": {
          "ref": "18bc5ae1-027f-4d10-affe-c3e62214cf2b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9b25d82f-8d40-4299-8519-b96845a2fb82"
        },
        "item": {
          "id": "366123d2-93da-4c20-bb55-519228d2d48a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ba701d3f-3088-463d-b8a5-eea2db474b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8677cb-bb85-4ec7-a24b-995c1aa1d8bc",
        "cursor": {
          "ref": "e2bc8f1f-5998-414d-9de9-08ffb64f0c73",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4edd88cc-66a4-491c-90dd-48ccc3ae0626"
        },
        "item": {
          "id": "ff8677cb-bb85-4ec7-a24b-995c1aa1d8bc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fc764c9d-3d89-4074-8c88-7c5c0fd6671b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e2ce8f-12b4-4d95-93db-5c1b38a2ded7",
        "cursor": {
          "ref": "9cbfb8c7-f409-4fc3-9e66-be9fe05eb4da",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "598a35cf-9a47-4aed-825c-2e3cf8fda57f"
        },
        "item": {
          "id": "44e2ce8f-12b4-4d95-93db-5c1b38a2ded7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "60795bd2-9428-460e-bf44-bcfbfc574796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d970707b-bb20-4cfe-b968-d5cac4de1b8d",
        "cursor": {
          "ref": "15b7665a-67e1-4bda-891e-4e3ff2563569",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d5eff5b6-153a-44fe-b407-03fab770b15c"
        },
        "item": {
          "id": "d970707b-bb20-4cfe-b968-d5cac4de1b8d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "95dcb2ad-025b-4415-9b70-2338e5997e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67503de-37cf-423f-bd88-368fda8722ce",
        "cursor": {
          "ref": "91c6bc63-caa8-4671-bf1c-5406acfaa767",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b0dc1efa-7351-40b8-a201-dd229b745bdc"
        },
        "item": {
          "id": "a67503de-37cf-423f-bd88-368fda8722ce",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cb769754-0129-469f-8d90-76adf7b87d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0957d518-8d7c-4f60-a8ae-9925722bf7ba",
        "cursor": {
          "ref": "a454f06d-0ed8-4ebf-a312-a6d3fa5e9ca4",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a62f8974-3246-4a96-8117-032c9d5fa4bc"
        },
        "item": {
          "id": "0957d518-8d7c-4f60-a8ae-9925722bf7ba",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "783c76dc-4e95-40a3-9009-b5e8c4f9280b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8049445-b0a5-42c8-ba4e-99991056f431",
        "cursor": {
          "ref": "e57d60e0-635e-441b-871e-c11e519959b2",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1cc746bb-d26d-40aa-843e-bef00c5711bd"
        },
        "item": {
          "id": "b8049445-b0a5-42c8-ba4e-99991056f431",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "811e0c37-7cd2-4d1c-a1b0-b1aeb68ae357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cab897-7f2d-4c09-ab95-3689badcd048",
        "cursor": {
          "ref": "2ba56f89-baf7-40f9-b85a-341894e95396",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6e749183-b8e2-4c5d-8dd3-16cabb545050"
        },
        "item": {
          "id": "a1cab897-7f2d-4c09-ab95-3689badcd048",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "af74c530-7f86-4b90-b471-340db44e0e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309960df-5b0a-474c-ad76-f42dcf605dfa",
        "cursor": {
          "ref": "dda96b54-7948-49e8-bdbd-a0921208b78e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e066f128-ab0c-42a8-a57f-d7d43b5a9050"
        },
        "item": {
          "id": "309960df-5b0a-474c-ad76-f42dcf605dfa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "85a73cf3-e1b0-43f8-b762-bca755a650dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854d3679-b210-4e4e-90c8-a9895fbe0bc9",
        "cursor": {
          "ref": "8595bdd4-aac6-4ead-b876-bdc9556971ab",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "039e6fe9-0e74-4412-a275-4f367fe49b2b"
        },
        "item": {
          "id": "854d3679-b210-4e4e-90c8-a9895fbe0bc9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "555a63c6-f1cb-42c5-95e5-a68d013b0492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c1bfe1-5bb4-4993-b7fa-e51bb1019657",
        "cursor": {
          "ref": "4b31e879-54d9-4518-bb65-e2e4e9897508",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ca0bc2f0-3c74-40ea-a80a-0d7badae78bd"
        },
        "item": {
          "id": "e4c1bfe1-5bb4-4993-b7fa-e51bb1019657",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f1350f5c-f676-4b8e-8c45-306ba57df0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4becb71f-921d-49df-98a3-d13bcb4f7eeb",
        "cursor": {
          "ref": "b07885f5-462a-4556-8acd-a7d39e833832",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8938f147-64a6-447f-b1b0-03629b678339"
        },
        "item": {
          "id": "4becb71f-921d-49df-98a3-d13bcb4f7eeb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bad0a622-f413-4498-9470-43bcbc03d5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c5a7a8-11cd-4251-bc31-2175ee3a8159",
        "cursor": {
          "ref": "e96c35a4-440b-425a-8f0a-4e191ffbefd4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fc5cb2fa-c167-46a2-b150-720fe6f87359"
        },
        "item": {
          "id": "e1c5a7a8-11cd-4251-bc31-2175ee3a8159",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "15a79087-e0c0-47ba-88e4-81d158c9e1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf624a3b-c076-4de9-b928-0b46d7a1dde2",
        "cursor": {
          "ref": "41b4abff-3033-46a4-80a8-a147901ec34d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7e21a477-170b-45ec-84f9-a51772f439b8"
        },
        "item": {
          "id": "bf624a3b-c076-4de9-b928-0b46d7a1dde2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "53a8e0d8-2ffc-4fd7-8236-34029ded9f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d0e2c6-6d8e-4c2f-b506-d1236987cfe4",
        "cursor": {
          "ref": "6266ec96-b39d-4ec1-95a0-48f600764b65",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "63fa0998-92a2-4c57-a9eb-133250d6caae"
        },
        "item": {
          "id": "71d0e2c6-6d8e-4c2f-b506-d1236987cfe4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "429174ff-49ee-41fa-95e9-b58b57d7974a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d24b9af-85bf-4f40-b05c-17299b2ea586",
        "cursor": {
          "ref": "8040530e-e7e5-469d-af4f-b0b03f35d8fd",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9257d99f-d848-41df-b515-331d818ba5ea"
        },
        "item": {
          "id": "9d24b9af-85bf-4f40-b05c-17299b2ea586",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7b4bb5ce-e59d-487c-8570-51ede528a3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6d45dc-89ab-443f-b454-a419577c86d1",
        "cursor": {
          "ref": "1921910b-89b2-4308-b5c8-d7d20af6c1c7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e619dde0-ccbe-48cb-9cf6-12d0942eedcf"
        },
        "item": {
          "id": "9d6d45dc-89ab-443f-b454-a419577c86d1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e5c4e441-39a3-46aa-be11-e4dc98391e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe2f99a-c9c8-4b08-9428-11a8ad8c3443",
        "cursor": {
          "ref": "7b2f3561-147a-4ab6-8472-66ba7b08d113",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6f4f51c8-f81a-495e-a958-c826ca1d5f7d"
        },
        "item": {
          "id": "bbe2f99a-c9c8-4b08-9428-11a8ad8c3443",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4917183c-9b1a-4aa9-afae-9e246d138ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b53283-e7ef-433a-9f77-9522184214ac",
        "cursor": {
          "ref": "5e68824a-0d50-41cf-95f0-b5292998c61f",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "504ddb6f-9ecf-41b4-9f38-ecf92d2c9069"
        },
        "item": {
          "id": "63b53283-e7ef-433a-9f77-9522184214ac",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b6510b03-c75d-45a7-99c7-e4de7774e3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63371299-991c-4f00-b68e-34c54efdec2a",
        "cursor": {
          "ref": "8153502d-0ec9-414d-8c37-b0a94cf02a31",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c47df648-13e5-44a1-8501-a6b2aa296aea"
        },
        "item": {
          "id": "63371299-991c-4f00-b68e-34c54efdec2a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1623ea0f-004a-45ad-adbe-0ebd9e00551c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde6b0b0-a80d-4ad7-8bbb-e9d0f12b6b7b",
        "cursor": {
          "ref": "73727288-d15d-45cc-916e-23f06cc94f5e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "98c18b19-0f34-4856-99c6-134c46b363f2"
        },
        "item": {
          "id": "fde6b0b0-a80d-4ad7-8bbb-e9d0f12b6b7b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f1f50267-8ecd-48ff-9937-b35b1c8171b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04d96e8-5540-46fb-a80d-904e4ebf4452",
        "cursor": {
          "ref": "fab58196-7848-4ad9-b568-70f944618c28",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6177b645-1e99-4347-84ae-4c0bf61e62f6"
        },
        "item": {
          "id": "c04d96e8-5540-46fb-a80d-904e4ebf4452",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "67ec7cdb-4eaf-4d97-b0f2-765fba736619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21ff20d-37ec-4919-88f2-30468f1d5ea8",
        "cursor": {
          "ref": "be3a308f-626f-4327-8101-aa607270e626",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "28925152-af43-4512-baec-dd8273d91d6c"
        },
        "item": {
          "id": "a21ff20d-37ec-4919-88f2-30468f1d5ea8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "67e94ad5-1671-4cac-a368-ff224f3782a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee3972f-4e58-48e2-b7e4-367641ec793e",
        "cursor": {
          "ref": "8956be77-5869-4473-9812-e52861d4dacd",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0a3f8513-271c-4b02-9d80-2ab30ed660b2"
        },
        "item": {
          "id": "2ee3972f-4e58-48e2-b7e4-367641ec793e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "53cbf04f-71e7-4bac-a37f-bb9c1bca21cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2369e6-ed1b-4a56-99a7-bc570f063550",
        "cursor": {
          "ref": "8f52e4da-3e75-4929-a241-c068c03dcd7c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ea3e1ddf-68fa-441f-be91-c8fd86de5358"
        },
        "item": {
          "id": "0f2369e6-ed1b-4a56-99a7-bc570f063550",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "206ca804-7ca2-4a76-9fe6-7e09e439b0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01885b3-713c-4565-a1ab-64d5f2a80081",
        "cursor": {
          "ref": "ececa80d-86f6-43bb-bb6f-c0c3889d9dcd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0ebfa1ea-5c31-4bec-a44b-ba14e560bf85"
        },
        "item": {
          "id": "c01885b3-713c-4565-a1ab-64d5f2a80081",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "000996f3-6637-424a-b123-8abda62b4846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a472798-f19c-4ab7-8014-b94bb5e392f4",
        "cursor": {
          "ref": "c84d6521-b5ba-4f95-aa1d-be8a16aabb84",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e771f586-71c8-40d3-b2c7-421a9c18847f"
        },
        "item": {
          "id": "9a472798-f19c-4ab7-8014-b94bb5e392f4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1c28e7ad-cf9f-4dd0-9a4f-1e2ec56bab42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae037b8-6496-4d3c-99f4-635e12c6767f",
        "cursor": {
          "ref": "bac67a88-9ac6-4ac1-9bcb-d5dd5f3e7a13",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ea536913-52dd-4ef1-a698-b3762387e9a9"
        },
        "item": {
          "id": "5ae037b8-6496-4d3c-99f4-635e12c6767f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "78ddab5d-a859-4158-bdd2-21c329d9e345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac744b9e-0942-4042-8c45-9560ac31e243",
        "cursor": {
          "ref": "6bf0756e-cff1-4cc3-96f3-818aa4f7159e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "df402d0f-cf22-4158-b8e7-f435e1e979fb"
        },
        "item": {
          "id": "ac744b9e-0942-4042-8c45-9560ac31e243",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "78a6e64a-9cb4-4054-9379-bc5cb29f3a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d863207-1c17-4700-bc6b-857e00cc208d",
        "cursor": {
          "ref": "cfdec22e-ea9d-405d-8e19-01f87a5e488a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "45e2600e-5a4e-4c95-b65f-c97c64fc2c4e"
        },
        "item": {
          "id": "7d863207-1c17-4700-bc6b-857e00cc208d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "517dd27a-667b-40b2-acd7-b759c82f790a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd597ab-e11d-41eb-a21a-444079eaefff",
        "cursor": {
          "ref": "f446be42-3d68-4c1b-a5cc-9ff2b2fe0c61",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6694d5fb-3979-4f70-964d-3215bf4c5a70"
        },
        "item": {
          "id": "3fd597ab-e11d-41eb-a21a-444079eaefff",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0d7bdc58-9faa-4e0a-9403-a130e75cc7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72909f6-915d-4f65-81a8-e293bd6aa6d0",
        "cursor": {
          "ref": "4cacd06f-87f9-4e92-8b9f-2e6eee0e3fc0",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2488bcdb-816d-464c-9500-01f0fbcf38a5"
        },
        "item": {
          "id": "b72909f6-915d-4f65-81a8-e293bd6aa6d0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d62dc5f6-0595-4b1f-ad08-67c60794385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3701d18-ac2c-4f47-a1fb-9b41873a20e1",
        "cursor": {
          "ref": "f85443f2-08ed-4b66-a00c-1a0ec9e5694a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "782be189-8d66-426b-8e41-02d03d630744"
        },
        "item": {
          "id": "c3701d18-ac2c-4f47-a1fb-9b41873a20e1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6895c6af-b8d6-402e-87ab-f42edabc56ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97b13ed-dd69-4f6e-a260-0876be5b3190",
        "cursor": {
          "ref": "a37d12e0-2264-409d-82f7-ae115bea4109",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b6da4a43-3cd3-4494-a168-8ec0059051fe"
        },
        "item": {
          "id": "a97b13ed-dd69-4f6e-a260-0876be5b3190",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "628c749b-1dc7-4460-a98e-551f7810fb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e565ac-6c94-443c-9a0c-5ca9b1f39abd",
        "cursor": {
          "ref": "ca65528a-0623-42a1-8c43-de6e4fd63095",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f0693805-1ad5-40f8-bd6f-34bf4811ee83"
        },
        "item": {
          "id": "30e565ac-6c94-443c-9a0c-5ca9b1f39abd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "27c86546-578a-4c1c-8b9a-936976af6445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebe850d-b0c2-45a3-aed5-c1e7a3d4e976",
        "cursor": {
          "ref": "577fdb53-07db-4432-84d9-8281104258c4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ca0ec4e8-3424-4429-ac34-ec3fbe271c9a"
        },
        "item": {
          "id": "9ebe850d-b0c2-45a3-aed5-c1e7a3d4e976",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1789bd54-9cc3-4bbc-a4f4-5146fd0a996d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5134bc-364a-42dc-91ca-b52ac0a92e49",
        "cursor": {
          "ref": "d6c28938-a02e-42b9-82a8-d4dac8b60caf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9498e68a-aed9-46a3-a8e2-0d2a8d350dc9"
        },
        "item": {
          "id": "1c5134bc-364a-42dc-91ca-b52ac0a92e49",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3acc6e79-9576-4970-8b7a-c1f2ba050d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766cd919-bb60-48ee-b636-41f1c525745b",
        "cursor": {
          "ref": "4db15386-495a-4bdb-b651-6d2a5475d67b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "08ff0b48-de06-419a-8eaf-61f7efe57162"
        },
        "item": {
          "id": "766cd919-bb60-48ee-b636-41f1c525745b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "50caeda1-7fe3-4e75-bef6-63c11639d82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e37c87-4080-4655-8e5e-5fdfccd27822",
        "cursor": {
          "ref": "e1cabe9b-a3f9-4126-981f-1db48b15d1b1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "96f6d2c3-5e96-4a33-ad22-78b194e4f7f0"
        },
        "item": {
          "id": "c0e37c87-4080-4655-8e5e-5fdfccd27822",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f673ce9c-3a32-4c08-abcd-a4db3a91bd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d856370-a409-4e66-8c1d-15d5be51fd4b",
        "cursor": {
          "ref": "7ba7ca3c-9a49-45e4-88ad-e6737aa9e48d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "48e85fcb-7b84-4a3b-841b-2c7e17b9e241"
        },
        "item": {
          "id": "3d856370-a409-4e66-8c1d-15d5be51fd4b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6a278b32-15ac-4aeb-a354-77c4338c2f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e634028-060c-44d4-8586-4ab20fcd62dc",
        "cursor": {
          "ref": "3fb6bde1-17b0-4307-beaa-949f5a9f1fae",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8efc11ee-7346-4e57-9e3f-03999ee8f646"
        },
        "item": {
          "id": "0e634028-060c-44d4-8586-4ab20fcd62dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "343cc3bc-58a8-4b7e-9fba-0f44f7e75b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fdb413-591b-4c3c-9696-3b0bd179a5b2",
        "cursor": {
          "ref": "92fddda1-8092-41cf-9db0-872869104a4f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e7448f47-2ac3-4d39-aa03-7f9cb49f6a0f"
        },
        "item": {
          "id": "b3fdb413-591b-4c3c-9696-3b0bd179a5b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ac747374-4a0a-42e1-99eb-68f513ca39d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d90da2-18e9-4778-9922-a374c0d11462",
        "cursor": {
          "ref": "c5f80659-8eb1-43c1-b6d5-0abc9867f004",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c385d765-173e-4bc4-94ed-40ba9e373df3"
        },
        "item": {
          "id": "97d90da2-18e9-4778-9922-a374c0d11462",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3a024b36-94fb-467d-9f2f-0e44f6f7516c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee7c90e-0a30-4d06-974d-4c6b852ebc78",
        "cursor": {
          "ref": "1a00f6e0-7406-4379-abad-ba6c09557e65",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fdaa17d1-1aa0-41a7-aa51-b655bc940773"
        },
        "item": {
          "id": "bee7c90e-0a30-4d06-974d-4c6b852ebc78",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3d6f7e16-4093-4ae3-b7c3-bd308cb68d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452aa4c8-358c-45f2-8b72-a8878ea204c2",
        "cursor": {
          "ref": "315fd109-f4f0-407d-806d-4117ee1ee919",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "30cb7a8a-1ace-4bb2-99f8-0769293c923b"
        },
        "item": {
          "id": "452aa4c8-358c-45f2-8b72-a8878ea204c2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6aed3b3c-d143-459d-8eff-60f2963e0a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c09029-f183-441f-a657-395bb4dd45a7",
        "cursor": {
          "ref": "ae8018b6-60d0-4574-b15f-3d42238f8a64",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cf9ac755-8a5a-43ef-9a72-aad3ac8d2679"
        },
        "item": {
          "id": "98c09029-f183-441f-a657-395bb4dd45a7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7bfb99e6-578e-46a1-bcf5-df6a371807a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ffe836-17ab-410e-a651-4e52a298ca46",
        "cursor": {
          "ref": "01303f54-d940-4e22-816a-8522ab84d908",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1d9b14ca-7c9c-4433-a7ed-f849cd1a0912"
        },
        "item": {
          "id": "59ffe836-17ab-410e-a651-4e52a298ca46",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3e41c642-93f7-46d5-bcba-af14221053e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e80e03-d9d9-438e-a621-af82a4cab2c4",
        "cursor": {
          "ref": "6bf19df8-8bb6-49b7-adc9-ea3137d9f4bf",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "95057473-3991-4731-8ed0-bb30d903c0b1"
        },
        "item": {
          "id": "c6e80e03-d9d9-438e-a621-af82a4cab2c4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d68e9f00-ab47-423d-926d-3dd6504206d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b57891c-c690-42bd-8603-69c16659ddfd",
        "cursor": {
          "ref": "a4571706-5632-4409-87ee-41a351d2e3ff",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7cf139b8-0d5d-446b-83d2-8e443cf6193e"
        },
        "item": {
          "id": "3b57891c-c690-42bd-8603-69c16659ddfd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "114ac9ae-d67b-431e-a021-182260b9589c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3772fdae-286b-46bd-aeef-9f7ad5438c71",
        "cursor": {
          "ref": "f8a3e132-e314-4989-bd20-5a8901b7d4c1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "07553383-7a1d-46e1-ab6a-d05739a33e7c"
        },
        "item": {
          "id": "3772fdae-286b-46bd-aeef-9f7ad5438c71",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1562bd98-8573-4fda-95d5-6ae5047e9c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b364647f-5319-4eb4-b99f-4f9b9624a32f",
        "cursor": {
          "ref": "fc9f78c4-4b71-48ac-b806-b36173898d6f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a1647b0d-27ef-4287-9dde-9ebdc1897f2f"
        },
        "item": {
          "id": "b364647f-5319-4eb4-b99f-4f9b9624a32f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0b4b8654-01a7-4652-9537-10fded19cf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95937b10-6d40-4922-8225-5cf281f103eb",
        "cursor": {
          "ref": "7ca3a31d-4021-4862-983b-c736cbb5e50d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c7ea2260-8631-48ea-adf3-11eb319b82fd"
        },
        "item": {
          "id": "95937b10-6d40-4922-8225-5cf281f103eb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e8439d60-382c-47be-9ea1-1fe1a7a8182c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abca8765-600c-486c-8202-579a54eb88fc",
        "cursor": {
          "ref": "d471054d-d586-4017-b6d0-f3419d4f14fa",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "15c93661-399b-4e40-aa5d-a343b84fd32b"
        },
        "item": {
          "id": "abca8765-600c-486c-8202-579a54eb88fc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ab9aec02-88a7-4bff-a746-e401b8479d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b229581-821e-4b26-94e6-3578600cea8f",
        "cursor": {
          "ref": "6d2958c8-8372-48c6-bff0-906de670502c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ec40bd5e-f4a9-402f-a3aa-95565357131d"
        },
        "item": {
          "id": "0b229581-821e-4b26-94e6-3578600cea8f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3c1da14b-604f-45b9-8e76-5dc885195fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc2d067-4af7-4f11-85cb-2b432a7c5611",
        "cursor": {
          "ref": "7e8a5130-0f95-463f-88b2-c82c93bbe3b9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "86dab528-7707-4a6b-b72c-34b881a1bf5c"
        },
        "item": {
          "id": "dfc2d067-4af7-4f11-85cb-2b432a7c5611",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c073ef0e-4758-4313-ba4d-fa776cedfe54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98439b9c-67b9-4f0c-9eff-1279f883c700",
        "cursor": {
          "ref": "d316713c-28d8-42e8-924f-b71229428a2a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d8a12015-79e6-4ffb-b2c1-ac998e2f3280"
        },
        "item": {
          "id": "98439b9c-67b9-4f0c-9eff-1279f883c700",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "07aa1eca-783d-4624-95eb-eadea0bc8f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e9e893-4e9d-42f9-88fd-4a99c661b812",
        "cursor": {
          "ref": "9d807995-22f1-4449-bad0-9d342b714ec9",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1b5988ec-5af6-4ec2-b79c-815f799f21df"
        },
        "item": {
          "id": "d9e9e893-4e9d-42f9-88fd-4a99c661b812",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c0329235-226f-43cf-b9a3-b03a9f407423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a91787-7164-48af-9419-c1481ec22a02",
        "cursor": {
          "ref": "e1b9cd63-b383-4270-96e0-df9dd7cda87c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a10dbff8-109f-4a4b-8555-b5d89975a09f"
        },
        "item": {
          "id": "f7a91787-7164-48af-9419-c1481ec22a02",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d6a4ed03-f43e-47d6-9942-c23a4cdb5122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ae799b-16a2-41b4-8aa5-85e8cf9a4b2c",
        "cursor": {
          "ref": "362d1709-64d1-42b5-8970-3b828d70b19b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5782dc0c-9bb3-4e94-94eb-5bab65625dd3"
        },
        "item": {
          "id": "41ae799b-16a2-41b4-8aa5-85e8cf9a4b2c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5353696e-38c1-4578-91b6-c7c388b33113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bde46e-cf20-4ea1-a141-408022809601",
        "cursor": {
          "ref": "3a0ed907-60ba-4127-97db-f3db3881bd51",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "174c6288-5399-48db-8f7f-683a66c0bebd"
        },
        "item": {
          "id": "e8bde46e-cf20-4ea1-a141-408022809601",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dc67e1fb-a306-4a76-aedb-13c87d748a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995b8cde-7455-4000-ba3b-2b3f29c717e4",
        "cursor": {
          "ref": "1e492c57-f1e0-4de0-823f-cf6a0ce8caae",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c6e5ae06-01f2-4025-b0d5-659bf68a0174"
        },
        "item": {
          "id": "995b8cde-7455-4000-ba3b-2b3f29c717e4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "add78720-61bf-4ca0-b08b-c5331468399a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27fdb46-fb4e-4ac5-9932-6faa0259b3fe",
        "cursor": {
          "ref": "6def29c3-d9fd-4979-98bb-730c1c184225",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "42d5bf7c-473d-4528-b0fc-645000f81d38"
        },
        "item": {
          "id": "f27fdb46-fb4e-4ac5-9932-6faa0259b3fe",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d4ff33d8-d62a-4e8e-a64e-e62b5b0c9c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1014a08c-5ba5-4ffb-ba36-4a4df5df5832",
        "cursor": {
          "ref": "11a1d5e3-b1b5-4004-9e5d-e8306a7665a2",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0ff184c4-d8da-4ee5-8b31-eb37b904468f"
        },
        "item": {
          "id": "1014a08c-5ba5-4ffb-ba36-4a4df5df5832",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f44c1ba9-2300-4161-a28c-3d06c5a3e727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8d0c83-baba-4ddb-9381-ffee1946b46a",
        "cursor": {
          "ref": "d9f1a489-cc83-4646-94b4-081e163efe7e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "06e715f7-3bfc-49c5-bb07-32e013281b18"
        },
        "item": {
          "id": "9a8d0c83-baba-4ddb-9381-ffee1946b46a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "686a2426-c25d-485c-b2e7-1108ed7c468f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea56ef3-042f-408e-ba5b-9d3f68f0c094",
        "cursor": {
          "ref": "3cb811a9-9372-4f31-8a76-f27cb25c457c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a3fd1ec9-316e-4bca-bb76-0b7dd42ff2e5"
        },
        "item": {
          "id": "fea56ef3-042f-408e-ba5b-9d3f68f0c094",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2c162c54-cb3c-4dde-b0f2-ba643922d14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d48430-f28e-414a-879a-06680d87f114",
        "cursor": {
          "ref": "a9253000-58ec-4378-8a4a-d9ff9b49202f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "190b09fc-8b2d-44e6-a666-6fd607f3efc3"
        },
        "item": {
          "id": "53d48430-f28e-414a-879a-06680d87f114",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "02797d6a-7861-4c92-b890-f039a24b2152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92696da-2155-4fde-a26c-7f4bdb186339",
        "cursor": {
          "ref": "38551559-23f6-429a-961c-40e82ad54fa3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ad5ede81-e21a-410a-8ac3-1ff547f2c55b"
        },
        "item": {
          "id": "e92696da-2155-4fde-a26c-7f4bdb186339",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "20349bf7-7e36-4e45-87b7-6a20f6221f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020a70a6-c7ed-4455-96d6-40654e46e0b6",
        "cursor": {
          "ref": "a5bc2240-81af-4ce5-bc83-0bbdc247c5f0",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "06167701-e0c3-4c63-b867-a6b48101346e"
        },
        "item": {
          "id": "020a70a6-c7ed-4455-96d6-40654e46e0b6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4d86169e-5d57-4047-9743-25bb9a18bf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6127081e-256f-4c2b-b1b4-28e32a80f2a2",
        "cursor": {
          "ref": "a58f42f0-da21-4ec7-818b-3db5b5edc6d3",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ac9b65f5-5931-442e-8ccf-323240100831"
        },
        "item": {
          "id": "6127081e-256f-4c2b-b1b4-28e32a80f2a2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5c379c5d-fc22-4abf-90ff-a5feba0cd303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b049970-216f-46a1-8fcd-63573ddc3148",
        "cursor": {
          "ref": "41db34d9-d6dd-48af-bb05-8febe8d351d9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0441bc5b-2010-4981-8158-933425382f27"
        },
        "item": {
          "id": "4b049970-216f-46a1-8fcd-63573ddc3148",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1bec6d01-f554-4b4a-9ba1-09f474926741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e4747f-1785-4e4b-8c2e-faec65047263",
        "cursor": {
          "ref": "3cfbeac6-a3d2-4898-b362-8e33ac3b50f6",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a5242b51-4962-47a0-a4aa-49aa56484da0"
        },
        "item": {
          "id": "e4e4747f-1785-4e4b-8c2e-faec65047263",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "31b6bf6a-c322-4a22-a3cb-fac6d68dd212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197193c2-123d-4202-81b0-33c253d928ce",
        "cursor": {
          "ref": "a5418c15-ed6c-482b-abeb-a6f25fdca2f2",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "326a6b43-e98d-42fb-b3b0-420a4a37c043"
        },
        "item": {
          "id": "197193c2-123d-4202-81b0-33c253d928ce",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1ab0f407-e1c9-4bdb-ac24-95bab58b8e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf266ef8-38e3-41e8-bdd6-40f385222368",
        "cursor": {
          "ref": "020d56b7-9864-49cf-b9b1-d9a6d864347c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4f7384c8-4672-4ad9-bfc8-9f6dd4d10f22"
        },
        "item": {
          "id": "cf266ef8-38e3-41e8-bdd6-40f385222368",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1e24781b-941b-4c38-82ec-4e32676275da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e43d880-e470-415f-a4c7-fdb83c330349",
        "cursor": {
          "ref": "75713665-13a8-4f2b-b34b-d82e7e6dc5e2",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "131a46c5-50c2-493c-bc61-c1a773f03a3a"
        },
        "item": {
          "id": "3e43d880-e470-415f-a4c7-fdb83c330349",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "614bd6d5-3cce-462a-855e-3b7bdeb76ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dc6b85-a7e7-433f-8f00-0e9513f79f2c",
        "cursor": {
          "ref": "7028c69c-9851-48d5-ad2c-e74711cb51ee",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "24621cbf-98e4-4875-bd27-3f307daec36d"
        },
        "item": {
          "id": "97dc6b85-a7e7-433f-8f00-0e9513f79f2c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c4c763c3-477a-440f-95b9-47f5fe5d0cfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2f6d69-56fe-45c6-b100-8e1fa4154f03",
        "cursor": {
          "ref": "86a17bc5-db75-4a62-868f-fa26579bfb2b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0c44bd9b-edce-4f51-a7bc-05608c9cb70f"
        },
        "item": {
          "id": "8f2f6d69-56fe-45c6-b100-8e1fa4154f03",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b7adb53d-a271-43d8-bfd7-a3df08a4f4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "fb24bc5e-0d3c-4044-97d6-d5d3239502b0",
        "cursor": {
          "ref": "2d644817-eeb5-455c-8665-de7252c4f0ad",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3dcb5c4e-8829-4f10-b9ec-f389d51e1816"
        },
        "item": {
          "id": "fb24bc5e-0d3c-4044-97d6-d5d3239502b0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b0a14432-e593-46c7-add6-d7142c4a662d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "95790827-7742-43a9-862e-d2cf9d2c7fee",
        "cursor": {
          "ref": "661095ef-1444-4487-8a51-7659a17c6d6d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c07de930-f215-4e0d-8dfe-442a6716b231"
        },
        "item": {
          "id": "95790827-7742-43a9-862e-d2cf9d2c7fee",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cb08c1e9-f4e2-46d4-bcbd-006e5b328137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "777c4260-3e95-4d31-84e1-aa0a79665b3e",
        "cursor": {
          "ref": "da12dd8c-e965-47d5-bd04-4e6f7a50f04d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "842cbdb3-fdcc-4521-a4d5-b26af6498d4a"
        },
        "item": {
          "id": "777c4260-3e95-4d31-84e1-aa0a79665b3e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0e279bd5-7a06-46c5-b37a-a01d74e2fb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6da92b7e-83c2-4be3-9bf8-04b16975bccf",
        "cursor": {
          "ref": "59509d5e-3d64-4640-8d42-39035d15f7a5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2b458e57-db9e-43e7-ae7d-482f774469b1"
        },
        "item": {
          "id": "6da92b7e-83c2-4be3-9bf8-04b16975bccf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7770a0ac-98d8-4d19-aac6-9cacd72ba6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "ce6af0c9-1b7f-47f7-8547-868e071e2a53",
        "cursor": {
          "ref": "d299697d-9b4b-40a4-b9bf-557009646dc8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "418e9236-c83e-433b-bca5-2769e386b73f"
        },
        "item": {
          "id": "ce6af0c9-1b7f-47f7-8547-868e071e2a53",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c9323648-e108-4336-bfa6-9cd03e123935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5ba17dd5-fd65-491b-8dd3-8f6c90cdfef3",
        "cursor": {
          "ref": "1cdf4651-22dd-46b3-a2db-62c494fd983b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a453a415-146d-4067-b823-d1a5132936bf"
        },
        "item": {
          "id": "5ba17dd5-fd65-491b-8dd3-8f6c90cdfef3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "da157b28-dea5-4243-be78-5803a788cf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6b1716a5-264f-4f13-961a-fd997e891806",
        "cursor": {
          "ref": "04d1c28d-37e8-48ae-a96a-a98a5c4a5dce",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f9353ff1-68aa-4514-9f2c-680413885c50"
        },
        "item": {
          "id": "6b1716a5-264f-4f13-961a-fd997e891806",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9994b27e-6bd8-4092-88c9-614bcf571eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07aaf218-bea2-478a-aa46-e1ba3aed9cbd",
        "cursor": {
          "ref": "761aaf36-c338-4a4a-bd5c-cddb6810d9aa",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "db4b3d6f-ba10-49af-bf3e-995b523cc892"
        },
        "item": {
          "id": "07aaf218-bea2-478a-aa46-e1ba3aed9cbd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "98ef3131-19d5-434f-a4ed-c063d14b4d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f399fc-05fd-46f6-a58b-434f49749ad5",
        "cursor": {
          "ref": "a2952614-e237-4a53-9e28-f1f58f817ab3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "87ea7c99-64d1-4276-89be-7e7ad43d06c8"
        },
        "item": {
          "id": "c5f399fc-05fd-46f6-a58b-434f49749ad5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da37ba43-b9b3-4ed0-a1c4-da9301e857f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be94db1-e1f5-40bc-94bc-c68fe6ca2c81",
        "cursor": {
          "ref": "3cece29a-90d9-40f7-af6f-41adb9bae53a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b5dd693a-c589-4f37-8a2b-16ccedfe4d75"
        },
        "item": {
          "id": "3be94db1-e1f5-40bc-94bc-c68fe6ca2c81",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dcb8c15a-d514-4c74-864c-b052063e64cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce155df8-b4bd-42b3-8260-3e595f62638f",
        "cursor": {
          "ref": "2b1c0a55-e95d-405f-9fa8-5c13f0b34b9d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cd32f528-a376-457f-8326-302ca6fa0ffa"
        },
        "item": {
          "id": "ce155df8-b4bd-42b3-8260-3e595f62638f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b4797b86-c33d-430c-8cce-18b76f9a033d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d87aef1-e0a1-4119-9590-b4b628efd106",
        "cursor": {
          "ref": "69d98798-cd0d-4e67-96c0-16ea1100b32f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c2d35c12-55da-45f9-9af9-a9c54093bf8a"
        },
        "item": {
          "id": "7d87aef1-e0a1-4119-9590-b4b628efd106",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "78c4477a-5a9b-453a-870c-a7329a2f957b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd093d76-882f-4bd0-b2aa-a162ac6b8ef8",
        "cursor": {
          "ref": "df8d2214-0138-428a-86fe-2d5b09e0d149",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bb3a25c7-7aa2-47fb-94c4-450aa0eca97f"
        },
        "item": {
          "id": "dd093d76-882f-4bd0-b2aa-a162ac6b8ef8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c095cda9-1158-410d-b721-de4c97849aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcbeff1-831b-4ab0-bbdb-e950de0458ba",
        "cursor": {
          "ref": "36eb5726-f51e-4e87-bebc-37384cd365c2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1ddfbcd4-34b0-43c0-a3fc-0713dc3c8042"
        },
        "item": {
          "id": "2bcbeff1-831b-4ab0-bbdb-e950de0458ba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "21460a68-cbaa-4cb6-9119-e186d9830db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751fa443-294d-44df-ade8-14aefe0dace7",
        "cursor": {
          "ref": "5d6143c3-695b-4ba7-ac44-95b8d830b17d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d92571a0-0f2c-4fd1-beb0-85f4a3259286"
        },
        "item": {
          "id": "751fa443-294d-44df-ade8-14aefe0dace7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c42fad27-df9d-4837-b8ff-a706d39445bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791822e8-7461-4428-9c79-850494bfb4a4",
        "cursor": {
          "ref": "0fd9d34b-ab2a-4f86-983a-711ad3ce075e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6be5970c-2b31-4849-bbf8-8cf2e400b379"
        },
        "item": {
          "id": "791822e8-7461-4428-9c79-850494bfb4a4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97cf1bfa-b849-4b80-8855-69b570213225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3e45a0-ea4c-4428-9a58-b576f05d9a77",
        "cursor": {
          "ref": "93873c41-4678-41d5-a494-3f4999620aaf",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b80e2c16-9c2c-4d3f-903a-054c7f2d8459"
        },
        "item": {
          "id": "fc3e45a0-ea4c-4428-9a58-b576f05d9a77",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "83b09148-6cb9-48f2-9d79-682b39cd07e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44cc7b0-dcc1-4e1c-af92-a41210efc89a",
        "cursor": {
          "ref": "2aa4bb00-f10a-43c5-91af-b8a64083c834",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b2f6747d-938f-432b-bda5-385555a3bf41"
        },
        "item": {
          "id": "d44cc7b0-dcc1-4e1c-af92-a41210efc89a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f3f4db6c-96be-47d2-98c6-13e0b5055a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b401184-d8c4-4167-be03-c1b48991d2f6",
        "cursor": {
          "ref": "36fada7a-8669-4ea9-a2f0-336468aa7697",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7ea25c97-652e-45f4-9a2d-061e4248f0c9"
        },
        "item": {
          "id": "1b401184-d8c4-4167-be03-c1b48991d2f6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0e694f2f-3171-4631-b555-7986ccc7dafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa940f5-13d6-4db4-bc3d-86a7e77b1303",
        "cursor": {
          "ref": "5929c02e-ed88-4630-8d22-137e4207262f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7a8a787c-b2ea-43e0-9aec-3114d22dca2b"
        },
        "item": {
          "id": "afa940f5-13d6-4db4-bc3d-86a7e77b1303",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "47887697-2018-4b74-b51a-22110084f2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cba901-bd91-41bf-b63b-f09268b98009",
        "cursor": {
          "ref": "f1454920-0d53-47be-a2cb-3ddc122338c9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a48494f6-a123-451f-a930-423c24d1cec9"
        },
        "item": {
          "id": "29cba901-bd91-41bf-b63b-f09268b98009",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "32502af0-bff6-46f0-acc4-ae7e96f2a5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872e51d4-3f5f-4cfe-9a2b-20f234ca8211",
        "cursor": {
          "ref": "5345d86c-9d56-4fdd-aa25-31769d15f74a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9f6a7bff-5f97-4f63-8f58-7438870f1950"
        },
        "item": {
          "id": "872e51d4-3f5f-4cfe-9a2b-20f234ca8211",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fdc9546b-7d18-4caa-871e-c0bb9a068a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695dba5b-434a-4a7a-b437-24eaa649ffb7",
        "cursor": {
          "ref": "58b53f4f-6a67-4d2e-82fe-6d7e3b8b10a0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "04fc8be9-22ed-4a5e-9d6b-0f5c497cb57e"
        },
        "item": {
          "id": "695dba5b-434a-4a7a-b437-24eaa649ffb7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e6fe5a29-f60a-4c08-85ae-62209eb20edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f045f32-c16e-4ef0-ae28-ce36078b7cd3",
        "cursor": {
          "ref": "912a0bb3-536e-4219-813b-596054bc0f4a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "18edd8f1-160b-4a80-831a-ed7969a64853"
        },
        "item": {
          "id": "5f045f32-c16e-4ef0-ae28-ce36078b7cd3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "affef59b-677e-484c-b0fa-dc373e673455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860a802c-7daa-48a8-9ff7-46cb966f8121",
        "cursor": {
          "ref": "7cdea069-aadc-4e42-a355-891ee38576cb",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "12ee8ffa-9d26-4e49-a56f-0bcfd43b9d39"
        },
        "item": {
          "id": "860a802c-7daa-48a8-9ff7-46cb966f8121",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6a9e4e86-f340-4a16-a252-621cee999120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f922fab2-7094-4a2f-9796-ab3f32eca0bd",
        "cursor": {
          "ref": "e57ded20-e8eb-42fb-a560-f4aca0772d4c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "403b758c-5c27-4b09-ac8a-efa346817b62"
        },
        "item": {
          "id": "f922fab2-7094-4a2f-9796-ab3f32eca0bd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "19a8ea9b-0e79-46ee-8288-21bf30493e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dca70d6-21a4-4882-a1c9-2eb099b99947",
        "cursor": {
          "ref": "8a348658-4027-4cf8-959c-581b86d8fb66",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7e224a38-80f7-42f8-9c56-e37c610be990"
        },
        "item": {
          "id": "4dca70d6-21a4-4882-a1c9-2eb099b99947",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "176db10a-421e-43b5-b0ae-df2c4e6a0800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df5c95a-f2f7-48cb-8822-09a670a0208b",
        "cursor": {
          "ref": "135bfbe8-6020-41b3-8e0a-5e0e7498dedb",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d31e8327-57df-4a44-9b65-485595236ff2"
        },
        "item": {
          "id": "9df5c95a-f2f7-48cb-8822-09a670a0208b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d164d8f6-2500-421d-a135-1dd7acbbb290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9da52b-8861-4509-b4cf-c0725ffe710a",
        "cursor": {
          "ref": "d48397cf-a0f0-4827-b1d0-b2b9f79fb914",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0aa24a39-3b03-4bfa-a8a4-a75461470d10"
        },
        "item": {
          "id": "8a9da52b-8861-4509-b4cf-c0725ffe710a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "db5351e2-fb35-4555-82d9-ca86843602af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bd1b4f-70b0-4db1-9e06-d7596ba15050",
        "cursor": {
          "ref": "48e316eb-e843-408c-84ca-95a1c6fe5300",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b69040fd-d4b9-4a47-b612-b16db54e129e"
        },
        "item": {
          "id": "c7bd1b4f-70b0-4db1-9e06-d7596ba15050",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dbcd8038-21d6-4e80-b48d-897d64a201f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78ec016-0655-4083-b947-a7481602cb18",
        "cursor": {
          "ref": "c8dd0dff-ac6a-44c4-aeeb-5fbd6783d965",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d51e2858-1103-42de-9871-577afb2b5bf5"
        },
        "item": {
          "id": "c78ec016-0655-4083-b947-a7481602cb18",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "83437287-4506-4b83-8762-f8684bd89547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047b0d57-89ea-41d7-a58d-42b8bc247bb4",
        "cursor": {
          "ref": "c74d8563-14f5-4d0b-84a8-a8c3e0da7537",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "383caf25-3f1d-4bed-a19a-32e0f87e3262"
        },
        "item": {
          "id": "047b0d57-89ea-41d7-a58d-42b8bc247bb4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a5195300-fd0e-4b46-a93a-7b672652adf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0c3215-1dd1-4261-a487-a2159c53010c",
        "cursor": {
          "ref": "97c92e5b-a03b-497e-8d33-7232c529bbcb",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a0f8062a-92db-4a1c-b1d1-e57f3a01a27d"
        },
        "item": {
          "id": "9a0c3215-1dd1-4261-a487-a2159c53010c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "25dc9cee-6492-48e0-8276-afa4a91ab81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38005721-6b81-4e76-b98c-3c52ff9a3153",
        "cursor": {
          "ref": "c7dcd0eb-795a-4f2a-8ee8-d430bfd9f6b1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "846e66d8-bc31-4e64-85e4-06f0fd45b220"
        },
        "item": {
          "id": "38005721-6b81-4e76-b98c-3c52ff9a3153",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7082a2a0-e1fc-4870-85ec-a2e156d29e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1d0863-9875-4a59-a56b-69e9a7e5121d",
        "cursor": {
          "ref": "2cbe6e13-d088-4ce0-829a-ffb038acd991",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a82dc35b-d06d-4205-88cd-c0d50733fca4"
        },
        "item": {
          "id": "eb1d0863-9875-4a59-a56b-69e9a7e5121d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aa87b70d-6ec8-4037-ae09-5221ec7a6e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab531ba-617a-433a-8b2d-06c2fe14b040",
        "cursor": {
          "ref": "fe927137-3ce0-448f-95cd-24fe2fe37583",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "25175f82-5d6d-47f4-a529-56402313d273"
        },
        "item": {
          "id": "cab531ba-617a-433a-8b2d-06c2fe14b040",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5d8916c1-1349-4f77-91ec-015cc668594a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb31ce83-9433-47a8-b8b3-de3aac6aeffd",
        "cursor": {
          "ref": "8745ebcf-ed15-4171-bebe-33d86cdd72d7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6cb8be77-de77-4a0a-8d00-10c8a439a69c"
        },
        "item": {
          "id": "cb31ce83-9433-47a8-b8b3-de3aac6aeffd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9e710a9-1be1-4b90-9006-d76e4b134439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85f0c33-a110-43f6-9065-1963d9fbeed8",
        "cursor": {
          "ref": "86626eec-c059-4a95-a4f3-99117e560866",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f37f3517-ed57-4dc3-b60d-2ddeb8c24928"
        },
        "item": {
          "id": "c85f0c33-a110-43f6-9065-1963d9fbeed8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bea665b7-8050-4257-8e51-dd673a97670b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b9f9fb-1f2c-4894-bb76-3eb1ec052236",
        "cursor": {
          "ref": "ddc6fbef-1305-49b8-a0f9-778a62e05511",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f7c6925c-51db-48d3-a52a-eddd54c3452c"
        },
        "item": {
          "id": "65b9f9fb-1f2c-4894-bb76-3eb1ec052236",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c8709c76-44b8-4f16-b587-730c395c27fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af8c5f3-4134-4ea9-b2fe-73118a7e5830",
        "cursor": {
          "ref": "536ad208-97e7-47bc-aec4-105472573cbe",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7e896dfa-1231-4146-a73c-ec0069dba15c"
        },
        "item": {
          "id": "4af8c5f3-4134-4ea9-b2fe-73118a7e5830",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5a446438-2d5f-4267-8b0b-adf5b15030e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bd3f68-185a-48a9-88e1-10aff6479864",
        "cursor": {
          "ref": "8a0e0b82-ba67-4232-b6f1-e024de2f9087",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f721b3f1-a2f1-4d13-9e8a-b09fbdd36089"
        },
        "item": {
          "id": "f5bd3f68-185a-48a9-88e1-10aff6479864",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d741b05c-4cc5-489b-86bd-225517780565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cdca33-5ba4-459b-a9cb-50c2fe98d413",
        "cursor": {
          "ref": "26d133f7-0ed7-4df8-8d0f-81f4b895f8c7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "762555bf-b687-450f-bec3-1ab0b0a076e5"
        },
        "item": {
          "id": "90cdca33-5ba4-459b-a9cb-50c2fe98d413",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d77d9feb-92fe-417e-a705-64d3c0c34a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fbaa0d-2b1e-48e0-87df-5683598bbc65",
        "cursor": {
          "ref": "78a178ee-37e2-4c1c-b602-c7354017d4c0",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "126f23a0-554e-4614-a9cf-eecec795d4ff"
        },
        "item": {
          "id": "06fbaa0d-2b1e-48e0-87df-5683598bbc65",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "21b9b104-9e77-4fc0-a7b0-8b0742b2f2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b8fb58-1f9a-4ca1-ae3c-f8d437850bc3",
        "cursor": {
          "ref": "60b6a42c-7311-4615-be51-ea7fb01b57e2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8e669d27-5e12-4ed6-9247-81284a56ccdb"
        },
        "item": {
          "id": "c8b8fb58-1f9a-4ca1-ae3c-f8d437850bc3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dad24ece-3208-4757-96c6-c3e435fdecc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd7127b-f9aa-4b19-9b4e-452dddd0c0a0",
        "cursor": {
          "ref": "8eda6603-b5c5-4aed-bdaa-cc553006c3f4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "feb8fa5d-0477-42c7-befd-b12c0f037b33"
        },
        "item": {
          "id": "4bd7127b-f9aa-4b19-9b4e-452dddd0c0a0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c9ee077b-85d3-4b35-a837-83eba2a1ea49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d200cc1e-7774-460e-add7-938667a1462b",
        "cursor": {
          "ref": "e9f787b1-4971-4b76-9b62-dcc04aa30c7e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "91063f4f-5411-4de1-b6c1-6b13279f77e5"
        },
        "item": {
          "id": "d200cc1e-7774-460e-add7-938667a1462b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "70e4b163-2e19-45f4-a7ee-40774c340436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f660ef83-ee12-4f12-baae-79c9b51ce39f",
        "cursor": {
          "ref": "03a22a3e-217c-4003-bd84-063f0b3b928e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "20a71f91-9d90-4abd-86bb-fc2b680a9114"
        },
        "item": {
          "id": "f660ef83-ee12-4f12-baae-79c9b51ce39f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4780e6a5-792a-43bf-af58-2b5884409186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b222cc-e196-4ae7-b14a-b11a733f58f5",
        "cursor": {
          "ref": "2c8e8f11-55ae-4541-8512-4d562a026a2f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aaec1895-85c9-49d1-ad7d-22d56e408305"
        },
        "item": {
          "id": "34b222cc-e196-4ae7-b14a-b11a733f58f5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "925d6539-3445-4011-a02c-77633aa3142b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a534d696-3f01-4e1b-9aef-c2bfa1a752c4",
        "cursor": {
          "ref": "2d1b5cfb-c3a3-4c7a-aace-69fa9933ed3d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "eeb9b70a-5a69-425f-a6d9-804ff09984d9"
        },
        "item": {
          "id": "a534d696-3f01-4e1b-9aef-c2bfa1a752c4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "783d23f4-6501-45e3-82fd-7fd543b29fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9677426f-d0ae-4be8-a9af-64b72010958c",
        "cursor": {
          "ref": "dc9b5e49-6650-477e-9b19-a4a8d2a5f5fc",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0e6b8ea2-e642-4a6a-b88f-7a13750990a8"
        },
        "item": {
          "id": "9677426f-d0ae-4be8-a9af-64b72010958c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e9d1dfb2-1acb-46ba-8a45-0d914bb7ef33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ba6e19-f394-43cb-abb4-79978f5ddf99",
        "cursor": {
          "ref": "224077f5-506a-4008-bda1-07eeb46d02d9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b8d9f101-ed0b-4463-aada-44b8ed5e6930"
        },
        "item": {
          "id": "59ba6e19-f394-43cb-abb4-79978f5ddf99",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "28910207-9dea-4fb8-98ac-6be5106e2ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194bf353-096c-4bd0-a8d5-7a0435953a21",
        "cursor": {
          "ref": "b565d625-6c1c-42f4-bdbb-2208708e5667",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8d9c8d46-a2ff-4c87-b9dd-03de5e9d3e2b"
        },
        "item": {
          "id": "194bf353-096c-4bd0-a8d5-7a0435953a21",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "313b63ac-8acb-4c86-bb59-bd2389706ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998745f1-3b82-4859-a92a-98b0ec856e16",
        "cursor": {
          "ref": "0e743179-0d18-4eaf-9910-50aef1ab2c86",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fc615c25-4198-458d-b532-b70c4fa5e2dd"
        },
        "item": {
          "id": "998745f1-3b82-4859-a92a-98b0ec856e16",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "32aaa20c-0f05-429e-87a9-818dc3195a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e576b5b-afc1-4f2b-94d5-5b38f7ff6421",
        "cursor": {
          "ref": "1d4db9d5-0587-4fe8-b594-1f081c89493a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a10b727f-bdb7-4ad9-a714-68577ef0d7af"
        },
        "item": {
          "id": "6e576b5b-afc1-4f2b-94d5-5b38f7ff6421",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "34ad7a54-60a7-4373-85e8-86b3a55447ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3baa87-37cb-403e-845c-ddf253a1a321",
        "cursor": {
          "ref": "c1e4ff6f-56fe-477d-b202-b269b0672ed6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "231e3a9a-cfcf-4bcc-a514-abe4d0d968ea"
        },
        "item": {
          "id": "5a3baa87-37cb-403e-845c-ddf253a1a321",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "76158b1d-283a-4d6b-8dbc-f552aa54d412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354ecc6e-2bfe-4411-9b9e-d5d256c75fae",
        "cursor": {
          "ref": "cc913e8c-8d4d-4266-beb4-fecf4abe1399",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c8cc8d2f-27ec-445f-ac61-a79d9de7d180"
        },
        "item": {
          "id": "354ecc6e-2bfe-4411-9b9e-d5d256c75fae",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a357128b-831b-448e-8d80-671e60472f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f51fa0-9ff8-4424-ac5e-0ceb53ad46ad",
        "cursor": {
          "ref": "49dffd18-a03e-409b-a983-5de791b153b3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4f57cc05-4c17-4603-a0f6-3c099fcb3bb3"
        },
        "item": {
          "id": "14f51fa0-9ff8-4424-ac5e-0ceb53ad46ad",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "666020ca-9b1a-463b-9e68-1b3ac2ee86f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85371a26-9655-475a-8619-9732986a0c3a",
        "cursor": {
          "ref": "a7129844-c2ad-401c-9d08-238be6a697e5",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "773c6319-c6ab-4691-830b-8f8df066a142"
        },
        "item": {
          "id": "85371a26-9655-475a-8619-9732986a0c3a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fe8cd191-c4c1-4421-aafe-27e465cd0231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e5d107-5b17-490f-8853-74a5b4134df6",
        "cursor": {
          "ref": "dddd1f14-4ac1-4d44-899e-3c2a58d2c8c6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "64824db8-419b-4560-a0d7-8e580c78bb09"
        },
        "item": {
          "id": "59e5d107-5b17-490f-8853-74a5b4134df6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e4020c8c-4eea-4fd6-9136-80984f6a802b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7e513b-13a5-492e-be18-a6945fba3e8d",
        "cursor": {
          "ref": "1ceacfb3-1149-4ab3-aa49-ddc1362b943e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2f74d874-e378-4b58-a6bd-03fa773a129a"
        },
        "item": {
          "id": "9c7e513b-13a5-492e-be18-a6945fba3e8d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8d4d032f-ceae-45fd-9be0-bfb352e1d919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ef11e4-1303-4df4-aa26-c16e9c3c2fc8",
        "cursor": {
          "ref": "1d26d056-1228-4f0f-94e5-b054ebdbb8bd",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dce000fa-1a1a-4fa8-b6f8-74e9d3596331"
        },
        "item": {
          "id": "05ef11e4-1303-4df4-aa26-c16e9c3c2fc8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8dae152a-f0e6-4c9a-84bd-1927ef6d6dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6406c1a3-229f-4dd7-a5ce-25599a4d2cda",
        "cursor": {
          "ref": "d9fdc1af-8f32-442c-8d76-a0f9d7cc5f61",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "77f42882-d394-4618-95c0-65f00445efa9"
        },
        "item": {
          "id": "6406c1a3-229f-4dd7-a5ce-25599a4d2cda",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cbdc1a82-ece4-41ea-8980-ca8d85e7164d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70b7ebc-6560-4499-8a01-9165d8858002",
        "cursor": {
          "ref": "b0ed5151-bf22-4ce6-a8a8-eadf671896e1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f355edb7-7692-4fe9-bc37-e11bbc7f4c4b"
        },
        "item": {
          "id": "d70b7ebc-6560-4499-8a01-9165d8858002",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5e1c8faf-c089-4643-a2ea-a2a2267b6f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2124a01-6560-410a-83fb-cb0683a37b3a",
        "cursor": {
          "ref": "23b57c1c-d186-4405-9173-0421cb672757",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8e624725-59f1-4683-908f-2ae4fa2e9607"
        },
        "item": {
          "id": "d2124a01-6560-410a-83fb-cb0683a37b3a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1060be0a-16b5-4314-9330-b299cd9be25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697c4b25-a667-4d7d-b193-f0f88108d752",
        "cursor": {
          "ref": "5905872a-287d-4f42-b0cd-7c8b285df000",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "96d6d250-e3c4-4221-930a-ca3160335643"
        },
        "item": {
          "id": "697c4b25-a667-4d7d-b193-f0f88108d752",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4aecaff6-a5bc-411f-a503-31dc630a1e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef70d07-82e0-4f94-a55e-03dd739171f4",
        "cursor": {
          "ref": "effa76eb-3982-422c-89ec-138fcc3fdd1f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0e787249-59c6-4b01-875c-63ef7f6d9c49"
        },
        "item": {
          "id": "eef70d07-82e0-4f94-a55e-03dd739171f4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c4756d96-ebb9-4ed3-a5ad-197c0362bc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bdfd2c-d431-4b18-8053-56652dd25d5d",
        "cursor": {
          "ref": "3acf460c-91a4-4cb5-a494-3834be295843",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dcb9e5d3-a0c9-402e-aae1-14ed35208b1b"
        },
        "item": {
          "id": "75bdfd2c-d431-4b18-8053-56652dd25d5d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11d9b38e-1453-4fad-a0b2-09e430893179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724b8d15-03d2-4f52-8c75-ca09d15ba4b3",
        "cursor": {
          "ref": "db58b46c-c78e-4cf1-8dd5-e57d6a5df6d8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3871e3c0-e357-4053-976e-60c3f3a92192"
        },
        "item": {
          "id": "724b8d15-03d2-4f52-8c75-ca09d15ba4b3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9f28c9e6-7b2d-4a49-bbf1-02125ba5f789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bf8434-0d7c-4895-89fc-91996e363422",
        "cursor": {
          "ref": "5e44e44b-1b02-4957-93b9-48f542696225",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "680da66c-bac8-4fc5-862c-aaeec7cfcc3c"
        },
        "item": {
          "id": "f1bf8434-0d7c-4895-89fc-91996e363422",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "df3d8ca4-8449-4a0f-88c1-e01d439e27ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092c79c5-908e-4fcd-8960-e3899f9ae1f1",
        "cursor": {
          "ref": "4ad325cf-9612-40fb-8eb5-97274b6788e1",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "64cc31e4-87eb-40b4-be8b-60dedb56663f"
        },
        "item": {
          "id": "092c79c5-908e-4fcd-8960-e3899f9ae1f1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1584714b-53f5-4b90-8ab8-82d58b27fd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2882e5-5cb6-4b70-960b-e3c48cce8295",
        "cursor": {
          "ref": "94502d84-4fa2-4aec-adbc-d1ec0932276c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dc82f145-bb0b-496a-8fe0-a3c44f43e245"
        },
        "item": {
          "id": "ea2882e5-5cb6-4b70-960b-e3c48cce8295",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d7093519-3753-405d-a7b8-36d80adad627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7324ab-c68f-4039-b424-e9ba4de15d28",
        "cursor": {
          "ref": "a91872dc-ad56-41a3-86cc-2a0de7099a6a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "480e7c1e-64ca-4896-9e5c-3b55a4636eb9"
        },
        "item": {
          "id": "5a7324ab-c68f-4039-b424-e9ba4de15d28",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "809459ba-302f-4580-b51c-071d300ef0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6146940-ac9c-4931-b69d-2b229fdc341b",
        "cursor": {
          "ref": "b8a2fc6e-7614-49ae-822d-cddc6f21db96",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2345607a-a888-4b3e-8bf5-48c04dc286fc"
        },
        "item": {
          "id": "c6146940-ac9c-4931-b69d-2b229fdc341b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f50b605f-055e-429e-8449-306b1c641510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd5bff1-20cc-4c55-9e13-6710f53bda81",
        "cursor": {
          "ref": "a8a490ea-4b5a-4139-8012-899b829b69e4",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "851d3df9-b035-4233-b1b0-4d8fc8974727"
        },
        "item": {
          "id": "5cd5bff1-20cc-4c55-9e13-6710f53bda81",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fc535ed8-10d6-44c4-b60d-f229de216ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c9153e-a603-4e84-a5bd-b46ced0b4be8",
        "cursor": {
          "ref": "3aa69ca0-b4b9-4170-89d6-29d9710714b3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "022724cd-406c-429e-9e31-e844d12a0df3"
        },
        "item": {
          "id": "a7c9153e-a603-4e84-a5bd-b46ced0b4be8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "530d185f-2faf-429a-b9b4-481ff7efddec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31073323-6922-452a-b8a1-8f313709a5fc",
        "cursor": {
          "ref": "59874058-387b-4bff-9304-9489a7fbb4a9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2381cb73-5d1b-4252-ba71-1cb095caa857"
        },
        "item": {
          "id": "31073323-6922-452a-b8a1-8f313709a5fc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "053200ed-d08e-47e8-b465-6bb614bb87da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85116b8b-79bb-4420-823d-f6dae9594277",
        "cursor": {
          "ref": "8e2bbe86-f7b9-44bb-ba31-d3d891170285",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6d201f37-6e59-4639-82b8-c242d714f94d"
        },
        "item": {
          "id": "85116b8b-79bb-4420-823d-f6dae9594277",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9aa84d14-a4d5-4461-a085-1f85b228e785",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e7c064-4f33-4255-91b3-1a3f03bdd0b4",
        "cursor": {
          "ref": "306c8f5b-ed90-495d-ad64-e44ead54ca50",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "15a86add-5eac-4081-a660-fe813e9b39fe"
        },
        "item": {
          "id": "10e7c064-4f33-4255-91b3-1a3f03bdd0b4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "46d4682b-ecbb-4ed9-99a3-cebca76e4757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b66600-708a-47a5-b658-8b6152d30aa0",
        "cursor": {
          "ref": "6d99a812-d761-44a8-9f8f-0358277c9c24",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1ebd5e16-a3ee-4b6e-b922-c8580b47ea11"
        },
        "item": {
          "id": "51b66600-708a-47a5-b658-8b6152d30aa0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4d89d444-00d7-474c-9607-5fbfa1057910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829cfc48-b4d1-43ba-8176-9602d7412cbd",
        "cursor": {
          "ref": "837d8f28-d2b6-49ea-a530-167b0fff0212",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "47f248d5-ee3a-4eff-adc3-943ebdd50b94"
        },
        "item": {
          "id": "829cfc48-b4d1-43ba-8176-9602d7412cbd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4899b5ac-cad7-4666-8af7-be7dd9c4713f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09054457-a182-4115-a24c-3350daf53dc1",
        "cursor": {
          "ref": "61e5f9f2-ccf6-405d-a25f-5158d914c8a9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6c3361df-2f64-448e-a97a-b301f72f8557"
        },
        "item": {
          "id": "09054457-a182-4115-a24c-3350daf53dc1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a3a40d28-de32-4871-952e-1c231ca5e5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545603f0-e7cc-4787-ae0a-77a77782d6f7",
        "cursor": {
          "ref": "25086655-e76a-472a-bb69-27d754b32e3b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "56594ee8-9b68-4e6d-9987-fba278f786e0"
        },
        "item": {
          "id": "545603f0-e7cc-4787-ae0a-77a77782d6f7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b7ab6420-e6fa-4016-8dc3-5146d54d5e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0526c197-48b0-4274-a3fa-5b5c4814d45b",
        "cursor": {
          "ref": "1c2c0d42-6977-40b5-84e7-1c3c055e8027",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "818045b2-1132-43b8-89b7-905f27a3957b"
        },
        "item": {
          "id": "0526c197-48b0-4274-a3fa-5b5c4814d45b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1e7badd5-cb88-4111-9b7f-8ee362792c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6930afe-de12-4160-8e47-106a7d75a2b6",
        "cursor": {
          "ref": "0ab967fe-ada7-4724-b73f-2435c2140985",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "514606dd-e8b4-4361-91f3-a3e6358c5772"
        },
        "item": {
          "id": "e6930afe-de12-4160-8e47-106a7d75a2b6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eeacae2b-c643-4707-b54a-d2e17d0d5c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d12f29-e4e1-4412-bd6c-d5254b8cc281",
        "cursor": {
          "ref": "ba513938-b3ee-4159-8662-cd6055fee96a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0271c71a-757d-4277-9e74-ecd1f4d295d8"
        },
        "item": {
          "id": "22d12f29-e4e1-4412-bd6c-d5254b8cc281",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "db0919bc-49da-4269-bc83-46265494c5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7a0da3-e2cf-4a62-9d58-8e251ffde50f",
        "cursor": {
          "ref": "c0d5819c-ba26-4922-bf53-dc4954d38c7f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "34a55354-de2b-4beb-9e84-5d90f74a4854"
        },
        "item": {
          "id": "7e7a0da3-e2cf-4a62-9d58-8e251ffde50f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "949f2d67-24bd-4880-ac74-6f11490a1151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6af9a5-94b8-429d-bb49-24948ef85fff",
        "cursor": {
          "ref": "4039365e-f95f-44cf-adf3-4359f53f6188",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e1174765-85d1-4b5e-886b-07b03cca3b49"
        },
        "item": {
          "id": "ad6af9a5-94b8-429d-bb49-24948ef85fff",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "114057fd-dda9-4468-9445-153996ee1219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d4455f-742a-4bd2-8a90-c267be880e44",
        "cursor": {
          "ref": "0ba1305b-9f94-4f03-936d-7319b9c05b1a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "61c7dd32-eb37-4cee-bf5d-48226dead47b"
        },
        "item": {
          "id": "a1d4455f-742a-4bd2-8a90-c267be880e44",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1dfb60e3-8cb9-4669-b3a0-4c37409a9e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b3663d-6a50-4706-9f26-e26fb8109243",
        "cursor": {
          "ref": "ce86b795-8945-4557-8867-4b7a8cd71bf7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "984dba85-5ab9-4ba3-9321-6335b87e8976"
        },
        "item": {
          "id": "12b3663d-6a50-4706-9f26-e26fb8109243",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d271769e-d7e4-47e9-b34a-ac586c42114d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e729e82b-7b16-4cb2-b5fe-d6a3ed7f6fc7",
        "cursor": {
          "ref": "21de4fe4-2569-46e1-9c0b-93351fba0494",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "67828b2d-1ea1-43fa-8094-e2509a7105e5"
        },
        "item": {
          "id": "e729e82b-7b16-4cb2-b5fe-d6a3ed7f6fc7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a573140d-c7af-428c-951f-11a5146e6567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9e8d19-5671-4ed0-a972-c9cbf2f93dd9",
        "cursor": {
          "ref": "9846cf1a-7323-4e6a-b1b9-d61e3748830b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cc059f5a-4f32-4303-a11f-35035984f28b"
        },
        "item": {
          "id": "9a9e8d19-5671-4ed0-a972-c9cbf2f93dd9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0786fb7a-be9c-40bd-9a5c-cd19c381452a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291dd216-49f0-4f89-98f9-ca78275a018b",
        "cursor": {
          "ref": "27595d99-2713-426a-8df6-f0867aa04951",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fa940d92-4b5d-4653-8a76-3a2dfe1443b1"
        },
        "item": {
          "id": "291dd216-49f0-4f89-98f9-ca78275a018b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8eba6e0d-5218-425d-a666-f71432a83443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748bd388-00a1-4201-b742-8ec516799831",
        "cursor": {
          "ref": "f0e0a19b-98f5-4632-b66a-6ec464a67ff8",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7c68473-3038-46ee-9987-7a9a069cdd43"
        },
        "item": {
          "id": "748bd388-00a1-4201-b742-8ec516799831",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "677c8708-35c3-4afe-8cf2-fdf1c39bf86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89199cfb-fff9-408d-9202-854434c19e5f",
        "cursor": {
          "ref": "b854a29a-79a6-46c6-a0d1-a356740eb0ff",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6bde74ed-e650-4dc4-a441-dfbfcb4b3cd4"
        },
        "item": {
          "id": "89199cfb-fff9-408d-9202-854434c19e5f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "41eeed23-1d88-4a48-954b-f1646bcbfe11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d60d852-ad65-4a5e-8670-da1c1a573230",
        "cursor": {
          "ref": "c70a807d-dd6b-4121-8d8b-52aba73d5c2f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3b92c7ba-00aa-441e-b730-a7c0f3afede7"
        },
        "item": {
          "id": "5d60d852-ad65-4a5e-8670-da1c1a573230",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fd4dd23b-42f3-42d4-8c3f-20e96c38f3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919fad5c-cd52-4ba9-9cc6-3e5a0a626571",
        "cursor": {
          "ref": "a8279275-743b-4ea5-a408-176330ecc62c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f929917f-76c2-492f-9801-3fc49a004719"
        },
        "item": {
          "id": "919fad5c-cd52-4ba9-9cc6-3e5a0a626571",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ae6b6fa3-ffbb-4b59-aa82-28d76ed772bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f637d1-43e0-4eb7-910a-c410fef57b58",
        "cursor": {
          "ref": "665e31ea-2fc3-467e-9312-c4b14b1a19e3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1ae34697-5271-4cd6-9a9d-b45224237b2d"
        },
        "item": {
          "id": "b6f637d1-43e0-4eb7-910a-c410fef57b58",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a48f84c6-172e-46f4-838c-3c83227640e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130cf0e8-266b-408f-aca1-e4a17a07b850",
        "cursor": {
          "ref": "b2ee93e1-4184-4db9-9a40-c207155eea90",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b1481245-9604-4a8c-a8f5-54bdea034666"
        },
        "item": {
          "id": "130cf0e8-266b-408f-aca1-e4a17a07b850",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1278278f-7c00-4038-af29-982dec333dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ae86dd-b1e1-4794-b89c-3849714f9f39",
        "cursor": {
          "ref": "1901f453-b1bd-4fef-98e8-06a15b416128",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "00b3192f-e802-48c5-9eda-5bec38d7ed47"
        },
        "item": {
          "id": "31ae86dd-b1e1-4794-b89c-3849714f9f39",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a2a4846c-fb5a-40a9-8dd6-62a6cd3ae21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf63324-f502-4e4c-a7f9-7a19ebc38211",
        "cursor": {
          "ref": "c0f9791b-92dd-4d3c-9f42-c831c4f07a98",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "28b92473-cf04-4500-8ab4-cb2a219a8be4"
        },
        "item": {
          "id": "dbf63324-f502-4e4c-a7f9-7a19ebc38211",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3067f61a-87f1-4122-926e-f1e8806392a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0efcf95-1593-459b-a85e-439f13658e75",
        "cursor": {
          "ref": "29c18769-9b56-43f2-bce7-ef21cf14eb15",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "880c00d1-7256-46da-856b-6846ee6a6c92"
        },
        "item": {
          "id": "b0efcf95-1593-459b-a85e-439f13658e75",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "44a3c870-b7f2-4ec8-9b62-54573845cef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21a0ae8-f46a-4059-a42d-bb36b83109b2",
        "cursor": {
          "ref": "0898c2dd-5f2d-4eef-8ff0-0b06b11ed45d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "15bf9c53-d5f5-42db-90f3-cdaabf0a2452"
        },
        "item": {
          "id": "b21a0ae8-f46a-4059-a42d-bb36b83109b2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d9fc205-68e0-47f2-86f5-a034588be3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5635cb-0253-4528-88ef-f3274a1c9ac9",
        "cursor": {
          "ref": "34edd45b-666d-41e2-b539-ebc98d3455de",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "10b4cb54-a48a-4152-8d31-0f52f570a14d"
        },
        "item": {
          "id": "ce5635cb-0253-4528-88ef-f3274a1c9ac9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e64c717c-b88f-4585-8d83-674d294f9131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98069255-419b-4099-9fa3-a49f81b39e9d",
        "cursor": {
          "ref": "6a1e3327-009b-41df-a1bb-0764af20bf3d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "74bf8418-c7d9-416f-9ef3-a1fce81bb8cd"
        },
        "item": {
          "id": "98069255-419b-4099-9fa3-a49f81b39e9d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8153907e-2ae9-4706-bd0c-b9db3c3fc897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71f812c-c859-4670-a747-98a6fd375e6f",
        "cursor": {
          "ref": "2b72b528-d4a2-4353-b832-cb6ed932592c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7ca1c5ef-cdd7-4215-89d7-5c6717912acc"
        },
        "item": {
          "id": "f71f812c-c859-4670-a747-98a6fd375e6f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cafc320c-00e7-493e-898e-185970c71962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d205d62b-e30b-4fb9-a728-ed43e2802d67",
        "cursor": {
          "ref": "a0489cc1-f275-431e-8776-117bb9c40902",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "13d53ce8-1edb-4721-8aa9-b78194c1f104"
        },
        "item": {
          "id": "d205d62b-e30b-4fb9-a728-ed43e2802d67",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "829ba788-b56c-4ef5-8a24-2d4bc2f9bad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532c27d0-baca-4a6a-acf3-a55c9b37403f",
        "cursor": {
          "ref": "6cc705b8-6fd6-4cde-b5a9-3879d30d7c9b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "88e0b75b-e0b7-4931-a702-8eca7560d84e"
        },
        "item": {
          "id": "532c27d0-baca-4a6a-acf3-a55c9b37403f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "35a07417-d446-4d7b-bb9a-1793b4c72f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fe74e4-8ea7-4a69-b74e-97f44d15273a",
        "cursor": {
          "ref": "81fd6143-01b8-4c07-9e30-bb654fa4102f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "abd99d36-5293-4c11-bfef-9034979c55a7"
        },
        "item": {
          "id": "55fe74e4-8ea7-4a69-b74e-97f44d15273a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da5a1e8b-5301-4e33-96a4-7b63a521a1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcdde2f-1e06-4009-be4a-282fac73e700",
        "cursor": {
          "ref": "c69830b5-94e6-4a89-ac3d-88125afa62c3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5f21d4b4-b695-4b8e-9e90-97d26e530f33"
        },
        "item": {
          "id": "1bcdde2f-1e06-4009-be4a-282fac73e700",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c9e5cd31-3d1e-43cd-9960-97f16f0b700b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f530dd-cf77-4e6e-a800-f6f419feee47",
        "cursor": {
          "ref": "02a99438-edc7-464a-9d77-c43146ba9a9b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ae24838d-794c-4cde-9e1b-a4faf171b756"
        },
        "item": {
          "id": "d9f530dd-cf77-4e6e-a800-f6f419feee47",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e5e5f6f8-aebb-4096-ba5d-6263fb119a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f032d5-227f-4a61-8fde-b4bd1c15ed89",
        "cursor": {
          "ref": "e6aef58a-ab96-41f2-97cf-3f79e7fbc0df",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e8474032-cbea-4bed-b0ed-f521fc73e3d5"
        },
        "item": {
          "id": "61f032d5-227f-4a61-8fde-b4bd1c15ed89",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f43cea7b-eca4-4a89-b42e-23b4f064c7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9c5fc7-fc6a-45a2-ab78-ddd078df7631",
        "cursor": {
          "ref": "8aa4ed81-ecbc-4d4f-a92c-1a15d40b6281",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2fbffc30-e95e-47ef-9f66-a60897c00e9a"
        },
        "item": {
          "id": "5d9c5fc7-fc6a-45a2-ab78-ddd078df7631",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8b277fec-0488-40ca-8573-388b60b0cab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328a728b-5ced-4078-bc47-81270cbaa885",
        "cursor": {
          "ref": "0b098506-501b-4179-a3a7-6efb66b5c6c7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ece82958-3667-4594-b599-60a61508a84d"
        },
        "item": {
          "id": "328a728b-5ced-4078-bc47-81270cbaa885",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "73b60634-48ea-42a7-b63e-95612ce2bfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c00985-c0b8-486a-9181-e0f19ee702f2",
        "cursor": {
          "ref": "6bb5425f-c254-4cca-9620-330a7ccec736",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9a61d88b-d971-49d1-86a0-c4d757430b22"
        },
        "item": {
          "id": "10c00985-c0b8-486a-9181-e0f19ee702f2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "91c4cabf-2ca7-46c8-8012-d10c845dd3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31464006-8922-4610-8ae4-209b9f31ced0",
        "cursor": {
          "ref": "119fc613-b466-4443-93b6-3c017564535f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cf1e505e-70c6-4b68-abd9-d477ef422341"
        },
        "item": {
          "id": "31464006-8922-4610-8ae4-209b9f31ced0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5c396d97-268d-45f8-a774-40ff3b324027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be65c34d-520c-4e31-9ec4-a5119d085980",
        "cursor": {
          "ref": "d577f3ac-d670-400f-88de-32433041d640",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b3070fa4-80de-4247-bc0f-4a327dba65c0"
        },
        "item": {
          "id": "be65c34d-520c-4e31-9ec4-a5119d085980",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "07eaa5e3-3637-4c02-b975-20abb937d815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4fcb10-4df9-4f06-8c8b-dd42916ad48d",
        "cursor": {
          "ref": "874065a9-027d-4f90-97bf-54f6adcd4e36",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "41b084ae-cde6-4a4d-b94d-01bd26244d29"
        },
        "item": {
          "id": "bf4fcb10-4df9-4f06-8c8b-dd42916ad48d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5a5cca57-5fb0-4b20-a520-9c1eebe7fd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336fe5a2-f2f7-4dd4-927f-f0975577924d",
        "cursor": {
          "ref": "2b92c718-5f65-49d2-b8f7-e9a0e8d80ff9",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7acb4278-9a3e-4e27-be0b-73124ceecbee"
        },
        "item": {
          "id": "336fe5a2-f2f7-4dd4-927f-f0975577924d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c7986c42-1f64-4862-ac9d-1771d0e556b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2005d2-c0d8-46da-9da3-490d57ab14b9",
        "cursor": {
          "ref": "a1417fe7-d695-4366-b75a-4455f80be247",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ae63bffc-b15f-4148-bdf5-b046b7185ed3"
        },
        "item": {
          "id": "6a2005d2-c0d8-46da-9da3-490d57ab14b9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8779f7dc-da7e-4ad6-816e-ccbe7f0618f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a0948e-5a93-4266-ac25-de874b93ac8c",
        "cursor": {
          "ref": "4bd5b80a-f079-442e-a481-2f7e189d6781",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9ee1d427-ab55-4a61-a1f6-45e59ad768e9"
        },
        "item": {
          "id": "19a0948e-5a93-4266-ac25-de874b93ac8c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "40abd787-4edd-47db-84ee-e715f6c30e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5138ea-3366-452e-b012-21c00a3bf921",
        "cursor": {
          "ref": "9428ddbf-667e-465c-a097-4736d8c0bc25",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f4f5ef89-4124-434b-9788-4dda52e804dd"
        },
        "item": {
          "id": "9f5138ea-3366-452e-b012-21c00a3bf921",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6ca12645-269f-46a2-8418-2589263c647a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e438c0c-9c35-4cf7-9449-80d963127598",
        "cursor": {
          "ref": "b806987b-8992-4810-9b4c-739f4b8de832",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ac93401c-2fb1-42b5-9c58-f317e7437093"
        },
        "item": {
          "id": "4e438c0c-9c35-4cf7-9449-80d963127598",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "058e24bf-bb44-4765-b659-943e59402ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4cadb8-2913-488d-b3e4-4c6f0be37f48",
        "cursor": {
          "ref": "a3df5278-d1f8-4025-abaa-f140a4b85e89",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e567a7d9-a50c-46ea-ba83-5ffd22f547fe"
        },
        "item": {
          "id": "bb4cadb8-2913-488d-b3e4-4c6f0be37f48",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a6eedc97-7f61-4e52-8552-db1115a1128d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a32783-8ff1-4425-993c-1b9e2255a3bf",
        "cursor": {
          "ref": "37094346-ac4f-4e6a-bd01-c76ec9f198e5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "eaf03f3d-2d73-4da1-b0f4-bed9e9cca098"
        },
        "item": {
          "id": "a3a32783-8ff1-4425-993c-1b9e2255a3bf",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9a298013-35cc-4924-8e1a-968858b108c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddd1d1a-db53-4f51-84c5-37aa56ac7c46",
        "cursor": {
          "ref": "330577b3-a6c8-47eb-b8b0-bf468be0a62f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "27abd98a-7328-4042-b572-94ac824285ca"
        },
        "item": {
          "id": "0ddd1d1a-db53-4f51-84c5-37aa56ac7c46",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9bc94cbf-8d09-4564-ada2-28321f9a760f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53e19ec-21a3-4c42-ac58-50e808cd081c",
        "cursor": {
          "ref": "5ec07bc2-8e57-4fc1-8876-34f815cdecb5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cedb284e-6dc6-4a0c-b566-c40657f669de"
        },
        "item": {
          "id": "c53e19ec-21a3-4c42-ac58-50e808cd081c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f5583daf-9e22-4411-a92d-19fa49abedd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcfdb94-51f4-4e60-9ac6-ea89cbbbb712",
        "cursor": {
          "ref": "9345c2ab-ec43-4346-b54b-fd1835117c48",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9d3c0a68-49c9-4d47-859d-f33814f31f55"
        },
        "item": {
          "id": "4fcfdb94-51f4-4e60-9ac6-ea89cbbbb712",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cad65d4d-5b6d-4000-8f4b-b673619f38f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8cda50-05b7-4f57-8e03-5f09d0c844ed",
        "cursor": {
          "ref": "617cb165-1301-407d-9cb2-c20fccbc7752",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "37a4d524-27fc-4b08-866a-ee9d73af12d5"
        },
        "item": {
          "id": "ec8cda50-05b7-4f57-8e03-5f09d0c844ed",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "954eb9e1-7bcf-4b54-8636-0da294dbc74f",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "a8c16f46-203b-45de-8372-e2997f735214",
        "cursor": {
          "ref": "97d3f742-7b65-45fe-96e5-60d996cbcab6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0ea6ba32-b362-4b20-8049-cc8055f1c0a0"
        },
        "item": {
          "id": "a8c16f46-203b-45de-8372-e2997f735214",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "88327ef5-61b8-4882-8727-6949414f7cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6bcb1d-4ee9-4c88-b994-f10b55eeeb4f",
        "cursor": {
          "ref": "d851f59a-4920-473b-8213-03f745865597",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0b0e1ef2-8f23-4003-ac83-490f14cac5c8"
        },
        "item": {
          "id": "5f6bcb1d-4ee9-4c88-b994-f10b55eeeb4f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f76f2756-7712-464e-94c1-ae164eea85c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5882925-43ae-4db4-b64e-52d119bd5999",
        "cursor": {
          "ref": "3bb07557-a0db-4c81-a9b9-8876c935d721",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "146b0f07-f901-4712-8e72-be035734215c"
        },
        "item": {
          "id": "f5882925-43ae-4db4-b64e-52d119bd5999",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b7d26647-ad8f-494d-9e1f-619de056488a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c862f28-284a-4b99-a05c-224a6bb2d065",
        "cursor": {
          "ref": "ba36bda7-5663-4715-a6ea-633391aba780",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "71194521-ef25-4afa-8df6-9618ff5147c3"
        },
        "item": {
          "id": "3c862f28-284a-4b99-a05c-224a6bb2d065",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6b03a9d3-c93f-4cf5-9517-a90a6adb8cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396d1ec7-2dc2-4cc8-ae33-8b36e81a770f",
        "cursor": {
          "ref": "a597ad66-ba93-4b02-8553-be5a6e67cba2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "45c62923-bf22-44da-a106-fe2f6f91fa73"
        },
        "item": {
          "id": "396d1ec7-2dc2-4cc8-ae33-8b36e81a770f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cc8992d6-767e-4ee1-9e61-785353b56733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e98f07-e5c5-4d71-963f-28b0fa62393f",
        "cursor": {
          "ref": "8b5e640b-5e28-4986-a33b-3458cbaeab2c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8c9b2ae-5c87-498c-b950-5a66630d5f1c"
        },
        "item": {
          "id": "b8e98f07-e5c5-4d71-963f-28b0fa62393f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "79f5eef2-8613-4a9b-9651-a2839236a2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd52a6-be14-42f0-90f3-67f304a2c60c",
        "cursor": {
          "ref": "8e5a6a56-e2c6-44cb-86be-11b1afd7952e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a9a187e5-25da-4e8b-984b-6284b802b4ab"
        },
        "item": {
          "id": "7bbd52a6-be14-42f0-90f3-67f304a2c60c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ba6e6903-008b-4b13-ab4a-9314a962f26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce5300d-f11e-4ad2-9e94-425b4e845711",
        "cursor": {
          "ref": "1f2da600-841d-4aaa-8e7a-41cd5b7c2326",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a2883c63-d12b-46d3-a5f0-28ae1cdb9e35"
        },
        "item": {
          "id": "1ce5300d-f11e-4ad2-9e94-425b4e845711",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "71965aa7-8478-482a-9adc-1b68cb10426a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff5a346-42b5-4e41-867a-c5bbcf5b04da",
        "cursor": {
          "ref": "03cc5e96-f114-4256-9a9e-996840460a27",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "81498470-a250-4f32-8daf-fb5693ec8971"
        },
        "item": {
          "id": "7ff5a346-42b5-4e41-867a-c5bbcf5b04da",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "45ea7ee6-17aa-4ddb-a563-98e52259e9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473b365b-ec86-485e-a8e9-1652c3140e60",
        "cursor": {
          "ref": "9775ebb9-e677-4d41-a93e-a4f1aafbe99f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7e6c7e3c-6fab-4ee4-933b-d2cd78a08621"
        },
        "item": {
          "id": "473b365b-ec86-485e-a8e9-1652c3140e60",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "15a4461b-4793-4869-b3e9-2a2f8aafa4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03744009-0508-47ba-8f4e-76d71de4e1f0",
        "cursor": {
          "ref": "9db50fdd-641c-406a-a5bb-36fbe5297214",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1302065d-fb07-4bf3-a73c-f6cc7b9653c6"
        },
        "item": {
          "id": "03744009-0508-47ba-8f4e-76d71de4e1f0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6725ddbb-f502-46ed-b7a1-e5e386f294ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cbd790-7857-41bb-81c5-8b67d07ca294",
        "cursor": {
          "ref": "b296b0ec-58e9-4521-ab08-026c8270e624",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3fb95c4e-9c83-421e-be44-5e8abb6caeb8"
        },
        "item": {
          "id": "27cbd790-7857-41bb-81c5-8b67d07ca294",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "45b1e1c4-53a0-4498-887f-4991efe1e3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186098a0-54c3-44a9-8278-a5b9d84d0112",
        "cursor": {
          "ref": "bc3e9d4a-b77e-4d37-914f-a1edd0f0b701",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9d025cbd-4fec-4476-a183-3a6aec865b15"
        },
        "item": {
          "id": "186098a0-54c3-44a9-8278-a5b9d84d0112",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4c7ea965-619b-4ab0-a3e6-90d192627a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06425f6-01f0-46ea-a4a8-6c765cb4f77d",
        "cursor": {
          "ref": "88735e52-9604-4842-b1f9-b29b3559439e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5d375ed6-bf24-4793-9938-0853af78412d"
        },
        "item": {
          "id": "b06425f6-01f0-46ea-a4a8-6c765cb4f77d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f652fb6f-32c2-4f6a-9ac8-942ac4272fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f56936-c079-4e63-8a5c-0302188b64eb",
        "cursor": {
          "ref": "f2744886-ae9e-4686-aa81-d1a250d04053",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e6edc223-c120-4459-ac40-1a4ce269088d"
        },
        "item": {
          "id": "c9f56936-c079-4e63-8a5c-0302188b64eb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5357224f-7e02-4b0d-adf2-03ef4dace31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e20ff9-9c30-44b6-962a-eb160f6df776",
        "cursor": {
          "ref": "e1c9caba-d40c-491b-8d4c-a0fc4cfefc4f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c4530026-be55-46e8-8bcc-a2e5fbb23ff8"
        },
        "item": {
          "id": "95e20ff9-9c30-44b6-962a-eb160f6df776",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3ec99810-1974-491d-8cbe-9973e32cfe03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f341e05-70c1-4f7a-9df7-da381adea97c",
        "cursor": {
          "ref": "3f3162ab-192c-49f9-a070-7ee506245285",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "91475d1c-c308-48b0-913f-48b30322928e"
        },
        "item": {
          "id": "1f341e05-70c1-4f7a-9df7-da381adea97c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8c26a175-84e6-4a52-bd26-e7964c57f9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c6f6e4-8664-455a-b654-fdf7dd624ee6",
        "cursor": {
          "ref": "add5bd35-9f17-4063-a7c9-467b97e0c364",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4131ec19-729f-4077-ab75-65b5adf803a3"
        },
        "item": {
          "id": "d7c6f6e4-8664-455a-b654-fdf7dd624ee6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4d879c91-1ee2-411d-9c06-0e6af659256b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d229fb8-74a9-4e10-a98d-beca358db186",
        "cursor": {
          "ref": "4bb7e3fc-2669-4bb2-9660-42e69c8e5df1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a7206bc9-e314-40da-ac9f-170d86d89d8e"
        },
        "item": {
          "id": "1d229fb8-74a9-4e10-a98d-beca358db186",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "808de6a0-acfb-426c-8b94-28a99f1cf86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb18312-cdc3-4628-87f3-9004111b4d45",
        "cursor": {
          "ref": "a9411e81-0909-4e0e-89f9-93f1f222f972",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1bb982fc-a350-4cfe-a39e-926d65c016ea"
        },
        "item": {
          "id": "dfb18312-cdc3-4628-87f3-9004111b4d45",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "39affad8-48b0-437f-ac2d-d34c306ae4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d70e99e-d722-4fc0-b575-2764e3ef4226",
        "cursor": {
          "ref": "9d7f9944-ef7c-450c-aa9f-905baa575f48",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dcb45d8e-d160-40c4-b0d8-4c97ab27bee5"
        },
        "item": {
          "id": "7d70e99e-d722-4fc0-b575-2764e3ef4226",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "51c3a2de-0889-4f82-8e71-dbc91e10a219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61324cf6-b288-4771-98cb-bea99133a1b3",
        "cursor": {
          "ref": "2a08832c-b24a-44d8-bd5e-0b9d65883c05",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c6c6275e-b7b7-444b-be0c-17e248de1d0e"
        },
        "item": {
          "id": "61324cf6-b288-4771-98cb-bea99133a1b3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cc115e8e-1db6-4221-9bf3-e7699b59507e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cda75c-1d32-4b00-ad62-b164e018cb01",
        "cursor": {
          "ref": "af0ae492-5655-41cc-81b5-40cee073653f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8eb5eece-17ed-4d5c-9116-19c4eff0ec6a"
        },
        "item": {
          "id": "61cda75c-1d32-4b00-ad62-b164e018cb01",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "049d346c-44ff-4f7e-9465-1be828c0f91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95bec34-bb13-4716-874d-2b7398562d86",
        "cursor": {
          "ref": "e1f31db3-734f-4d1a-b305-26460de3a793",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e2788a65-b6d4-42c7-b61e-b062f52deda0"
        },
        "item": {
          "id": "b95bec34-bb13-4716-874d-2b7398562d86",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b8ca20be-1ae6-4cdc-aa36-e6a9b4a7b665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da13a9b7-d672-4611-a751-f08986754b59",
        "cursor": {
          "ref": "84ee3638-60e9-419e-9997-566daa53a350",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5842e93a-f66f-43b4-afaf-73d33d60d5c3"
        },
        "item": {
          "id": "da13a9b7-d672-4611-a751-f08986754b59",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "06b6ac3d-5144-45bd-a5ec-f6f260ee0c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08de2797-9d3e-4c9c-b92e-a7b7ab2978aa",
        "cursor": {
          "ref": "31b8c6bc-dda4-4c68-ab1a-cd3eddd4b3e5",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "357626e1-4c57-45fb-8a59-047da7c80c13"
        },
        "item": {
          "id": "08de2797-9d3e-4c9c-b92e-a7b7ab2978aa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0a109f50-76ae-4b55-8743-1b411cac4337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e62e05-fa5f-4310-8d2a-1a4c247d44c5",
        "cursor": {
          "ref": "0d186ba2-e537-4d67-bb75-7585a9256148",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "59d42433-06fe-4648-aa7e-a5475ae31562"
        },
        "item": {
          "id": "76e62e05-fa5f-4310-8d2a-1a4c247d44c5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "59912a3c-26d9-45ec-8cda-26f4c3efdb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41bd835-8af7-49f7-acde-5f7fe65be3e5",
        "cursor": {
          "ref": "8efddd30-72df-48ef-8578-d6ba64c02e62",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e75ad6d8-f3d1-4013-b6c8-38a9171f03e4"
        },
        "item": {
          "id": "e41bd835-8af7-49f7-acde-5f7fe65be3e5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3a5fe7e5-2c97-4eff-952e-1d583d8b7db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a32a91-dff9-4439-a774-9a91ce2abbd6",
        "cursor": {
          "ref": "5050f866-59af-4802-8377-e9223495f9ae",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "322f44cd-da34-4826-bdfe-fd6649072a61"
        },
        "item": {
          "id": "03a32a91-dff9-4439-a774-9a91ce2abbd6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bb53f765-c4ff-4dd6-86e8-9d7abf023d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7f3ffc-9a62-432f-897d-8d32b471b302",
        "cursor": {
          "ref": "fa355941-5700-46d0-95f5-816bfbe30cc4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "57292ce0-1180-409c-a11d-534bb785c530"
        },
        "item": {
          "id": "dc7f3ffc-9a62-432f-897d-8d32b471b302",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0a0e0e29-dafc-4b43-8526-f31bbb0d4e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33abd5ba-1371-4956-8ebd-d3a1ab7b1af1",
        "cursor": {
          "ref": "74837bbb-57cd-47d8-8181-38cf4cb90252",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e52dd559-6f95-4fec-b004-818aadd774c8"
        },
        "item": {
          "id": "33abd5ba-1371-4956-8ebd-d3a1ab7b1af1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9213811e-cb21-4e03-97ea-9513309b34b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25635059-96ee-4bf0-b815-f19d0c748cbe",
        "cursor": {
          "ref": "8e2a41aa-69a2-4a64-9dc5-c5cea4c61adb",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8921f073-bce7-464b-a86a-2b8a2947b056"
        },
        "item": {
          "id": "25635059-96ee-4bf0-b815-f19d0c748cbe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "980a01d3-cb8c-404f-9d94-841f22d3ac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaa6f41-e092-4e5b-a57a-8d5be2571d85",
        "cursor": {
          "ref": "c354dfb2-603b-4124-9b20-f4115b5718da",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8c4807ad-a671-4d15-aceb-50272fc9e787"
        },
        "item": {
          "id": "ffaa6f41-e092-4e5b-a57a-8d5be2571d85",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a2f94003-8866-4921-a39a-2347ae62b891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7eeeb4-ce85-4c36-a11e-632330f307c3",
        "cursor": {
          "ref": "84165e9d-82d0-4f3b-8ecd-45b766f23942",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0dc509c2-528f-4983-bcc1-4c9ab0e7a8c9"
        },
        "item": {
          "id": "2e7eeeb4-ce85-4c36-a11e-632330f307c3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e715a1ce-5317-4ef5-87fd-9df99fed8efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ccae05-2a66-4eb8-ad3c-169f97f4c148",
        "cursor": {
          "ref": "3d050366-aeda-41a0-ae52-909ed8bc8163",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "afaca9c3-fe52-4a0f-9d77-1107c1e8e444"
        },
        "item": {
          "id": "48ccae05-2a66-4eb8-ad3c-169f97f4c148",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bdb821fc-26ad-461b-acdc-8163969e8961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee084249-471a-494f-9dc7-dfa07f6b8c14",
        "cursor": {
          "ref": "f6b19981-bfbd-472e-a6f1-eaa63041aec6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "38571a81-011a-457d-b365-d3bb72ba8ba4"
        },
        "item": {
          "id": "ee084249-471a-494f-9dc7-dfa07f6b8c14",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2a2c1890-604c-4c4a-9505-0734abb6f503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7269b96-7820-43f9-ac32-c8e4f88926da",
        "cursor": {
          "ref": "d1020e1b-38be-4a60-b955-8db9641a686e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d178d984-40f0-4bdb-81e9-b22e6a51ebca"
        },
        "item": {
          "id": "b7269b96-7820-43f9-ac32-c8e4f88926da",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2b885f6b-6268-4985-9cd9-510935be411a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a3f0be-aa07-4454-8239-ef78f1706c37",
        "cursor": {
          "ref": "be57b568-d270-4265-99c6-38231f7ed938",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4d44a2bd-1029-4094-8399-9eb95db86653"
        },
        "item": {
          "id": "45a3f0be-aa07-4454-8239-ef78f1706c37",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b1558a9d-5b91-4e8e-a332-3bd0ab06eb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17329816-7956-49fd-a72d-7ccbb034b7ea",
        "cursor": {
          "ref": "f14914ef-26d8-4578-8fc5-56e1ca70a3e6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b5a9fcda-6eb8-4c6a-8d64-50c59c6d3e82"
        },
        "item": {
          "id": "17329816-7956-49fd-a72d-7ccbb034b7ea",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b57d1307-0059-49b9-80d4-2674434912a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dd62fd-199f-4646-8646-5738b0194bee",
        "cursor": {
          "ref": "afd9375d-d53a-41dd-8d56-74072850008b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4cfeaba0-7ff2-4627-b935-c00aec080963"
        },
        "item": {
          "id": "c9dd62fd-199f-4646-8646-5738b0194bee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e187357c-ed36-4a68-b3fc-4165b561c035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a76259-47b8-4c98-8afc-805fdf9624eb",
        "cursor": {
          "ref": "37746bfd-7fed-4e81-9c61-344c78668fca",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ca845d9b-c2df-47d5-b882-8e0f50c74d7b"
        },
        "item": {
          "id": "57a76259-47b8-4c98-8afc-805fdf9624eb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c925ecb0-ea6e-46fa-b238-a5253aecb099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e212d3d-5293-424d-b081-7dc07ff64bec",
        "cursor": {
          "ref": "6ca439db-3eed-4022-b679-e31cf413a2f4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a54eb8bf-a589-4eaf-9939-ab2137189aca"
        },
        "item": {
          "id": "3e212d3d-5293-424d-b081-7dc07ff64bec",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e8ae7ff5-fcb4-4c4f-aed5-caf57299ecaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e51492c-c35f-4d28-9e1d-f203989c5426",
        "cursor": {
          "ref": "ec812377-0556-4bb7-97a5-d85ddcd6a057",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1fb3251b-154a-4d1a-866b-1e5ece5e1344"
        },
        "item": {
          "id": "3e51492c-c35f-4d28-9e1d-f203989c5426",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5d6ff3d6-2015-433f-a9ad-e522fb83759c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09fe6d6-ec41-4102-9239-47f57d02eb64",
        "cursor": {
          "ref": "9e7a9e37-f52f-42cf-aa07-ac3b04bff97d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "21501c29-cae1-4e91-8972-706b5806a438"
        },
        "item": {
          "id": "f09fe6d6-ec41-4102-9239-47f57d02eb64",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "10fa4796-55d6-4dea-89fe-bf9608925cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e80b6a-d06f-464a-be0a-5ee36350d4cf",
        "cursor": {
          "ref": "11713c2a-b5d4-4a89-aba0-617cc59bbe70",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "97049559-0b05-4ad3-a4e0-d5d14e398bc2"
        },
        "item": {
          "id": "98e80b6a-d06f-464a-be0a-5ee36350d4cf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7f61a118-328c-4ff1-ab40-b87b15c46009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5af141-00ed-404e-bdf2-943062108a7e",
        "cursor": {
          "ref": "c228d135-3d44-4227-8819-d91c4c3b3034",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1b5f3649-736c-4dce-a7a6-1ef536cd13bb"
        },
        "item": {
          "id": "8a5af141-00ed-404e-bdf2-943062108a7e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c5cf667e-68a5-4e36-a551-67fc94c4e0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcc561d-5a5b-426f-a45d-1b35820a178a",
        "cursor": {
          "ref": "5ca9344e-3e20-4014-9d83-a1f29c987e20",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "03f72362-be09-475a-bb4e-6d44146abfb9"
        },
        "item": {
          "id": "9dcc561d-5a5b-426f-a45d-1b35820a178a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0e703cf1-d914-4b88-97ac-ab25b339e59e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f210383d-8a57-4faa-a955-447f8c5810e5",
        "cursor": {
          "ref": "62eea3c1-5ba6-44d3-8395-b3a3c48636f1",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1d1e9b45-17e6-408e-9685-d6ded22eafa4"
        },
        "item": {
          "id": "f210383d-8a57-4faa-a955-447f8c5810e5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1e0bb334-043d-465f-ad3d-046de8398fcf",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89abf9c-7af7-4063-8562-6e59dfaabc32",
        "cursor": {
          "ref": "d7e27919-be06-4dfc-ba67-42044e380bf1",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2b9fc0e0-f524-463c-8cdc-5a9aaf5cedbe"
        },
        "item": {
          "id": "c89abf9c-7af7-4063-8562-6e59dfaabc32",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a895146b-2d51-4ca6-b947-d709e5807d4e",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2699ef-8519-4be5-9e63-73577953289f",
        "cursor": {
          "ref": "cbadea43-4df2-403a-8693-3258693bb754",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3763c13c-65ce-48b7-ab42-4f9017f3dec7"
        },
        "item": {
          "id": "5c2699ef-8519-4be5-9e63-73577953289f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "43300bc2-62c0-44b1-89d7-b7bde9dd6aca",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8be515-759f-4332-9c0e-bfa4d50d97fb",
        "cursor": {
          "ref": "f55981da-45d7-4b33-a113-1561f3949f5d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f3da6709-98d9-4c06-a344-6d1ea295d8ff"
        },
        "item": {
          "id": "db8be515-759f-4332-9c0e-bfa4d50d97fb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "222c70c6-a314-49c9-b0bf-af97d55bc3d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8be515-759f-4332-9c0e-bfa4d50d97fb",
        "cursor": {
          "ref": "f55981da-45d7-4b33-a113-1561f3949f5d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f3da6709-98d9-4c06-a344-6d1ea295d8ff"
        },
        "item": {
          "id": "db8be515-759f-4332-9c0e-bfa4d50d97fb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "222c70c6-a314-49c9-b0bf-af97d55bc3d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237ee998-ecd6-484d-b373-70b38fdf3c8f",
        "cursor": {
          "ref": "328661af-e5c1-4b2f-98e7-8e37990d96de",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c1eb35ab-ccca-42f7-8838-71fd31762cb4"
        },
        "item": {
          "id": "237ee998-ecd6-484d-b373-70b38fdf3c8f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3d6a0b60-bee0-438e-bc88-68aeb8b756d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d550c2-07d2-4295-a1ae-5467a089a349",
        "cursor": {
          "ref": "99fd6a2a-0d29-4f10-a6fa-81e2e81f0708",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0a2e9a50-eefe-4b95-8436-7befe1943702"
        },
        "item": {
          "id": "f5d550c2-07d2-4295-a1ae-5467a089a349",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "972ce27a-bb4b-42eb-b069-609aaf5b7cec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}