{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "32ee66b6-0938-4c07-84b7-5a6ec8412bd1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "46ebd792-2916-42e0-9795-bc10b4980646",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3d09f45-2dd8-474c-b22b-1f0c9aa69cf7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "70a1d4af-585e-4492-a58c-7f0d3463f2a3"
                }
              }
            ]
          },
          {
            "id": "01904a6b-9b7c-4fd9-ba19-96dfe1bdb530",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57dd3b8a-289b-47bb-985d-5842c06739c3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dfcbb04a-2440-4d6a-bc23-7299634552c3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ac254742-4a1b-4d00-9c3a-9245204d5bf6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2118841a-b068-43fa-a24d-ac2e402c93d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "404907cf-81d3-4ff8-baef-551c731db6d2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9163b98-339b-4e52-98d8-d44650082334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bac4fba9-5f91-48c0-b088-0842478cd968"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a49a1118-e5c6-48b0-9ae3-0208a53329b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7306e106-27c6-4ba1-9ead-6ab6310a5ac0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a8e0d32-6eb0-4b18-9f3f-31fe6b69db6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54c52b36-4ba7-4dde-8310-6c5ae299ce45"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1767959-9e2c-4f98-8bc3-9c93d5187dfa",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "78b38a61-b65d-42a3-abc6-697fc09b25a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8f79a29-4751-41e5-9c09-e2b710d56d0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96271f93-9a3c-44ba-bfac-32925c2961aa"
            }
          }
        ]
      },
      {
        "id": "64b12871-dec7-486a-a3c0-f27d9ca41c08",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4cd68f4e-83fa-451d-a15f-78af4ee20fa4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea9c6206-2db3-4093-8832-b00db3fb2c90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1301509b-dc49-474e-b5e6-8b1dc7abe5cf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331d4c7b-30cc-423b-a168-4dd80b7be2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e178b49d-931f-4240-802b-308cf1d4ca0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b10cbbf-4f18-47b5-8abd-9fcd4721eac2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70117fd-79fa-438b-951f-f8609a0e4d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81dde28d-7473-43b1-9cfd-6de259a8a1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4640f4-faa6-4518-b57b-0ac5070f88bd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7c414f-a6bb-4a5b-bfd6-7306ce23cf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e8bc41e-3b86-4c4b-ac46-2e553de66919"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc9e4681-6a57-4f5a-9d7d-5f30714bf2fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0ec9f32-6f02-4413-9403-e3e45732398a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4079695-86ee-45fc-9b46-ef3514a85b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "381584a2-e735-4a1e-9c1f-0b93eb8ee8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de82730-ecd3-45be-8f17-249598ddf0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292f1de4-e71f-4ceb-b149-71406c42aea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4104b54-c496-43e9-962a-0df5f505caa4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc03b671-3b99-4aea-97e8-3d53fbd10faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0e7bbad-d2a8-4af3-8704-045aae5ee1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8339ec48-3517-4220-8f5d-8a505eb63811",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "54e06ba2-6821-4409-902d-f2eb906f7194"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c7220c29-d387-44b3-9290-42e5f72ffce6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d40265c5-d6a9-47b7-ab98-a771feac6f57",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80fb84a6-a405-4f0a-88d3-e9afff59a6a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ba7ffc14-bf0d-4783-b847-d6003ffa1fa3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc29f648-a137-46d5-8e60-9cba1ef9471a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "93c0f25e-22d9-4c8e-874d-50ba7c8b2788"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9ec1601-fcb6-4854-9f2a-e7820def72ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4988796b-1e8e-4612-82e1-6a52fa716315"
            }
          }
        ]
      },
      {
        "id": "c530215a-4dc1-4a3c-a2a3-fec192e894b0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1b7678e7-5e8b-4178-bdeb-50a53af4b5d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0cd37d0f-e3bb-4939-9b41-3672de7c04c8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e0fe97d4-c326-475d-9f99-4641b6c9094a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62f46fd-9305-4e25-9269-578ec7bd02e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6940a7a8-2acb-47e2-8047-2906b355c24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29da9a30-f19c-4baf-b4b8-3626944c5b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db6370ad-96ce-4815-ae2e-f8e131dd1a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d8b175-798d-4bcc-8c58-be0c987d3c24",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da005d4-d27b-45aa-a4ac-8901a1b5fb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09108644-d537-4f5b-b8f1-2530d9300c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb272dda-97e3-4d2c-a812-b62813e1fe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57eabc4d-d674-458d-9cd0-f77288d3696d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb48e93-056e-4920-85c3-b40df205b192",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab5d01f-6787-4b50-99cd-b2c743615049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9f47d7-18cd-4bb6-acc2-b4156c7248c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b22f7cc-45d4-4bf6-afea-a3c62f15846f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ecba36f-2e50-4cda-b2a1-a29b8ccf438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4760d004-8c39-4089-b7ea-45c5016bbee3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea8ff7-5d0a-454e-93af-ed27b76ed86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda26301-3206-4188-8b82-7768af7b69e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcec960-8ee5-42e7-abd8-09c7df58bf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d143f4c5-bae4-45e4-b809-2d6dc36760d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8613288-8a65-4bc9-80dd-b56e4b5b028a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7f6279-983c-44cc-8b91-59a6356f0954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a313e5c-bb17-4046-a936-8af61a52cfed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c83846f-0120-4a1e-aaac-673cd60c482a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5aabf13-c9ba-47d1-98ce-445871c46488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d143cf-6bec-4fc3-9438-29c928ffce81",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09bac88-33d9-44f8-a477-f0d62ffb99bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3847701-121d-4f36-bef3-744a9e1ed1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09a734f-830b-42c5-9360-1cdf3c78a2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b6ec236-5a55-44b6-bddc-4c429033d1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c45db4-6a94-4370-ba0b-677fea4392f2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf544e75-8ede-4a10-bc2c-1bdf0dc3fed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f401ca0-bdf4-462d-a920-e4fe9b80138d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d29ad77-1263-403c-8acd-9969e443a80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01ae4213-7752-4e8e-b1e1-e6ed136d63d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee09c72e-908e-44c5-9e52-43c4b3439ea1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7409a3e-7ff6-4fab-8063-9e5e00fb6287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1d1667-1ca0-420f-8e09-357b7c738987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8427de92-6e66-4fa4-a4a3-52087c5c775d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86759e51-8039-41e7-b66d-629db6429b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384d2374-f112-4fcf-9a59-c82eeeb0baae",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48f980d-b102-4a2d-9b94-ec62f14cf64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c024d0db-484d-4324-b674-d6319b1df2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223a89f4-b5ce-4119-a350-6d70d72b3d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e365d6e-b5fd-4b39-8f41-d655dded529a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fab8de-1b4a-4ac7-9406-afe1bf633719",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc664f6-5246-4eeb-ac19-87fd7d2b30eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8dc808-bfde-45a7-8b06-f58b08d447f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae31b0ce-3e06-4ae7-900b-55e093d133ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40b43fc7-4b17-46aa-8879-dfa876221315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2ea075-8938-4135-8d10-99d2d9ed3339",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21282f9b-93b1-4c85-9322-84048f01a1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce14f9d0-79f1-4b47-adc7-94afaaa20ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a91183-7e85-4132-a230-bb13e310e4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbbf8bc5-feda-444b-93b7-9f363c12a716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a70f49-32db-484d-a341-bf128bf72677",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fb7e5f-46aa-427c-b054-c6a4304ad736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbb008b-e358-44d2-a064-12b2916e3559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20d3c5c-bc67-4f2d-b88c-6a4470ed2af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13f4e571-f115-499a-b4b6-362c8cf7f8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342e0788-80a2-4db5-b2f2-721ec891ff15",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05542f4d-5496-457f-b35d-6c87b7a5e6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55896ab7-cb2a-4f71-9252-912f45776779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39906f5-9abe-45e1-b520-0c75caa5f10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f43be28a-bc69-4d9c-94aa-c23cb6c87e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b601f4-1cf8-41b7-aadf-e27810f9d703",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4de329-68ac-4570-af40-69f79110b378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f2fff4-f4df-44ed-a200-a9efd0d39e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a045cbc-a4e5-4b8a-8f2d-b3e02e189b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8d6861b-1efa-447a-964f-98090988ba4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0d7293-b7dd-4b68-b1e0-a013b53768c1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5119f4f2-c3e6-4f37-b177-b7089dc3e357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f76965b-9124-41ee-b244-1c969311e516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f5a62c-de2b-4c0d-afd3-826665de5253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9a577e3-20d1-40d4-bcc3-f7b4ab934d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0456f297-0f5a-49d2-b5c7-53a1c22758ca",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635602fe-afc0-45be-a6d7-3fe92a33a705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2886cd7-63b9-478f-a6dd-4aa2ba36fb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fa4983-5de4-41cb-8e0c-2cb354c50464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eca1eec0-2769-4468-a0fc-889fccfcc01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc00a72b-9bf6-4413-a94a-fcda3f5aece9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d01b861-8e38-408b-a473-171c941e9634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab442b2-bc4e-44e9-aa34-f4d87c066507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8ece6d-12cd-4b05-9df0-b97fc2b38814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbad5f54-05f6-4cf3-8b2d-f4e7875bd1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473e80ad-df04-48a5-a3fc-e040da3b7f2c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a004b1-4bff-4beb-bbf9-5c6b7c32ef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cd0190-0215-47fe-a1fa-4e70189e1feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4675cbc1-c188-4ab7-b105-ecb118aac6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "63735350-bdbb-4552-8ef5-ed1e5d01a616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cb5e50-c35d-4c36-9064-8aa310b3645a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186fd2ea-c35d-4c0b-8f8c-af5134987fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7feeeab3-8871-4a3f-96c5-74065312bbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2be4a52-758d-480c-b1dc-21f863d15acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b133de-a8bd-466f-aad6-c662914411c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22adc203-c5b9-4b45-a306-75a69582f390",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518f1826-e931-4f72-b755-794f968e63ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b4195d-ed8d-4afb-9366-26ecb47403a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6a678a-221e-4a55-a066-d3d242097c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3085db-a719-4af8-95ef-ff84ceb2b8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1478293-1adc-4456-8857-418d1b5f5985",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8adb8d2-507a-4d06-b674-9344a741228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff858c48-a3b2-462e-9a8e-630045f8ab5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d487bb-9e8f-42b7-bbc3-0fd688e7960f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78650ea2-857a-41f8-8d2d-0b46e79f2906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75b4254-dcfc-4135-a7cf-e9aed68ee9b8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45f3688-7f70-42ff-817b-9a490e1773e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1269e985-0764-4c03-8992-83619bda5a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc19733-7743-49f1-a171-6e1b722e4194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "597d986e-101b-4372-ba9a-56ed5a9dec80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b161312-e760-49cc-b3f4-fbacfcf6ea4c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81db5727-602f-4e6e-9925-1610a9724d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c35ef77-75c3-4cc1-9f11-d75856dbf49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a46bd4-11b4-44a8-afb8-bed535f76a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "575f67d2-9388-446f-b0db-64b3e596d7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d061749-a81d-4a37-bc04-96edf45c0183",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f6d176-5dc6-48a2-85d1-a41d60194446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc13927a-529a-4438-8d34-ef209a0b7451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cbe77f-7865-4de6-b707-258f68083adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0735a3f9-99e5-4c0f-9518-6eaca9744aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6012aac0-f166-4bc7-82b6-e0a54e410540",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a601c836-9cc8-4623-a30e-e91cc85df66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357b93f2-6643-4df2-82ac-a6b33af2e145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b69ef3-5610-4587-b204-aad95fd454a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40b64da-fa8e-4243-8076-588b58bf6711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb328278-11ba-426b-877f-73ad9c50243f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ebf11c-84ae-4070-869d-57c5732742d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f484948-119e-429a-aade-474bd58cb4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038c2d28-3374-447d-a1fa-d7303d0258f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "687776e0-955d-4309-bbbd-56aab5be6a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aae7156-8437-4812-b499-4d68b838dcec",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadb4ae5-096d-4a7d-9113-2e8df8c35c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815e6c70-4d58-4ad0-8c08-1feca1380595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b0a02d-bbe0-4693-b18b-ae32eef6b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "925a9903-5a72-46a6-9579-a235ff833124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016319b5-c31b-49c6-bcf0-9be6efe2ad38",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ccce3e-1306-41ba-b819-0debce63c056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97126c28-02ba-4763-a7d5-ee747e5a4ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfbb8a4-a8dd-4e90-a64c-fd8af6509185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4995ac75-8d48-46dc-80af-04ef49eb155b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0680afe8-157e-4755-904e-b32e1f386e18",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4b3d69-ea0d-40cd-bbd1-65d3e24da85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c488110c-1220-4df0-9716-b2ee556472ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4138aad1-d851-4e07-8af9-dbbfaff26b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a82bc5-a653-4720-b8cc-997cceb62e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961aa95f-0b15-429b-923e-37f769c40092",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b2a7b0-f068-4d73-a94d-8e69120cda1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17888e9-cbd8-4db8-826e-f95d326c3b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042900b2-ba17-42e2-8e3b-250af296992a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c92dd48-c853-43cf-83f4-0e4c0335558f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e2c862-06a7-4c4a-97b4-e8f664561422",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8573a191-94cf-466d-a5ee-c59ec5322e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93305470-52da-482c-87dd-c191366421a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3355d9-1c7b-41c2-8cbe-5f90581fce3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1183bf5b-ef77-4c2a-b66a-382d396d54f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc045b72-d95d-4561-b889-88557f1a29e4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2eead4-b7b2-4ebe-bc83-bab772e903fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6307904c-87c0-4599-a1ca-af9d81dc2805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f014282a-cf4f-4eb3-abf9-c2255dcb0b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c107a2df-9c2f-46e8-89e6-fbeebdc53405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61ce950-9caa-45ac-a524-67913e0a7342",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2986bfd3-6b97-4e6b-9b25-709dce86cc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2ceaed-40c5-46a7-aad4-36c349ddf188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda08ea8-2295-4da7-8d3d-3fd8ca7f6bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b59f3102-dcde-4c5d-a8fc-9ee5487405ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f303f24-0f01-45ee-8909-ca63b7d534a5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d95b8ed-bd33-44de-b87d-106712a123ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2769bb46-b36b-4cf5-b86e-6c84662dab4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a49880-bdb2-4e69-aa72-85bde6e9974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6f829c-5ebf-44ce-ba18-d8d9f26b1590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a19b162-955e-460a-bb6d-4bda6ba1b0eb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f71cf2-683f-4cce-afc5-f1308bec4202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7319ddc-f2d0-41c2-b6ee-65bec43df1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924b0077-a18a-4fa8-8f88-523a60196dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "473f264c-cd25-44f0-ab8a-abfbf02e04c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6c71ab-fa0f-4c3a-978d-6fe3a08786ec",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c9976f-1bf0-40da-adfd-9710619dc259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9a27334-0b8d-45bb-af69-d8cacc0e49d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac7e875-03f5-41bb-97da-28a6911371e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2707a0d3-51a1-4529-94b7-03c5daefd744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db22b9cb-9062-4409-9517-76e1af102140",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f16b934-35bb-4f3d-a769-9cf9174c2d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ad5368-7bca-4c6b-b574-b5c89e839577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0139eca8-f9af-4e6a-a2a4-209588866780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "468021bd-c926-4a4c-bb41-f082d198b9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59050347-3ca0-4177-971c-ca13c54fe469",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf80098-f57a-4bfa-a881-726e4a52c1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187d5bd7-02bd-4916-a37f-79dbbe2bb07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fdb119-17af-4070-b7bc-dde7dd91c066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "38552e59-8d12-43c6-b1c2-e3042f599d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52508113-8bbf-44d9-af28-80a0b114fe6b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7380a28b-5a7b-4e0c-8c50-29d5b9d5ff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26dd2db5-1377-41c0-a18e-a77154c743f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389eb8c9-d398-4071-b7ce-676cfcf6190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbb26ed-cb3a-4f5e-9bec-0e9ee0c75b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6277c8-232e-45f3-a2db-f029763b146e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4d024f-4c1e-4038-b750-06e8bea2e745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0fd057-a6b9-4f4e-b817-3522a976143e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373692f1-bba5-44f3-8496-098ed8765ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "766fddb9-986e-4bd9-904c-cbb3678ba924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ddf038-5b58-4825-8af8-fecfcd0cec52",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5040cb-a695-4a2e-9902-cb4d601c8559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9f0762-7eba-4786-ab87-6973d9aecdc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19498bfd-2ba3-4066-9db4-e5253438b2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e432a22a-7cd6-4211-9965-ea967725cac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad211031-7b64-4f70-b113-5a72d944e819",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ceb0e6-e515-42cd-aac6-fc5f1b2d140c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea2d478-4c46-4386-907c-8ba1ab221119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6bcde1-5347-4e44-be78-15341bd22a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "23bd7c1c-8a00-42bb-9102-1cf5411ab12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c32f40-c586-4850-b7ad-7eaa13fa2067",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a191fc4-e5b4-43a2-ad9c-6ccb84a06879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4278aeb-0852-4a29-aa77-cf2a2f367bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278347eb-8abb-4b07-b58e-8cd92b32f40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fab28fb3-d82e-4fea-bcf9-cbd11424b004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc03e41-d1d7-4ddc-a254-ce259a9623f9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202a2dbd-2e34-4276-a3e2-d875223f5ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068f6953-9c5b-46ab-acec-7fccb332b75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38754ce8-2cd7-436a-93ad-7606c60b9dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b080dc6c-af2b-4254-99fd-33f2c35f457c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26df272c-9412-4172-a04a-a9a7f40ffbaf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a36daf5-1512-4329-9dba-b7bd1406e4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76b0afb-5c45-45fb-9285-8f5c3473ad43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab0fc38-3d6d-4efe-92c8-bc06babb8a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5f5679-92fb-4324-bd23-ba939e946312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1745681-aa69-480c-b404-64a74833aaea",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d067200-1b54-45ca-91b1-092374fd8279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1931f9-a8e4-4e30-b27b-1d8f4cd8a805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b2c361-0155-41f4-a7ad-4e7f54a42e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db7f7a8f-7288-42ae-a82a-ea7b98943775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac53be2-08f2-4953-967d-c722ba9ceb46",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e1f12d-32f4-426a-b696-dcaa1dc17b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385557f9-7022-4668-b166-f370394b6e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34ddd7c-f235-4d28-8e32-97fc6d2d9009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3936342-902a-4100-a10d-569c924ee049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c3e326-a0fb-4c05-852c-80f63932c0db",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c96e7fa-3cc5-4c27-9297-7e06b9519ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2458d5-145c-43bf-b9c7-85dbd22dcb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3977f6-dcad-4bfa-b932-7cda5bf3d6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee05af53-8a9d-499c-ab5c-12d34f38e70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5140069-d099-4473-b515-a2340e47697e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336b718d-59b3-4d98-a00e-887cd78690d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4c5e04-f089-4f13-98c0-4671898772f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c9113e-7f15-4181-8b3d-ed4d5890b6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6051f57a-4711-475e-b66a-ad1d14e4a5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb4d16a-ac0f-4666-a1b6-1a61cd080559",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607866a1-d6a9-4ad6-aa14-fc041b614036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef2a8dd-849b-4e4f-8ba4-a09b1858e009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ea0c43-fd32-4053-898c-cec6d71f645c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8459ab8-12d6-4c6b-9de2-693958526140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea73994-676b-4290-9c5b-f1ffabb5ab9a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653ffa96-16e0-42c0-8b28-3888cf4334f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94f6bc3-a4f7-43b6-b84e-02f07974996c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fc1953-aea5-46e6-bd7d-235498b34b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc13341a-6ca9-4cae-bc58-93c842cacb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdfa651-7b9d-49bc-9305-2f026ede4151",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08c77f0-395f-4746-9e27-16c7ccaaef59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d226271f-2d3e-44bf-9bea-1783185cae5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3d614f-ad9a-482a-878d-05de5ef3374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af68043-6c4f-4494-82ca-c3331c08a8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e43c114-36fb-4e06-ac83-5800212c8fd1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70addae7-bf71-4986-92cd-cb33f076965a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240fbe6f-64dc-42c3-8c0b-979125a44c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6c960a-a344-4558-b7b6-f83e7582cbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddd8401-6b96-44ca-84e0-bcd8185527a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42240c8-8256-487d-b727-3a97bf309ba5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdf4b55-1b17-4d8a-99c9-8410144f3ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1ceb4d-f29e-46b2-9fa2-d4ad13dfe10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878f33fa-65f9-4419-ad80-6a02a3028321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6817b3fd-0712-490c-8cfb-12d418bbe168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536c062c-4072-4240-9e5c-2b98adeef979",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ec7e12-c026-4eea-a954-01996eb108f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65974912-14a0-4f7a-b745-ca146432d489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa2887b-d4c6-4337-a934-009b402f4726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eac451cc-25b6-458d-9916-5aca4a633fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591e62e8-f450-420e-96bd-88a31797a28e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75826ace-1d38-48b3-9a45-722f39560489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d6e30c-a985-4d18-af0d-262351ed563a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a768a72-9bdd-4a7f-a610-8923b6b9437c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9c82c39f-bb85-4ca0-a084-61424b945c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5cf6ac-d4e5-43f0-b69a-dee4c92d7f0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40cbc4b-c0ff-44b5-b525-2670b6eeff61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbee89d7-aafa-4739-b093-9e50939a4a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfda6dcb-453b-4d25-990a-85c800315c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a58c000-ed7d-4ef2-9de7-71a426ddfdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874a5df6-df26-46f1-9648-a61c2c0b456c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feed770-4204-4854-98bc-9a9c52e9138e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197382b2-4ba0-47be-bb4c-5e2c5504f0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab457ec-e224-488e-a87b-3500d6ff87d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a16c030-f8cb-4ac1-8117-34c41050a211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6185ffe-dff2-4a16-a840-10ccae6767c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5802a988-b643-4c9c-8188-179d4893ddad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bbcac9-69a2-4e71-a1fc-763957a27228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412460f4-60de-42d9-aede-dfc76e885ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "329fcd27-86e1-4c9d-ae17-613c975108ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f18c97-6d63-4bd4-b60f-5445db717556",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc8fae2-fa9f-404c-af42-357ae8fc945c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707dd38b-4031-446d-bd42-36206474f09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1705e662-4548-49b4-852d-a57d9c770687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb459a95-458a-4d11-83cd-9e069c522aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f5e35d-5f6a-4c32-a8e6-5bbb88721f06",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb475843-1b49-473e-b0ec-8cbd7ec3e176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af25ea04-b90f-427a-a8d4-08f9908650ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28ecfb3-c883-40cc-8f1b-0fcd4d636d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e341d50-0054-4ed6-be93-73a9bc9d45af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9e87f6-b9d9-4114-afab-5326a4b75fec",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030013fe-850f-4a08-92ac-9c0779a29be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fd189e-152d-41c6-82a2-20616a0349e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b0a70b-7556-4bd2-bd9a-f992eac369e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac07149-1439-4044-82db-4fa339b76732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd466b57-80c2-4ae6-9061-154788fafbb8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a829b3a6-46bc-4c3e-9524-c196ebbedad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5e8a7a-2a7c-4839-81b2-780a707432e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9188ddc6-b141-4003-89fc-063bbfbc0dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3f4663-4d64-4505-b683-d4160059f7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aeecd2-15a6-4121-99ae-18133c2e1c70",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1568385-37d9-467f-9e9f-47acff470883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad014080-802b-417b-9042-1a2fd35089f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cdfdff-b647-44ac-a306-0f284ed22728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3191aa-ecc7-4639-b5c0-99128f3937cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6bbab3-f136-49c7-b78a-d91f717c32f1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd64cb0-d114-4522-b10f-b1b41fe3c5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d462b9fc-8dd6-4d2d-ba2e-452038f770a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f1a7c4-060d-4796-9be9-9fd61867594b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb32598b-1e3a-4e47-ad68-e787a3b23226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f60f5bb-7da2-4be0-8ec8-d7ddf691117b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9969267a-2fc2-4773-89a2-b153b6adbdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ed4bd7-cf16-45f6-bc7b-44c4181993c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0235b72-3213-407f-b418-706cd7409b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f4ba6b-c4cb-4509-a4be-dc46261a6d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacc77c3-e656-4d1f-bcbc-6699ca35f2a1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a06d4e-c256-47bc-ac22-43a3dca669e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807f8b32-5738-4050-b278-9f5cd033af69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba45281c-7c46-4458-8652-727b61782d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfe25da-9a1f-4772-baeb-23538977abd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a83099d-8a7e-4908-8231-987a0024128c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683a500a-2fab-451b-b331-dfec1861fc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9189aa7-f15a-428f-8f34-291338ea3834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253f5014-138c-409f-8175-0b8b67d6d85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13e8247d-6e0d-4b1b-8f2f-0143fd43d51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99a65f3-fc45-46ae-8e13-718668679aa9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b710d0-5c87-45d0-a855-f981844b0889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630c44cc-ece0-4d42-938c-54b4954ab4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73757685-ec7d-4a49-a6af-86b93bc9f319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2f8a97-57de-437a-9700-2f7d8378641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b32b5db-002d-4e65-95c7-0a5919a71313",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798412a6-68f1-4dca-9326-16aaedeb51c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9a350f-4a1b-434f-afef-13f8fa2debef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f92d91-d2ea-4a7b-b788-7bf1911194a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84cc1acc-fb11-46c2-aaf4-da05a75c2c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b7e2e2-7a2d-4f9a-9378-01f68fa1a1f0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c27e4dc-3d52-4a4a-acec-461df2f821a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19aa3a7-81e0-4de4-9f98-6789435bf133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6f9145-ac0d-4510-9fff-82b110e2e303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d23323-3842-4dcf-86f2-a59c29c49d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d5d82c-b5fc-40e3-997b-63ca2a04d318",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2239f7d-9ea6-4f6e-8e2c-a69e1595849a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22056b36-6222-42b0-a448-f4e6db8a319c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a2b624-7762-476f-9642-1629a85af1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1beae581-70e8-47ca-b7db-d7f96f911110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f83b2a-7be8-470e-a82c-47e6675abc31",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4ebb1d-aeb5-4bc0-b0c3-9f96e00fd1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a9ee2e-d97a-443a-996f-af5b5680a04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3591c90-23bf-48c7-a413-3d69c2e7260d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7e0862-4616-43e6-bf41-405800ccd0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2512dd81-5ca3-471a-9461-700b8776dfc5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7ae91c-4440-40f3-81dc-29dbd259fddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc0c0cf-ae0b-4bf6-bc70-765df0c4ce65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61cce7d-21dd-4a61-810c-6f4aba8af762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2560544-3805-40bd-a675-774e0d828166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ad3bc3-e148-4c4b-910f-9ddc7e4e451a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13759de-3ec3-48d8-bbac-f88bc24752cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318e4974-cbef-4f26-9591-89ab3ced5524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc98ea40-7eb9-4d33-badd-ad68768999d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "302a39be-e075-4ed4-8602-13feef51a5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3f33d6-6005-4320-988f-7e4611899f39",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12fb022-33d9-46a7-a3d6-384db1e6d865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea24401-fdd8-4561-b09e-6ca95a063d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2534bac7-821f-475a-b0d0-b1943f62174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b9462b-55e6-422f-9089-d8dbdffe7855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99d7f0b-51fe-4f9f-8e05-1863d25ca6de",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa000495-ef2e-4ff1-aec9-056fe534d40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62851089-d121-4b80-84f5-f8eecaf7d149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cef7b3-11e1-40f6-90fe-799cad16d108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "655ee4c6-d8b1-4096-a00a-39082d4d8c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cfb8bb-5cfa-4927-ac75-ba3d5d5b104e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959e0c8e-7a13-4afe-8575-aa4d948354ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133f179d-0706-41d9-bcb3-4d2a5de6a28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259fe1c0-8858-4672-a9ed-2f2a3b2303ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd11c5f-9c45-4f9a-af52-ba1b47df7e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7be507b-3464-4d23-8f8c-7ca157a36761",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e68f04-1648-4f53-b8d5-7ff54a6b992d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbef31e-ed2b-4be9-92f3-c8212cc8365e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa28a323-4205-4123-ba1e-61e6a11e1d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9224909a-dc00-492f-8be3-dcc7e464c1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197647af-d689-4aa5-8e2f-beb19f08b31c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e97da8-9259-4cbe-80c4-38cebbef0634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6861b58b-8696-4842-ac0d-92c4194ff8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6980cf-5480-4c43-9127-2ca2e443eaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2d5757-9447-4bf0-8845-5d38f1c3204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33b727a-3ce5-401d-8ff3-961cb0ea8302",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a4dce4-c826-45ef-8399-7dc7b6b88fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a173973-1046-4b56-89f0-7b92fed8697a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf7e556-1169-4524-8a39-32a5f1748fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4db8ab2-58f2-45c6-9d54-69171409c2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a8d7eb-a327-4eb6-a50f-5f3cc8a98df4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb6ac68-f7ee-425a-b9d4-e5c5b79aab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348d4d3c-ad57-4dcb-9bdd-3aa9ea6db046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff493a3-87a7-482c-bb45-b8b64916c6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "764ce627-42e2-4b0e-991b-fcd5618b20a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7712696a-95cc-4c62-a937-0b6c2adef99c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c1b814-9166-4f21-b35b-8e9622cdda2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590b05cc-c893-492b-ad7f-0094df40226b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001e1d48-90a4-44cb-89ab-4757254d41c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98038306-e4cb-4441-b61d-7ce58643fb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4424d62b-9c2d-4bf8-904e-ae5a2502d6fa",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74a0b5a-169c-451b-b158-b4f40e86dc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6498a671-6a02-46e1-a365-8b35d50c2020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b89a73-161d-4b84-b961-5ed402f4dc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26339a53-c425-480c-931a-bd58db547ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dba4ad-bc4b-40bd-940b-173d4d45da49",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470af631-8306-4cce-805f-3706d17e64b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082043ad-a481-4ffb-8427-fa695d688b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a60fb07-2618-491e-a2be-8450adb7de0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66a5b0f4-1617-4f36-ad63-894f078543b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f86ad69-69a2-42e6-ad38-de4230542799",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b72c9f3-e3f8-4b13-8858-eb1d51856775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2167a8-c8dc-450d-bc9a-cb0010fe5ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74147d69-a2ec-46a4-a097-b1144a29bfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ded89610-9283-49ae-a619-74ea3d0565af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ddff0a-cd7e-4ec9-8e4f-81e7240e342a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72d19bc-2d1a-423a-9898-01e06caab5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b01fcab-cca3-40a8-8e80-3c8d24bade81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a18e34f-5344-4b73-a4fd-9fbbf91fc9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffc7a1a-1e7f-42ae-a009-bbe2ea9a8f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0075d9-a2e2-4a20-ac5c-7dc70a31dd05",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cbdede-3f37-4780-be95-e6ab1a9a296b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0011cce-4531-4c81-93d2-0702530e4f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b89fccf-5018-454f-ab14-5ca7b1932410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a26dd8c0-1d98-4116-97a5-48f26778b376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa213bfa-3fac-4b28-a8fc-5a687b5c484c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9344e603-a262-417d-a269-3bfe17cc15b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64f0840-9d2f-4418-a0bb-43969a9d9485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a895d52e-ec6c-4833-9751-98722055eaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "50c18c36-8506-45d1-adf9-ba2f1f95ad15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfa9053-3ca3-4f34-9437-2ee038f09bb7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce2d1fc-8e35-40e0-a293-d456bc14a04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757b7608-e8f3-425c-939f-a9af542267df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d7a96e-4688-4e01-8f6f-a2277d265147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "43ad3c1b-204e-4aac-94d1-d7acd113badf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9697f9bf-ea8f-44b4-abf9-694ab0c49fdb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43410ddc-86f6-4fdc-a14d-79270c123d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6ac782-0f49-4fa8-b9ce-0711fe6a8161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20941f4-633d-4d27-b542-4482473a5635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a230f2c-3d17-4614-8953-2cb290526dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece67e07-fe87-4580-adfa-3ba9aa64554a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5002488e-7db1-4c48-8e39-d287624a3a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0136aa1e-088f-48cb-910d-24dd7d8b3e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89b8005-e845-4d13-9bff-49c489f7e4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "66e67c50-f6a7-4810-9135-41d192097ac3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4328447-97c6-4b69-8977-6311d28561a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00eff515-2742-4b09-ba11-6341aa067ef0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a54427-f6a2-440c-b7bc-9485a53bdb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47ae44e1-6a4b-4a3e-a1a6-b0b157bdf4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8c05f8-3369-45cf-96f3-903b8a829c0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2976686e-bba1-4be6-b23d-41fad3dd0a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4e623d-14eb-4c3a-8e2b-cb836d79a3ff",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fb8a37-b2c6-44ea-a677-9dd2bf3900fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23bf5e94-0474-4567-b34a-82a060002c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de897bd-218d-4819-bce0-fb1b7c9c65fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0acee714-e697-490b-b95e-0f6ff62ef34d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1da25e7-7356-4e2f-a076-28a595463709",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a583ac0c-ee0e-4ee4-a209-ae1a3aac5fe9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17e1bba1-10f8-49d2-99f4-abb713a86a00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8f03417-b2d4-4d50-81b8-d693385a5b90"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46d293a0-18d6-461f-bd63-fc1028cf0a94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f5ba6f8-a276-43fa-ab1b-96f75131aae5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee24d7c7-984f-4f14-a128-bab010ca4744",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2466fd3-79fc-41fb-91b2-6f3cf25419d3"
                }
              }
            ]
          },
          {
            "id": "fc29f15a-be59-4c1b-8329-bb5744576a41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "557adf44-292a-416a-ac01-374f3b04388d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65a82361-380a-44ec-8104-c89c4d282c66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebb1a346-fbc4-4179-b5e0-e6face8a158f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f718b967-078d-4226-8032-b2df7a787e6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "feba76a7-9fef-40f7-8ec8-de74ac4dec7d"
                    }
                  }
                ]
              },
              {
                "id": "c02ea83b-32a2-41fb-9be3-9526f032ffe7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a23f6bb-360e-4b45-84ca-598479b21103",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3c79c5d-dc2e-42e7-a751-6239bec6c96e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d0c0652-959f-4717-97ff-148d6c06e054",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b6de04f-e8ff-4283-81f8-7b64badeecc7"
                    }
                  }
                ]
              },
              {
                "id": "f131b54c-42d0-4149-ac62-100e1b179219",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adfaa9fd-2ee2-434e-88f7-9961ffb6227a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eff651c7-502d-4151-87e5-c4e674b0e538"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0224111b-847e-4420-a4ef-dab865ac41c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee16d4d3-97c8-4b17-9562-606419e3e251"
                    }
                  }
                ]
              },
              {
                "id": "6958e934-1522-400f-ab23-7daf1010eeb7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbe63e76-7af8-49a2-b4ef-ef2fdd973c25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ffc1c29-33b3-45ac-a5d2-a309c55f2724"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee95ee2a-225c-4aa6-b1ff-202a9a84603a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c00dd5fb-89b8-4383-a892-a73f77f27118"
                    }
                  }
                ]
              },
              {
                "id": "4dda5b1d-c43c-474e-a3ba-3385e88b7e12",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02c76867-b637-4843-b74b-c9c550e63606",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32bb0acc-69aa-47ad-a806-e3ed2d8791e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f668b62-cb4d-4173-a592-0e987f21e426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "55bcd544-f944-49a5-9c39-35664eac98d0"
                    }
                  }
                ]
              },
              {
                "id": "f076e0c8-7fe6-4475-8d26-cc812febe2e6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca410c7-4493-4ce6-b0fd-2b2d58ef5dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97cd892e-de53-41a6-af4c-2cd82d6fdb98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67d817cd-4829-4ff4-9bb8-df5970580e63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8ab0967-01b8-4d2c-93fc-a25cdc98b7b1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b596314-b444-4ba4-b549-cd7c4450a19b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1cf963d-4beb-4a1a-864c-ae468c5f15bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6017ce7d-287b-4ba6-95c1-220af7495099",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c50dd4a-b2cd-47ab-acf5-a99015f73e3d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7227d5ba-7891-485d-87c9-af63f89521a5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "50d64a90-8448-4316-8a64-259fe28b4ee0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac278b9c-e117-44a2-a101-f5dc8b30b645",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a911c88e-b927-48e1-82d9-00e2ca2d56f7"
            }
          }
        ]
      },
      {
        "id": "a214dbc8-4431-4d14-9f1f-e31a01d7bf9a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "80edd1f5-8119-4985-8aba-cbe9683ecf37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83728f86-2880-4c41-a238-a4bda6a44373",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "769c2f6f-5285-4b5d-beeb-b3134e3ca333",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e247ca-f8db-4e13-9a96-3c6364e2d2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbed2486-7564-4f3f-92ed-d206a1220d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea82b474-1b97-461d-b74f-d6a6f65131ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8022b36-d4ea-4eaa-982c-e2bbdafd1f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a6a1a1-6151-4c05-af5b-d0f8c4e52153",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f713757c-62f5-4774-9303-1846641e2477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f814a125-d4fe-4abe-bbde-e667a5cfe358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96542187-3cfb-4e26-8e60-c73708d34fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd08458a-b9ae-484a-9c0c-4ea7a594c32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1d352d-716e-4893-bf6d-c80ca7f9a155",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f781f-a851-473c-8c7f-d83286eff507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b37656e-520a-4c1a-88a5-6a77177d94a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f667de5-49dc-4577-ac3a-579c011d7dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4a8fa9-46ee-4466-af25-7f3fad7f006c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3134971-ff1c-4c75-a479-a3f855807b53",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82ad0e7-2aae-41c9-a62a-7226c2f06e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0818ea3c-dcdb-4e47-ba03-321c3e31ea9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341cb68e-f6d1-4d81-846b-10470b4d4edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "809582ef-2f72-4a6e-931c-19d5f8853d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff452e8-9609-4004-8146-41a0ded8cf2a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414a0144-5391-4284-b3ae-6c531664ec88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9358cc-bd02-4245-ab66-5e8c7f33e35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9484491f-4f82-4bbb-ac52-543880d592ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2554143b-6f47-423b-8fc7-490ca81874b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8313c0-f59d-482f-8be7-dffb4203894a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293ce5c1-d235-488f-b5d4-2519966a94fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93907ebb-6277-48e2-9f06-f058b841f336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db81777-3c87-4288-b55f-1dcb9ca37aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c69aa93-a37c-435e-bf2f-256b5a631d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3f5f76-3431-44e7-aab9-c087db106df3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b22486-4539-4f68-95af-af123eff1f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef98699-a3fe-4c42-97ee-3b5fb8a051d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6fe885-a22a-483d-967f-502a7800f440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfad1898-2221-4322-980c-56905bd89637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0651769-1f11-421c-88cd-3345beecc679",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa73680c-695c-4e3f-971c-eb79a160382b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39d3297-3f89-4db8-9c67-18c46c1dd3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af8036b-e25b-4066-ba92-e2b161d4a492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "835c0411-d3f3-4a8c-9547-bc580b20c94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f5ae56-f9a2-4663-917d-d8a9a47818b7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2e9201-8ab6-45a3-9284-e32c942228aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a6a5df-aa90-49dd-b00a-25a00a9ff0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358a1a27-f7e1-4d0b-9f62-f3345507e185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3eca8d-2a86-4e94-a902-279a5a359a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5608ac41-e406-417c-8e38-387e52c83fd8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d8df01-48bd-4deb-a2ae-f16359773404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9d7b38-325b-445a-850a-c4a6d855fe9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70326d5c-06af-4a38-9d48-68571c97b725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ff5948-bc4f-4f58-af4a-ade63bb5a601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63549c80-ed77-444d-bed3-6b6dcb4f6be7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335a8733-009e-4570-8598-558a0fdedc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12565adf-9580-4436-95ea-ee55cd040d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1116b1-8f8e-4661-8390-84eeebd782cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "62d1bd21-7645-42cf-8279-35f9df5dfbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775bdd6b-6e1e-44dc-9e45-1be93abe0ac3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dd2113-ad8d-4a57-b70a-4d97703b08ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a9b5de-4fc6-477e-945d-7c32c05035fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a171a5fc-6eea-4c8f-8f9f-c607e617c8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ea7b2f-ae6e-408a-8a98-0e6bb2eb78b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7761943f-f9ab-4eaf-afb7-ceaf930a3118",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ec6bfa-a38d-4ef3-ab4b-4667981853a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa504a94-2dc5-481b-af42-7e5df1a3c3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1244bee4-04b1-402e-8626-a24c665072cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "182d618f-bd69-4c2d-b9bd-c6b4465336fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ed5f61-39b8-4a97-be7f-ea8f6443eb4a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93887237-3ec4-44f9-94c1-c8b7495a9b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fcca36-7682-41f3-b895-6640d62ef42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad24ee3-e23f-4792-98be-9bc31a1d8594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "732c6b11-f1fa-4d56-bd3b-9d18f3639fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179f7004-1143-4584-9f5d-a38a30fa3b1c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426bf5e3-913b-4a7c-b48b-2e4a24eb6572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f379bf0b-2d54-4c50-8c0f-40ba39fc7d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d643adeb-e5d9-41a1-8011-d3d7a170b367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a338b65-aa02-4894-bf28-7529e3cc35eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c1251b-d34c-45dc-a2cc-c273cc0576fc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c35cd04-f7b7-4305-b21c-3985a38651fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9a4100-2702-48fb-a219-27c81e90411c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c84f9d-76e5-4e07-841d-bb4fa0a12407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6098d6-f9af-4dff-beca-84dbf013c0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30e2239-fc81-4857-af27-6215c237d438",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c22d8a-9184-49a5-ba32-ffb736d82503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ceae06e-847e-4c9e-a121-ad08186c2242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901836c3-7db8-446d-8440-1ddb15489fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a50c9ee-6ff6-457d-9cad-9423cfcfb7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58322467-ebcc-4f4d-a198-0a9182e14c8e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c721066-f47f-487c-882b-5b472655b980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360bd22b-0b22-4c7a-bb8b-1739d21563db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d4446f-de26-46eb-93a4-59e19830d610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22786ab3-81c2-424b-9bc7-fd66b19800f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9092af-f275-4b9c-840e-6cc39bd5733a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcf36b2-c72b-4686-b9be-62dffe910985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37ae945-1968-4296-a260-dfab78b654c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58734e9a-80e1-402d-bcf5-d69ac722718a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd7befe-c7ce-46bb-b7a8-2ab6312ae1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5113f5eb-eed9-4640-b604-f1f06c7aa4ad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d40690-a96a-4a1d-9472-b3cef9256586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189c0cf9-40ee-4202-8c4a-b8f97e09bb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40deb34d-c2f1-494d-9796-8b37e7a493a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a5e599-5d80-429f-bf0f-174482164b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ed0f27-5c8f-436c-8f0c-8f290c60148c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c310f904-657c-4fc9-af66-49af889b2d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640c7abb-68ae-498b-b219-6a65ee421a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35446cf-62a5-4c74-8eeb-ff56dc33596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8abb3c-ed12-480e-ab69-ba5b47e8b216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852c81c9-c0f5-4444-8d1a-74a3c0a9bc62",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658b8c56-b024-44e4-93fd-240c4a89ce08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee9d549-f37c-4329-9982-020092309656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5f5229-d389-43b7-8825-1296327d36da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0217a5-ad9e-4307-ba9b-4b0dc942bea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c72cdb6-eeef-4d61-ac65-945570e9cb07",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31e9fae-d2e3-47ff-89fe-a82ec8a35a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae42306-6434-46d3-a865-b2c16e9ac419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd7942c-db07-41f4-8cd8-d21b83f5cf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db71824-3eea-42ec-b10c-895cf44a5cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf19dd2-7d7f-4987-a21a-597163b8596d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acac779-87c4-4646-a82c-521bcbabc147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c017a2-ebc6-475b-b6b2-ad6bd4abc1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb84b365-937e-4381-86aa-fd1fab76ea6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89d850c-74d9-4499-b5ee-0d22ce5371c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03730d66-88ed-49fb-90bc-23b954f79240",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3117c05-5ad3-4697-9867-bfdebcad2b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594085aa-7f19-4232-ad4d-2fc1fb408ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbfdaed-8285-4422-8363-4d48d4b99940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2222383c-7fe8-4bf0-83b0-b548dd0ebbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79abdc5f-5b9e-453f-8682-0c979ef03638",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd81691-95ab-422f-af47-73f8f83007cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6e053c-fe31-4bd6-bb9a-a22a627fc726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0a1e6c-1878-41a3-a3cc-86b8ac047bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19cd29de-172e-43a7-848c-48dafbc12b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2531635-7c01-4eac-b400-b4022946314e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df3e5c9-ecec-40d0-bf37-c0d60ea1a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dad6331-def0-43c4-a302-7d07e9641afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf67a7b8-7945-49b7-ac07-89235b104bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0e530d-4a5f-4f77-8a18-c87d62366d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131e7844-7415-45d7-bbd7-d1cfd2269e44",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cae420-c30e-4920-9227-93730771aa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2f2064-4219-400f-b18f-d98f0528c4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d829bac7-0a95-4027-bfcf-126ff153a2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3156bce0-a751-4b84-9aff-fd638332d0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70dd07d-e8c6-41e1-9823-1e5e6a2fdcbf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d25dee-0a55-464b-ae28-5c4ad2eaf6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0792595e-4419-46be-80d7-0803b8170793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8fae5c-fa5d-4ddd-8af6-791cc6369cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "277475d4-fb9b-4277-82e5-c96febecf18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583034ef-07dc-455e-8dc4-c71e58229e88",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2bd464-57b9-49e1-952a-11bfde285260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33e50e3-65ac-4c2f-bbc3-4ca28af4d727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682cc53f-a966-4541-b28f-b0fc81638536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3171d42-a141-405e-8107-43d9221ca21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e65d355-3a9e-4d13-9763-e2e546acd4a6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e0197c-421a-48ca-8cc1-0ee85673f7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327bb989-d835-4543-8089-0b4b020aff69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7904ea8a-b19d-48e3-aee6-16a07881c45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb874c0-ee63-4f42-9644-0de0009d96db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0403499-5267-4135-adea-9b39b29ff6d1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea90becb-e9c9-4298-bd78-907989a91cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada89965-ca93-4cb2-8bf2-07f3057aab24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395c8b2d-fd45-40e9-9ac5-0c9dc4a8ff63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf283e46-27a6-4242-9e2a-0d4ef95a012d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "78a25216-fa9b-4c71-ae0e-6d578fc17dde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f27e41aa-db54-4f1c-9fd0-61be2290070a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25be3507-b452-4c9d-a719-cd5c8a09f505",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8713090d-04a0-475b-88d2-dd8caff247f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439fa871-3b3e-4c99-a433-6979bffc6fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22b52d2b-7dd9-49c4-b5e2-b721249dfea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e8a789-ef13-4a10-a5c4-413264926d22",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcd209c-d0b8-4be2-ac1e-d90641d0e0e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf9f410-54e8-4280-9229-4fb4e3b604c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af183da-da96-4530-9dfc-053357477d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a1c5de5-79d4-4060-a8a7-4813e44414f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a794b34a-8056-4475-9426-d7e246947def",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be605138-4bb5-463e-885c-cc0022e4d004"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46297902-5d51-4dc6-9ba1-1801adc49737",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a809ebc8-4f61-4f0c-b2a3-f088f0b58dd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74e892b8-17f6-41d1-bbe2-ee686ddf0cfa",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "023aad62-df08-44fc-8792-e2dfe4b9359a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1b343a7-15f0-44f8-a67d-a9383d09e8c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85eb4815-5866-48ce-92c0-59846f156365"
            }
          }
        ]
      },
      {
        "id": "697894dc-d1e9-4dfc-889c-8effaac1d87b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "53b5ed5b-3097-4baf-87e8-487168153bd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b7fd439-9895-40ce-92df-1906fd8a459f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "378d9610-ec39-4fec-a0ff-d5cc5ac21fe5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80b46ed-7261-4827-a8f5-c0758180a555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6716e5a5-6356-4fcc-b309-7687cf28c253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354db7f0-007f-4d39-946a-9730a28eb256",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffb925f-bc2e-4887-83a3-2cdd50dce387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7329e9c8-971e-48e8-b122-aabfb8d8567b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89182f44-5cbb-479c-9389-5531a141e17b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dec1ca-54eb-437a-9e48-d8504c5a801d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72aa8b00-1393-49d6-8bd7-704808f26eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162eba65-ddc6-4363-ac96-dc4d272606d4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab7100f-fe5e-47f8-a4c2-ec65300b3c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4746d5f-3de0-4ba0-917e-5f3a9ac7d3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc80a8a-a74c-4283-ac16-3d0bbc752950",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3112fd3-2afa-4396-9475-9928f58891dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0a433e-159f-4337-a5e3-979bdba45fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6222e7df-6d6b-4e6b-aec7-718c2b10567a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf6bae8-e2bb-4d75-97d1-ff8edd1a061c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d926c3d-8ad4-4b1c-896a-58891d338c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f379ac3d-8b0b-479c-8b98-d57ed079f374",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0adb1f1-be5c-40e7-8fb0-a12ade0186f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1995a2d-0132-43bc-9eb8-c575ed877ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdfdc00-2a64-4a5d-97ff-661cdb2b3df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1704b5bf-4c5b-4e1b-8f1a-6103084a6ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0844a974-4866-4b81-9395-5e265184d1ad",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb14923-2525-4e68-a658-ec50c58cba44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a34cf6-cada-4b97-842a-00fca9f003d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43c163d-6169-4bbe-8e48-f5690cd71707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d2bf18-2609-41ef-81b8-29bc63eec0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be696261-cd28-42df-9fa6-ce2c4981a405",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd80ffce-52b1-4a8f-b04e-650a96357a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a41e0e-28bf-4de2-8db9-5339703d921b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f493d0-1fbe-409f-9122-ad5f9e9f3f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dc3487-59cb-4b8c-a770-176bc44ae143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727063ef-7ed3-41a3-b182-906c0b0fe6e5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec78d330-568a-4eaa-9c1c-b0ec47ca0bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192ca73d-af1b-4c6c-9469-61382c32226a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dffa79-35ab-4b21-846a-f2347d80dfb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce8bf02-1155-4400-a549-2a790f6ecd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69ff1ae-1459-4c3d-9b00-72ea2f19029a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e36cbf-ee73-4cdb-9364-c7908a6d15d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da9b369-3273-4d96-9d05-29487e3553ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa125364-2fbd-4323-9a7c-89bf161b21be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57463ea2-c498-4bfe-9ea0-4d54eac0fd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6261eabf-206a-44ab-bc54-c1b0002a7cd4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8bab4a-c60e-4d19-95d2-911d8930d2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39180d0e-0978-43e6-9ef9-8d20d5b0df5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3177b0-7d5e-4172-8d79-f2c2e442f69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a93e3ac-53d9-456b-b0e8-50c80cd812a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478f9047-14ca-44f5-8851-f77f14971839",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfb23e3-19be-4fee-b9fd-9e3baa25048f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c529ae4c-e8db-47fd-ac7f-462820e09a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147fae4f-69fc-46ae-810d-2f9ff61242f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5352b662-e776-4b78-aeb2-a19e29137c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fa59f5-afed-4051-883e-005fb60f8cbb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5223e9c-afe5-4cbf-a12e-1dce5b262139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e457297-c499-4a84-8a04-b438394b92e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2ed657-64fd-4197-b3c0-e125c55580b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f69f57-7c6a-40b2-b4cc-b3536607e760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d23be27-618e-4414-81cb-b19d542e82ee",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53e8c5b-7692-460b-9ee3-12ab03abffdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9ab668-70d1-4dab-9feb-36ce5869b620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079de921-f4d2-4a43-8cf6-e6dd3ec2206e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15753581-5643-49e4-acae-8ac08c6a9197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71975e5c-a212-49ac-9ebc-ca6456001eb5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c441171-4d79-49d0-a3a4-a4bc77bd3e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e3ce963-9246-4c1f-aef6-b07471607594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aff1941-4b19-40d8-9f11-4b18a6a24569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbbc648-35d3-4ec1-9cb1-72aaccc510ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a43020-5922-40dc-ae62-cbc11d6cda9f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb92b710-038a-4c9f-b4d7-2738a5b4671a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ec08d0-123f-4ffc-a485-3ba42ab9e8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e00d8b9-d654-41f0-8c90-384193a1941c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea24c17-e612-4a22-811a-921062045f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0588ac-b8a8-4bc0-a4c9-4e3492e39d32",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84301f7-ebc0-4358-a615-a09a524d8d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97064258-d241-45ec-a809-8d198d616f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75ad5e7-3450-4eab-b072-de8fc2e727ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f96734a-d5d0-42c5-943f-39c8c26494ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a1d040-d2b6-4be5-9b31-db189b65634c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7a4bdf-2635-4ebf-b505-ca8b00cf808c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f200c2c-ba53-4014-abf1-ec191df4b615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57da49d9-97b0-4624-953d-f7984638f8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1acd281-860d-4769-8170-8fe315bba758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c91097b-8946-4272-978b-cc70cffd8307",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1893c38a-c8fb-4169-9bc6-5babd1eea542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ba204a-4f69-4b26-b9ea-d504aa83c086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a154b3ed-b573-48a9-9bf7-b604df1a9ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977b8eed-9008-4d26-89c8-5739fb8e8939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581a98e4-bc6d-4df5-8a7c-0d52215f4905",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed354a3-d479-4d8e-9167-310839b609ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1493c547-79d0-4523-a76b-85d54a504695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb7e9f8-3a45-474b-94c0-3da977d6d592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0d68e9-ae81-4858-a4c3-93bef0939503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9152b101-64df-4a95-9cd6-f3d29422edd3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e260ed10-cd7c-49aa-866e-38d5e7f79166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87d0ac2-067d-4e26-8f7b-407843ac474b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601ccea5-987d-4ed4-91ba-de775ed5834f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38914108-ac0c-4c49-9ffa-89f615a4da09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8153ac-a757-487b-b633-ab5d24cd5fcc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d036d-88a1-48e4-8312-ece357d834b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a46681e-da54-44ae-a8a7-0fe1f7dd8649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e24d08-7cce-437f-af70-dd25b54c5769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108601b1-0641-4aca-9625-7a72e76849d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b44f2e-594e-4beb-a3c2-d57cd2cc72ad",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc2baf5-b4b3-4a18-9545-7d8bef9c977d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd89daa4-3cf9-4ea8-811c-8bfa5067d617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8262842-c982-4aae-a282-f8f002373226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f0d98c-bf1b-46ac-a1ed-04d7c0e922c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb55c241-6e63-4956-a402-c724f15e2e65",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1e7c05-f433-43eb-82b1-a83fe554926b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9defa021-eff3-4ff4-8484-2d39e313b0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f317679-0ea0-47cb-aea0-f7e32f6c6cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e14efcc-e8c0-4d62-ac8f-98c1ddb8fe22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387f459a-b61a-4161-acea-bcbbbbf5838f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba32a070-3bc9-4bc4-8fa4-47d212742c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b06f469-3ae3-4792-802e-ec681bb93c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bcbb07-9171-4113-a628-eefad6089a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ef2cce-077d-4803-88b8-02fb6e8ddde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ae1bb7-a6b8-42ae-98a9-27ffd1c0500c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05f4d94-2660-4686-b6ae-83b3fd9d6835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c2a2cf-219a-4f8e-a88c-ebb7ed4f7f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d53d36-0191-4a93-90a6-9ce1ef3b3cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7b13bd-7759-4b2f-8488-085fff2ed0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89640304-eca7-4be2-ab34-ab60206a5ced",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918ec12a-f672-4320-93a9-3f4ad0db40d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3daaf9-4553-4cca-94af-5c08d2919cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fe231f-f150-4ec0-ade0-1f2fdf8a3d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1774a7e4-8126-4c03-9dbf-55c43455f150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1292b66-72af-4d6b-b9c4-32b93c0703c9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4164f01-a7da-4890-a893-6e26a8558016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de54cdd5-7834-4db1-be1a-0272429dea5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348109c3-5584-4a6e-9952-af0a16073615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7dfe29-92dc-4d79-ae4b-67c0f28495d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3129a7-a98f-4631-8ad0-29e47187ac28",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7616e959-eb7b-4854-8d34-5652437ab0d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7da246d-74cc-4016-959a-b56257017c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833243fb-d142-41cb-996e-05edfc4012ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa7ea7a-0e43-45f1-ba6f-f156835aca6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d578a63c-ba56-4db2-9c30-779a1d59d431",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c394b23-15a7-4b3c-b7d5-a48c9b59af21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ecfdf95-aaa7-4c19-ab7b-342fb740570d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93a3ce8-4ae7-4fa4-bb94-0115c5d8e285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282bea05-b532-461b-81d1-b1fead68fa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc20ee9-0f61-4d49-a867-bdb2d688dcf6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefcf197-ebba-4733-87d5-ac515b2789ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a53f2c2-c802-4e36-a41d-903186d3884f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4b62b4-c053-42c7-8ba2-f877a4eb43f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410915a6-436a-4711-a72d-394bba52203f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa925aaa-d007-422a-a1f1-b0a7f4c53396",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11530493-d783-4e05-8c94-5acc1926cd08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c612a125-7f89-46d8-b983-9f68e45c90f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fd78f9-9f9c-4d2c-9cab-4c0cb59aab44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a078f15a-a37c-447e-b671-e80ab3157a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cd860a-5a1d-4da0-acc8-ae908741683e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74623c28-6f97-4703-9fcd-dd7fef1dc312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "196ee8bf-43f2-4b3c-b200-532816630415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899e422f-c36b-4ca8-85d0-95c44794a9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecccd96-172f-40b2-bc21-18b1566fa626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559dfd9e-e872-42c3-aa61-2133c51185c6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e806a6e-f91e-404d-b0d9-744cf455c9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d16094f-894a-4451-bda0-4c2609835442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea922ba9-0b23-4d12-b932-bc86ae3dcd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d739f03-5c66-48a3-8aba-a5da72e0222f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2b4100-3b55-44d3-8551-bbdac7522aeb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53777f3b-1679-4cd2-bbe3-67f577c7d63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b85ea92-db75-4d8f-8e02-2f23a47344de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd8b2a7-a481-4edb-abba-375291697342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7175540b-20af-4faf-b334-07d7890b5a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c79a797-4351-4fd2-9e5b-19b1e3d05926",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4760004a-a027-4c7d-95f0-8d466bf68b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd592f74-a189-4e6d-bc5e-aa2626d7723f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97adee13-cacd-4a4c-894e-9bc86a333c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109783a0-5437-444a-bb40-676119869193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a702e4a-794b-40ee-abfe-8bd0d8e5a3bd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a6ec1f-0c8c-4fdf-aa44-3fefb7d0bf20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a32c85-0216-4925-b9c0-86176ff229e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48796e8a-7b3a-41be-ae15-a8592498f4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbc7c1e-27b0-460f-96b1-d9a12a66959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eec8c4f-7fca-4f62-bc61-90cdfd90152d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67939d4d-5453-46dc-abe9-8f67c709169f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53edf606-66fd-46e2-bfb7-c8657ffbd985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cea2330-ca8a-4c30-831f-bd373500f7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145dd745-bec0-49c1-a869-5de6d0314724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88176ff-fb67-43ee-9a7d-0462e5432b48",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bbbad9-6012-474d-aa54-b8294fed0fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61de2d50-2f79-4654-82ef-a6ceb3cf7e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a9dae9-2cf6-4d6c-ba51-6ca560a6066b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25f7747-dc6f-457e-94c9-fdc4271cbff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b710f7-7aaa-4015-997a-c6bb75524c49",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fca70fb-8185-4ed0-b2ce-daa54d02055d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db7666f-2c6b-4f90-9f53-2b79a83fb0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a1770-371f-48b0-9000-333858032c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7ce607-8922-4c88-a852-ed31129f4dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209ccab0-0a72-45e3-b4cf-d02cf417f7b8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c752c3c8-6cbf-4d96-bbe5-e2f508871f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedddb2a-5f41-469d-8d6d-6c50302fda50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d4ad46-9bb3-4cd7-8bc8-4961aa0af333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea9b71b-d153-400b-8fd1-e8a02e886398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2838d3cc-77a8-4765-8593-6a5613ca6a54",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e41937-746f-4249-8ddb-f59e9d1b534a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f3ce2d-f98b-4466-b409-c1d79cea320f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c906865-b237-4322-9b15-28cde01e2a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ab74a7-739a-4ab0-be76-d3d14d09f534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e099dfd8-bfcd-4377-b80c-4c245730eedc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284783b2-9c22-4586-9cdf-f1ca3d883f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98b7da5-0fa4-4895-94ba-f622d39155e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4832d020-0db4-437d-817d-ed386ccf10f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb21d20b-8b54-4368-9572-0e0d7a6b5517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2609ad9d-93d5-4fd5-9373-d7d5a45516c4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87c3f9f-87b5-4066-8065-121aebace5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e2e579-6a17-4193-80af-2ed96ded171c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac29831c-30fe-4eee-a827-509bc7ad6e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc4a076-5108-468a-8903-e52a321bfd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a81d57e-6877-4714-8c0e-35702f1299ff",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7725ae54-69ed-4331-b7c2-77762856d228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3362b452-484c-4be2-962b-8254dec5344c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afdc60b-0b83-48bb-a616-798a0d322376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4aa5f2-20aa-4f0d-a0be-b960cb9a995f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42fb43c-ca88-42ca-b4eb-581a59f5cdb4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f2f08a-1813-4d80-b9ba-0712e8ae0ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dce8bf-2e9e-40b8-84f3-b7a3bc32d8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d858455a-2189-4350-b6f5-29c826344d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd38ff8-57c4-4947-b4c5-c4ee744980e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d732e0-55ed-4ee7-8c46-a3df64c11ef2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa3820e-1c52-457d-9d2d-c2d84da566e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53735e42-3881-4f02-86a2-ac184a3e641a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05587175-b879-41f1-996f-8e37812b6178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a30592-614d-42cb-845d-926c1e176cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c346f7d-b08a-41e3-837f-6543fd45c008",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffd21b5-1c53-4cfb-9067-b445c06cb749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c10b537-2d38-458d-bb07-0a024415f168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cf1d44-72c8-47c2-918b-df722f0a7d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2b001d-3dac-41c8-84b6-0b7a15e1837a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223a3299-c309-40e8-a7de-455f51937899",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8774954b-f054-4280-b058-388149f14061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff4d524-7346-429f-8bcf-bf1615ed0b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b610e0-e406-4e50-b395-53dd208cc15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5e582c-a6a7-4f5b-be58-3954cb0f3914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2528bae-fbfd-4920-8dbe-ceba1cc3f642",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e180623-76f8-4015-be43-bffdd55dd733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dad803-83d1-42ae-a671-16f894a8b2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4947bc4f-83a8-43e9-923d-b5423530a630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53cb5d8-05b6-4424-9556-4fe78ca38530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cec9006-b933-4a4e-84c6-c1828ee606db",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd72178-ff85-46fb-a8cc-c4c2a9686830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c505d4cd-1121-4061-a807-d3b55ce625d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a7cdeb-8b8f-403d-84d7-d3a5c71259bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61eccc12-9aca-4f6d-9733-2a188f3e4746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03167ff8-b067-47ff-b251-22fbd2856436",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca124cc-6c39-4627-a995-c2eef68b2148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047f9b4b-4958-449f-afd1-37437cf1bac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc00ba36-0fa0-4307-9797-84733ae74711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dbfaa8-050d-4e5f-bef3-0bcd09841f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e422ac-f1a3-4e10-afaa-251802deb47b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf280fe-2d67-4675-aba8-e1da6423b788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662941f6-2e15-422f-b435-c8c876f28ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e336d7ea-db54-472f-8e7c-d8963263e4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e1bfc5-aa0f-4fad-90e9-c628ff186734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f348db3e-38df-44a3-97f4-d9b49ce11aff",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06aeb177-c1c6-40f6-a052-72936371c989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67e2ad3-eefd-4603-aca0-40dcbfd33da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27f5107-135c-4174-9015-87c15bc7d30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac01dea1-6855-45be-bce8-2fbeb48d268a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e3cfb2-4267-439f-922b-f0ac7dba20e3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b928b9-ccbc-4e36-b919-4b92dc3c32dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf43bc55-79c5-4547-a0ce-4820c65dca12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a8f732-6c57-4b08-b27b-9a41f3b172e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0863471c-d7ce-490d-af57-80840d137b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53408e3-bac7-4ab1-93c1-26a5de2788ee",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20b52f3-60e7-4335-a05c-12c224b8ec39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90da6af9-3dda-4e3e-a11c-d1c159f02616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc52ea0-6cbe-400c-9512-fc2a69b45296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cda6128-4ac2-4f28-a0e8-8bacdba4b30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b5fcd8-ac13-4969-b41d-b5b47812fec6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df5455c-7a40-4a0c-9af1-413c2be3f7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81f5064-4c58-466e-8c59-c9d69fdbb25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f5bb66-a7cf-4471-a2ec-dcc22de4a78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380cf3b1-3b4f-4f95-9480-99f294c3f495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0682aee1-0b0e-4a64-a817-6a416b4c4835",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1082a3ed-110d-4be2-a15a-2ab905e33fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b86e43-ebfc-487a-aec2-3b8e1b7aa831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690f5fdf-e24b-4c69-8f98-41367aa7a244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eda2eaa-7e4f-455c-ac07-dfcaeac73723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be9c7dd-784e-410c-9c58-e8d584dd1907",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008961dd-0e41-4449-a007-cdbf1732e45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b775de2b-d68b-42fd-a7b7-351be6097d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc391384-6a6d-4620-a66c-ed7a0f8125ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ac4d75-aa6f-4d28-8be7-3fd4c6bbea84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08024e6-6d78-43b7-bada-d25a739c35d6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d5760c-0630-43e9-a367-f5450dfce30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fa5fb0-2cf5-4a68-b1a6-fdc7c27607bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ce15c5-ce12-49a7-9d46-bb09af170f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3a287b-b691-4e96-9eb6-b0a3c8c6a883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7af350-b585-4668-b9d7-e4e8b7b2c01b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2956fabd-7c57-4c2f-970d-48d73349fa96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155cdbe7-1868-4418-bf1d-428dd6bcdcea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a427d01-b78e-43d0-bb01-914cc38ecd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db56d337-73fe-47e6-bdb5-56983054c8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be059fe-eac9-48be-ac8c-f63d71374eaf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e1ffdf-fff1-4e69-b1fc-725f1b7149b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5741ce1-bc93-477f-be9e-7416198dd22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d998308-3860-4ede-ad9f-cf22d7ae896d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338939f2-6b80-4a39-a991-aa5511ab4ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2552d76b-d2e0-47ce-8fec-6d188a7b6e61",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f8d6b3-561c-4654-ad99-1bd647f8554a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ddda0d-43b8-457e-9fb1-8901714b256e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b81e860-61ea-48ce-9795-e33f61b8a047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a242ac-e0ea-4a3a-8655-275c6f41f352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e318090-62b3-45a4-aac5-fa80720a52b0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee486821-ea01-4567-b718-ca44fa96b83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbef87b7-6b04-4942-8df7-3a6ae04b64ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48084e3f-f391-49e3-ab90-92a14075d0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92b96f1-f71c-449f-a140-4d6d2a03479b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbce1240-7482-427c-a0d0-d6d554b508fc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2bb25f-31dc-482a-b2f1-8197139360ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a397ef-3f5c-46dc-9fcb-aa3ff8b35e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c39c8f-cb6f-45bb-8685-3c8187cd9670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cd9a93-c49c-48d4-a773-8c9de7e0bd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1a9e2f-638d-4d83-b8b8-22413cbe5d4e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eebc4f5-055f-4b44-940a-4c82dffc3c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60cc6023-40e6-4ea1-8d1f-3225a5711d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37456a84-d512-4046-91e7-7259f95d5e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2ea92b-7b2f-4b48-99b8-cece236246f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410a02b9-5b9e-4ce4-8dbf-42f2610b8142",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554c122b-efda-4a03-bcef-a41db14018b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea0a32e-3c01-4f5f-8523-3ebdec02372c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12799252-d550-403e-bcb4-492cf813dc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6d08c9-4841-4fb6-b283-ed99edde9fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29385bd9-5306-474c-a444-b8975948c179",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2471c1b0-6a96-4e15-83cb-cf73cde95750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0811c5a3-2ae7-4528-9b14-f651f6497a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b51e7b-3753-4bba-859b-fc02ca39a5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e10e1f8-bebf-430f-8dc3-c1300b0efd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cee129-06a7-448a-b3cc-69139501f054",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9544a962-b279-40fd-a435-8f3c2d95dfd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015b0fd7-5b60-4fa9-95e7-3e1a712f3922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45050c00-7c14-484f-9a70-2b0f178e3221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96dbd18e-c3e3-4b80-8ce3-f425f631e4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c00e230-6a6b-4957-b678-00d88929ab10",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08c572e-2bf1-406a-9d25-57d0f2d4ea10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "851d22f5-8f31-45da-9de5-c6dc165c0dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27aabe4-4e76-43db-8503-139f9a659a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7066fb37-6074-4e1c-a342-6e46daf82b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620eebbd-3cfc-429e-9e23-bba7ece154c3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c377e5-c7fd-4dd0-b8af-d363a5c43dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f66e88c-284f-4273-84e9-3fd223b76272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458d3f9e-2d44-4972-8216-dc3a28fb5be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acdf511-ae32-4945-b5d9-9bef6580b9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58454dd0-e238-4034-9e60-badfd306db8d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffd1cac-abda-48fb-b26d-654b02b69e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ecaec0-5eee-4349-9f75-e78da679caf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18c14c1-87ad-43cb-ac84-14775725188f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95bc33f-754c-46e1-bf17-d0a2a80b9866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99db6a39-4422-4ccb-a902-4f76d36a62b3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cd5350-3af3-4b7a-9707-12fa8de28616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c291d7-7826-4a66-acac-1ed52000ef29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1635dae5-4f8b-44cf-a338-6b9c00f050d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6a1d9c-079a-4ffb-9a09-f6a1224d398e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae2d415-3f47-4c6f-8d2e-3ffabd2a0530",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b762b1a1-b822-4845-b6da-32034f442da7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ac0cd7-5d2e-4119-b13d-447b6bea4537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c9d84c-e08d-47f8-b75c-8b04b012a92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c5705a-f8e9-427e-a485-3e4aaf35b025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a63ca6-8bc2-4289-b264-5ea5997eeced",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7973fe17-b56a-4788-bcbf-dd620e5485d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b491a0b2-c813-45d9-9460-364274f0df02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612ae5fb-97c2-49dc-87cb-9f3a6acf789e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fd7917-dc76-49a3-b98f-f9e9ca5e67a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39f1f45-398a-491e-985d-a8a0eaeecaf5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d713136d-7f17-4cb1-a4c7-ba440511a675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3127b485-df6b-4d94-8d48-397f9aa63815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c989525-6c6b-4d9f-89b5-fa1edfc6c81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9905e007-09ca-4591-9960-fafb05acc7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efaf554-7678-4a76-8491-7aea7b7ea78b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ae0353-2294-47bf-b4d9-1a130289a579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0560d1be-71ba-4854-9797-f5d3dd478e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192b9382-deb7-40e7-99ad-876db0c92ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835a9515-bcae-430e-9c22-80c504ed2210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c953ee6-805c-4408-ab05-03eb6afbf3c9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e168bb09-1a8b-42e4-9b04-2e066d9297a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e910a27-3ef3-4705-8580-3c72138e7364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae835bb-16e7-4dfc-8c8e-f1f782165194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323c3fb1-c85c-44cd-85c1-5e37956f9542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9310e-e479-4a34-a766-d7aaf95ef16a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b511501-8750-423d-8bc5-b002ced6e3d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd88d27-31d8-4606-a456-871fd5b245ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9701bc-ac0f-45d9-8ba8-0409ad6f9d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ebe7ea-6a6d-4d42-9dad-d2cd9256d89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffe2116-ea63-4252-b82f-ec547cf34d38",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57778b5-732b-4177-b179-627ac9eff74c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8ccdd7-f782-418f-aa08-0ea9fa40f137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96543069-6912-413f-b6d2-823170025e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e2f868-6fd2-4a43-8793-51ab40042c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a226f116-adee-4fe0-90e3-dffa60e228b7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971ab6de-fdbd-4ad7-8d24-2acf2d0bcf6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30eba6f4-0dcd-4db6-a6ae-d521da87774c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289f80e7-34ff-4f99-a991-9d5708a86db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9739ca4e-9174-4495-88f0-2d1642e5bd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5265f1-45a4-4a4d-82d1-e7f0de120f90",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2272ba-0a1b-48e3-82a1-ecbccfcd1fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250e8223-cc77-47a2-beea-3f4e6b51e35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c10bbd-2540-4478-a08e-002345cef860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc5eadf-9e5f-4d6a-946f-c293234310fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7acefe-b88e-43ee-aee9-4ba3310495af",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7835f4-46bf-4445-a1ff-327a75ad15ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "512a88b9-23c9-40c3-8e90-9f0292b7ded2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50480c50-fd21-4c85-b289-34d2e651d22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f12df18-e712-46e5-ab53-9a52600caa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdaa32c-816a-4505-8864-d9404be3caf9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59683f79-3e93-4a22-9323-382154977b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ecc37b8-65ab-4bc1-9f04-bd31e0c66e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730f7937-19b6-4dab-ba78-32ec1ee9d948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac60e272-ae74-494b-95db-b82f6232bb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118239ea-592f-4a45-bc8d-4a51e7677306",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5708a66-2916-42ea-a13a-fc5867a77dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4a2d1a-beac-4a54-8d2d-16c908776b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58095f32-58b6-498b-a0fb-1b2c72a1828a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b561214b-8615-4fc0-a1f7-a12431eaf873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5e958c-e83b-47a6-84b4-5444f684831a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55de592-7f5d-4d26-8b9a-0db12c339222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe60b8e-5861-4c99-aa77-394468fd7f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8a71b6-7a88-4ae1-b342-38eb613cecfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b631b545-414a-4a73-a5ff-088d689219f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40d538c-e305-4a34-8f3f-2488c9af2ff3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7094197-9843-41dc-a7ed-d207933d069b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d30a67-cdde-4100-9f5b-bf514ab844dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c08a97-8679-4aa7-8bac-6cdaac00f613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc2cad5-dec3-40e8-ac6d-5d6d7f6afd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e45172-c1ea-436d-a1ad-c57d8eb2c7c3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad30892-607e-4799-9702-91925c67d4e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c76f33c-b389-49d2-8ee0-2f3894ed6024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260ee533-c0a8-416a-b167-24e82529cf00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1a4be0-a94e-4048-9be9-73456d8ccff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c45dec-1dd7-44b8-b029-9b35e59a4d70",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abf97ce-ea82-479f-b73f-65c84235007b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea93041b-054e-4825-9289-ab4b4eae9044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b39015-9989-4b74-b8e4-9c2183061f7b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c050eec4-7444-4d70-b1e3-a9ddde730efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632f4f2a-91af-4cbc-b2b1-3e026092b82b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0a91f3-423d-4894-8a54-af30556346d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c88105bb-02e4-4574-8afe-45bfb9c8e439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3561719-3d35-4036-b418-3df554fb1799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c93b6c6-773b-4208-97c8-1c309b6fdb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1c4ec7-66bb-46c4-8068-24d1840adb93",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8120e8f-989c-4e53-9e6f-824164e5360f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c81c36-63e2-4494-81e1-22710fbec395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3b6c2f-9ea9-4b20-86c1-2e9f0b01fe6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89707904-0465-4622-b25e-c910ae4b6124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d37bab5-02db-4602-b2e4-07df635c2eee",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd40019-f0f8-4414-b160-628a6a0bdd35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e45326-e3a6-413c-8731-4af9f802a3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e8279-1e20-4405-8ce5-6478c8ec06d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e98cfed-d03e-4edd-ab6b-fb28278dacec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6015da6f-522d-4848-b223-b27c20228cbe",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e071d71-d2d2-4cbd-9b15-3a8ba3604e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da5f89b4-e1c0-40dd-8e87-ff8fb85e27be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6195cd8-d963-4eed-8a30-bd09a8f80b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e12ebd-87db-47e3-96ac-0c675c36a6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e1192c-0d3d-474f-81b8-6288382f4fc8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0a1a5b-b7f5-4c30-b827-b66c5a5ed578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee278643-3c0f-4987-9b36-e9c6339b55fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8631b8a2-b86d-4175-a0c8-02f44b40ce7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9bea79-8eca-46e2-bd22-5e3080b6504e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaf9383-03eb-490f-aa9c-0ee58ede4351",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89d5b5e-a3af-4ab5-9d35-cd85609b7e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2eca10d-dc2e-48b7-85a6-1f7754ee8822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f302ea9b-c565-4ad9-ae3e-045e2dfce200",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa844989-fd65-4081-803e-066548aeb6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1d6808-2d9f-44ac-98bb-0ca2271c1a57",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06952521-cc0f-4f24-b010-57f3790b7029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a888c5a1-2e7b-4f8f-9c5b-23b083f3e150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231d9333-125d-4297-8126-d5f409602dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2758ff8e-1893-4e03-80d5-215f0f711676"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9681cca-1e32-4e53-ba9c-b27117ba3606",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b819cc7-af35-4dc2-a9aa-a62e56342502"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "298d848a-bf96-426e-84a0-1d665cd7a824",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5db6853-7e30-42d9-a1f6-b4fdd00fc13e"
                    }
                  }
                ]
              },
              {
                "id": "fe3eb88c-e411-486a-8b8a-23af16368b45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42e7ff55-f84f-4a55-98b2-7c6815100f98",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7903ab34-62b1-44c7-a427-b6b64316c689",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "77eec48e-2cf7-4a3b-90a1-e20f35a13ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d767f00b-9bcd-41ea-9e72-d8d26cda2924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfbe8468-9b98-4120-96c5-d02f0884a65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73eb8773-3407-4ea1-99d7-244c27ef4657",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7484df68-1eea-4172-b91e-6a7c50993cb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2fc17de2-df41-40d0-8a0a-14b42c97762a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72a22c0-3bb8-462e-b77e-17d355d32879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce9cfa09-93b9-4a64-a119-881d99f9d4cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b3a82f0-bf75-4c41-8a55-9ee1b7874cf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "946fe5fa-4deb-4b27-97bb-303c3048b437"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc6da4de-ccf2-43af-b4b6-7b258ee66558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b96a8e65-2e5b-46bf-92b0-51f98ec0ca3c"
                    }
                  }
                ]
              },
              {
                "id": "a209d7f3-5ce7-4ae0-a308-fc829ed81a9b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2a26665c-ec0e-4c33-b20b-9af3dc2795b8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397524ed-fc6d-484b-b881-58e877fbe983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ca6c9ae2-9f41-4a13-8f5f-fe7b099bbbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53e563a-abba-42b8-9cf1-fc4a7521ec56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12d1927-712f-4654-b017-35cf5908974f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "003d5cb3-87f9-41ba-bf95-7c05a145dd8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "515a476b-42e5-4c98-a334-12fb30161f65",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "017232a7-07cb-4794-b640-9b771d2fe8d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bd327ff7-bc3c-494c-9018-a2ad685e7545"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05b9e94e-f91c-4562-88a5-91f011e0e6a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "059373b2-1b8d-4d77-a4f2-76c4cfa92427"
                    }
                  }
                ]
              },
              {
                "id": "00949760-e56e-48b3-860a-fcf3068164c8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ed9c5e8-bdb1-430a-9dc1-92d679b2d6bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "325dddb2-1578-43e4-b0ea-ace539b3b76b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df155d8f-003b-4370-b326-570a7ecc878e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeeb8424-85c1-4c16-8927-3f708bbf69c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82552ed2-1e7e-4d17-8930-343ce27d8263",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aa427213-33e8-42ca-bd81-58bf5d4068f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb3e3212-1db3-4418-b96b-d4c950fccfcc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4be342d6-d4d5-4913-b406-6446c3013fa7"
            }
          }
        ]
      },
      {
        "id": "4c8622b6-4ca6-4027-8bc6-e8044b4465e1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e098e0f2-0b7c-4984-b36b-e34a3ea34c27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfb1467f-496b-4904-a6f4-799677be8e45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7d5686a-3e69-46cb-9327-17d8ad322a1b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45ada10-a39c-4010-82ec-0e3118378d31",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1ba0e87e-a72a-4d79-936f-83e7c3d5bfcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109f3cd4-6cca-47be-8883-03db94fa9b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "474d63c5-a604-4b13-8f30-941d900933fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e62daa9-05ba-4986-9673-638b6c787df8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae16260-df31-4276-b14f-327b862fdc19",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6fef156f-8186-4e85-9d5d-4a328f9f888b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f3dca2-ac02-4f95-8378-61c64ab466e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a12e5bec-2858-4768-a089-87674c898bae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0be23080-0e20-4548-abfb-1f0869e82696",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2a6e3b6-afa5-43eb-ab1d-0e4eaa3dbe6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4fe4e9b-ecad-466a-9421-314023cf8cb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "def51bd6-2476-40b2-8193-b784718215a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7844a23-73d0-45ba-a863-d6ac6f15afd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0b7b84a8-e45b-4e61-8911-68952db3400f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f524ad87-74a7-41af-ab4b-b2aee1790641",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c638e5b-6723-4bc0-a060-9c4c6e626a4e"
            }
          }
        ]
      },
      {
        "id": "7a04088b-2f8a-40b5-9b73-e025c693df3a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c8adb423-30a0-486d-af8b-fd363bd1a354",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef3ad94c-2f9a-47c5-8cf5-9a76c3881c60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67679144-a173-4fb6-b62c-4f0029f64f74",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5a948b-5331-4ba8-a627-760c168111be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e5e74ac-f86b-4d3c-a06e-a9c33bd1ef13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31027af0-8606-42f1-8f64-7108066d144f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55693b13-0607-41e4-81d1-347d65763b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2d2607-1bdc-4f12-8306-fb399de74f9f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d0e2c4-48ca-48c7-8548-fb77e2170448",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "017ece3b-edcd-4b2e-a12a-917b7eb78bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5e49c3-fd26-4a57-9471-68ef8986f85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da354995-2fda-4cc8-99d8-be4103c21f20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f10902b-6808-47cc-b59b-2bf12236ea2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43a0ab41-eb98-42c6-9e15-ebdf929e4010"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38edace6-e3a4-47ff-b7e5-04409f58fb31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cb72781-81a4-47ff-ad02-43468e295da9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8aa00ed9-22a6-4cad-b944-ce61f4ab6e4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a11a307-86d2-4d8c-b128-66e722ed22b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7857e7f2-0f22-42c4-a5aa-542df33db29c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41a271a1-3af5-4c93-a9bf-fb4bb5b0ec28"
            }
          }
        ]
      },
      {
        "id": "075179be-1175-407f-b0bf-b6df9a7a33a7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9593f829-c6b5-40ee-a332-33965a52ace6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b6a55e9-010c-4643-91a0-d87a43a379f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b4b6255-66d4-448d-96d2-02373dbde152",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5359a375-f873-4198-ac6f-34cfc39311d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9c3f12d-9be6-46e0-8a20-50ed17b33c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b4fe5a-dccc-478a-b3b9-dac291d2e47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12798286-58ad-45d8-aeaf-f1f4952a05f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44a3c0f-466d-4331-b981-0bb6046f3f67",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07adcda6-4084-4cde-b903-7903aa571a2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "416004be-f942-4d48-9795-3508d7981442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dbcc07-cd8b-48ab-8eee-83e3a474b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea1bda87-9f7a-453a-83f0-a803e18b1687"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83f2c9d4-b4cf-444e-9e4c-8862813e6759",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "820e94f8-9884-4a9b-8858-d40497fe59d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b020ae2e-d8a3-478d-bf00-1cacfb261da7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c10b8b7-2ef8-4e58-a95f-65b03c0f94f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d4aabad-03d8-46e0-96c6-8dbca6425cc2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1fee92a4-faa1-4e15-93ca-76258f337a85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a903197-eda6-480f-8765-820b726c04ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fba9d9c-f9e6-47e6-adf7-e81ab98efcf9"
            }
          }
        ]
      },
      {
        "id": "3b17a08d-165b-41ea-a612-2a39492e8966",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb4de5e5-b314-485a-bf48-6498a696049e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2265f7e-6c56-49a0-859c-87bc2e093732",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "de21335f-a8d6-4ffb-8e23-f3a18fae5fb5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "044c2bc4-a0ac-493e-809f-ea8bbc1d02eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a95e4946-bb5b-4232-90e7-6549bbac7985",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.019230769230768,
      "responseMin": 3,
      "responseMax": 390,
      "responseSd": 41.88504891348708,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684974982095,
      "completed": 1684974996632
    },
    "executions": [
      {
        "id": "46ebd792-2916-42e0-9795-bc10b4980646",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e69f284c-8673-4439-94dc-108918b5fcb3",
          "httpRequestId": "b62056cd-2235-4c39-9fd6-f0018a0b63a5"
        },
        "item": {
          "id": "46ebd792-2916-42e0-9795-bc10b4980646",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b64b4f07-df47-46a5-8d0c-5c43275fc449",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "01904a6b-9b7c-4fd9-ba19-96dfe1bdb530",
        "cursor": {
          "ref": "036dff17-f936-42b1-923b-617ba119b4c9",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e49669e8-e18c-47a0-aa46-d9dfb2509a13"
        },
        "item": {
          "id": "01904a6b-9b7c-4fd9-ba19-96dfe1bdb530",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c5ffe110-f38a-40d1-829d-06abd4606105",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "404907cf-81d3-4ff8-baef-551c731db6d2",
        "cursor": {
          "ref": "734e97a0-2f32-4cea-b740-d727d6c7eb1c",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6126801a-8770-40df-9376-0b45306dd111"
        },
        "item": {
          "id": "404907cf-81d3-4ff8-baef-551c731db6d2",
          "name": "did_json"
        },
        "response": {
          "id": "fc5ef4a0-ccea-4b8d-a42a-d0fad9c1c648",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1301509b-dc49-474e-b5e6-8b1dc7abe5cf",
        "cursor": {
          "ref": "fbf0d093-cd70-4ea2-8db5-b8e35f372450",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71de87fb-8444-4f5f-82ee-0b17394b56f8"
        },
        "item": {
          "id": "1301509b-dc49-474e-b5e6-8b1dc7abe5cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "17703dbd-af00-4ae1-afbb-ee1bb9164623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1301509b-dc49-474e-b5e6-8b1dc7abe5cf",
        "cursor": {
          "ref": "fbf0d093-cd70-4ea2-8db5-b8e35f372450",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71de87fb-8444-4f5f-82ee-0b17394b56f8"
        },
        "item": {
          "id": "1301509b-dc49-474e-b5e6-8b1dc7abe5cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "17703dbd-af00-4ae1-afbb-ee1bb9164623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b10cbbf-4f18-47b5-8abd-9fcd4721eac2",
        "cursor": {
          "ref": "0ebaf97d-ff83-4f16-8a9a-a8473cee59a6",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a93614ca-35a4-4e56-8853-297c30a2c39e"
        },
        "item": {
          "id": "5b10cbbf-4f18-47b5-8abd-9fcd4721eac2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "42c9ccac-f2ef-4510-8264-330cf122444f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4640f4-faa6-4518-b57b-0ac5070f88bd",
        "cursor": {
          "ref": "dcc41aa8-830b-410a-9689-85e1d459bb65",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bab152d4-4358-4f03-a829-d99f80f4dc4b"
        },
        "item": {
          "id": "cb4640f4-faa6-4518-b57b-0ac5070f88bd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "30996341-427a-4f4a-9258-d2743f088590",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ec9f32-6f02-4413-9403-e3e45732398a",
        "cursor": {
          "ref": "63ae922e-b2be-48cd-9c53-fa33ebcb2988",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a0542304-e7fc-452e-b337-a48e780622fc"
        },
        "item": {
          "id": "f0ec9f32-6f02-4413-9403-e3e45732398a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "be7107d1-59c0-4d78-a07e-282ebb5cf6b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4104b54-c496-43e9-962a-0df5f505caa4",
        "cursor": {
          "ref": "9f740305-f952-44ef-87f0-812c06fc3513",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "70ee29eb-3bfe-47fd-9246-e9ed9b31befe"
        },
        "item": {
          "id": "e4104b54-c496-43e9-962a-0df5f505caa4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f8fe7c62-14f4-478e-8169-ef5c8fa8fd5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4104b54-c496-43e9-962a-0df5f505caa4",
        "cursor": {
          "ref": "9f740305-f952-44ef-87f0-812c06fc3513",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "70ee29eb-3bfe-47fd-9246-e9ed9b31befe"
        },
        "item": {
          "id": "e4104b54-c496-43e9-962a-0df5f505caa4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f8fe7c62-14f4-478e-8169-ef5c8fa8fd5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40265c5-d6a9-47b7-ab98-a771feac6f57",
        "cursor": {
          "ref": "b9725c2d-4f15-4ed8-ac21-0ed4b3842c8f",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "854d73f0-17a7-4c62-9de1-4449a7ba1194"
        },
        "item": {
          "id": "d40265c5-d6a9-47b7-ab98-a771feac6f57",
          "name": "identifiers"
        },
        "response": {
          "id": "313bc6b8-8524-4388-81fe-442ca63675e2",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fe97d4-c326-475d-9f99-4641b6c9094a",
        "cursor": {
          "ref": "2690cee4-83c6-40b4-b6aa-31fbc93cbc52",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24be09c7-4c20-4f5b-8e36-d3c0bd971661"
        },
        "item": {
          "id": "e0fe97d4-c326-475d-9f99-4641b6c9094a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ba11afc5-9e87-46f7-9860-c7894e00ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fe97d4-c326-475d-9f99-4641b6c9094a",
        "cursor": {
          "ref": "2690cee4-83c6-40b4-b6aa-31fbc93cbc52",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24be09c7-4c20-4f5b-8e36-d3c0bd971661"
        },
        "item": {
          "id": "e0fe97d4-c326-475d-9f99-4641b6c9094a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ba11afc5-9e87-46f7-9860-c7894e00ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d8b175-798d-4bcc-8c58-be0c987d3c24",
        "cursor": {
          "ref": "26781024-f85d-471f-ae66-5d330ab9c8ba",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "91279555-2764-423e-8f9a-d982e1669f9e"
        },
        "item": {
          "id": "86d8b175-798d-4bcc-8c58-be0c987d3c24",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "386c5403-c533-4680-a89c-e5fc800cfee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb48e93-056e-4920-85c3-b40df205b192",
        "cursor": {
          "ref": "d52fda16-466a-4a6c-aaa2-2a0771fd100c",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a0faf48-84ed-4435-a3c9-17832ac9ca1a"
        },
        "item": {
          "id": "6cb48e93-056e-4920-85c3-b40df205b192",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e24596d2-9a50-4a3c-b034-dfcb17f1fe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4760d004-8c39-4089-b7ea-45c5016bbee3",
        "cursor": {
          "ref": "02a24aa5-2064-4056-b6f4-6784fb14bdd3",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2d7f2715-7548-4461-980c-2da2bbad4271"
        },
        "item": {
          "id": "4760d004-8c39-4089-b7ea-45c5016bbee3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cf9f4ec4-0738-4570-a3a6-2a64c97f5a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8613288-8a65-4bc9-80dd-b56e4b5b028a",
        "cursor": {
          "ref": "fa9f6d9c-0ef2-4c36-8bd5-53772ba35b83",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f99918b2-2d99-4135-a406-44d09ed510f3"
        },
        "item": {
          "id": "f8613288-8a65-4bc9-80dd-b56e4b5b028a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e604b7f3-9685-4e71-bc2c-35c78761b393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d143cf-6bec-4fc3-9438-29c928ffce81",
        "cursor": {
          "ref": "9f021128-d724-4ac4-8e25-f5e1731f82e8",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d9911bfa-c3e0-4857-9e05-b5e79968bcf5"
        },
        "item": {
          "id": "23d143cf-6bec-4fc3-9438-29c928ffce81",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ec5dd30c-2374-4d99-b5d9-a6bd48a23913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c45db4-6a94-4370-ba0b-677fea4392f2",
        "cursor": {
          "ref": "426f5d7a-01a1-4eb0-86c2-635b0a41015c",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2ae3bc5e-2501-46d8-acc7-ad0b2a952052"
        },
        "item": {
          "id": "77c45db4-6a94-4370-ba0b-677fea4392f2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c68742b3-885f-463a-82cf-7c2d3b9b251c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee09c72e-908e-44c5-9e52-43c4b3439ea1",
        "cursor": {
          "ref": "4010046d-324b-4495-8d08-d74fccf2774a",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a132de5e-c279-4d01-8a36-edc2cf628f85"
        },
        "item": {
          "id": "ee09c72e-908e-44c5-9e52-43c4b3439ea1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "51e29cab-c197-4cd3-875f-e6047886a7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384d2374-f112-4fcf-9a59-c82eeeb0baae",
        "cursor": {
          "ref": "e0a74f26-4425-48c3-821b-5d8b71b0a965",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1569ea45-905d-4a22-af4a-4c04b9c83e44"
        },
        "item": {
          "id": "384d2374-f112-4fcf-9a59-c82eeeb0baae",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3ce90d56-96ed-4024-a04c-fe3e95cec217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fab8de-1b4a-4ac7-9406-afe1bf633719",
        "cursor": {
          "ref": "58d64540-a6e2-445b-b153-452315a4ce7a",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "980f1712-75c2-4cf1-904f-020bdb736177"
        },
        "item": {
          "id": "16fab8de-1b4a-4ac7-9406-afe1bf633719",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f5b1f34b-b36b-4511-8a7f-9d77f8654c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2ea075-8938-4135-8d10-99d2d9ed3339",
        "cursor": {
          "ref": "c04b6e90-ab01-4305-86f1-2ca1abd24fc9",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bba774ca-a4a4-4acd-b05f-d70869bba6f4"
        },
        "item": {
          "id": "be2ea075-8938-4135-8d10-99d2d9ed3339",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8111ffb8-a3be-4638-a2e6-913674da3640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a70f49-32db-484d-a341-bf128bf72677",
        "cursor": {
          "ref": "e017c353-fb78-4699-9ef0-09a41bd17cdf",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bad7914e-d9bb-4b76-8abf-124a0b143f0c"
        },
        "item": {
          "id": "15a70f49-32db-484d-a341-bf128bf72677",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "35107474-0cb5-4b8f-8dc3-e04e659013b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342e0788-80a2-4db5-b2f2-721ec891ff15",
        "cursor": {
          "ref": "7eb25a45-765f-4ecc-a4d8-cf87eaa061a0",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a4b6702a-5b0a-433c-8ca8-13a14df11eaa"
        },
        "item": {
          "id": "342e0788-80a2-4db5-b2f2-721ec891ff15",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "535ed7d2-98b2-4a7d-a205-0d5420139c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b601f4-1cf8-41b7-aadf-e27810f9d703",
        "cursor": {
          "ref": "0fe6205f-14ee-48cb-bb7f-1672bf1acd70",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "64ab294c-f319-49c8-8283-2f711044c153"
        },
        "item": {
          "id": "57b601f4-1cf8-41b7-aadf-e27810f9d703",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ed1a3ef1-6b1d-4967-a6a1-1aa3a1a6dadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0d7293-b7dd-4b68-b1e0-a013b53768c1",
        "cursor": {
          "ref": "dcea9d2b-c957-4fbd-929a-24cc8b088bce",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fe55c945-76db-4742-818b-3fa220ee54f1"
        },
        "item": {
          "id": "dd0d7293-b7dd-4b68-b1e0-a013b53768c1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4df92d7f-d8a5-4980-bd93-02aeee803299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0456f297-0f5a-49d2-b5c7-53a1c22758ca",
        "cursor": {
          "ref": "7fed8776-31a1-4d96-a67a-708f513a58bd",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "06585d51-e1ef-453c-afe9-d04ef68a04e9"
        },
        "item": {
          "id": "0456f297-0f5a-49d2-b5c7-53a1c22758ca",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba3c5b1f-107d-4cab-86c2-6b2cedad574f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc00a72b-9bf6-4413-a94a-fcda3f5aece9",
        "cursor": {
          "ref": "63014c8b-4316-4634-a738-c4ada935c23d",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c69e615a-0457-498b-9817-0671aa67a555"
        },
        "item": {
          "id": "cc00a72b-9bf6-4413-a94a-fcda3f5aece9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b61b3218-9305-4dda-9407-b99aec792801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473e80ad-df04-48a5-a3fc-e040da3b7f2c",
        "cursor": {
          "ref": "b9985563-9318-482f-9b0d-9b3348e0d83c",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0fab069d-df44-4965-aa40-44ea70786e13"
        },
        "item": {
          "id": "473e80ad-df04-48a5-a3fc-e040da3b7f2c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dc2871cf-0557-4d7f-8c60-3e14d270bd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cb5e50-c35d-4c36-9064-8aa310b3645a",
        "cursor": {
          "ref": "07497869-23ec-4958-8d66-c7dbb335dca2",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "02580d82-7f49-4f16-8718-2aaac437f803"
        },
        "item": {
          "id": "b7cb5e50-c35d-4c36-9064-8aa310b3645a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a867cf02-e2e4-421f-9f9e-0af3adacbeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22adc203-c5b9-4b45-a306-75a69582f390",
        "cursor": {
          "ref": "dd00aefd-4e08-435d-80b7-0166e24659d5",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c496c82a-e0e9-4419-aa46-31cae7595858"
        },
        "item": {
          "id": "22adc203-c5b9-4b45-a306-75a69582f390",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "84f1f01b-45dc-4412-bef3-d5f754a16a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1478293-1adc-4456-8857-418d1b5f5985",
        "cursor": {
          "ref": "0071d904-94de-4860-b336-6f8df7f4be5f",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a5cf5bc5-7f2c-4834-9cd5-25fd4785e647"
        },
        "item": {
          "id": "c1478293-1adc-4456-8857-418d1b5f5985",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7f85a7b6-0e87-41b1-b980-7ee4c2c80c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75b4254-dcfc-4135-a7cf-e9aed68ee9b8",
        "cursor": {
          "ref": "5171fd33-6008-4d88-b328-0517ea4ec409",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "be155a1d-5a39-4245-b2c8-d8fac0c58321"
        },
        "item": {
          "id": "e75b4254-dcfc-4135-a7cf-e9aed68ee9b8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e7b50037-4dd1-45ad-892c-c0376b287b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b161312-e760-49cc-b3f4-fbacfcf6ea4c",
        "cursor": {
          "ref": "080f495b-daf1-4818-91da-93b3e0c4f4e2",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "88e1e700-4369-4079-ada8-7a84b26f90b4"
        },
        "item": {
          "id": "8b161312-e760-49cc-b3f4-fbacfcf6ea4c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2cf79daf-21cd-45f8-bc1c-d34fc0b061b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d061749-a81d-4a37-bc04-96edf45c0183",
        "cursor": {
          "ref": "7b95173d-8d92-493a-8b0e-fd2ff8e8fcc3",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5c26f1a9-d0d1-4be7-96da-d33594d4e219"
        },
        "item": {
          "id": "1d061749-a81d-4a37-bc04-96edf45c0183",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6e3f3d78-bbc7-4e5e-a610-c0d713d57a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6012aac0-f166-4bc7-82b6-e0a54e410540",
        "cursor": {
          "ref": "c05263a7-5c6a-4851-8bb6-e2ab3618820b",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "759c1848-e37f-4f85-9d59-0a9f2d91a306"
        },
        "item": {
          "id": "6012aac0-f166-4bc7-82b6-e0a54e410540",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fa370254-c9f3-4c06-9fc1-ff2ab9179625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb328278-11ba-426b-877f-73ad9c50243f",
        "cursor": {
          "ref": "4d33f40b-e16c-4340-90b0-b6dd83fd4e5a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "74d652df-f850-4ede-9549-7f7ab782ab12"
        },
        "item": {
          "id": "fb328278-11ba-426b-877f-73ad9c50243f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a2ff7cd9-13db-4a04-b9bc-52d03f2e0e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aae7156-8437-4812-b499-4d68b838dcec",
        "cursor": {
          "ref": "bf1597b1-2821-436f-8a32-477503fab23a",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "225fa433-751e-46db-b7a2-6d45bed80fa7"
        },
        "item": {
          "id": "8aae7156-8437-4812-b499-4d68b838dcec",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "efdcc133-3b02-42c9-bc1f-36d18e45088f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016319b5-c31b-49c6-bcf0-9be6efe2ad38",
        "cursor": {
          "ref": "84b35cc2-842a-42d8-a82d-beff1789bcf8",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4f34f852-0a17-496b-baea-fb80674cc0c0"
        },
        "item": {
          "id": "016319b5-c31b-49c6-bcf0-9be6efe2ad38",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2bc0d366-6c5b-4ec5-9c60-b6665c2931a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0680afe8-157e-4755-904e-b32e1f386e18",
        "cursor": {
          "ref": "15e85bbe-63c9-4e03-a53e-05fc83231a17",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5833abeb-52a4-4f81-bc13-40ac46e4938b"
        },
        "item": {
          "id": "0680afe8-157e-4755-904e-b32e1f386e18",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "69626d95-50a0-4aeb-89bd-0c4bc3b70562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961aa95f-0b15-429b-923e-37f769c40092",
        "cursor": {
          "ref": "c3669048-ae7b-408d-8e1b-1104dbe2bd91",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ca58a660-857e-403b-9f41-f63562a39cf5"
        },
        "item": {
          "id": "961aa95f-0b15-429b-923e-37f769c40092",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "721949f6-3566-41e0-b507-78a8cef871b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e2c862-06a7-4c4a-97b4-e8f664561422",
        "cursor": {
          "ref": "16c95051-4cda-43d5-851b-6e261e7e33bb",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e7388937-b23d-4619-811a-a45257ae15eb"
        },
        "item": {
          "id": "f5e2c862-06a7-4c4a-97b4-e8f664561422",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a8e6b3ca-4161-4bd0-9deb-f9ee8b660304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc045b72-d95d-4561-b889-88557f1a29e4",
        "cursor": {
          "ref": "eb7508e9-a09c-4802-9418-e48326b60443",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "be66cb54-b6f2-493a-9bb4-49a535065456"
        },
        "item": {
          "id": "bc045b72-d95d-4561-b889-88557f1a29e4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cef8fc52-382d-485c-b7a7-aaabce725a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61ce950-9caa-45ac-a524-67913e0a7342",
        "cursor": {
          "ref": "121e760d-493a-4d54-889f-1c5b10e60cf0",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "debb2ccd-4c39-49a2-b84e-58f3f73d6ebe"
        },
        "item": {
          "id": "c61ce950-9caa-45ac-a524-67913e0a7342",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b4bd1f05-9917-4b7b-a2e0-4230571f52d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f303f24-0f01-45ee-8909-ca63b7d534a5",
        "cursor": {
          "ref": "e4a5c8ef-5697-4233-ae15-4b1af9a2855a",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "15bbfe7e-811e-436e-97df-67acee959409"
        },
        "item": {
          "id": "8f303f24-0f01-45ee-8909-ca63b7d534a5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bacecd81-7b91-4879-942f-2b7b5b5f5493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a19b162-955e-460a-bb6d-4bda6ba1b0eb",
        "cursor": {
          "ref": "26a2c6c7-5ed4-42ef-ad9d-1e560a574bff",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f71e12e5-0651-4e0e-bc91-a1f306f80a06"
        },
        "item": {
          "id": "8a19b162-955e-460a-bb6d-4bda6ba1b0eb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4fcd5212-92e0-4748-aa1b-1abea88f81d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6c71ab-fa0f-4c3a-978d-6fe3a08786ec",
        "cursor": {
          "ref": "dcbd7531-de40-4e9e-a92b-d29ff457eea2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0fe6818f-b532-4231-b9d5-da81625d0c82"
        },
        "item": {
          "id": "1f6c71ab-fa0f-4c3a-978d-6fe3a08786ec",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dcc3b127-88da-43f0-a367-dae81f9aae3d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db22b9cb-9062-4409-9517-76e1af102140",
        "cursor": {
          "ref": "722a337a-e6e4-4648-8b67-554a021b9f49",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0b90374b-9bd7-4634-9ce1-72bbeb305128"
        },
        "item": {
          "id": "db22b9cb-9062-4409-9517-76e1af102140",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "49660ff0-e6fd-49eb-b5a5-af0b7386616f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59050347-3ca0-4177-971c-ca13c54fe469",
        "cursor": {
          "ref": "d7eb3742-b388-4d16-bc61-ad2269abd802",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f8fad35a-8061-4877-afcb-97b8729c3393"
        },
        "item": {
          "id": "59050347-3ca0-4177-971c-ca13c54fe469",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b550f68b-4504-4065-b73a-48bddbee0a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52508113-8bbf-44d9-af28-80a0b114fe6b",
        "cursor": {
          "ref": "1b7eec74-0e6e-44e8-9cfc-d9c7572c8f1b",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b51628f1-b74f-430c-b3f6-fbf5cbcd5c7c"
        },
        "item": {
          "id": "52508113-8bbf-44d9-af28-80a0b114fe6b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "51bd87d0-f4f3-4da0-954c-882f751167d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6277c8-232e-45f3-a2db-f029763b146e",
        "cursor": {
          "ref": "40e7abcd-8d6a-4c80-8446-6d33b096b265",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ac666594-9ac5-4825-802f-98a597d4fa54"
        },
        "item": {
          "id": "bb6277c8-232e-45f3-a2db-f029763b146e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f650593f-5051-42e4-94c1-d9689df2fc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ddf038-5b58-4825-8af8-fecfcd0cec52",
        "cursor": {
          "ref": "225cdc91-ca20-4200-938c-48f3404b79c0",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6f51a3d0-d183-4aa7-9d99-6e1af747346e"
        },
        "item": {
          "id": "a5ddf038-5b58-4825-8af8-fecfcd0cec52",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cdb3349a-7637-4b80-9db2-ad645d522fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad211031-7b64-4f70-b113-5a72d944e819",
        "cursor": {
          "ref": "de8a17da-7ede-457c-b54c-42c4d1b06d57",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "42d98586-cc49-4ca7-b0bf-65a7c3d5ac47"
        },
        "item": {
          "id": "ad211031-7b64-4f70-b113-5a72d944e819",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c8678161-7e0e-4eaa-8083-782789e5ccf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c32f40-c586-4850-b7ad-7eaa13fa2067",
        "cursor": {
          "ref": "87c3cad6-2849-4560-93ef-7ae992696bf4",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d4375c21-3584-4f4b-86e4-30b5223a258c"
        },
        "item": {
          "id": "00c32f40-c586-4850-b7ad-7eaa13fa2067",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "298d7cf8-8616-4c25-8784-e2359d0e92c5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 16,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc03e41-d1d7-4ddc-a254-ce259a9623f9",
        "cursor": {
          "ref": "8a2801c0-f1f7-4038-a2f3-fa1cfbad063c",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "63fbec78-eba9-44a2-879b-2d7edfbcfff1"
        },
        "item": {
          "id": "ecc03e41-d1d7-4ddc-a254-ce259a9623f9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "459992e8-8cc1-4d23-9dd3-60aae9506cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26df272c-9412-4172-a04a-a9a7f40ffbaf",
        "cursor": {
          "ref": "f4193c4c-e7cf-4e61-9dde-c770b6fd874b",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8edbf81b-c7eb-49b8-bd13-ab317369324c"
        },
        "item": {
          "id": "26df272c-9412-4172-a04a-a9a7f40ffbaf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c0fcc3e9-9e2e-4d82-9c63-bd3b99cb4059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1745681-aa69-480c-b404-64a74833aaea",
        "cursor": {
          "ref": "8080267d-87c8-4536-967f-dbde5111a416",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b8b278a8-eebf-44ed-ab5d-625cf2b8bb50"
        },
        "item": {
          "id": "f1745681-aa69-480c-b404-64a74833aaea",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1804f3dc-08e3-45a0-ba98-da92dfbfc0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac53be2-08f2-4953-967d-c722ba9ceb46",
        "cursor": {
          "ref": "ae89ff79-b29a-4826-99b7-9ef502ee77ea",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fa527f20-e0a2-4e36-9704-454e5a3d9edd"
        },
        "item": {
          "id": "0ac53be2-08f2-4953-967d-c722ba9ceb46",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8aa93cba-85b0-4602-8218-37c2e8e6fc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c3e326-a0fb-4c05-852c-80f63932c0db",
        "cursor": {
          "ref": "567989fb-2ba6-42f3-999e-5f4fb49a9dcb",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d37adcb6-39de-4c6f-b21d-2fe193a704ca"
        },
        "item": {
          "id": "67c3e326-a0fb-4c05-852c-80f63932c0db",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d0afbe44-0ab8-4320-8f83-937d87ac798e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5140069-d099-4473-b515-a2340e47697e",
        "cursor": {
          "ref": "19b490f0-7ee9-44a4-bd03-17cd28c1e426",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5397bafd-daed-4f03-a84e-23496bd5dbd0"
        },
        "item": {
          "id": "f5140069-d099-4473-b515-a2340e47697e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "38983921-3c9c-454d-b61e-705a714d4392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb4d16a-ac0f-4666-a1b6-1a61cd080559",
        "cursor": {
          "ref": "670fc1d4-bff6-498e-8413-8e603e7ca72a",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "01cba1be-37fa-4423-ac6b-290593a604a4"
        },
        "item": {
          "id": "1cb4d16a-ac0f-4666-a1b6-1a61cd080559",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f2c5c3e2-f2af-4ea7-ae5f-026aae1b0f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea73994-676b-4290-9c5b-f1ffabb5ab9a",
        "cursor": {
          "ref": "003152f1-b75a-43b1-95ba-b40d6a4c0fe0",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b1fa9c36-f792-494b-8d5b-e38c53e37d90"
        },
        "item": {
          "id": "7ea73994-676b-4290-9c5b-f1ffabb5ab9a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "50599617-94a6-4cbb-a4b8-825bb8681c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdfa651-7b9d-49bc-9305-2f026ede4151",
        "cursor": {
          "ref": "bf4e2e3a-090c-4ed7-8e31-a889971ce9ee",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1b8da6d4-c274-4ee2-990f-820a1c71d105"
        },
        "item": {
          "id": "bbdfa651-7b9d-49bc-9305-2f026ede4151",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ec18f4d-20af-41ce-ae4c-5f9a1dfad8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e43c114-36fb-4e06-ac83-5800212c8fd1",
        "cursor": {
          "ref": "e462a006-4f02-4f04-a1e8-33acb7f671ff",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "36be30b3-78bd-4e1d-9dfd-d20c70deea7b"
        },
        "item": {
          "id": "8e43c114-36fb-4e06-ac83-5800212c8fd1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5c144720-8ae1-4c4d-94af-050d3ad468f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42240c8-8256-487d-b727-3a97bf309ba5",
        "cursor": {
          "ref": "875f25d9-f7d2-49d6-a78e-6464ac704e62",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b115fdb4-8678-4931-87ab-e06ead2b908d"
        },
        "item": {
          "id": "e42240c8-8256-487d-b727-3a97bf309ba5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4a1ec4e8-c2fe-47a8-a8f2-d62ef99a5fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536c062c-4072-4240-9e5c-2b98adeef979",
        "cursor": {
          "ref": "4fe0cc1f-5ff5-4da7-9924-2ee89ea27b38",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "da4badee-7741-4310-9f04-131230ea9d1c"
        },
        "item": {
          "id": "536c062c-4072-4240-9e5c-2b98adeef979",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "03b1e2cd-5ba3-4141-aafc-78bbe6fdc5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591e62e8-f450-420e-96bd-88a31797a28e",
        "cursor": {
          "ref": "b3eb07a1-7b92-4e4a-896a-5bcbc82b1f06",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "036b2031-d870-4d89-a34a-c4c856344a71"
        },
        "item": {
          "id": "591e62e8-f450-420e-96bd-88a31797a28e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bb7a705d-5abf-416a-9c7d-aa700adf9363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5cf6ac-d4e5-43f0-b69a-dee4c92d7f0d",
        "cursor": {
          "ref": "4a4ba36d-e0eb-431a-ba1a-fd771e045aba",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "98b3e965-ef56-41d9-b0fa-c6a885eec672"
        },
        "item": {
          "id": "9e5cf6ac-d4e5-43f0-b69a-dee4c92d7f0d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b3f27d6e-77ef-40ab-a8df-9c3bf3b3ad9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874a5df6-df26-46f1-9648-a61c2c0b456c",
        "cursor": {
          "ref": "1cd311b9-dc0b-471d-9d69-2c24ac551116",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c96d90f8-762f-42d1-9dc7-c4fc5fe40e45"
        },
        "item": {
          "id": "874a5df6-df26-46f1-9648-a61c2c0b456c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2ec87950-fe21-42dc-bf15-ed2611084c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6185ffe-dff2-4a16-a840-10ccae6767c0",
        "cursor": {
          "ref": "20542284-c971-4cf4-bf75-ab434c7bb1d3",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "90c2ac44-9762-4cf5-bec0-f1fa04f4d71c"
        },
        "item": {
          "id": "e6185ffe-dff2-4a16-a840-10ccae6767c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "66547109-510d-47e7-a91a-ce8656b68052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f18c97-6d63-4bd4-b60f-5445db717556",
        "cursor": {
          "ref": "a8135248-47fb-458a-bbfd-ddeec3286313",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d1828888-2a26-4c39-b2ce-b348b64dd58d"
        },
        "item": {
          "id": "82f18c97-6d63-4bd4-b60f-5445db717556",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "789b7fd3-18ec-4c22-964b-565eb57b4d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f5e35d-5f6a-4c32-a8e6-5bbb88721f06",
        "cursor": {
          "ref": "d03f3e77-f8a9-421e-aeaa-3a1b02568e8b",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5a47c982-8034-49b9-8bde-bc8e088ae479"
        },
        "item": {
          "id": "73f5e35d-5f6a-4c32-a8e6-5bbb88721f06",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "adc7643b-19ab-48e6-9e2c-122b08638943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9e87f6-b9d9-4114-afab-5326a4b75fec",
        "cursor": {
          "ref": "e5f617a6-7e49-40c7-b038-b15475dadb12",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3909f945-a264-4c6b-912d-0f74df066aa1"
        },
        "item": {
          "id": "aa9e87f6-b9d9-4114-afab-5326a4b75fec",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7d7c73d2-b7c7-4fa2-99fc-c441dc1c26dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd466b57-80c2-4ae6-9061-154788fafbb8",
        "cursor": {
          "ref": "657b90e8-c973-4e12-80e0-be17ad3ecb09",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "35dd13ff-38d0-40c7-9861-50e2869056ac"
        },
        "item": {
          "id": "cd466b57-80c2-4ae6-9061-154788fafbb8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "868898e8-a32b-451a-b6ae-e38dc2a08db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aeecd2-15a6-4121-99ae-18133c2e1c70",
        "cursor": {
          "ref": "9eee1568-622d-49fd-9635-840d0227f2d2",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "698425de-d17e-40d2-98f4-662309ae22fd"
        },
        "item": {
          "id": "b8aeecd2-15a6-4121-99ae-18133c2e1c70",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5d2c68ed-5a66-4d27-85d2-ce3b992994ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6bbab3-f136-49c7-b78a-d91f717c32f1",
        "cursor": {
          "ref": "f231d419-2a30-43d2-949b-7b90f55f71d8",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a23e3f69-9069-433e-abfb-89544d64efeb"
        },
        "item": {
          "id": "6c6bbab3-f136-49c7-b78a-d91f717c32f1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "915d649f-a471-46ae-884b-a47434bf6285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f60f5bb-7da2-4be0-8ec8-d7ddf691117b",
        "cursor": {
          "ref": "1c1418e1-b886-4c46-9c4f-14377abd119c",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "804fdea3-8054-4240-a2b2-69dff43f25e9"
        },
        "item": {
          "id": "7f60f5bb-7da2-4be0-8ec8-d7ddf691117b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e78c08e6-8c8b-454d-85ea-6f3647c8a23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacc77c3-e656-4d1f-bcbc-6699ca35f2a1",
        "cursor": {
          "ref": "0ede5444-c6d5-458f-bbe6-15a2ccf95eb6",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "08614b9d-a580-424e-9ca0-f1a121715563"
        },
        "item": {
          "id": "bacc77c3-e656-4d1f-bcbc-6699ca35f2a1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7dd502da-dbd0-4233-9941-a13e09a0c50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a83099d-8a7e-4908-8231-987a0024128c",
        "cursor": {
          "ref": "6f3af75a-282f-44b9-8452-13b8b3c31e91",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "de43d0b4-56f8-4833-bb0b-e8b79c841eb5"
        },
        "item": {
          "id": "7a83099d-8a7e-4908-8231-987a0024128c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "18cdf9a7-3ecd-467d-8926-f0070d57b75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99a65f3-fc45-46ae-8e13-718668679aa9",
        "cursor": {
          "ref": "4e55089b-e98d-4f2d-a9c6-c637b1e27e08",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1577047b-7304-49d2-93be-a1e34eaee77a"
        },
        "item": {
          "id": "c99a65f3-fc45-46ae-8e13-718668679aa9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7a97534b-1a94-4137-8e13-587b0cccb0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b32b5db-002d-4e65-95c7-0a5919a71313",
        "cursor": {
          "ref": "e81d65cc-17c0-4804-b299-8aaebba3881c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "06303ef8-b321-41f5-a67f-0f5392a773a4"
        },
        "item": {
          "id": "2b32b5db-002d-4e65-95c7-0a5919a71313",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5863d2f6-9cd5-4705-b222-8f4eaae1c587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b7e2e2-7a2d-4f9a-9378-01f68fa1a1f0",
        "cursor": {
          "ref": "913ccb03-c338-458f-8771-3314cecbe90d",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "852f5897-3b7f-445c-8ca0-f2d8a5e7bea6"
        },
        "item": {
          "id": "28b7e2e2-7a2d-4f9a-9378-01f68fa1a1f0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ed0a4b0a-fc47-4924-bc2f-a08ef53bb48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d5d82c-b5fc-40e3-997b-63ca2a04d318",
        "cursor": {
          "ref": "ebd350f2-5d2b-43f6-8feb-d063f47aa171",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6e96632c-2c26-4531-8fd6-b63108e69e90"
        },
        "item": {
          "id": "d3d5d82c-b5fc-40e3-997b-63ca2a04d318",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c56cfe08-93ba-4bad-a66a-523fab84e3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f83b2a-7be8-470e-a82c-47e6675abc31",
        "cursor": {
          "ref": "7e980bde-2191-46ee-a942-238bd688b507",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "78ab9902-adad-4c03-a888-7520b34a1f92"
        },
        "item": {
          "id": "60f83b2a-7be8-470e-a82c-47e6675abc31",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fb81fbd2-8880-4cf3-ba1e-4f2493276458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2512dd81-5ca3-471a-9461-700b8776dfc5",
        "cursor": {
          "ref": "e144811f-fbc7-41a5-9f5e-2a0861a49992",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0ee50326-92a2-4a16-828e-16c1d4f96f2e"
        },
        "item": {
          "id": "2512dd81-5ca3-471a-9461-700b8776dfc5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b9009af8-6bd1-4038-b3e9-4105da1c2168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ad3bc3-e148-4c4b-910f-9ddc7e4e451a",
        "cursor": {
          "ref": "27dcc1a8-bbc7-49fa-a9c8-2b0d03bba4da",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c97361e6-4c10-4313-9a66-cc8296895a3f"
        },
        "item": {
          "id": "21ad3bc3-e148-4c4b-910f-9ddc7e4e451a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8e32df02-8854-40a7-b3b1-72884c7583ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3f33d6-6005-4320-988f-7e4611899f39",
        "cursor": {
          "ref": "cae0d162-5294-476e-be14-86514f17359c",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c3402a4f-eb5d-46cf-b016-39f3a3446e4d"
        },
        "item": {
          "id": "9e3f33d6-6005-4320-988f-7e4611899f39",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fcbe18dc-4bc8-4541-a090-a545c9d50a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99d7f0b-51fe-4f9f-8e05-1863d25ca6de",
        "cursor": {
          "ref": "28cf3dde-d04b-4db6-86a5-b1cfdd107a9b",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "82611b65-528e-4393-b4a4-8a8988718bc7"
        },
        "item": {
          "id": "e99d7f0b-51fe-4f9f-8e05-1863d25ca6de",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "14663760-910c-4ae2-a1bf-22a5821cb64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cfb8bb-5cfa-4927-ac75-ba3d5d5b104e",
        "cursor": {
          "ref": "ddb1699d-2e52-45cb-8f8d-75b03e81b2e7",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dddb628b-fa92-4793-8fd9-edec1b9b6e73"
        },
        "item": {
          "id": "17cfb8bb-5cfa-4927-ac75-ba3d5d5b104e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3672e910-0da9-4a6f-b9cd-b48085802f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7be507b-3464-4d23-8f8c-7ca157a36761",
        "cursor": {
          "ref": "f5a722c9-31dc-4a4b-baf9-1c644459785c",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b43fb609-85d3-4c00-9402-0d344f6550a2"
        },
        "item": {
          "id": "a7be507b-3464-4d23-8f8c-7ca157a36761",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8d6fdc7a-8414-4b44-aefa-2332795d9afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197647af-d689-4aa5-8e2f-beb19f08b31c",
        "cursor": {
          "ref": "e4738181-71eb-447f-894f-7f5efb826ea5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "531598dc-32b9-461e-98d2-72e93baf741b"
        },
        "item": {
          "id": "197647af-d689-4aa5-8e2f-beb19f08b31c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "79a330db-abbf-48bf-903e-76c7495e26e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33b727a-3ce5-401d-8ff3-961cb0ea8302",
        "cursor": {
          "ref": "948ec593-bca7-4f48-8197-22791f927cdd",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "297e3a56-aed5-4dee-b784-84f6b24a0871"
        },
        "item": {
          "id": "b33b727a-3ce5-401d-8ff3-961cb0ea8302",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b8d219a4-7456-484e-9760-760ade579be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a8d7eb-a327-4eb6-a50f-5f3cc8a98df4",
        "cursor": {
          "ref": "eeb07068-5f68-47d7-8ba1-9a68be191f1c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8cbe2122-839e-462e-8708-d41a0048035c"
        },
        "item": {
          "id": "84a8d7eb-a327-4eb6-a50f-5f3cc8a98df4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "20dd68e8-a830-4866-9beb-8424c46c4f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7712696a-95cc-4c62-a937-0b6c2adef99c",
        "cursor": {
          "ref": "fba49f98-30ac-467d-8b9a-efec13ce9540",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ec5e29bb-44e2-4d38-8a3a-6bd6673992af"
        },
        "item": {
          "id": "7712696a-95cc-4c62-a937-0b6c2adef99c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d5471dd5-1893-4b67-8527-4ffa617312be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4424d62b-9c2d-4bf8-904e-ae5a2502d6fa",
        "cursor": {
          "ref": "5ce35306-4124-4e50-a533-0985855acab3",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "324235ce-bc79-4486-86e6-cb07cf176920"
        },
        "item": {
          "id": "4424d62b-9c2d-4bf8-904e-ae5a2502d6fa",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d23caf36-8678-4d67-8899-59f8eaba915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dba4ad-bc4b-40bd-940b-173d4d45da49",
        "cursor": {
          "ref": "8980c922-ed86-4993-a775-0cef41e66b23",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "864b12ec-4a2e-45a9-bbf3-0f722131454f"
        },
        "item": {
          "id": "b3dba4ad-bc4b-40bd-940b-173d4d45da49",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cc7d0167-cf7b-4d33-bf32-cf518ff00082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f86ad69-69a2-42e6-ad38-de4230542799",
        "cursor": {
          "ref": "01b093d7-b058-4585-9a60-6999c69bc236",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2f046cbd-e9ad-41f7-96e0-b3bf6a7ea953"
        },
        "item": {
          "id": "3f86ad69-69a2-42e6-ad38-de4230542799",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bd2c33d9-6c8f-4f45-b9af-9dff8c8aa880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ddff0a-cd7e-4ec9-8e4f-81e7240e342a",
        "cursor": {
          "ref": "2ba400a2-85b1-4b78-a787-26add4bac498",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "66ebef65-698b-4cc7-b3c4-cdbba1c3847a"
        },
        "item": {
          "id": "d6ddff0a-cd7e-4ec9-8e4f-81e7240e342a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0894323c-135c-4ff3-8434-90fc2ce0c6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0075d9-a2e2-4a20-ac5c-7dc70a31dd05",
        "cursor": {
          "ref": "b54740f0-c629-4370-b017-13692d1022cb",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "05463e5a-4e49-47fa-867d-4b299039e246"
        },
        "item": {
          "id": "4b0075d9-a2e2-4a20-ac5c-7dc70a31dd05",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bb16fe34-90ea-466d-8682-4be23a12aa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa213bfa-3fac-4b28-a8fc-5a687b5c484c",
        "cursor": {
          "ref": "b8c518a6-8387-4bb5-afe6-1f67c2423d33",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "10a2f7a5-af89-4156-943e-2bef57245559"
        },
        "item": {
          "id": "aa213bfa-3fac-4b28-a8fc-5a687b5c484c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "af99c7ca-9c5c-4d20-958d-2768d84ce8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfa9053-3ca3-4f34-9437-2ee038f09bb7",
        "cursor": {
          "ref": "1e58ddbd-9d67-40ef-8415-249fd0705a83",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b6a5cbb5-1eb9-4ca6-bf1b-69fab3453f68"
        },
        "item": {
          "id": "dbfa9053-3ca3-4f34-9437-2ee038f09bb7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7982bdaa-cf91-40d7-94f0-9006bc1fb0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9697f9bf-ea8f-44b4-abf9-694ab0c49fdb",
        "cursor": {
          "ref": "292fd8c1-4660-407d-90f2-6a920e6dd429",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8838e36b-0496-4721-96ae-2b84d7adcdb9"
        },
        "item": {
          "id": "9697f9bf-ea8f-44b4-abf9-694ab0c49fdb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9a584d39-a9d2-4eac-af20-a26abcfee798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece67e07-fe87-4580-adfa-3ba9aa64554a",
        "cursor": {
          "ref": "b70759f8-7d00-4241-be60-dfeac462c96b",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "49504e21-61f7-45bb-bb79-6998a972a57d"
        },
        "item": {
          "id": "ece67e07-fe87-4580-adfa-3ba9aa64554a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5867e15d-c057-4020-94b5-738fc69bb3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eff515-2742-4b09-ba11-6341aa067ef0",
        "cursor": {
          "ref": "d0b76094-7164-4bce-811e-f20c5f83e84b",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0606b285-0c1d-487c-8ff3-77e50f1adbcd"
        },
        "item": {
          "id": "00eff515-2742-4b09-ba11-6341aa067ef0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bc38663f-b445-4af1-ae8d-8276618f1184",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4e623d-14eb-4c3a-8e2b-cb836d79a3ff",
        "cursor": {
          "ref": "a46aaa91-b499-46cb-92c3-4dc663072648",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "95cfea1b-6cca-4ce6-9673-c559d251fd01"
        },
        "item": {
          "id": "bb4e623d-14eb-4c3a-8e2b-cb836d79a3ff",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c895fbd3-faee-4691-bc43-d298588648fb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 47,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557adf44-292a-416a-ac01-374f3b04388d",
        "cursor": {
          "ref": "8793bda8-37a4-4051-9875-6c6d959ee61b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ecd68fae-d18c-4b33-99bb-11128cf69bff"
        },
        "item": {
          "id": "557adf44-292a-416a-ac01-374f3b04388d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8df3e847-a272-4d69-82d0-dcc665eb9747",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02ea83b-32a2-41fb-9be3-9526f032ffe7",
        "cursor": {
          "ref": "a6cede7e-37f5-4c34-83ce-009d3e4f40f7",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8a923cb6-8549-4598-9409-967bf2dc802c"
        },
        "item": {
          "id": "c02ea83b-32a2-41fb-9be3-9526f032ffe7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "00bf1b62-0f99-45b9-890c-c13a3e8fa3b0",
          "status": "Created",
          "code": 201,
          "responseTime": 76,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f131b54c-42d0-4149-ac62-100e1b179219",
        "cursor": {
          "ref": "22b70b16-1159-44b7-98ce-f5cdc669d013",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9fefe0a3-36dc-4c96-9b51-0140e8639ffd"
        },
        "item": {
          "id": "f131b54c-42d0-4149-ac62-100e1b179219",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "09b46479-5a32-40ef-8578-9466060b7811",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6958e934-1522-400f-ab23-7daf1010eeb7",
        "cursor": {
          "ref": "768254ce-53a9-464a-a9b6-cb15f5900fb8",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "158782c7-16f4-47ae-98cd-e8a07c6f70fb"
        },
        "item": {
          "id": "6958e934-1522-400f-ab23-7daf1010eeb7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5427de79-35fb-4c46-8ade-0768c1bf4199",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dda5b1d-c43c-474e-a3ba-3385e88b7e12",
        "cursor": {
          "ref": "01157995-a4b9-4b59-914f-e3cff89a6193",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bc9889db-671e-41ae-9b03-a12036de23a3"
        },
        "item": {
          "id": "4dda5b1d-c43c-474e-a3ba-3385e88b7e12",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e8261935-b15a-40bc-b788-5e3c4ae86b31",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f076e0c8-7fe6-4475-8d26-cc812febe2e6",
        "cursor": {
          "ref": "cacd751e-8e6d-4dd0-82da-72a8e5b40c51",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "441c8c9e-e3ab-4bcc-a3fb-e04103661e85"
        },
        "item": {
          "id": "f076e0c8-7fe6-4475-8d26-cc812febe2e6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "70d1ddcd-7880-456f-a99d-7f5c221d0c98",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769c2f6f-5285-4b5d-beeb-b3134e3ca333",
        "cursor": {
          "ref": "d2d3b8ad-08a2-4138-88c5-f7051e96c5af",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1d76ab41-d1c9-4b73-9d62-254216d056ee"
        },
        "item": {
          "id": "769c2f6f-5285-4b5d-beeb-b3134e3ca333",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fef33d3f-96d9-4798-bc09-2d3b0df8bc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769c2f6f-5285-4b5d-beeb-b3134e3ca333",
        "cursor": {
          "ref": "d2d3b8ad-08a2-4138-88c5-f7051e96c5af",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1d76ab41-d1c9-4b73-9d62-254216d056ee"
        },
        "item": {
          "id": "769c2f6f-5285-4b5d-beeb-b3134e3ca333",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fef33d3f-96d9-4798-bc09-2d3b0df8bc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a6a1a1-6151-4c05-af5b-d0f8c4e52153",
        "cursor": {
          "ref": "441268c6-1cff-4382-b0fb-72996db6591a",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7bda243f-b9a5-476c-acb7-f6377af98214"
        },
        "item": {
          "id": "62a6a1a1-6151-4c05-af5b-d0f8c4e52153",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c379844e-1530-4448-b47f-17924025d51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1d352d-716e-4893-bf6d-c80ca7f9a155",
        "cursor": {
          "ref": "ee5da4dd-5127-4bbf-9b31-c1620e59db99",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "24576a8d-032b-4899-ad58-3409f16160dc"
        },
        "item": {
          "id": "4f1d352d-716e-4893-bf6d-c80ca7f9a155",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cb41d6fd-6227-4a4f-8851-581546738096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3134971-ff1c-4c75-a479-a3f855807b53",
        "cursor": {
          "ref": "56883a25-27d4-4531-ae53-a7c705feeeaf",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d0f2fe94-3c0f-4772-8e2e-a433b3b593d3"
        },
        "item": {
          "id": "a3134971-ff1c-4c75-a479-a3f855807b53",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "03e7c230-e0e9-4cf0-bc42-c82d377acbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff452e8-9609-4004-8146-41a0ded8cf2a",
        "cursor": {
          "ref": "457194c7-4c7e-4a65-9bb7-86238e669a8a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a77c6707-6a0d-4025-943e-19f65d104a50"
        },
        "item": {
          "id": "bff452e8-9609-4004-8146-41a0ded8cf2a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e2eb4a61-ac16-4d13-9865-79353337621f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8313c0-f59d-482f-8be7-dffb4203894a",
        "cursor": {
          "ref": "39d039a3-205a-4089-a699-f2a7531fa9c7",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "48af7257-df26-4957-ad0a-b3e4e79f69b2"
        },
        "item": {
          "id": "6d8313c0-f59d-482f-8be7-dffb4203894a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2fd8f7d1-b4a0-4e1c-ae92-b4f63c3b58a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3f5f76-3431-44e7-aab9-c087db106df3",
        "cursor": {
          "ref": "887928e9-2d43-4408-9a77-4cb8054ea2fa",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1c4c5ad9-d1bd-4356-8b83-56da9203f753"
        },
        "item": {
          "id": "bb3f5f76-3431-44e7-aab9-c087db106df3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5ecf225d-8e43-4ade-8219-399b0fc7f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0651769-1f11-421c-88cd-3345beecc679",
        "cursor": {
          "ref": "6704eb63-d539-41ea-980c-c4df16c9511a",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "109748fb-38ca-4a50-b12a-71f72924c939"
        },
        "item": {
          "id": "a0651769-1f11-421c-88cd-3345beecc679",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "80b5b503-5016-43f0-b6ac-0f0bcaf4bc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f5ae56-f9a2-4663-917d-d8a9a47818b7",
        "cursor": {
          "ref": "b8e20666-9636-4ca3-8cb1-7e9f160351b8",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "90c9d5ce-31f6-4f97-b055-d024e8f752a3"
        },
        "item": {
          "id": "63f5ae56-f9a2-4663-917d-d8a9a47818b7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "08320180-9701-4ba1-be9f-bbe51ab5c8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5608ac41-e406-417c-8e38-387e52c83fd8",
        "cursor": {
          "ref": "46416221-4816-4237-92c1-4096c61c1e66",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "390a3c28-fd25-4145-9302-19602e184c3f"
        },
        "item": {
          "id": "5608ac41-e406-417c-8e38-387e52c83fd8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ae4ac677-11bd-40b0-a9cf-b2c397a706f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63549c80-ed77-444d-bed3-6b6dcb4f6be7",
        "cursor": {
          "ref": "838d9fb0-03a6-4a60-a7ca-390c733ad7fd",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1a8a5cad-0a37-4f2d-9aa2-8fa222194ba1"
        },
        "item": {
          "id": "63549c80-ed77-444d-bed3-6b6dcb4f6be7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4dea0b63-171e-40ad-819c-76c5f2cd2bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775bdd6b-6e1e-44dc-9e45-1be93abe0ac3",
        "cursor": {
          "ref": "cd34e074-cde5-4677-8126-3fbd36966920",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bb23464e-1bc5-4a6f-a644-52df962a2aca"
        },
        "item": {
          "id": "775bdd6b-6e1e-44dc-9e45-1be93abe0ac3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a35577d6-0075-434b-831b-b98dcb897753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7761943f-f9ab-4eaf-afb7-ceaf930a3118",
        "cursor": {
          "ref": "c04e671b-6741-4923-b6e6-bbd377facd14",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a2e3076a-4dd1-4fef-b5ac-11eef10824bd"
        },
        "item": {
          "id": "7761943f-f9ab-4eaf-afb7-ceaf930a3118",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cb378bce-4509-4e0b-b80e-9444d4eea6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ed5f61-39b8-4a97-be7f-ea8f6443eb4a",
        "cursor": {
          "ref": "b952f2db-1c02-45d0-98b5-46dd13c26e1b",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5a08343e-8b2b-42e3-aac8-008b730d1798"
        },
        "item": {
          "id": "52ed5f61-39b8-4a97-be7f-ea8f6443eb4a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6f89e88a-7524-4f56-80aa-41e4fa80ff57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179f7004-1143-4584-9f5d-a38a30fa3b1c",
        "cursor": {
          "ref": "c019fe6d-3d58-447b-9994-df3326c4ef54",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5b0b6c4f-8f55-4ef7-ac34-7fb820eaaad0"
        },
        "item": {
          "id": "179f7004-1143-4584-9f5d-a38a30fa3b1c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "760d3d43-6ec6-4665-a533-8e03fc1a64a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c1251b-d34c-45dc-a2cc-c273cc0576fc",
        "cursor": {
          "ref": "d2250922-9c5f-4ab6-b1cd-26906fad6246",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "513743cb-6de3-4d8c-a207-754aaa44d2f9"
        },
        "item": {
          "id": "76c1251b-d34c-45dc-a2cc-c273cc0576fc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5cca7272-5b02-4bf6-91d3-83f8bef48441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30e2239-fc81-4857-af27-6215c237d438",
        "cursor": {
          "ref": "3f38c778-918c-4034-8932-307e22d0b75a",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a0f6ffc2-7766-49a5-b2f9-6232bb19cb4a"
        },
        "item": {
          "id": "b30e2239-fc81-4857-af27-6215c237d438",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "74f39a85-f705-4aa6-b8a5-fdb9166794c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58322467-ebcc-4f4d-a198-0a9182e14c8e",
        "cursor": {
          "ref": "070fb9be-e8bb-458c-85cb-093aee40d0d2",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9ffdc65f-d6bd-43c6-9c0f-efdfcab5433c"
        },
        "item": {
          "id": "58322467-ebcc-4f4d-a198-0a9182e14c8e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1a447cc6-d7bf-40da-9bab-b4e0be22455f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9092af-f275-4b9c-840e-6cc39bd5733a",
        "cursor": {
          "ref": "d5dbe06a-598a-4c71-98d5-33e3a42301e5",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b21e7ba4-13fd-4e08-9421-43e61f54edd5"
        },
        "item": {
          "id": "ed9092af-f275-4b9c-840e-6cc39bd5733a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c30c5eec-fd46-4f74-b98a-246a326ab823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5113f5eb-eed9-4640-b604-f1f06c7aa4ad",
        "cursor": {
          "ref": "7c9c53bf-ebf2-4a2f-b030-557dea266df1",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1f9e4b97-5aef-4c4b-bb3a-b5b9c88557c1"
        },
        "item": {
          "id": "5113f5eb-eed9-4640-b604-f1f06c7aa4ad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ad2c6c3e-51bd-4809-b8ce-e0b41c7bfa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ed0f27-5c8f-436c-8f0c-8f290c60148c",
        "cursor": {
          "ref": "5b507253-0f5c-416c-bbca-c0750b23303a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "590e8345-1918-4d2b-827d-cc07aff274ca"
        },
        "item": {
          "id": "57ed0f27-5c8f-436c-8f0c-8f290c60148c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c17df099-726c-4921-a3bf-f8fb346f90e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852c81c9-c0f5-4444-8d1a-74a3c0a9bc62",
        "cursor": {
          "ref": "30fe9bd0-cc2a-449f-a5fd-6158304eb8ef",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7a5a24a1-d0d3-4321-9a5f-b45e56f69590"
        },
        "item": {
          "id": "852c81c9-c0f5-4444-8d1a-74a3c0a9bc62",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fc80b501-4e0c-4a4d-9be4-e2c2a09cbd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c72cdb6-eeef-4d61-ac65-945570e9cb07",
        "cursor": {
          "ref": "e8e1aead-e383-4d47-bd7a-3e5835932fa7",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1e04ded8-aade-404d-8cc1-42b9725b084a"
        },
        "item": {
          "id": "1c72cdb6-eeef-4d61-ac65-945570e9cb07",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5c541db1-6022-4827-9a9b-ac7147ea88f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf19dd2-7d7f-4987-a21a-597163b8596d",
        "cursor": {
          "ref": "ed11ae1e-f716-4993-a9a5-a50794b1b0be",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fddc1659-ffbe-47c9-8f7b-dd67f95446cc"
        },
        "item": {
          "id": "4cf19dd2-7d7f-4987-a21a-597163b8596d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "583602ad-17d1-46e3-9cd3-63ad7f6db0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03730d66-88ed-49fb-90bc-23b954f79240",
        "cursor": {
          "ref": "f27ad343-51f0-47c0-ab5b-a4306426b987",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0b6840fa-eb9a-4086-b0e5-597c95bcb4f2"
        },
        "item": {
          "id": "03730d66-88ed-49fb-90bc-23b954f79240",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6f7c8fc5-1283-409d-92ca-e7134b37ce1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79abdc5f-5b9e-453f-8682-0c979ef03638",
        "cursor": {
          "ref": "0a1595c2-c9f4-46ff-9530-6df38ee7b21b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e3c779c3-6333-4612-a64a-f7eb9e77b543"
        },
        "item": {
          "id": "79abdc5f-5b9e-453f-8682-0c979ef03638",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "145e696e-2d11-40c2-b42f-6073d8663c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2531635-7c01-4eac-b400-b4022946314e",
        "cursor": {
          "ref": "c1b8242d-0d4b-41d4-9847-72adf73724be",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "42fde213-b4d0-4372-9e69-fca463df6fdb"
        },
        "item": {
          "id": "d2531635-7c01-4eac-b400-b4022946314e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "09468160-8a16-4e8a-a546-11b69c97a47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131e7844-7415-45d7-bbd7-d1cfd2269e44",
        "cursor": {
          "ref": "eead5cad-fbb3-493b-bb01-4e657ac658c9",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dcf303ec-edcb-46c7-a7d9-1b2c43d63cd5"
        },
        "item": {
          "id": "131e7844-7415-45d7-bbd7-d1cfd2269e44",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "af4c6aa4-5c9b-4bf9-8aa1-f3e32f8b4f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70dd07d-e8c6-41e1-9823-1e5e6a2fdcbf",
        "cursor": {
          "ref": "fcabe0d7-6aa5-4406-a835-7b5f0657d7c0",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6aeb1e57-5926-4b5a-95b8-098a06469224"
        },
        "item": {
          "id": "f70dd07d-e8c6-41e1-9823-1e5e6a2fdcbf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c0b4f9c2-b4e9-4ef0-a37c-1ef22aca26fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583034ef-07dc-455e-8dc4-c71e58229e88",
        "cursor": {
          "ref": "4c29e606-6a26-4158-8903-890e1bf24260",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8cd4e22a-6be7-4c08-9db7-766becc54b4a"
        },
        "item": {
          "id": "583034ef-07dc-455e-8dc4-c71e58229e88",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "89f99604-5c32-4452-8262-5e1d72137b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e65d355-3a9e-4d13-9763-e2e546acd4a6",
        "cursor": {
          "ref": "405637b4-02d5-4502-860d-cd1ab1f9cded",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a9985934-3b40-4352-9aba-9a0677d63514"
        },
        "item": {
          "id": "8e65d355-3a9e-4d13-9763-e2e546acd4a6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31c76916-d20a-49f1-921d-17586b2b8e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0403499-5267-4135-adea-9b39b29ff6d1",
        "cursor": {
          "ref": "727db05d-ec4f-453c-9443-32f484d62629",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "748c7128-2412-421e-8cbc-28957ae10268"
        },
        "item": {
          "id": "c0403499-5267-4135-adea-9b39b29ff6d1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "41cdb2ce-b419-4c85-8555-3086ff5304c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27e41aa-db54-4f1c-9fd0-61be2290070a",
        "cursor": {
          "ref": "c27caec0-d38c-447d-8478-211477947cae",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e0952594-5374-448c-a63f-a74a86c26083"
        },
        "item": {
          "id": "f27e41aa-db54-4f1c-9fd0-61be2290070a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6eacb016-1467-4a10-8a3e-e112db8d1056",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e8a789-ef13-4a10-a5c4-413264926d22",
        "cursor": {
          "ref": "d0888fb6-d2f7-47d2-8894-143501fa335d",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8416dc62-cc1e-4e87-b2f8-820d81a3dbfc"
        },
        "item": {
          "id": "42e8a789-ef13-4a10-a5c4-413264926d22",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "31bec290-2576-41f8-b11c-c2166d1c0f1b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378d9610-ec39-4fec-a0ff-d5cc5ac21fe5",
        "cursor": {
          "ref": "106f6922-dfa7-4a89-84df-11b7a2df2d5e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ac3d3f63-6dd7-4d45-a114-f61081c85e90"
        },
        "item": {
          "id": "378d9610-ec39-4fec-a0ff-d5cc5ac21fe5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "33a6f653-3cda-4f3a-8def-1f4526a22ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378d9610-ec39-4fec-a0ff-d5cc5ac21fe5",
        "cursor": {
          "ref": "106f6922-dfa7-4a89-84df-11b7a2df2d5e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ac3d3f63-6dd7-4d45-a114-f61081c85e90"
        },
        "item": {
          "id": "378d9610-ec39-4fec-a0ff-d5cc5ac21fe5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "33a6f653-3cda-4f3a-8def-1f4526a22ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354db7f0-007f-4d39-946a-9730a28eb256",
        "cursor": {
          "ref": "1c2fca75-87ac-46cb-b1d4-32ef571b92e8",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "17395c5f-638f-4e3b-a163-6614b3dbdecc"
        },
        "item": {
          "id": "354db7f0-007f-4d39-946a-9730a28eb256",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dbda4873-6825-4859-bd0e-7ade1638d556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89182f44-5cbb-479c-9389-5531a141e17b",
        "cursor": {
          "ref": "7169c9d5-e142-47eb-9f3a-cbc181bd8e8e",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a41de0a5-7a6e-43e2-ba0b-3d29c0d97e89"
        },
        "item": {
          "id": "89182f44-5cbb-479c-9389-5531a141e17b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4f38bd22-8113-4c75-a0f9-7d79481bda31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162eba65-ddc6-4363-ac96-dc4d272606d4",
        "cursor": {
          "ref": "deb45c83-53ce-4f3d-bac6-9979d140dae0",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "22c6f5a2-375a-4e19-a28f-e5736da23770"
        },
        "item": {
          "id": "162eba65-ddc6-4363-ac96-dc4d272606d4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e377ec04-85bb-4690-a536-280c23632a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc80a8a-a74c-4283-ac16-3d0bbc752950",
        "cursor": {
          "ref": "fe797cbd-958a-49f1-9841-7218d1b4a8cc",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "17fe30f8-8aef-419d-bf7d-1521b918d0b0"
        },
        "item": {
          "id": "3fc80a8a-a74c-4283-ac16-3d0bbc752950",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2234d1ae-5568-4983-97e7-24cf257f2550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6222e7df-6d6b-4e6b-aec7-718c2b10567a",
        "cursor": {
          "ref": "b7dbbdbe-5291-4a5a-bf0e-b1cf36883f60",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cdae29a1-f270-4411-a57b-efb2256e51fc"
        },
        "item": {
          "id": "6222e7df-6d6b-4e6b-aec7-718c2b10567a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ccc93d5e-8694-4ba3-a80c-dab64889c5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f379ac3d-8b0b-479c-8b98-d57ed079f374",
        "cursor": {
          "ref": "0ca692ae-f022-4366-8ee5-1f43ca1328c4",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "57c8295d-7fb4-4c77-ae64-2d3d67cfd85e"
        },
        "item": {
          "id": "f379ac3d-8b0b-479c-8b98-d57ed079f374",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0eb292f3-7680-4564-b29b-a04ee4dc2a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0844a974-4866-4b81-9395-5e265184d1ad",
        "cursor": {
          "ref": "1184e2d5-a924-4d92-b576-7b4fe017bf97",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "127779b0-caba-4db7-99b3-0e6cae07db47"
        },
        "item": {
          "id": "0844a974-4866-4b81-9395-5e265184d1ad",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "063f3e0f-7c14-4e0c-b9cc-d1950ab0feda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be696261-cd28-42df-9fa6-ce2c4981a405",
        "cursor": {
          "ref": "f15ed554-cfcd-4ba7-8232-8654af63f97c",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c5898860-e411-472d-bca6-79fb7c2ddb3e"
        },
        "item": {
          "id": "be696261-cd28-42df-9fa6-ce2c4981a405",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dbee4143-c21b-4c7a-8fe3-59b6b073952e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727063ef-7ed3-41a3-b182-906c0b0fe6e5",
        "cursor": {
          "ref": "729509ab-ea4c-46ab-a9cf-0646095a790b",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1dec0cde-bd81-4464-8e4d-bdfedb1a1702"
        },
        "item": {
          "id": "727063ef-7ed3-41a3-b182-906c0b0fe6e5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "10c47a0e-6efc-45a9-b14f-d061c920bdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69ff1ae-1459-4c3d-9b00-72ea2f19029a",
        "cursor": {
          "ref": "2848c0be-85dc-4e20-a7c2-75207beb8f9e",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "61e91195-b5dd-4308-824f-5ec7efddd0d4"
        },
        "item": {
          "id": "b69ff1ae-1459-4c3d-9b00-72ea2f19029a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ab032505-2291-4586-8752-b463c3b70c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6261eabf-206a-44ab-bc54-c1b0002a7cd4",
        "cursor": {
          "ref": "f1418f17-4120-4769-9de0-0866ddd54eee",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7f2bd9fa-3099-4b77-898a-fc1f08ea529c"
        },
        "item": {
          "id": "6261eabf-206a-44ab-bc54-c1b0002a7cd4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1c0861a5-a8ac-44a9-b549-0099baa5c213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478f9047-14ca-44f5-8851-f77f14971839",
        "cursor": {
          "ref": "364389c8-b37c-434a-b849-8f2a4f25d604",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6906b99e-270e-46aa-a84c-113631fd5bc9"
        },
        "item": {
          "id": "478f9047-14ca-44f5-8851-f77f14971839",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a9ac7706-b292-426a-b01f-4455ddad9193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fa59f5-afed-4051-883e-005fb60f8cbb",
        "cursor": {
          "ref": "b5dcf597-9ee0-49cd-afc3-0f141af0a36c",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ce07ccf3-0b6a-46a2-b9e9-ed9ca1cdf1fb"
        },
        "item": {
          "id": "c8fa59f5-afed-4051-883e-005fb60f8cbb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "12b57872-b33c-4c0d-9d86-450ef5c0b1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d23be27-618e-4414-81cb-b19d542e82ee",
        "cursor": {
          "ref": "0251a541-a051-471a-aaea-b299d5cac17a",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "37ce2a41-d48e-4f0f-bd42-e4bf7fe703de"
        },
        "item": {
          "id": "2d23be27-618e-4414-81cb-b19d542e82ee",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "58fdacff-291d-4f44-b8f1-5b01cc8457c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71975e5c-a212-49ac-9ebc-ca6456001eb5",
        "cursor": {
          "ref": "b46e31f4-4d9a-4ced-b166-cc43ebbb2805",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f944c3df-790d-4376-aaa5-89df2bf12adf"
        },
        "item": {
          "id": "71975e5c-a212-49ac-9ebc-ca6456001eb5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f8f43e80-192e-4968-b755-9e5cdfd93310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a43020-5922-40dc-ae62-cbc11d6cda9f",
        "cursor": {
          "ref": "24b7ef8b-c9ca-440c-85c2-32ad157fa603",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "83584119-8065-4ced-ab04-0b4bdc380068"
        },
        "item": {
          "id": "33a43020-5922-40dc-ae62-cbc11d6cda9f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5602e24e-eccd-4fb8-9670-7b2ace68c126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0588ac-b8a8-4bc0-a4c9-4e3492e39d32",
        "cursor": {
          "ref": "8d0c0734-7d73-43ea-9d36-376465239994",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e1c8599d-a931-44a5-99d0-a8e5d1aeb4d6"
        },
        "item": {
          "id": "5b0588ac-b8a8-4bc0-a4c9-4e3492e39d32",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2ab9b468-932a-4245-8215-558e44cc10f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a1d040-d2b6-4be5-9b31-db189b65634c",
        "cursor": {
          "ref": "25bee857-0205-40d8-87c9-75f5f238ad50",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e4762aef-aae7-4049-acaf-7bb4d3a06b2e"
        },
        "item": {
          "id": "22a1d040-d2b6-4be5-9b31-db189b65634c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "23b5b38a-2521-4cf1-b568-14731b5225fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c91097b-8946-4272-978b-cc70cffd8307",
        "cursor": {
          "ref": "8c1f25f0-1033-4ab2-a925-f9bf7de532b1",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fff10c01-f8ac-4a50-81db-8f4ff661bf73"
        },
        "item": {
          "id": "4c91097b-8946-4272-978b-cc70cffd8307",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "768c4efb-4179-4d19-8a84-784fcf39abe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581a98e4-bc6d-4df5-8a7c-0d52215f4905",
        "cursor": {
          "ref": "6cc2daa3-a31d-4144-8438-1f9a9329d035",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "61b89179-0885-40e9-b770-189bc2a6621d"
        },
        "item": {
          "id": "581a98e4-bc6d-4df5-8a7c-0d52215f4905",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4a74d049-792e-4160-8c31-e3e0f0401c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9152b101-64df-4a95-9cd6-f3d29422edd3",
        "cursor": {
          "ref": "307bc833-8ef2-44d4-b7b7-c62457625a85",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6eb920a7-2683-43de-ae75-dd4d64a39d9b"
        },
        "item": {
          "id": "9152b101-64df-4a95-9cd6-f3d29422edd3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3921362e-c72c-46ec-b477-f567f8363610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8153ac-a757-487b-b633-ab5d24cd5fcc",
        "cursor": {
          "ref": "404ede92-7464-4c45-921a-279e65faa2d6",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5ec5258b-103a-4303-aa4b-fcc8d0d5aac1"
        },
        "item": {
          "id": "bd8153ac-a757-487b-b633-ab5d24cd5fcc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7b5cdb16-0608-4cc1-86a9-0d9b2eb347b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b44f2e-594e-4beb-a3c2-d57cd2cc72ad",
        "cursor": {
          "ref": "25d52f43-5ed7-4b65-a81f-d9869ce52cfa",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "45b1a0cd-3dca-4679-8f11-84f749b2d58a"
        },
        "item": {
          "id": "46b44f2e-594e-4beb-a3c2-d57cd2cc72ad",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a491f7fd-33b8-44c4-84e5-b641821cbe7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb55c241-6e63-4956-a402-c724f15e2e65",
        "cursor": {
          "ref": "bdec98b8-e5c9-4641-a81d-87d0176003e2",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d2f2949c-90e0-4cef-95f0-1d8504e93cc3"
        },
        "item": {
          "id": "cb55c241-6e63-4956-a402-c724f15e2e65",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0a5e81dc-a72f-4fbe-a1a3-4960de150681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387f459a-b61a-4161-acea-bcbbbbf5838f",
        "cursor": {
          "ref": "5f8518cc-9fe7-4e5e-b1e4-da798c570b1a",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d2313f12-0f25-47bb-bec2-ba51fac7d0f4"
        },
        "item": {
          "id": "387f459a-b61a-4161-acea-bcbbbbf5838f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c9e4072b-c070-4e39-8e78-b3ad95d16ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ae1bb7-a6b8-42ae-98a9-27ffd1c0500c",
        "cursor": {
          "ref": "0a17be9c-28a0-4e94-a9e5-078aab86d22a",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "01cffb2a-6e68-47d2-a42d-59ce12a48b25"
        },
        "item": {
          "id": "c3ae1bb7-a6b8-42ae-98a9-27ffd1c0500c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "12b9e3b1-d994-4299-83f8-83abf05296de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89640304-eca7-4be2-ab34-ab60206a5ced",
        "cursor": {
          "ref": "dd23f79a-de09-4db8-bc87-5b9daf43771a",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9b48efba-f7ae-4382-86ae-a097473ef843"
        },
        "item": {
          "id": "89640304-eca7-4be2-ab34-ab60206a5ced",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a1dfdad1-e56f-468e-9b7a-d6e4e325b9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1292b66-72af-4d6b-b9c4-32b93c0703c9",
        "cursor": {
          "ref": "b825c3f3-2411-481a-9f7c-8900086f5117",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "49475831-91ae-4152-a858-f3b604efeaa2"
        },
        "item": {
          "id": "b1292b66-72af-4d6b-b9c4-32b93c0703c9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f6830a93-2ca7-4c0e-a436-0ab4ad6c92bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3129a7-a98f-4631-8ad0-29e47187ac28",
        "cursor": {
          "ref": "75575d5a-e8f5-46c0-ae99-c0ae1b88f7fb",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "416888fb-bf3f-4781-bbde-17d795ba2064"
        },
        "item": {
          "id": "bb3129a7-a98f-4631-8ad0-29e47187ac28",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cffea112-e031-4431-8640-74105e236680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d578a63c-ba56-4db2-9c30-779a1d59d431",
        "cursor": {
          "ref": "086b6e2a-98ce-4320-bc2a-5599a7a782cb",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "29804522-3f40-4893-8067-bbb26109e12c"
        },
        "item": {
          "id": "d578a63c-ba56-4db2-9c30-779a1d59d431",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cc26dc04-dbfb-4b3a-a58e-f0c849232b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc20ee9-0f61-4d49-a867-bdb2d688dcf6",
        "cursor": {
          "ref": "37fbac4a-1442-41f6-8ef0-14f8c35062b5",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "37f6ffce-5099-4718-925c-1960bd72e6db"
        },
        "item": {
          "id": "9cc20ee9-0f61-4d49-a867-bdb2d688dcf6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "98ad30f1-8816-42c7-8044-93b97808cf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa925aaa-d007-422a-a1f1-b0a7f4c53396",
        "cursor": {
          "ref": "2c2eed84-fa54-4477-ad2a-f8e49c38ab9f",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e04ee9aa-6853-48a7-8c7a-c833896ba26c"
        },
        "item": {
          "id": "fa925aaa-d007-422a-a1f1-b0a7f4c53396",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "649053d2-7f5d-4a9e-b0bc-53f450d5fe76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cd860a-5a1d-4da0-acc8-ae908741683e",
        "cursor": {
          "ref": "da8d4270-f242-4c59-98c1-85cca209dbd9",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1e4e7cf7-6356-4c2d-a88e-f964d27c9744"
        },
        "item": {
          "id": "d9cd860a-5a1d-4da0-acc8-ae908741683e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "082b712d-1303-4663-ac0a-c10dee102f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559dfd9e-e872-42c3-aa61-2133c51185c6",
        "cursor": {
          "ref": "9baff398-e9b1-4d07-96fb-19421868ff61",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "19b6dcbb-a282-4c76-9449-bb188bdacefb"
        },
        "item": {
          "id": "559dfd9e-e872-42c3-aa61-2133c51185c6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5c5a760f-f6c0-404c-a4a7-8c96b2cf8903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2b4100-3b55-44d3-8551-bbdac7522aeb",
        "cursor": {
          "ref": "3230e51a-e344-4fd4-a835-544c9d6b8911",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "19c699f7-5d38-46f1-acf1-ef8474f39017"
        },
        "item": {
          "id": "5e2b4100-3b55-44d3-8551-bbdac7522aeb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c125d236-6ecd-468a-b611-78f2337a619f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c79a797-4351-4fd2-9e5b-19b1e3d05926",
        "cursor": {
          "ref": "af0108bc-6435-4269-a2ab-157193a7a79d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "68d782d6-7470-4a08-bb21-b67bbc710c21"
        },
        "item": {
          "id": "0c79a797-4351-4fd2-9e5b-19b1e3d05926",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ed741dae-ae7d-424c-ab71-6802a4f0b050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a702e4a-794b-40ee-abfe-8bd0d8e5a3bd",
        "cursor": {
          "ref": "fa40d15a-126a-4247-82e4-d73217ef1f68",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6158455f-5d59-4010-88ce-79f2747c3bd7"
        },
        "item": {
          "id": "6a702e4a-794b-40ee-abfe-8bd0d8e5a3bd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "060ae211-8ea6-47c6-bb4d-fd847ec5a319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eec8c4f-7fca-4f62-bc61-90cdfd90152d",
        "cursor": {
          "ref": "257a520c-a4de-403b-85d6-1fed38991a20",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b4bd1819-bf44-430d-ad26-101460cde314"
        },
        "item": {
          "id": "6eec8c4f-7fca-4f62-bc61-90cdfd90152d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "91fb2a05-e531-4ca0-ad3b-541ec6125cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88176ff-fb67-43ee-9a7d-0462e5432b48",
        "cursor": {
          "ref": "ba7b272d-22ae-4f2c-9111-82d8fa993c72",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fb75eca9-7c44-49e7-9fa2-6811d764b9c1"
        },
        "item": {
          "id": "e88176ff-fb67-43ee-9a7d-0462e5432b48",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f4dfce37-077a-4a88-a040-091baba13885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b710f7-7aaa-4015-997a-c6bb75524c49",
        "cursor": {
          "ref": "5d817a5e-1b11-4126-83ba-6a7345c6ec34",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7edcf96d-c257-4cbd-99a3-5b707258ec20"
        },
        "item": {
          "id": "92b710f7-7aaa-4015-997a-c6bb75524c49",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "36c8b1cc-b757-4164-8ced-d3213fd23308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209ccab0-0a72-45e3-b4cf-d02cf417f7b8",
        "cursor": {
          "ref": "b0864a77-57f6-401d-affe-7d4af351fe4c",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b7acae75-63f6-4b0d-84cd-81960275a3d9"
        },
        "item": {
          "id": "209ccab0-0a72-45e3-b4cf-d02cf417f7b8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6155b946-5c1b-43f0-8986-b77b07da6024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2838d3cc-77a8-4765-8593-6a5613ca6a54",
        "cursor": {
          "ref": "483fbec7-e4dc-4b80-aada-4fa03525776c",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d4f0dd3d-8c22-44a8-886f-d0425d118dba"
        },
        "item": {
          "id": "2838d3cc-77a8-4765-8593-6a5613ca6a54",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "25bac2cc-3bdc-4597-8964-7573eb1b698d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e099dfd8-bfcd-4377-b80c-4c245730eedc",
        "cursor": {
          "ref": "83cdec15-eb93-4484-bf0a-b59692c68a27",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ea1fba2d-03c5-41d3-bc98-ef7ac9009dc7"
        },
        "item": {
          "id": "e099dfd8-bfcd-4377-b80c-4c245730eedc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d7174a95-3a11-489f-91bd-50d896e92d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2609ad9d-93d5-4fd5-9373-d7d5a45516c4",
        "cursor": {
          "ref": "1f2bf436-a918-4a96-ab4c-06fa40120f4e",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9e745653-a861-4bd7-9ebc-37b228ad90ff"
        },
        "item": {
          "id": "2609ad9d-93d5-4fd5-9373-d7d5a45516c4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "61aae232-cc65-4451-b049-fe457d25aa96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a81d57e-6877-4714-8c0e-35702f1299ff",
        "cursor": {
          "ref": "cd20fa46-07cb-43ad-9a01-20cd037f4746",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d7768aee-fe63-4357-a030-ea0f965afaa1"
        },
        "item": {
          "id": "7a81d57e-6877-4714-8c0e-35702f1299ff",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c90c866f-8b75-4e0a-9f8c-d79f0064f9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42fb43c-ca88-42ca-b4eb-581a59f5cdb4",
        "cursor": {
          "ref": "dae82e7d-f561-4a44-99ac-5257ba44e9bc",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8197ec5f-d6fe-45c4-beb1-9ca4f639d54c"
        },
        "item": {
          "id": "f42fb43c-ca88-42ca-b4eb-581a59f5cdb4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "57d24c29-2e2b-4332-a7fd-92237f756695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d732e0-55ed-4ee7-8c46-a3df64c11ef2",
        "cursor": {
          "ref": "db78d330-84ab-49e2-9566-147b471a68b7",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2bbbcafe-c880-475e-8dec-fa8c7fd89373"
        },
        "item": {
          "id": "74d732e0-55ed-4ee7-8c46-a3df64c11ef2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4122d824-d1cc-40b2-9527-57d6afcf1913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c346f7d-b08a-41e3-837f-6543fd45c008",
        "cursor": {
          "ref": "3515b856-31b3-4755-b543-3052c9f945a3",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "47ded4af-5b55-4c0c-b286-b08eef209f81"
        },
        "item": {
          "id": "0c346f7d-b08a-41e3-837f-6543fd45c008",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2dd2ed67-8e22-4ea2-a3fd-c2543e40b765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223a3299-c309-40e8-a7de-455f51937899",
        "cursor": {
          "ref": "8ef76e48-adaa-4667-9074-04b2cadf938e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "94e4efe3-ad69-4509-a05b-fd9d481b6c9f"
        },
        "item": {
          "id": "223a3299-c309-40e8-a7de-455f51937899",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "498fa0b2-36c0-455a-bc21-9cefdd7261e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2528bae-fbfd-4920-8dbe-ceba1cc3f642",
        "cursor": {
          "ref": "5457a746-9d87-4d5e-807f-c12e510caf9a",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "65d6d5a3-541e-420e-ae4a-13fb2ed7549e"
        },
        "item": {
          "id": "b2528bae-fbfd-4920-8dbe-ceba1cc3f642",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e8a200cf-9e5c-4750-8c6f-d024559f712d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cec9006-b933-4a4e-84c6-c1828ee606db",
        "cursor": {
          "ref": "6a02f281-3238-4490-91dc-0e4e3a5b34a6",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "99b3d26d-f96d-4cab-8a62-6cbcdcd9db67"
        },
        "item": {
          "id": "3cec9006-b933-4a4e-84c6-c1828ee606db",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "37ba39ca-792c-4d15-81bb-57a018df3ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03167ff8-b067-47ff-b251-22fbd2856436",
        "cursor": {
          "ref": "f1acf2c8-60e7-418e-bec9-1317d7924ac8",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e4e5a06c-8a78-452a-ada0-6bd2dda94dd5"
        },
        "item": {
          "id": "03167ff8-b067-47ff-b251-22fbd2856436",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c48f71df-845b-4fda-888d-5e924704b7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e422ac-f1a3-4e10-afaa-251802deb47b",
        "cursor": {
          "ref": "76800541-53fa-4cfa-a4f2-3973dfaed31a",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "af242cd1-1193-428b-a292-9a8fc16cccc2"
        },
        "item": {
          "id": "04e422ac-f1a3-4e10-afaa-251802deb47b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1d50eb20-1403-4da8-bc51-b2909f30896b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f348db3e-38df-44a3-97f4-d9b49ce11aff",
        "cursor": {
          "ref": "26eb61bd-ae27-4ee2-aa80-38d08ed90de3",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5466bcc7-c118-4dad-9cf6-216f277037dd"
        },
        "item": {
          "id": "f348db3e-38df-44a3-97f4-d9b49ce11aff",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "698c080e-1d63-4443-a9da-92715e43a8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e3cfb2-4267-439f-922b-f0ac7dba20e3",
        "cursor": {
          "ref": "83c2c70d-75e4-4e63-a6fd-85dac52037a7",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6bfc0b31-7fa3-4ec3-85b9-34936d5aa6dd"
        },
        "item": {
          "id": "66e3cfb2-4267-439f-922b-f0ac7dba20e3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "42c6ae12-d004-40aa-8dce-d46b91e1e14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53408e3-bac7-4ab1-93c1-26a5de2788ee",
        "cursor": {
          "ref": "292ccfc8-3049-4dfd-ade9-e63f64a18f01",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a2f5247a-0d63-458f-916a-d314deac6057"
        },
        "item": {
          "id": "b53408e3-bac7-4ab1-93c1-26a5de2788ee",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "90572edd-ceea-4a0c-986e-bfdc4c276ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b5fcd8-ac13-4969-b41d-b5b47812fec6",
        "cursor": {
          "ref": "71a84cab-5515-4b6a-a478-72eee02ac63b",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "10599f32-606e-4acd-a66e-5ff0723a58a2"
        },
        "item": {
          "id": "e0b5fcd8-ac13-4969-b41d-b5b47812fec6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d48daf0c-b66a-4c7a-929f-9b013ba72a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0682aee1-0b0e-4a64-a817-6a416b4c4835",
        "cursor": {
          "ref": "3a0c81b0-fd16-40be-9c38-b00df0befdfd",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7300e31d-b0a4-42aa-ba12-84dee442f32d"
        },
        "item": {
          "id": "0682aee1-0b0e-4a64-a817-6a416b4c4835",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9b7f6137-d73d-41dd-afe4-d456d55682ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be9c7dd-784e-410c-9c58-e8d584dd1907",
        "cursor": {
          "ref": "998af7e5-b532-4c91-ab8a-8c8d829e3333",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "83ea1871-d6ff-41b6-b91e-23455961adcb"
        },
        "item": {
          "id": "5be9c7dd-784e-410c-9c58-e8d584dd1907",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fbdef23b-08d1-4cd8-aba9-0b7c5cea0c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08024e6-6d78-43b7-bada-d25a739c35d6",
        "cursor": {
          "ref": "7606f65a-d84f-4428-bb8c-9e06726744c6",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "90c1b418-7578-4c6b-9053-dd0d462e7031"
        },
        "item": {
          "id": "f08024e6-6d78-43b7-bada-d25a739c35d6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a297e902-8378-44a5-9715-609b5a6da9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7af350-b585-4668-b9d7-e4e8b7b2c01b",
        "cursor": {
          "ref": "389e383d-a5f6-406d-9f11-c8e023403b94",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "065da64a-cedd-41c9-a01e-c432ab79a2ac"
        },
        "item": {
          "id": "dd7af350-b585-4668-b9d7-e4e8b7b2c01b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4bf5a374-2f98-468f-a61e-7275e057be2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be059fe-eac9-48be-ac8c-f63d71374eaf",
        "cursor": {
          "ref": "ec8dbd31-22d1-4c62-b1f3-91d3edcd933e",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "87504577-7bfa-4733-b907-cce7dac0d048"
        },
        "item": {
          "id": "2be059fe-eac9-48be-ac8c-f63d71374eaf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4f18fe4c-ce8a-4987-8a8c-03f836a267e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2552d76b-d2e0-47ce-8fec-6d188a7b6e61",
        "cursor": {
          "ref": "1f92e7e7-c718-41d1-a747-484a4eaddc39",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "67ceaabc-159b-4196-a70f-f1a02f6535f0"
        },
        "item": {
          "id": "2552d76b-d2e0-47ce-8fec-6d188a7b6e61",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d31756ed-6336-4925-a196-cb56d22e85c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e318090-62b3-45a4-aac5-fa80720a52b0",
        "cursor": {
          "ref": "c2a8059c-af6b-4c1b-afdb-59f08658558e",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "42af6ca5-0429-4a4d-b036-0c2d99c187c9"
        },
        "item": {
          "id": "7e318090-62b3-45a4-aac5-fa80720a52b0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f5b383b6-d26a-4f36-a9d5-fb7d6995e972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbce1240-7482-427c-a0d0-d6d554b508fc",
        "cursor": {
          "ref": "0379947c-c78e-4467-96e7-a12ca61b0f53",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "da8ca3aa-62e4-4b64-94fe-57120610ad62"
        },
        "item": {
          "id": "dbce1240-7482-427c-a0d0-d6d554b508fc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "438275b6-6405-46d3-8b2f-a5973c9f7119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1a9e2f-638d-4d83-b8b8-22413cbe5d4e",
        "cursor": {
          "ref": "7afe94fa-8ea1-41e8-833c-fa884a69dddd",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "36ee7b62-ae38-4ee2-87b6-ebf16d435227"
        },
        "item": {
          "id": "5a1a9e2f-638d-4d83-b8b8-22413cbe5d4e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "da063692-f3eb-491c-a4fd-0f360644cce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410a02b9-5b9e-4ce4-8dbf-42f2610b8142",
        "cursor": {
          "ref": "195c108c-e5b0-4d78-b882-b8f48b4245d3",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1512c7f8-e3c2-4d8c-ad76-71eb5f3264dc"
        },
        "item": {
          "id": "410a02b9-5b9e-4ce4-8dbf-42f2610b8142",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "06339696-9e5e-47e8-855b-0ada6491c9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29385bd9-5306-474c-a444-b8975948c179",
        "cursor": {
          "ref": "36c755f3-05b9-45b4-bf31-c5079e8c4a97",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8f092f28-3e5d-4803-95c6-0182c436ba1e"
        },
        "item": {
          "id": "29385bd9-5306-474c-a444-b8975948c179",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2e94b3cc-c5da-44ac-90c0-77788e10a08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cee129-06a7-448a-b3cc-69139501f054",
        "cursor": {
          "ref": "491f35e6-7690-47b8-8812-c268424b9e5a",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8ea00fa6-874c-4fe2-b4ec-be73a3598e18"
        },
        "item": {
          "id": "74cee129-06a7-448a-b3cc-69139501f054",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3b872dc0-ffaf-4fdc-8d5c-301d92d64edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c00e230-6a6b-4957-b678-00d88929ab10",
        "cursor": {
          "ref": "f51850ed-8ecb-4683-8ab0-a81ac332febe",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bbe0142b-4a7c-4ac0-bbe4-84e631326bbf"
        },
        "item": {
          "id": "8c00e230-6a6b-4957-b678-00d88929ab10",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a4897534-2ced-4a3b-a3eb-e7c079147d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620eebbd-3cfc-429e-9e23-bba7ece154c3",
        "cursor": {
          "ref": "cbbe618d-ce96-4321-a382-df6fc93276ba",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e83d6ed0-b076-4b2d-a681-97916a886a6f"
        },
        "item": {
          "id": "620eebbd-3cfc-429e-9e23-bba7ece154c3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dce7dc4d-f189-4019-8db2-a25470d4539b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58454dd0-e238-4034-9e60-badfd306db8d",
        "cursor": {
          "ref": "da81ea4d-f127-414c-8979-6c36327308ad",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "951556db-233b-4314-a472-135d5c6ce0a5"
        },
        "item": {
          "id": "58454dd0-e238-4034-9e60-badfd306db8d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4c8f43bf-4930-4922-b46e-1885470dea1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99db6a39-4422-4ccb-a902-4f76d36a62b3",
        "cursor": {
          "ref": "ce327713-8756-45e4-ac23-c6eddd122c76",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2abc7668-a7b1-44e2-891a-767c59a95eef"
        },
        "item": {
          "id": "99db6a39-4422-4ccb-a902-4f76d36a62b3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d0c460d5-3475-438e-bb76-762ae90a208d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae2d415-3f47-4c6f-8d2e-3ffabd2a0530",
        "cursor": {
          "ref": "7d8e0a6a-47fd-44da-b320-73849bdd467a",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "17af5fda-d666-4068-9176-42f525e6515b"
        },
        "item": {
          "id": "0ae2d415-3f47-4c6f-8d2e-3ffabd2a0530",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7bfa9ff0-e66f-4cd9-b1f2-15e6de3fabd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a63ca6-8bc2-4289-b264-5ea5997eeced",
        "cursor": {
          "ref": "a7408740-bc2d-4d37-a87c-d6ad252e8d46",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f40ddcab-0951-48f6-a2ad-a387ecca2dc5"
        },
        "item": {
          "id": "e9a63ca6-8bc2-4289-b264-5ea5997eeced",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3a90f537-a190-4f68-860d-7129a6931eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39f1f45-398a-491e-985d-a8a0eaeecaf5",
        "cursor": {
          "ref": "33550081-cc7a-484d-94cb-cee4fc8518d6",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "765eb9d7-dbe6-4552-83c6-d817a6a39e12"
        },
        "item": {
          "id": "e39f1f45-398a-491e-985d-a8a0eaeecaf5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ef7b3ee0-fec0-4c05-b72a-162516eb2a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efaf554-7678-4a76-8491-7aea7b7ea78b",
        "cursor": {
          "ref": "b52962f6-e090-464e-86fe-836432c489d9",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e8580971-ad8a-4745-955c-da9662670235"
        },
        "item": {
          "id": "7efaf554-7678-4a76-8491-7aea7b7ea78b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "268a8afd-9a32-40ae-b588-481daeb1d297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c953ee6-805c-4408-ab05-03eb6afbf3c9",
        "cursor": {
          "ref": "ae9093db-23d6-45de-95c1-dcfa9c98a371",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f26564b-5e4c-4e96-93e9-2aae1a64674e"
        },
        "item": {
          "id": "0c953ee6-805c-4408-ab05-03eb6afbf3c9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "85e5cfc7-7455-4cbc-8b19-80a7355d74b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9310e-e479-4a34-a766-d7aaf95ef16a",
        "cursor": {
          "ref": "765e49a3-f1b0-47ae-b700-851e8f003b81",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "eed1cf10-09b1-452c-b8cd-f8ead81ca57a"
        },
        "item": {
          "id": "6cf9310e-e479-4a34-a766-d7aaf95ef16a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "92103135-072a-49b1-9b7c-45d4e12298f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffe2116-ea63-4252-b82f-ec547cf34d38",
        "cursor": {
          "ref": "b02c7229-7b26-46ce-89d4-c6ecb2b1a7a7",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b48fe3a8-9d04-496f-a27d-3807faf933b6"
        },
        "item": {
          "id": "8ffe2116-ea63-4252-b82f-ec547cf34d38",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b5dc465e-23ac-4f22-b75d-8656fb5e2617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a226f116-adee-4fe0-90e3-dffa60e228b7",
        "cursor": {
          "ref": "3ac4b58e-acae-406b-a9f9-34f7ede96626",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a144f084-e968-46aa-ac2d-44a97fbdc189"
        },
        "item": {
          "id": "a226f116-adee-4fe0-90e3-dffa60e228b7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bfaba797-0a0a-4ece-8298-d0f8c26e7cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5265f1-45a4-4a4d-82d1-e7f0de120f90",
        "cursor": {
          "ref": "b9d17d4a-104a-47bd-8027-6762bab5a236",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "aab25391-e8f1-4e02-8586-b33b1407ec61"
        },
        "item": {
          "id": "ec5265f1-45a4-4a4d-82d1-e7f0de120f90",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "30c1898c-6e04-47d0-a596-0f0b7f360480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7acefe-b88e-43ee-aee9-4ba3310495af",
        "cursor": {
          "ref": "b5106271-b8c1-489e-b764-29d196a75230",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9cc88af7-3920-49f5-beea-97f198e02b1d"
        },
        "item": {
          "id": "8e7acefe-b88e-43ee-aee9-4ba3310495af",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b3fa76ef-974f-46b8-a595-3b9bae9cc098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdaa32c-816a-4505-8864-d9404be3caf9",
        "cursor": {
          "ref": "eae92ae6-8cf7-40bb-8bf5-911fe304ff86",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4648ccd7-0050-4c07-8639-ccc2f9f7d915"
        },
        "item": {
          "id": "8cdaa32c-816a-4505-8864-d9404be3caf9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e433fada-7cb0-4625-bf3c-ed08df6fc4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118239ea-592f-4a45-bc8d-4a51e7677306",
        "cursor": {
          "ref": "c90ad5c0-103a-4801-aec6-9af1daa53843",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6717b146-793a-4cd0-b7d6-f55eba973b16"
        },
        "item": {
          "id": "118239ea-592f-4a45-bc8d-4a51e7677306",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "920eb356-4733-43d1-a303-6af9af5c7bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5e958c-e83b-47a6-84b4-5444f684831a",
        "cursor": {
          "ref": "c9959db7-9177-42af-9646-0947438dbd3c",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f17eff41-79b3-454a-a44a-4d9070137a45"
        },
        "item": {
          "id": "7f5e958c-e83b-47a6-84b4-5444f684831a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6fdb2c81-866e-4bfe-87ef-5db3a6d2d4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40d538c-e305-4a34-8f3f-2488c9af2ff3",
        "cursor": {
          "ref": "e68aedad-8f50-4e99-94b4-07b6855bd422",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b6ba9bb5-5588-43e0-a831-2044088f174d"
        },
        "item": {
          "id": "d40d538c-e305-4a34-8f3f-2488c9af2ff3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d291cb16-08b5-41c6-a283-c3faac004fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e45172-c1ea-436d-a1ad-c57d8eb2c7c3",
        "cursor": {
          "ref": "42006304-372a-4958-ba4a-93590887cd3c",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a341ac61-4628-4eff-bedc-5b8c3694da7e"
        },
        "item": {
          "id": "c8e45172-c1ea-436d-a1ad-c57d8eb2c7c3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "77284a86-c5dd-4587-904e-6f4708b792ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c45dec-1dd7-44b8-b029-9b35e59a4d70",
        "cursor": {
          "ref": "44aa7f77-d3b8-45c8-b89c-b0e48be93a21",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "87417cfd-e427-4fb1-bb9f-7b3ba9178318"
        },
        "item": {
          "id": "19c45dec-1dd7-44b8-b029-9b35e59a4d70",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4e2af475-0206-4fe6-b224-04af8c754c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632f4f2a-91af-4cbc-b2b1-3e026092b82b",
        "cursor": {
          "ref": "2edcbaa7-7d8e-4cbf-979d-59a224e8f86d",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b9c109fd-e53f-4375-ab58-615f280a6e42"
        },
        "item": {
          "id": "632f4f2a-91af-4cbc-b2b1-3e026092b82b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6126b172-47de-46b3-aba5-cc340f1d8258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1c4ec7-66bb-46c4-8068-24d1840adb93",
        "cursor": {
          "ref": "97aa1c05-7f39-493d-8dd6-4ac21775a243",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ed88c4a9-f5a7-430f-bdb1-82aecf48f496"
        },
        "item": {
          "id": "9f1c4ec7-66bb-46c4-8068-24d1840adb93",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "029eceb2-2207-4c92-8bc3-910dbe98ed6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d37bab5-02db-4602-b2e4-07df635c2eee",
        "cursor": {
          "ref": "6b7c9c87-4079-429d-8c7b-81adb25cb4e9",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2e6886c1-e5c4-44b5-bf50-b5d76d19688e"
        },
        "item": {
          "id": "2d37bab5-02db-4602-b2e4-07df635c2eee",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c570a3d5-d46c-44a3-9d6e-42465d57754b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6015da6f-522d-4848-b223-b27c20228cbe",
        "cursor": {
          "ref": "8c56cc1d-60eb-430e-a978-2e890bf18230",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "97452921-1432-4061-b2fd-297a61cb2415"
        },
        "item": {
          "id": "6015da6f-522d-4848-b223-b27c20228cbe",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0163adc4-5f40-4799-821c-016f78dcb638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e1192c-0d3d-474f-81b8-6288382f4fc8",
        "cursor": {
          "ref": "8211df7f-da58-4e65-9c51-4bd1876aad39",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ca2afc64-58f1-458e-9536-49299a42367b"
        },
        "item": {
          "id": "62e1192c-0d3d-474f-81b8-6288382f4fc8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d4a09e10-d141-46e7-878f-6ccc15a932b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaf9383-03eb-490f-aa9c-0ee58ede4351",
        "cursor": {
          "ref": "ffb52a58-3e78-4565-aa0f-809ee9f23457",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "119088e7-398a-4827-a426-3aeeb850d204"
        },
        "item": {
          "id": "afaf9383-03eb-490f-aa9c-0ee58ede4351",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d65535a2-254a-4a05-96a8-f27c98e26622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1d6808-2d9f-44ac-98bb-0ca2271c1a57",
        "cursor": {
          "ref": "4b247cf9-93a7-4d7a-bf7e-214763f0f957",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e28867a8-040f-4b66-9179-4dd8525f07f4"
        },
        "item": {
          "id": "5b1d6808-2d9f-44ac-98bb-0ca2271c1a57",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "acf6a9a1-6c32-46f6-be28-ad121726ff8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e7ff55-f84f-4a55-98b2-7c6815100f98",
        "cursor": {
          "ref": "d3a2f0ce-6a90-4af6-b93a-dd95b25eaab4",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5e49d800-662b-4b07-98a8-ed8c77cf0275"
        },
        "item": {
          "id": "42e7ff55-f84f-4a55-98b2-7c6815100f98",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e5330a68-abb5-4364-b917-a29e71f6c6fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73eb8773-3407-4ea1-99d7-244c27ef4657",
        "cursor": {
          "ref": "545a73e1-e011-4277-acae-7caadc40436d",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "768f322e-eeb3-4d44-8b87-cca8fb378f55"
        },
        "item": {
          "id": "73eb8773-3407-4ea1-99d7-244c27ef4657",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8872e576-7ed0-4b90-8894-2ef8e41bb30b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a26665c-ec0e-4c33-b20b-9af3dc2795b8",
        "cursor": {
          "ref": "f3b6e946-9b4a-4b43-bef6-cfe01e505f3c",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "16985821-25d8-47bf-8018-b01ff440d9c2"
        },
        "item": {
          "id": "2a26665c-ec0e-4c33-b20b-9af3dc2795b8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2fe6f4c2-d77e-4287-be69-72a018e895a6",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "515a476b-42e5-4c98-a334-12fb30161f65",
        "cursor": {
          "ref": "f0d665b8-24b5-40c3-8e4f-d662772dde39",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d3b6ba4e-22a9-401b-bcd2-c69c1422050d"
        },
        "item": {
          "id": "515a476b-42e5-4c98-a334-12fb30161f65",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6be2647a-52eb-45c6-8dbf-c17e924b32a7",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "00949760-e56e-48b3-860a-fcf3068164c8",
        "cursor": {
          "ref": "7598548f-5d81-43cc-adc1-d4b55f33e921",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "16f25491-2914-4e2d-9580-d980a5d7723f"
        },
        "item": {
          "id": "00949760-e56e-48b3-860a-fcf3068164c8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "57f1fc72-9013-41d6-911c-9b4167629bd7",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d5686a-3e69-46cb-9327-17d8ad322a1b",
        "cursor": {
          "ref": "c84de86f-83b8-462b-ac99-2863cada83f2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "38dfbf2c-775f-41cd-972d-9dfc30edf9de"
        },
        "item": {
          "id": "f7d5686a-3e69-46cb-9327-17d8ad322a1b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "30952af7-9046-4add-9693-f5c8b454e933",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d5686a-3e69-46cb-9327-17d8ad322a1b",
        "cursor": {
          "ref": "c84de86f-83b8-462b-ac99-2863cada83f2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "38dfbf2c-775f-41cd-972d-9dfc30edf9de"
        },
        "item": {
          "id": "f7d5686a-3e69-46cb-9327-17d8ad322a1b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "30952af7-9046-4add-9693-f5c8b454e933",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d5686a-3e69-46cb-9327-17d8ad322a1b",
        "cursor": {
          "ref": "c84de86f-83b8-462b-ac99-2863cada83f2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "38dfbf2c-775f-41cd-972d-9dfc30edf9de"
        },
        "item": {
          "id": "f7d5686a-3e69-46cb-9327-17d8ad322a1b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "30952af7-9046-4add-9693-f5c8b454e933",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e62daa9-05ba-4986-9673-638b6c787df8",
        "cursor": {
          "ref": "291ca5b9-a01f-49cf-b1bd-5eff4c94fb4d",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0cc8371c-36e5-4718-be54-29db1409048c"
        },
        "item": {
          "id": "0e62daa9-05ba-4986-9673-638b6c787df8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "91403c1b-46c8-4898-96f2-a86ff2768eaa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67679144-a173-4fb6-b62c-4f0029f64f74",
        "cursor": {
          "ref": "37cacb94-62cb-49fe-955d-5c53e572b358",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f2bee49d-6818-4a11-8f80-0160087ed98f"
        },
        "item": {
          "id": "67679144-a173-4fb6-b62c-4f0029f64f74",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "98fb51e5-b08b-4293-a987-8c34a9d15d9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67679144-a173-4fb6-b62c-4f0029f64f74",
        "cursor": {
          "ref": "37cacb94-62cb-49fe-955d-5c53e572b358",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f2bee49d-6818-4a11-8f80-0160087ed98f"
        },
        "item": {
          "id": "67679144-a173-4fb6-b62c-4f0029f64f74",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "98fb51e5-b08b-4293-a987-8c34a9d15d9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2d2607-1bdc-4f12-8306-fb399de74f9f",
        "cursor": {
          "ref": "d5940664-7471-4c8b-8b2b-807e85ffa065",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "52fecc36-c219-44a7-ba91-d098324aac9b"
        },
        "item": {
          "id": "9b2d2607-1bdc-4f12-8306-fb399de74f9f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f99726dc-8ef0-4b1f-b25e-44b8e2760712",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4b6255-66d4-448d-96d2-02373dbde152",
        "cursor": {
          "ref": "798553e3-9a5f-45f0-b30a-4c802aeac0dc",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "baecbb8c-7c4b-49a0-aad9-e62d90dbeaa3"
        },
        "item": {
          "id": "7b4b6255-66d4-448d-96d2-02373dbde152",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f28388c5-00df-44c1-af67-95f45ac99142",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4b6255-66d4-448d-96d2-02373dbde152",
        "cursor": {
          "ref": "798553e3-9a5f-45f0-b30a-4c802aeac0dc",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "baecbb8c-7c4b-49a0-aad9-e62d90dbeaa3"
        },
        "item": {
          "id": "7b4b6255-66d4-448d-96d2-02373dbde152",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f28388c5-00df-44c1-af67-95f45ac99142",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44a3c0f-466d-4331-b981-0bb6046f3f67",
        "cursor": {
          "ref": "799089f2-1a11-41c3-8da6-6c791cc483be",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "405bc222-3d46-4a55-b912-6b62955a53c7"
        },
        "item": {
          "id": "b44a3c0f-466d-4331-b981-0bb6046f3f67",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9b2769db-1940-4646-9d12-1670e561b6ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}