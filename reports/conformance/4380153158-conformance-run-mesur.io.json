{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "def4996e-daf2-4a68-9465-a3f5475221eb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ded15c4a-baac-4ebb-8c68-9911f86ae9d9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7b1796a-2324-44f1-8d47-7a258e1406e7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5fc13bde-9deb-4073-9f04-d17851811dc4"
                }
              }
            ]
          },
          {
            "id": "9c61d0a4-2f0b-489c-bdc2-95b77f38565f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4484bb5a-4af2-41b4-a58f-f9bb9a6264fb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "48d1a0f7-766e-4a59-9bae-c2ef0f33f53b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4cd2ed52-c4f8-41e6-8d46-1f0987642669",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b5cfe2f7-e8c5-42d8-911f-e4733d556738",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d06dff7c-ea9d-40a4-aa5b-3a83a040c340",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e4640dc-b246-4596-bd00-7328b7c009a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0792c2ed-b6af-46c0-83c7-3262dcf78a3a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af70a306-052c-4e73-adec-5c0b88878e0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4d437cd-2d5c-4bc2-81d7-dbdd72f7457e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a99d4c08-8a61-4e63-bfed-a4fbeca6a48b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7aa62392-867c-481c-8e26-7bfde1ae78a0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb955dce-7e4a-4055-a063-cf578871a5d8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a8443c40-ae94-4549-b879-33553248b09e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81ab1858-6388-42ca-9181-928cf616f51a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcdb3177-337d-4910-8c88-6c960336a4dc"
            }
          }
        ]
      },
      {
        "id": "cfbb43f1-a460-43a1-8ff8-ae997e3217c0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4b487b15-2812-4de9-a5a7-5b93b25d1639",
            "name": "Negative Testing",
            "item": [
              {
                "id": "094183de-e569-47d0-94fb-116de0828ca9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a69f96d-ad8a-4769-9df7-15d5277bf266",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb07567-d5fb-438b-a5b0-f427a3fd4dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e27089f4-529f-4727-b032-17d7b7538dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03018925-f2a3-4a82-a44b-71ada0422d24",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441722e6-3811-4f34-b808-e9d5b650485f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92933b1f-87d3-404a-a290-af48e58c504e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e90f7f3-447a-42f7-b836-5e3317d3cb72",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc26cb5-2c2b-4f9b-bc5e-8e9fb43c8743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4998efc7-c78c-4bf7-9101-6dcfdf0a35db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0bc54739-c30c-4518-a787-5edd3482110d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9496935-aad4-4599-bbc7-c06b9c124494",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0143bc-d6ff-45d8-baa4-1e9d22a03b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7171865f-aa71-4b59-a418-ff5766884640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a601c05-ea0a-441d-bcb3-3ae95a311d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f2dce1-1194-486b-b0b2-3ac0de96b723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6f120f-6586-421c-bf66-339c3c3a3639",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f2b70e-f95e-4b45-a569-c5b1cb5fe0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56921ee6-5736-47f3-b56f-6dc6f53479fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0253a8e9-da06-4415-b514-bb1198226539",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "097de93a-9b98-4580-be9a-18ac8815fe26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e1fb3f8-e431-432b-a151-e2727bf42c79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e57fa511-17c9-46dc-8685-7932bdc2a89e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1179cd3e-ba95-411f-9392-2f9020fb2139",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9247357f-1383-4dc7-977b-a02497475964"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7a0788a-e5d1-48db-93b2-8e158ab0cd50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "ba1e46d2-78c3-4bc0-987b-83918a18a982"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c8e90b2-7925-408a-b309-9290c1b74931",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7431ad3e-c0ca-44b5-8607-bc12f98d5706"
            }
          }
        ]
      },
      {
        "id": "6926cc88-ebe3-4afe-b4c7-0fef75e00999",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "35da8cda-8b0a-42fe-aab2-b9b37ed36617",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2e946df-7bac-4449-bb54-a928d36d2ced",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5601fcd3-4359-44cc-9681-0f7c01655030",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca12151-3187-4412-876c-db16367029b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d710d2af-a88d-4dd4-870c-20a3712fe9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0730789-de60-4273-b4f6-a172a325908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63d50026-a356-4ffc-8bbf-db48e34ed188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd42466-e648-43e8-82e6-35ebb2a978a2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825f0c39-bd7f-4552-bb22-48ac8172a940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f869ef92-f798-4275-adac-27cdb62c44aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3d9130-2690-4771-ad5e-18376efda05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95b66954-ce75-407a-90aa-ac57282583ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38320d5-7c3e-4c4e-bf36-6571b1718e8e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d119c1-a9b6-498d-9713-ad46724685f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57383b12-da38-47a3-81b4-81c93537c856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c071c2-610b-4ebe-9f92-ba68030676e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32c6cbd7-3f38-44e8-8762-8c08bb9c180e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359585de-748c-4982-beda-ad82cdd89b72",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7e32db-6faa-4db9-8551-8769cb4f07b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49737048-8a7e-4dca-a742-eddd538cc157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a930ab-12ab-4ca7-8e4d-bddd8e1060bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a06cdae-9b07-455f-8cc2-e55c2104b83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86eeba09-f1d5-4fc4-b22a-1c66c3e751ba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b5accb-3db8-47a2-8bd8-4336b904b338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d9ef82-ba2d-49bb-9d3c-0ac219d73387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df6a216-5a9d-48e1-84e1-b3be8bf9c560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e0a90f-902a-434c-8abc-7e4396024377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b77654-39ce-48ae-9d0d-0c9a044152eb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178569e5-c6e0-4f1d-b1a7-172e580ee157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae23996-19bc-4810-bc54-9f8e340c27fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ef77b2-9fbc-498f-b6c0-a484355c4566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c4d053f-3bb3-4ae2-9874-2d6cdfd80f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3026f7-2409-4663-b887-e41d9dac223a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e38c8ce-9136-4caf-b776-4c335a7fd5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9038ac6e-85f4-49d6-bd99-9691e457d8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc8eb5f-fc33-4d57-bb39-139b234bfcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5e7714b-fc2e-4f71-af56-8dc5e6a89955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cf47bb-4c61-4468-9208-b4989582b13d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44f7684-634c-40d0-8649-93e2992bb3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa63859-3b56-46fe-bf75-a9478be88a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164d1828-ad20-4127-8bda-dbdc816b8af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a79677d-0eed-4e67-9e0a-4dd3d2ca816a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0f9859-a89c-4988-90f2-70520bb2624b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e674c6d-af25-4a9e-b3b9-b5bb62459b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6dd1ea-32de-4a8b-a516-ddae2934c9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6043a72b-492e-49a5-b58f-9f694d027c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af0ef49a-55cd-4a8f-a9e6-90116fe8173b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6343cd-312e-4834-988f-6d81fab49c05",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2bb78f-6b48-4d79-8c5b-fcd8adefaa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962869da-c8f9-4c32-8d10-a4bbfe37195b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4fc481-18fe-411d-97f6-15ac6da272d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bfbf221-40bc-47a1-b622-c4e12ed3f808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe90d05-30c2-4e0e-9a18-64a00bf37f5e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6466ade3-43d7-4470-b2a7-05b455d77b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146f44c4-0e02-468f-8e5f-2f62aa01703e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09c38c2-b037-4bc0-8a0d-290c2bfc7f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdd3a252-731d-415b-83ff-f417e4097462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2bf6e0-6c71-4c23-9506-866466a93577",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881726e5-ee3e-4dd0-a1b9-0ed26beacb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1e0101-dacd-4398-832a-5dc6aaa00510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e5d553-ee4a-4741-adbb-cbf2c0fa44b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35f22d08-6012-4330-a411-f3224247102e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e92876-aab0-4f57-b79c-42ebe55f1d11",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304bee67-3616-427a-81e3-1af8014fc061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4f529d-bf7b-4ff9-a956-9f5997a96fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3fed4b-8217-4ef0-ba51-bcf4752529dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63b2b5bb-0e77-4253-9f06-906f05886430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9191db88-96a6-40f6-8f00-419c6ec7aae6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166eab98-ead2-444e-8e91-dc0759c98a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a673d567-4e86-428f-ac65-754e36f4db65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d1576f-b36c-4223-a0f0-1444423ba920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5e04dbf-c5ad-4a0c-975b-55b23ad6b889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b11697-4e8a-4366-bd27-c2bbdeddbbaa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f416ab0-bca3-4637-a567-e74c4ca2e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba0622e-9ae7-4998-a473-eae8e6240529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb4c9fc-5e56-41f0-9d1e-b8eecf0c8cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8641b65-5b2c-4c4c-978c-0c9ae96a7e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1169ac8e-6d84-4483-994d-75e9e2e2406b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9368c5-1d25-43e8-b982-0c0aca2634bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0723bbc-7b74-48f1-b103-5cd8211b97f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5a8a9a-60d9-417b-9c3e-5abf54e6a176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6307fa39-c9e9-42b7-98e7-46cf8c2b6ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78b8f97-d8c1-4f19-9066-2a9394547e71",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957e9561-2ece-41f0-9cdc-1bdc72205138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d204f3b8-fe85-4b6b-953f-b9b7c7c3bec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4e9d3d-72fa-4a75-a3d0-07881ea7eaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3e0d9ca-3841-4cb1-8e52-d9cbe7aaeb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f57d728-e28d-49d6-b38f-e7005d285e24",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54adf908-6f56-489e-a5ec-0208b6e36dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febb2cd6-ce25-40a1-801d-7a5082c6eb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52324676-ff8a-4cb1-8880-de37ecd77fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a473f1c-7e7e-471b-bf70-0247e1426d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f1f7e3-c920-48ff-9ae5-e9b2f3ce7c42",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5733e300-aa41-4ac9-9f7f-f0d440883e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9109f6a-7de1-4c88-8e92-0e1f84620584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6d37ab-8b81-48c5-93db-49a74febaff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "807ed249-8e4c-4450-94dd-4e60268f6394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2bb486-2af8-4fa3-809f-4ef561a65e3c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdbfee2-171e-41a5-a346-4a769198d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a3216d-9a67-4acb-a872-fdb794970313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4c94e4-9422-4470-8305-8e14e4eb5ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec30cd7-7b4d-4166-9e6e-4d1b4d513f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf67e722-5097-469a-96a2-233bcedefd52",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33de42b4-859c-425a-a510-75954b5d0580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be064afb-0c18-46fe-8d40-001c0581a429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8856900e-a3ac-4f2a-8f27-f21a359a252f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4972abf-72eb-475d-b311-897726eab5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343c37bd-55b6-4483-adfd-a3ee56cfc23c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504bd8f1-de71-4363-ac29-8410ec86810d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5b8040-407f-45a4-99b2-c81004010986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08790207-9f07-470c-9de7-05bb170f56df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "355db61c-45da-4e12-9fb6-4894df2db7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e8df5b-ef17-49d7-b183-7e6dd23762d4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183f65a4-9de7-4504-a53d-d7cbd2c53f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49edee08-2354-4c02-b44c-cf631c8a6e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d05f65-75c5-4357-8e3b-a690089b310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52d5553c-33c0-45ee-8613-0d75baf56b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694da4d8-5e5d-44fc-8fb7-7ba09b3993e5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb55429a-e237-4dae-918b-74c48eaf4967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2314bd-9746-42a9-8e21-2f65dcfaa40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fd995b-cf6e-4492-9f1b-56f0300684cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8287406a-1a8e-4c45-a45c-94e86ef9d220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533bf124-9293-4eef-b39f-0b7cc4b08de4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c295ec20-f1bb-4465-a866-e1e1b81f8b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54fd0ee-e3c6-4b3c-bc95-32b3682e2050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3017720b-6a82-4dfe-95ef-2132216dba09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4974bf-d394-4c9e-9065-370297624b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a931f07-d301-484d-89c2-63a8e9a4f765",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3902dd99-3e3e-4867-ba82-af058bb03b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081621bc-8d2a-4506-9a3a-142eea6a7a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84080c4-bc46-4257-aa37-57c8cdf5f8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe5abb4-004c-46c1-9446-fcddcbbf761f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a112fccb-60f9-47db-bbff-454f0d6fdf28",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe409248-0488-4d6c-ab3c-4dfd7f2bdd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534fde14-856d-443b-aef0-0218d6b051ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e6e399-135d-4745-832a-32bff92b61dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75dda215-6ac5-44a3-afd7-de2e8b233440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab5b69d-5a4c-4623-8291-ff87cfb7abe3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bc8239-63d2-41a7-b60b-47f6a41cc4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8033acc-4cc7-47db-968c-a7bf0be49add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f8853a-bb91-4834-a519-fda4ea527062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7d3f4c-49c1-4ee9-8110-68d6065d4f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ed826f-386e-4256-8b03-a8c0d85b9223",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd118ad8-17da-4608-a8ce-b1ece6d7f7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6c9e80-83a3-42c8-884f-5c81a66003fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910e3469-b94d-42ff-b9fa-97dad7e512b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95b40405-086c-42e8-95d9-652bb79a93f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f63754-73ea-4eac-af52-d20bfd9d60f3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4bb146-80c2-4a1e-b75d-d0b30bc53db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33255e11-abce-4648-b526-0fb53737ab9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1012ef-7692-4ed6-9fdb-f5019577c46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "02e1c4a7-9885-4c2b-9f53-804d8a4d0ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aac4480-77a9-449c-9ed3-f45b1b700bac",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741fc9ca-4ab1-4595-b27f-396c53a04e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd79d8b-5071-4e81-a302-1646af9198cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8df2b39-33b7-44ea-852e-2163f8ccdce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff675cc-b642-49ac-9fa9-ef05eac4aee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb3e7ac-aece-4696-a107-577cfadf9a4d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6204243-24b7-4f6e-9a72-e4888679d181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d82075-a0eb-4cf2-a43b-2be0c61dcc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422bd2ba-b2ab-4c3b-9b04-a9732b20b263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58adff49-d31c-485c-81f1-1e5b411864bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4e2798-55da-41f7-ba7f-59e46e6ccb39",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89618c5-46fe-447d-b916-f19a850cfcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29eb058-2d47-41bf-8527-46eb4473131c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7557bd3-84a7-4663-b2b2-3fc6dbcd0319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bd664f-aaea-4bb4-abb1-3da38e438ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d50fd9-ace0-4911-8327-67182c2b7c97",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c75acf-d7b4-45a0-b11a-c4ff2a7b604a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445c36ce-7f5d-4fe3-b280-48a928c6d0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e000dd0-e81c-4238-9022-0ed6c19ed4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dca451e-7120-4c6c-bcb7-d82cf56b95f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d173e5e1-4a9c-48e4-b34d-481956204e07",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de46ddb-137e-40a6-952c-735253238866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0cf5a7-ed1a-4ae3-9c7a-4131522e0bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedb0c9a-6e96-443f-a90c-fdcc5ac3ef31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2bafc943-9524-482d-97a2-c0b76950fe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c38ea0a-8f7f-4ffc-912c-4dc3c5c7ddda",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1878290d-b4fe-424e-92eb-66a3c17d5348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b629177-db54-4448-bd67-8b7cc944f9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed76c5e-a6f0-471e-91d2-4cab65f25780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65c15ec1-98ad-4b84-a2ca-ccde92760b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caef706-713a-42f2-8922-6b0d7bf4a1b7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1869af21-e63f-4d35-b63e-85b1f9014fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c44069-9723-4d98-99f6-be2ef5f3f536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98445eb2-1e02-49b3-b83b-c59b676e35e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf4344c-1702-4f3d-a3a6-b25b35310e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceafa4f-7099-4a25-a8f2-50a764dc5c76",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c05449-63b2-44ca-9850-3b8486425176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a8f51c-f4ec-40d4-9fea-21ca3e5078dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be23d57-fa4f-4aa5-9bfc-97c3b67bbc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cae21b1-da51-497b-a42f-b4a8108a257a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f52f3c-fc1e-4473-b139-6d032524d5fa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84209e04-6a73-4aeb-ac2b-9b184f4b742e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49ee874-a61b-4e0a-8f71-8becf9372ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b804af42-05a7-46e3-97c2-e73a3b82e23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "495d0fcf-7383-4839-ace3-b38c29462c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dbff0e-dabd-4b29-8fec-259767e21137",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a45a73e-17f2-4914-a13f-d1aa178c5d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70da3fb-82b3-41f4-aa25-e243573b2fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d55c2d-8ab9-45b3-b44e-94acd898054b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a7c2a6-186c-4816-89d3-16e35a8e2aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d396152-9014-47c3-958d-1d4718b81637",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7838c0ed-f787-4334-b7bf-e31e60d85b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc1612a-9bdd-4a85-b695-7cad9901ae07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f7de59-d423-46f1-bda7-c695afceb951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "842644fe-1cc3-4538-ac2f-2ff88449a67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e2bffc-a13a-48c6-8ef3-fef2c8bdffb6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca47923-14a2-481a-bdc7-48f16b1f0181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dba7e7-44d8-4cf1-9a37-a5d7efe2d013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba1e9a4-5f11-4c7e-b01e-0e174f133ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "37da8192-56e9-44c1-96dd-bb76689df36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfec5524-ab50-4732-b615-a95c87b73978",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ffda6f-5a9f-4d80-ba27-5215a1c2e5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e551a4-8aff-4ee9-9d52-447058391a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaeda30-01ce-44a4-8adf-aa3997e16d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4de9309a-6041-432a-9c7b-b42193ba23d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9bf241-7c91-4326-b226-3751ede25a04",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b908bbb3-5ed3-46d2-8b53-f25bd8e2c641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c482ace-bcf6-4130-88d2-8da9d30b5f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5440b9b0-9a16-4307-be89-d7d0c24f19e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9ee628-9d6e-4028-b51d-bb976991b368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af104e28-0fd6-46ce-bd00-e72f3f353bb0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ff93d9-871d-4619-8933-259a11ce18b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cbeb5c-5a32-4bfd-941d-0255d36acc2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e21c03-bed7-4b31-a5ee-c92e79fd1f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33f05e9-fdd2-467d-869d-d16a225237a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03fc37a-cb88-485d-8ac8-8c8fe206128d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef5aad5-53c8-49c2-b803-cb28bd3f9cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c12ba88-3bf2-4565-bd70-75dbc15f198b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b92b1e9-191c-4ffc-acb1-a867afcd250f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9070aff5-22b6-4da7-b548-c060081b7e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39bd6ea-0051-407e-9aa1-e5ea2c261ec2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f8f158-831e-4370-99e4-028670957664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa4bde6-8f05-4205-a162-032f4ab32d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f01c22-be08-452c-ab7b-efb776c739ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "026801e3-70de-4aa1-a271-ec08a0210744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa3113c-5fdf-43cb-93df-24d26ef69ca2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f53010c-d3b6-4e7d-8d58-33b408d824d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efda76f1-7edb-40e1-8147-4a8298348bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3cbde4-353c-42d1-8712-3c34e1c07684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d0ef78-3cb6-4a0b-80f7-9d4c75c48b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59973746-73ec-49ac-ae32-e7374f61ab60",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda33b93-ee41-4101-bbee-c08826795f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e822ef96-29a3-4dfe-870b-07ef4b3126a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec2cbe1-3c7f-48c4-acb7-0567aabdaaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b70f2b8f-c2ea-4648-9376-89437be44cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180da171-3279-42a1-a028-06ae05902b7f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b0f816-133f-4229-8232-06cce180139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa96f028-2e67-4e0e-9ccf-ae0e86b9ceae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23718f90-bdc9-4bab-9e0c-585290e024bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d69e0e-3ee8-4f89-8a44-98e4f0f6c469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c0dbfe-b32a-4166-9544-aaeb1d5b535b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763a1267-1b0e-410f-bfde-514d20047be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1237c8-3f54-4568-9477-3631d5100ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab681b0-16c5-431a-916c-6fd7b07d7266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "04452323-958c-4f36-b831-aae2bb3d1995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de146eb2-84ce-4a6b-a86a-d98b41f18943",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b02ddd-f4f1-4d6d-afac-44fff4088073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56742b9-cc0c-448f-b2c8-4c0d64138d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b79b847-7389-4b3e-ac4a-57fa02e31d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3519c925-f604-473a-9dd7-9628654e05c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3337d914-5e73-44d1-844a-ad257caae587",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ad8a48-0f1c-4ff1-b0e1-2187ccf339b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d74cb1-7a19-43d6-8f17-8fb3e3bd3190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccbe1d1-10e3-4a7d-9224-3ab40f27424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "742cdb83-9a8c-4657-8820-c27e18d8d2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bae8837-fd1c-4439-bda4-10a85278240d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a397e45-8d3c-4f56-b7eb-3e7e5db0358d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0285bfa1-57e9-4fb1-9c7f-84e1b2fc89fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4521ba01-92b6-4832-a820-ed1eed66789a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "366c4901-eee9-448a-af68-38d690fdba68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae16a4e-bf56-4a5b-b3b5-98eac58006b2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79ac11c-7a3c-47ca-b21c-12eed8bcb364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e0694f-e7e4-42f5-83b7-4f3b4f6381c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3222cda5-2032-4c23-9c33-1ea61ae4286b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfa7c22-f631-4b48-95c1-7eaaa470f3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf60323c-1b07-4540-b408-98ed7f0976c0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34fcff1-b870-44df-be19-ca7153c29ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc6059e-f618-4416-a8ab-b2f07eb58912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8cc5de-60d9-4101-9669-cd6f625f91a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c2760f50-87dc-47ab-b507-73277b4bad23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a4de13-0994-426f-97b2-b03f5e32b5f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a58258-60a5-40b4-82ee-5b3c88f4b796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec7f45d-af3e-405f-9378-626864d25426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef2cef1-5931-400d-b4a9-2d5aedfbe087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "708ce7ba-0f49-4402-884b-9238099349f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1963fc-85a9-450e-8066-ac494c3b4a5c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54165f97-b28b-4da5-b2d0-640d26388094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf31bac-0245-4684-a3ac-849466783c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316fd7d5-23f5-4b0f-a058-965d28308a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e98ccff-b516-47ee-b335-36f711a265ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e348d88-5fc8-43b1-87d3-bfa6b6de6399",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd45d57-32cf-41c9-880f-bc6ef86d57a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858cfee3-23de-4860-80a5-6b5d0a596298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3875986b-499d-4893-ad99-fc52b147cd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7809212-7038-411a-8621-5dd13693739b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a466b802-e7bd-461d-a2b0-050037610066",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1638e2c9-3b2f-41cc-a925-017fc225957b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9cdc07-80b2-478a-83cd-877d6e91e74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1cc532-c17b-4f02-97b4-b46ce12c67b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "18cfc3ab-8063-4344-b279-016a2a6d6f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1839b2c6-f041-4aff-9b5c-65c8820e560a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b97591-e98c-436e-b4ea-27653ae30c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e133e0-8bc6-4ca4-b1e8-e78265b236c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed345d63-73e8-4541-b3fa-cb8a9842fc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aae84abd-d721-43e6-aa6c-da468edaab1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bfc6a9-1a79-483b-ab51-21ca0eca136c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71955547-9645-46bc-acac-75b1e1ed4839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584df4cd-427e-448e-9f81-0996d1f1fd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd0e200-0111-4490-a511-b8e58f51db54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed48d428-6c69-4ed4-9a14-c84b2ff35463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d43f74-b639-4f2f-8863-05824c17681f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed13e6d-f893-47fa-9acc-1b96ae5c4ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18b4d1c-7661-41ba-b78c-26cafbf226e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a32ed1-497a-4278-8b55-ab522e4b7c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "70453efe-f1de-461c-8eae-a14633d6d1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0e1b58-400d-4efe-abea-7c81a8e8d744",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc655e8-1444-4182-bf39-358692bbd076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1924503a-cad2-4d82-9300-58ddbc3aabb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29823a78-37ee-42a5-8b6d-4b959bf80bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4630b71-f048-4d2f-a949-8da14eb08be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ccefaa-3860-416a-a49e-b09e6c190b68",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2d0fb6-8f73-4e65-a426-37994e61e6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8888ab0-ca76-47b4-8c9e-98cb2b84b3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7bca89-1d4d-418f-8083-cdc72de27c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52ace99-6450-4165-8c80-4776d69bbd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a054d3cc-8eca-439f-beee-570e8cedf040",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5be7c05-a75f-42e5-bbfc-f2b64a1d5898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e7600a-07b1-47c4-8802-4e09acb62c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec6850e-063c-427b-bd6d-66050e39227c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a390803b-dda2-4057-b192-e13c84e3a470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62311186-379b-45c6-8347-018ae394cfaf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b8b2d8-5cdd-4755-8148-ad6287fe662f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdc4fbb-22a9-4e6a-a30d-38e2e39fe06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ac8fff-5c31-4f7a-8f86-f0acb7e85402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3e4771-b806-4f5d-9a84-e4353952a4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c748e3fa-147f-4d99-9fa1-f0069fe0ade1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11a84eb-7f63-4148-adde-514a6ecc1378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc91116e-4e85-41d7-b06c-c184667957fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33132c6-5e66-4ed8-ba21-a7cda210540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d72cd88-20bc-479b-9615-ea745d2867de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38c684c-8171-4f27-9444-efc3e8b057ad",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383e6976-22c9-4cee-84a5-f1cf51e18c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2b0923-a011-4736-a449-a17b2cd1d0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3db1fe-2af7-4a88-a963-188c8adbe2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7528881d-2ceb-4740-9e33-40d706baf9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced21122-9d3e-4cde-bf0e-5241b4b2ff37",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30e722e-6d98-43f5-932a-aea12e72b504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28aadeac-a983-40fd-8e80-81c7cac303bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eddbf4b-20cd-4d35-b54c-1d5001945f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f8af09-7f43-40e7-bc87-d8e3a5fea32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee59411-bda2-4a19-aadb-b34a37fcec9d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea83fc4-9058-4e3f-a450-3aac086efb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4623b667-afa3-4c43-a327-d7e282c82d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b094fa-65c5-4a81-ab1c-124ac84b3f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "350bdd7b-aca4-4729-bbf8-8f54834a490c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea96890-73a6-426e-a2fb-b12a5178b800",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31168752-ab7e-4442-8175-170b70d7dccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1956c66-c00b-439c-a09a-79a4ad58691f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf4af80-cce2-4ceb-b858-848ab486d5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a912804-6d09-4615-8ddb-2ff06142fc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317d5933-32a2-4a67-b47d-60ef66ebe6a3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3db739-abb1-4176-a70f-dbdd890db4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f0d1dd-8188-4a96-a87f-fd3c4bd7dcba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430f8864-9fa6-4e97-a7bd-08b92ceeccbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b497cb9-092c-48d7-bac2-243b0930704e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b5ee16-4817-41b0-aaeb-a9820644ba2a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305b46a7-c087-4d3a-80cf-9bbbcb1e6cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e4ea45-9f08-44dc-a67e-27ec9224a8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d8df45-50e8-48a9-a592-0211ea29719e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0f6712-44cb-4392-94f3-0e6b78c7cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c424910-ca92-46f5-89d9-017fccb7548d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b5548d-9c1c-4f41-ab12-6bb2cb33b0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aebcaec-c9a6-429b-a7b2-b35d6d9ae388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db653690-ffb2-47dc-b86f-87fdbd008cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5543c3c-cd11-45a4-92dd-8372e0b5af18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cc575e-a33c-4131-bcf9-2e8b53ebc8ec",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0c63cd-0256-4f1b-9109-998cf4c5a5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3888e5a4-ce45-4ef5-a315-eb4deff67c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e948b70f-1eb1-422d-852f-c75c0c2139cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d93c0c-d23a-4b5c-aca5-9946f413deae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd37936-0bb7-47bf-ab0e-a243188e6996",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3196d387-5a1e-4c7c-a583-fe9c43da71d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd080ea-bd03-4d08-b215-f3760d5be33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbdc204-7d2d-45d1-9d38-d90cc66d90e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfe9e22-f984-45ac-95a3-84bd5eeed0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59491d5a-7334-422b-9e62-ef3761b951a0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28f48c0-7975-4ddc-8d43-e486c6ee437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41433c0-fc64-44dc-9090-4aa4fa04027d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9529bd-7019-4fc4-bb47-dbe0c066e8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbcff01-ec2b-4776-a754-7303c5926004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6158bd66-d346-4c67-a259-576c30674467",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e87831-10a0-43e0-8a4e-2e8742fa262b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b383372d-e7ad-486e-bd37-a62d1578418c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf17161f-1272-484a-b6ca-598a5d2cd3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf4059a-1e2f-4437-a101-1734f4782cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41e615c-3578-474a-b103-850ddec9a33d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c15aa8-d41b-4301-895f-66f7d5b9b6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d74583-cf23-46ab-8c56-3ab23bce65c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ac8d5b-6fc4-43a3-81ed-e22b7d8f8adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09f88fe3-70d0-4953-a9ec-725d56567680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f218d0d2-81c2-4b46-b9cd-208ab69b9e73",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09da3fac-e8b4-436e-a91f-cfcc67dd8b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6270b4f6-46ba-4da4-8e98-554352fe07e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9f0418-46f3-4abe-abd6-57fb75e450e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f03f1e16-940c-4934-bbbc-5892acb94c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d94c45-0864-4e72-816b-c74646dff9be",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2af70e5-f5f6-4db3-906a-bb8a9a5c19e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2a4a54-a1ec-477d-bf29-e5522f7a47db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81067c16-1792-4905-a408-0e7dd5525bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b414d52-7329-4719-b6a6-cd8ce7a0ef40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c337b3-5fca-4491-8375-2e4d60e2113f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6995977-3756-4ff0-b71d-538c4d4f43a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c321c65d-f6f4-4f80-aeca-17ca9858d88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae2fedc-67d8-47d8-a121-78c3bfc66cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba40d2ef-b9cf-4b78-ba67-a2794446654e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b43946-76cd-420e-a262-fa91b423911f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2687433-5ac6-45c9-8e5f-23a622ac8c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb5bebd-596b-4fe0-8ba6-e3b85d7970c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c30b6b-2c8d-4009-9450-30ea3ec907c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dcc1fb-708a-4c6b-863f-c2b3eb6f7563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b847d472-ce31-481e-b4db-6f6fac2ff62d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4063a505-a6a9-4308-8876-3141e1d8bd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230eaf89-6f71-45d2-9021-d34503e49b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fa6d55-2b98-4ddb-b0e9-14a110e0d987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8303d45-013c-4337-820e-3a0cec8dc3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245a22cb-e9db-4aed-b416-c0f93e69286e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e5525e-fd37-4e83-b6cd-f8a9e11ad450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77445402-c7ed-4055-8f02-cbbb3cbb0e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d57660b-068f-49c2-b088-4eac91458b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8782a8e6-6cfb-4f20-9ae0-f2aa763eb7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbf1bd1-5d42-4483-b879-f932ec738bd8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999a0375-5571-4c02-a25a-a3754985183b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82c33a7-73c5-486f-aa40-662a17fd6e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd05ba5-c5e3-4e4f-a704-004d56eacc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "379c0f51-eddc-42a9-ab83-68fcb78415fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49927cf4-8ee9-4954-9928-8ec5a05e451d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f00f8a-5a98-4175-8918-a2d290dde14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85923c55-153d-4071-b87c-ca07ce0a0d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fa5820-1388-41f2-b781-6dd1cc82cf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e26ef520-3879-4add-9346-7dc931519e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8f8c08-7722-4cb9-8f4f-5fb9c22fc9d4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c429f57c-1085-42c6-9a02-c93ee1469d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5447d6a1-f19e-4b83-aa40-3f580d9a9392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d0e0df-b5ae-4185-9b69-0d6ac7e34c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "854a4d9b-4ef5-4e98-a7e6-c630656a5321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d0b466-c348-4867-b259-47a182cc99f6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b1d2ca-dd64-4e1d-8d45-fc55228061e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad70d632-ce85-4573-9aa6-4062ba7762b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc09856-c7d9-41cf-9cdb-307e919e4afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "733b4194-0744-4d02-bebf-15aff8f12e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b715f753-ad42-49ac-aaef-c11d87288032",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824d18e3-7b38-409d-bc69-43e35cd740f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dfb1f9-6ba2-41d6-bdb3-b446f24f2a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bf0997-8f16-4a7d-a985-4765b3b9c77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c434d89-9cca-4236-a25f-2675c0d9772f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f5755b-ff97-44d3-9d1e-3269572374d2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9e8197-4397-498d-a6a7-fa9ee8d49387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b7bb60bd-4167-4681-a9a5-ab46a9158711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bb856b-6156-40a5-967e-6d2af8518bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3213b539-4eb4-49a8-bda1-f3c07008002c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b48b28e-8d26-413a-8bd1-95142dda525f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "366816fa-888f-48a7-bce5-92bb6425272a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee32284-bc6c-45b5-b5eb-b41c2dc21862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7f897b7-21ad-482e-b4cb-6c62683b4375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eda6eae-8f74-4f27-8e12-e12843a696a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d70948b9-4833-4cae-ba3f-ed6ad9086ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacfd6b1-2529-4d84-8a2f-c32ed289001f",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfc7c96-bb27-4139-ac69-23dc97a14562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdf8e006-619d-4610-9177-7fa245ef1a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5727d717-b35b-42f7-91cf-5bd26afe22b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29609e15-0373-42cf-82c7-6766e3e08721"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "455e1aed-8d8e-4330-9364-b1f008e3dfa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a9b2643-0d45-4f10-a632-47470f475dd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65213d43-b557-4b2f-a1c4-1e13936294e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f3e76a4-e50b-4179-8180-9a1ce87afd84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0be4b2c-5c36-4313-b00e-f97a478f8ee5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f933502d-abe6-44e0-b8b4-6e0e93f4d387"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93596761-0ecc-4746-af45-521822b50579",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a495351-83f1-4dae-bd56-581272d0b0f2"
                }
              }
            ]
          },
          {
            "id": "19b2eb99-450d-4704-808d-9a2991d5e882",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e100599-3883-42c8-b26f-330d64115ee3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44b297e4-27ee-4def-9221-f1056b1ddfac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86e64ddc-34d0-4426-b69a-05ec9a80975e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d63c474-ac47-49ed-a989-05a8f0ceb745",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9363fb66-c26c-4d5e-a156-0891957982fc"
                    }
                  }
                ]
              },
              {
                "id": "7cb474e4-fa2b-4412-8692-e2e4c3a830e9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39ce59e4-729b-4e44-beed-e482eeb35a80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4a034da-c0c9-4dd9-ad2c-a2ad018b27e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "612799fa-ad88-4b99-8cb3-5de169627b60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce9805cc-4c71-449b-be7a-756f36298230"
                    }
                  }
                ]
              },
              {
                "id": "f256ad05-d0ec-49a4-86bc-43202c0091e2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0c4e269-e7b5-418e-99a4-660c0700a3d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "122950a1-c3ce-4ace-9f48-0466528673e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d4b1288-502b-4b6d-97f4-62e33604ee5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "07b38900-961b-4cdb-ba25-9493ef1b28c8"
                    }
                  }
                ]
              },
              {
                "id": "89c0d966-079b-46a1-8438-4e0b05085f2a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de32239a-45ea-4a3b-ba77-b431db087a1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85e41569-af68-4d28-a7ea-950e5d26a668"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d56d07c2-e809-4fde-8f51-a24c0a5df2bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c107c951-a8c0-4d93-be52-424ade4c65e8"
                    }
                  }
                ]
              },
              {
                "id": "661cb155-ef75-4d3f-b663-8b3eb37a5ba2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44c069a0-f2ff-4417-b53a-ec65fd1ccc70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0470b4f-36ba-45e7-a2af-18aa0c26b30d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de7c5620-0057-4827-b9fa-0509da0956fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7569516a-7017-4785-88cb-5d9a70ee8e44"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c97c8e4c-d3e6-4557-afde-6462fb4f0720",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "614a8cb4-4085-4deb-9851-9991fd65ada8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96ab4839-261d-45ee-8c94-63379a9b6408",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a0d0f8f-6182-4fc5-a368-d0e11f659b82"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f289ab87-f7eb-4b9f-a064-102e0702c82d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "daab1e9a-445c-496a-8a80-c64f3adfa9fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "019878ed-66d2-4bfa-a9a5-95f6d7336466",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bf3ed00-5419-45c9-a730-3aa81349b647"
            }
          }
        ]
      },
      {
        "id": "8b7d0e6a-bc9f-4e30-90ff-543e3d4ea475",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "03b45b90-9355-469f-abfb-9505e0645cf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4472a907-76dd-4ed2-8e4f-25c08e19b8d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "810e024c-d97f-4ea8-818e-01a6e7a715d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586acb32-4593-4911-be73-cf64245f2e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4d5fed-8aca-4d23-86f5-4f3fe520d85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9db282-598e-4f21-97f3-6ab019427568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1567d16-3a95-4ef0-bda5-0366749b1e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc251817-1bc9-4b0a-8fb3-db25e85859dd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9ebbc5-4a07-4f69-a87a-36287e116e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79570c6-47b7-4629-9db0-00c0f1bfbc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287fbce8-0d3e-4387-b7b5-d52981473bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d305b04e-302c-44a1-8ce0-da0e86e91588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be7f081-8041-475d-aac1-a9b5f4436649",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98f83d9-2f0a-4ba2-a162-38fa3455cb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c73facc-9e40-4ecc-ba85-8d744a621174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f720730a-6952-49da-9c76-bc1029a8da83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8242842e-77a2-4f5e-9c4d-b01cfebb313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8183377b-e1a9-4418-bd91-3d7decb46d0b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5488f115-5252-4d38-aa17-1e8e4d0a9f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861c5756-e5c6-4144-ad4c-ec37b10008fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bc52c6-71d0-4a42-860f-1a69cbd4172f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f71c261c-6654-4c4b-815d-3ae1e88ff3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250e325a-d5dd-4678-bd71-9b3417e529b5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9671e589-b37f-4787-894a-e2c8a51b5aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b89cad7-cd41-4fc8-8288-3706ae48bf00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd4d861-be03-4f29-9001-01dc2ade8405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7114cc58-1292-4868-a9ee-e45b71f48a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac023bd-893f-4230-b99b-c81b6b487271",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6b7256-14df-457c-8c9d-595b4f02d4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8085b032-44c6-4944-995b-b9c64145e21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2d9429-7272-47cd-b0da-eddce90a322a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07667ad1-e2ba-496c-a3cc-9e44fd495890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f8b588-7b4b-46d3-ba52-1168f23dad25",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2bdfd5-2b84-49aa-aab1-4c69d194227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1622ea81-c504-42b9-929c-6d954ef06e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc962e2-376e-4309-aded-549bf48ec074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dac272f-4ace-45e4-ae64-35c00017a7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e09e21a-e1ad-429a-b45b-476eb0bfa7bb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2424f19b-e221-4d54-b296-e5ee7dba28e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a470bbe2-35b1-430e-819d-26f9c19889ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2b11e3-40e2-4b5f-b56f-35ce2de98a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "602c8791-923c-4fc3-8aa5-f582d0f4e71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc31621a-0868-458c-8f63-04d9c8b4b443",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0fec1f-bae1-44cb-98f9-4fc7c3ca33a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4cda0d-3582-466d-b622-8c3771c284fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a49a5b-03f7-4665-bfc8-62ce04974690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "411b7284-ad31-4e86-b035-f798afc08175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7514054-882c-4f9e-966e-94dddfaf6abd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af71a8b-ca79-4c25-b6d1-a1db5f667060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c63424-c97b-40f3-ba27-fb3fe1e98472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16c458d-00db-4f5d-a884-2fcfb2dd86c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6d5d46-d8f5-454a-b8ba-698b7f5f6418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4f8967-a042-4451-8452-54cbb3fc49d6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305d455e-c005-4041-b7dc-84a96eefbd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e8ce30-a2ee-4b74-86e4-68c79e51cc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91351376-2600-4ebc-bad9-ff608e1fc165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f61729f4-2359-48e2-8c10-7d7c87cd89de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750055f8-7432-4c50-8a2b-bca84246b311",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bbeb25-2a3d-4eb3-b52b-d86c5bd8f8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dd80e8-422b-4321-a1a3-2615416e8a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c8f061-23ab-4c6e-8166-f861d06ef551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "237604ce-2006-4ac1-88c3-9671f36c1a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a0dded-254d-4912-ac68-d13bde767686",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfbb4b9-a267-4ffa-bf0c-73229656c5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84c0b15-a72e-4cc4-a330-03451c1e7c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00b6b01-d611-4a1a-9285-e83350c1c3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b228ba-9e5f-4f18-8b72-fa73be7f4547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a628e62-446d-4091-8ce0-5533e869a9d3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cbfde5-752a-4903-9ca9-c8ababcce8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b724634f-a993-4faa-89e0-5aab0fc95a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93312e1-074d-43fe-9b13-5303c533fe3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bff1b2c-271a-4838-ae51-6c6901cc7547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35d4058-50a3-433b-b857-c5805ec2a344",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2c4b21-ace6-4491-aaf2-9bbed09c21a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d57a6b1-e765-412a-9a22-045fb5722073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ef657c-6e1f-4281-bb04-157d6481826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e79c96f-9a3a-4e1c-abda-10e80d68ebe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f86292-1ea0-4b96-a105-aa4eed3c727a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a044d1ba-8819-45ad-a291-da3efff6d64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2226b8-92c4-44b2-af4c-d328f2d9788d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b71fdd8-899b-4d4b-adfb-489e8f2bd45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a66ff915-1988-4217-a274-7eb6ec2f2e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f99493-cd96-4873-a852-8d79f9943e06",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a5136b-1ceb-4aa7-8c30-1aa8bb6ee49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7062eb82-15ac-46c3-93bc-52b1aa095fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9744c3f1-cadd-4dc1-afab-8cd9c0e28a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "104e088d-bc08-449a-a5e1-440a0a3b9447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd3fd7c-a068-4455-83cd-7ff1ec50ed8d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9619bf18-30aa-43f0-81b5-0f12fb42ea37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca6d709-84d3-47c9-8108-1fd9a3892497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1362bd-68e7-41eb-a342-4a40e757b5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0316ebe5-b0a6-4a02-b26c-60f15dbc0708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649b0565-de7e-4ca4-8679-08323753b19d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfcd0c7-6396-4dcc-8678-d861f8db98b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9faaad-e337-4a74-a37f-13bfb64baffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501ace64-020b-4b57-a3b1-cc3e4c35ffcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef03999-862d-4775-b7d0-1c827981cdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad11cf0b-6999-40d7-aa4d-c3d01c393a68",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7547a578-127e-4da4-894b-ca567985b585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14765493-2894-4df6-b5df-0b9ecb8fb901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721e10ec-be18-4629-b657-236aa213de2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f50399-1049-40d2-b78f-8e3e28e57d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84ed86f-09a5-414e-8ec1-821d71e7387d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7aacb0-cceb-4a5f-8e87-7ee896e1fd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c248e77-e4d6-47a4-bc47-1e1cadae76ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c2d623-bca6-436e-9a1f-da7a123748eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b79d0e5-4d73-4a3f-b269-84a318741b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a6ea0f-ce48-4bff-a511-1a82ac32faf0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787ae1b2-5f1d-4050-b3b2-86dda2352b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cc2756-3cb6-46c4-89fd-60efe3b98f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79405324-bb05-4a7e-9ea5-1740541310b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c6269b-63e8-4d14-91ff-8aeb3bb000e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3aa707-e56c-4b46-9028-fa010fb9358e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fe2f59-8a28-4787-94b9-90ae56a2276d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c26e074-2404-4cf0-b2b2-cc57b5fcb30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6552c519-2dc9-486f-9a4a-381fdb6cc717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04bdde6f-61ec-43d7-8b00-1587f688994a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78197fe-1221-4e92-b728-33a9c99e8bff",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef18d81-8256-45ba-bd8b-947a57de569a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9711810-3b55-401b-804d-994abfb1b27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bbc5fa-cf41-4c0e-8f12-c9fa681a9752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b02d533-4922-4a5f-b518-f0c98f7a904a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e402b99-fe5d-4c84-a3e2-76993d54413a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d533f7f8-fe26-4498-b129-77060fb2680c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c8264b-4821-4707-bcdc-4b4bf888eb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263cb333-9e92-464a-86db-fa717f5a432c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "110950de-d2ac-4ee1-9085-efb029622635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bd8ecb-98ef-489f-a711-b71ae84402c2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e30444d-6d9e-42d6-b46a-ca30919849cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4112cbf-ab9f-4673-91f2-ebfe822ddbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d179172-02e7-4872-90bc-5e85fc866450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "691bc005-4940-45db-92cb-cb41f8f00898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7603180-7919-4c03-948d-37546d3a0da5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b131c91-7cd0-4066-8e95-80e7f805f1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bdb701-9ba2-4a78-9e0b-8227328aea5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92388e14-fde9-4294-97ba-4e3a64760e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f692921a-7da1-41ea-8ee4-957ad647fa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dba64b-52fc-41d4-91f7-dd058d635ed1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e787f4b-08e1-490b-bfc9-9276f55b4921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dd0ac0-7ac8-404b-b94c-5e35a1dae761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2be55d-65ce-4070-99a1-200bb70f8548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1e20c9-b9d3-4d6a-bdde-bf0f830ef202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88719a7b-71de-4ef8-8880-9b3c166aa96f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59c0371-a119-46e4-92b2-48a10c6e8073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af43e02-9850-4ceb-b879-174d34c29a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801aacfe-ffba-45c7-bf8d-c43f2e587284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a0cd98-6a99-48ca-9023-aba6f621cf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce56b88c-68b7-4508-a376-c17dcbc6f661",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33c2719-8bfe-4753-8cf5-b27b60580862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7615ddbc-db8a-4114-8809-febdc75891ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db7edd7-f417-4ee4-8669-8e42bc90466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0483f7b-59ed-448d-8f56-f600eca02fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7cf7a4-61ad-4f7a-ba07-5a238f43c36d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219f4572-492a-4729-9842-7ddad52c4652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04519b69-a33d-4ff1-a96e-2def22d9ec4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028bdc0f-f766-4f2f-a556-56e63e688ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83235ee1-42b3-4991-955f-820d88f685cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df701eb2-d729-4114-8ccf-4b5db667ca7f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76faa60-8bef-4be6-929b-793f482da4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6049bac-d9a4-4165-af8f-43835d8c7a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf0f00e-9383-4274-80aa-9ae018a2283e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8750f481-89d4-4b51-890a-6d138e93412a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c46a559c-6a9c-4d87-9fed-603e44339ac1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bfb9ff9-fe64-493f-941d-26b55f49f1cb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6320a7-a0d7-4bf4-9ef3-647b4fdb8c5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c15c616a-a43e-4e0c-af81-6d6601e8c132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7e0a5d-d1a1-43c4-8cd8-d4f0f7168b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "800fceb8-4882-481a-b2b3-a7a7373c588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a1278c-2347-4b77-9150-5c72eba4e7f3",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67cb687-ab86-4228-858c-742583bd1ca3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bf160afc-3edd-41a2-9c99-cfe421ba6147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96bb012-26bc-4784-bc85-eebab573eae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2501cf9-3b91-4870-aef6-8fee2eef45f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1aec504-8d30-4a4c-a4a5-c4976e1033f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70f7c4a5-95df-4866-b3a0-fcfe3af56401"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4926aa11-13aa-4b93-bc60-22a4767674c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "163facc5-952a-4937-a3e2-930ba78675e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e160a13e-fd39-4a7e-801c-4b857cc5b9c5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ecc5796-ee20-4eee-9746-ccef741c4731"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7c7e4be-b5cd-4603-8e6f-a5757248b14f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db4da21f-e150-47a6-a6fd-7a16546e8ff7"
            }
          }
        ]
      },
      {
        "id": "d4bc265e-9fc1-4d1e-9d3f-43990bb648bd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "26221d84-d1d5-4cf2-a6c5-403dd429358c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "249c3ebc-523f-405b-824c-45335604a2e5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94c3f99b-2273-4ca7-b0d9-0dbb9b3550d0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e320fc-e219-4db6-a4c9-dd9defa6b3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae5329b-a89f-44bf-b0bb-2dce1365aa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0b8ec8-c389-4225-8862-184fa1c765ec",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bc5db7-6106-418f-9e3c-d8d1dfc3eabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b53506-e29e-4a22-9c81-f69f9501a6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1aa029-e5ff-4f86-adf2-79cb57f4b5a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ae5855-d469-447c-8fc2-d41aca5cd553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51589159-de80-4a9e-88ee-5ab049963660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12c4bf-0abd-4012-ae41-e27ff47b6cda",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00cb1f7-f89d-473a-ada6-dd55562fec49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dde4ddb-3d30-4f21-a510-41a212eeb5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ae01a4-82b1-46ab-a254-1ccc15f32ad0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486b259d-304f-40e7-a7c3-7151bb6228c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f00cfe-0bdc-4e23-927d-66e82e66d0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa72239-453f-4d5b-92c2-443675fe41ff",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f662026-11fe-406c-84d5-34df5612e010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99193a96-4e90-4ef7-8511-0088404ef8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1f0226-19e2-40c3-baf7-cf662a885063",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c1b505-8b91-4c93-bf24-dad7c28e9ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82df356-a55e-4f87-84a9-e7565b2703e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d7105d-e46d-4197-a040-ce2c4e68b017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534e2b7c-2ae4-4842-a2c6-1eaade89655c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b335350e-0241-41be-b903-00320b161c1a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0814734-9ad8-44a6-a8de-661797a155bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8a712d-6e0c-429c-b137-63e3ca7d2f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60b8f21-47e8-4532-a6b9-0a61d69e024c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203757da-dbf7-467d-9288-f501f25b8193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7d4942-7116-4aca-b5aa-c694c7d295ba",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b89fbe-1593-4789-aad5-a1b6769322e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a21524d-41e3-44eb-b106-81c4b2059558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb0046b-1064-44f0-a101-0acf31159b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c300a9a7-14ef-4570-b35a-bcfa075b65da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd03a0c-eb0b-483c-b69b-6dbef6c99bd1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683b8fea-cf1d-4ce4-9b40-f5630c3e84af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "883a7b1c-59a6-4afc-baf8-bad93f882730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a365b0f-5be5-4269-8cb5-39b24ba34cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17f889c-4e7f-49a4-aac1-66ac33fe9330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19acf2ca-6e59-4c99-92e0-f494bf303de1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da900553-5d9d-4b68-97c8-a58a46e9f673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4cc32c-f643-41f6-9d8e-8a70f232d536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fabc59-bb23-4e18-8b46-06658d386091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8e1ba8-a497-42f2-b393-8767690544b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559332c5-5928-4ccd-950f-9756a1b0ba1c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fb377a-e8a6-481a-ac5a-d7aa4c050849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568d4da8-a2cd-4ee9-878d-8d8414014616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4cacd5-7130-4868-8e2e-69284e01f0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcc998e-affb-4160-b6b6-3a27f323281c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99e2aa0-6bd2-4645-b97e-dabd8025d81b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b78293a-35a8-43f6-96c2-fed44a14a678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04acb743-922c-4408-8cfb-d9d96438c846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd584b5-7ad9-4906-9e03-a7d26b9ed2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b890d3a2-2f9b-4033-9dc0-ce1c0ee71c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63d4458-d1b5-4328-8aa4-d9ecd95e6aca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93808ece-07bb-4221-978a-3e70001b9fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8091ea07-475a-4204-a6be-618b84cd3f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4551f0-dc5f-40da-88d8-0041277c48c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f69331-2736-496d-937a-c267e54dff99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ccea46-6802-41e6-9f16-8135b501db42",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba61dd6-65bb-4f28-866c-216026cbe8c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f0ad8d-0364-4229-b63d-3fc6234f3328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b655425-aef6-4a0b-80b2-f37e5d90cad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b60e95-2d50-47c7-8444-66d44fb2adf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88c9866-4c40-4556-8bdf-9992b67743ba",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72b9c80-2def-4a96-809a-8cbfd9a86be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "354628b1-e5df-4baf-9943-155e62e4a2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b087cf46-8326-48b2-877a-eea76725d647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1feabf2c-b6da-47aa-8e59-cb7e1e74ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346ad130-1ad0-4382-9ec8-25e1db0ecd58",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6352dab-a184-4f6d-8b85-0f124eda3319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9a3005-a622-42cc-96b2-fdc34d948df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd736199-c18e-4e5a-8e4c-fa93074127a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ecac917-3f3a-4d00-9057-8af302a18e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262283b7-351d-4627-b331-482b8774eda3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20d080e-9d3d-4c31-8ae6-72fbb1df07e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65bb8db-bc66-4c2c-b191-49d63cd2ce7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1989717e-187b-48fd-93e4-2d9b8ff1b334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a74431-8dbd-46c2-9e7f-24558dd96bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbe209c-3822-4088-8be2-d4afa18da797",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f23765d-56c6-4ec5-b769-760af4f2e600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b655e8c-b072-4f2e-b0e8-2b36995b6ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288e2ef1-50eb-43f6-aaa6-e5a74bb44ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7718e2-0385-4edf-955b-16569ac47c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de20043d-95e7-4149-bac8-f6a89c26e76d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57016ed0-a912-4b6d-84ba-930e34318c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b276a733-1347-4a08-92cf-dfde79318be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233daec3-4c42-4828-9805-8a058fd071db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2151137-9975-495f-8f0a-80a13c9e5629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53500b7a-e925-4be6-a2a4-5ccd262011c0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beab9837-21c0-40f4-85e0-f92b7cbfedf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d275f6-96af-4019-b402-294037cc8da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85b02a9-3810-4973-a1a8-fb241cad07ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb772987-6d31-4c55-8c7b-3c28593b023d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d026963-19e5-4d36-8f13-fede1ed2280d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ab185c-7a3b-4f32-966f-1bb8a46325c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9becbb6d-c33a-46e2-9e40-6806973a3a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa6a921-fdf4-4aee-83fc-e0993b935e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd5473f-4ea3-4b0e-9a48-3087efb6125b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73f3425-0192-4786-9824-dde750c0fafd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e24a88a-764d-4566-bc26-fb4405d660eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebf3b76-4fb0-48d5-ad37-e4901c710598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5671527f-baa2-4c87-a921-f61ccdf197af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e13b7e2-ff20-4b1e-b78a-143c6f948d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2149f4d2-d0e6-4759-a3c3-8db3dc59a923",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c354c0-3c70-45b6-8dc5-d6263ad0d757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddcda072-d5a9-4d60-a422-e806d3840300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba8cd4a-cbaf-4d99-b9bc-ae906983f95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44864748-b163-4f04-aec8-3b51da51a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e828dc34-2104-4e41-ba9f-64d2c16a6463",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c236ce-0a85-4198-a799-ae971cdeecb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bff2247-b96c-43ed-8647-0e0ca9de31db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dbbd48-7a8b-4990-b12c-63f60143e898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52962f70-8c4b-4bbd-a3aa-8bc52b50981f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a13c623-1ac3-4a6b-adb1-ec830a522a54",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae72c142-dfb9-434a-810f-dfbfab960447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bef6d7c3-ac97-4cd3-9108-b9df663876c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d93436-eb82-4c1b-b8ce-19501e409237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f73d34b-67d0-4c03-8b57-f7b4dcd753b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543bd929-c96b-481b-8df7-c81eec0eeaed",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f173df-6527-4b7d-9356-874b6626eae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b738e3-770e-4649-9c8e-bba87cb540cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c41355-746d-472c-910e-83b00370713e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e26e20-6430-436f-b95f-4d7c2115915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcb2693-022c-42ff-8d6a-1796819cb045",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855976c8-0af0-4af6-b7e4-b96d2dbc2528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3d5e2b-9565-4f18-b640-0496a6800016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff77a4bd-4765-450a-8a8f-2c6ff6fb66d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea869e82-583e-4a3e-baa0-7efdda41839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2742f1f9-6129-40ef-b866-7e4dc5b2abb7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa78afc-f073-413b-8357-c3f61039c67a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743662db-717c-4aa6-88d9-1b61a4f22130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33df282-dd97-4b07-9b9b-a87744e357a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c98c5f-fb51-43d0-8c42-24981e6abcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa96e7-eeee-4963-bc8a-509f844565b4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48135f75-3b99-465a-856f-aa00544a849a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d710bc27-7a59-47fe-a8a7-4186439ba7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c017e61-6f80-498a-bdb7-73f9a57eb9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d5d9c2-4b6a-43df-bb79-a2c2391db6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e129723-a7bb-43ef-ba13-893c2d0a5bcf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0092a68a-801e-4cc5-b1b6-20e1faa7d124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bda11fd-811e-4023-82e5-ecb9fe967c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14dcfeb-b6a6-43bb-a6b4-5af0e94ec0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ef9b42-3436-4ae3-965a-6a1c408ac7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa2e871-8672-4638-be13-001faa3a1256",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae64ad07-73dd-4cac-956d-385216888049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d92197-8bd2-49a3-aa53-cb627bd03486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127ff57c-f372-4150-b75a-94fd5be80d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02d5107-087f-4be4-b7e5-32cf5059ec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c0d968-64ad-4f72-9176-96743cf41cda",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb438222-1100-48ee-b1b2-bbd4c63eb31d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62406be2-0749-4301-926c-1fd4a1a4d832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb228269-3277-44dc-9805-f0e998552682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2d8d9c-3f7c-4491-a413-5e9ba58e4e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2416c8-bec9-43ee-85f9-984c64eba16e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad240fa-ea05-4222-9636-755d3b139875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d35904ea-c57a-42e7-86b7-815416aac744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cab9e9-0fc7-4fb5-bef0-b71cb76049df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f660335a-7c39-40e0-a010-ebf4d6b12017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf711f1-e802-4111-86cf-90eaec03adce",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da2eba5-ba93-4fd6-94a3-65313762a42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667c62c0-d53e-4e47-90ce-a96ec2c29af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c84e950-11f9-45ae-9d76-1a7f72da6245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027d1791-9404-4df7-adc8-68f8a05c7cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb5029b-9edd-4070-a790-e33415dd74a6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c100a75a-50ff-43d5-be26-86db6efef353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126f0ee2-68c3-4a4e-a6ea-20c744d29235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f17437-002f-4adc-abee-3f418f8e3dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a77d7c-ee3e-4e8f-90a9-abc36f58b4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7787ddb-9e9b-4f99-94dd-bda772d69e0d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ee801d-8fcb-42a1-b265-343feec122ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcb7446-196e-4035-bd70-ffc574a91e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f657f5e1-6c03-422f-9320-7d909a64838d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd86f6c4-b866-42cf-b005-9b1d67db792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba657cfb-8a20-41ff-9d55-23304ce37d32",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11b65e4-32b4-48da-94c0-48766cd12656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8baf6be0-314b-42f7-9649-4632f0c7aaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0d39a8-5e7a-47c2-aeae-ccba9265f115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eddc075-02a5-4553-b9a4-12ae4d7f37e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2d956d-27bc-40da-b795-919176551cad",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae13a97-22ef-4226-a165-6eca9d0f75b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93452619-b169-44ab-bed8-4aab43d5898c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4e76c1-f501-4b04-a8e4-42f67754465a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226bda01-1927-4cc4-9c1b-6800c110ff5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa094e2e-db75-4682-b536-59b4b6e45788",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e0a643-1dd8-430d-bc39-0ccd4c668976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f538b3a-ea7c-4b33-bc1a-bd68f17042cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841a38eb-2adf-4673-a92f-788b4bc229a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee4c510-546f-49ae-95d7-b932d14fc7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f14548f-3f13-4da0-a0fc-6cebb91705b5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9468204d-685c-4e73-955b-32b2fef31f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bafe007-d68a-45a8-88ce-bc5d0742e1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200a1aaf-26da-457a-a933-72bc521697f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1da8b41-a4ee-4be3-9ca4-2afa1b3da781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0286e1e-cf42-4039-a05a-f42174ead029",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b506d2f-fe19-4f4a-9408-5faf415ad47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0c8ee1-db1f-4b3a-ba25-f50a50725556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a14744b-e533-4426-9d2f-f5049b784add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdddf776-53e6-46fb-a28c-02c92ca41db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05f2462-d158-48b3-905e-391b69e03380",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c2ff60-9554-4e7a-9949-0c76fa4b2b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0607ca-b59d-410f-8858-96d0e850aa59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba33683-b9f0-49d9-b046-7544860ce852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233443f7-06b1-4034-b9ac-1c3dc276a90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10193b6-cad4-43dd-9dcd-800654521f93",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0a056b-f38a-4094-9896-7cadf5e957f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3073cb6b-6c5e-4d3d-9e8e-526c79d3890f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30466fd4-7837-4de1-b63f-ca111aaadf11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69dc3fe3-e664-4983-be52-6fc28477155f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440c9b31-ca03-486e-a9a9-9823aed6116f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e7bb4d-5c04-440d-96cf-9e33744f18ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d671df98-44d1-4d99-beb3-85e8e911b75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f593faee-7c32-4e5e-b091-c8b1432d3276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaa0467-e0ff-458c-a98d-bd4263959ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2062fee7-0743-4622-aaf4-b772a56b2241",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4effbb80-ab7d-4b20-a3a6-b1805a10ff9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230d7626-2687-4500-91b5-037b1f217254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f736c247-afaf-4671-8fef-98162c5e9639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a24f029-4013-4054-967e-50eb880ce76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c178e77c-8a24-4be5-8146-d2c1b04d43df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296883cc-2c38-4d9d-8238-a366b8a04f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f402f8-bba8-4ee1-b4d6-0f7e048c3581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7d893e-6414-46af-92ad-0daaa89a9d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427e6ebd-586d-48ac-b121-658d00d65100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54702f98-1a18-493d-af9f-0a4857049998",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac1e215-611a-493b-bdda-d3001bfafde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf03bcde-04b6-4ac0-8d6a-6ea4e6c13e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0e40bd-2d48-4d61-81d9-f3f1682d8c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f701a4f-d5cf-41fe-8a16-ad56c5f30baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bd4d60-7ced-47f8-80de-d420fba5db7a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ac8aa3-dacd-4131-a1be-d9154e99669b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423626e0-a833-4b2a-9c70-8a65bd60515a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f10b770-cd8e-411c-8b97-e3969806cb4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c15b4a3-474d-4858-bde8-e08c0f9b5ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e69218-bb58-4f3c-bf26-705a38af7028",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cad02c1-a899-4fb4-b8e2-cff0dd54612c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361081fc-99e3-4883-b719-e4e96799db6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d0b76d-4f83-44f2-9073-11435fa526cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b851d379-0c02-499a-8cf5-8fa60dc29f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198b950f-9d07-4d82-85ae-7b9e13e6cee8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9c4767-6afe-4255-a6ed-60c3ed83ae88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819ec40e-15d6-473f-b28d-11f91d052bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06196cd-eb9e-4262-af64-0cd8fb5dc798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e220910-f343-4361-be98-342ff3d81d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8663548a-320b-44ac-8bcf-29cbd6a6f460",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda51b49-1f78-4aef-a9a6-347c4de9a363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069cd50f-fb71-401a-8182-85d8944920b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d061a09-8ee7-444b-8308-a1c66192a026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146a5223-dd84-4052-9a43-ee4fcab49ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b7b36c-ba95-4dd9-b9e0-469d7387dc6f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8c31a4-60aa-448c-89b9-62128b629ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0801e5ae-e205-40ba-a8b2-6561b6c62936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38647a58-2e03-433c-b4fb-b61493c50ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63fade0-e6c9-46a4-9437-e7c62588dc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baeb86e-39c3-47d4-9dc5-e3399a279436",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6ca648-a3de-43ff-a076-216c2c944d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd689239-5d6b-44d4-9242-19e3690d446f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6804c3-9090-43b6-aa16-616f896ba4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f710c1-d6dc-4455-b842-3fa6c518c9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2a4fa4-964a-422a-8bc3-d3a743796ab1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23c7347-c907-4c22-8dbe-0ae96e83b5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9b4b62-d242-4d07-8dc2-8d8eff236ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7ea049-dd13-49ad-9c37-5b42b421d510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381aa795-df88-453f-b78d-fd17c7ca8c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d65af4-4dae-4837-93cd-a82df16885b1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568438dd-e2b2-4131-aff2-66518d875179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907d71cf-3f11-43b6-b4ee-7514e1652fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847f5fdc-a255-44db-95b6-f8a6e97fd616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b70be8-1df5-47eb-a3e2-36c42ab6f402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911f05d2-849a-4700-91f1-0629a1ba1dc7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1697c0dd-dd9e-4d76-831b-d56ab20ea3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b3e9c8-c6fc-4c7b-afda-e0577a7279b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea1838d-d8a3-4c37-a8f8-7a2f6263b0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bc26de-8370-4c9f-9f2b-d0953aebacb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9056a366-f071-4b79-825e-f35a3badbf97",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c937f73-57cd-4261-919c-9027011c3294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85e6915-4740-4b1f-82e6-0f971fbe5341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac5d053-e839-4689-9240-413062f6a079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1591ef2-46e2-4ff1-b3c9-7f03ab77e379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f59494e-dd44-44e9-8dfd-f486f8adceb0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6869e8b-44b5-4108-82ce-ce91f90fb665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b851ac-667e-44d4-a261-60c7f5593872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da17820b-b895-4b6a-9563-8715fc37036a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9570d2-2e15-4748-a516-ad8a0cede74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3174a4a-9ad9-4881-a5d1-d4d3c7abd4d5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd528227-0303-468e-9725-866dc079c4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44cf2a06-367a-43ca-85e1-3bc85d0b4de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd002b6f-bbf9-47f3-833b-2ed193fc6ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7370b0-35b2-4247-bfa2-dd5c2e1fc4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd32bec8-3f51-474c-8b36-5158c54110e6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4028034-1d92-4b26-a01f-94e9a0d9a582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e332ad61-d82c-4e33-abd1-2839525d3fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce1eb60-5237-41e7-acbb-df73e9b9672c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b628c93-e4fc-4474-94bf-12dc9c439141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52174cb0-e7c7-48a9-a4d5-dd36467afb9d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8322c0-c045-4739-9843-c3b7919c204f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da6c818-5b57-4f0d-a34e-6ee969311277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f59a157-b4f7-461d-92b8-6c20eba893d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80dfb2b-dd91-4540-ab44-8ebb4735abc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d163ae97-4de5-4c98-b42e-c234aef86fd0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62820033-2c21-4a92-b597-f2cff6de307e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e13a65-9a7b-4d07-97ef-5d92c0f11a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f3aac1-c777-4f66-b7c3-09e50dd10f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c13e696-96aa-4c82-a7d4-b0e946bd60d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb214b0e-4293-439c-aaee-381ad9642490",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cc06d8-3cbd-4b7c-9620-e51a51931695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "778428e2-6abc-4f92-a7eb-da9ed9a7992f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2db6f8f-9dcc-491b-b16e-5d784b3b87eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5034e12-9ec0-4f2a-aa2f-3731646db968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8479ba1a-a2e3-4763-bd5b-65281edf502b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ee7e4b-8bde-4508-b696-c830c31f631c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8ba619-6330-4321-bcce-84f3ee46f63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c9880f-436e-43ee-aabb-8d975a198ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191bca5b-66ff-4c4b-9637-a5ef2ccc0d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39281c85-b648-405a-a934-b511cc2bd19a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4cee33-fd0b-4bcf-be78-d44fb1d407a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6851b4-cb4d-46b5-9ce4-2dcf05255221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f5bf36-0b93-4b9d-9fec-8f61da40c290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0ca185-164d-4e73-b425-05d22b753b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cf15e2-b783-41ad-a71b-16c286ecc901",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cd296b-4d1f-4e5a-ae01-4ddb916804ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b6c593-2d0c-4943-942e-2a2de78900e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0843ed-6338-4f16-ac5e-0533e1d51525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e00d1e-3142-44a0-b5bb-c681c08587fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3183a55-12a1-42b5-9cbd-6fce431d57b1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06235f0-a0b7-458f-9b4d-2c46e54f4a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c81f8b-d4b4-46fc-9383-6164cb7d2473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4f8f2a-245b-435b-934c-9b0aed6417a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81840bb8-c9a1-4338-9667-14b1f684a061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932a83d4-1ff2-42a1-8a5f-315add58c02f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90aa08f7-c34d-4eee-89ef-f843da1eed64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f6fb842-4e29-43ee-9702-c7be2808122d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931ad753-d4c3-4370-9a63-0bb927614ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2639054-3d72-40b1-896c-023d1c7a2de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62b8141-286e-44a5-9e28-5886efd455d0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80448b84-b824-4e1a-9547-27205ee1de85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29febf27-e247-4f8d-846b-ec708c25bf39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf0b5c5-9db4-414d-a41f-88bf0e1c5848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596f4f1e-1c00-4c6d-9a70-da2194ea3336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2149e58-a35d-4fea-ba44-da763bfd30dd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd80a667-9059-4bd8-9331-0f3bc5aff054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41a1a44-9dfa-44e8-88de-5949e1645c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac97540-a47d-4b4a-abf1-48bb6139f227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957adad6-ea6c-49d0-9374-9c8a04e10460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e6b1a7-a5ba-484f-9f3a-4e2171cf6bd0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79aa0399-2b01-485e-8567-af462442d019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7dc2864-aa14-4b6e-b79e-f98bab21bd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eab117f-2c17-419e-8a95-59f06fe1e28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf728be-e3a0-46fd-a228-abbf202eaa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db86176e-975d-4182-ab4e-d6900d2156f3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686881e2-7c56-4ea6-81b3-8101971980d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dcca594-cba9-4bb2-8df6-272e28c30dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6e6b87-930d-4dbb-bd8d-9a13edf5c82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab9e98f-d345-4a29-92c3-18a1bfec265f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ede76df-551e-4cee-9c1b-f6dbf34a499c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1bee6e-dad2-4185-ace0-31e1a5db585d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9053faa6-1508-469c-98c4-839a098eb8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40386053-4092-4639-9080-d7e1fad0a1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f82b283-bd3e-4dcb-ae39-231bc1624aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d747b68f-e72b-470f-a593-bb338f7db02e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600d6f22-75b0-45ac-89db-9a3acebf86aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3c7dfe-c4be-45bb-8c74-0e78e3d6d1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1684bfc9-e5a5-462a-96c5-78477d255da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d73bdc-ad1d-47d8-95e4-bb0a66bafb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aea4cce-a0ac-4d84-aad4-85f35bd20495",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfb2d58-cc71-4b86-8f93-cd3ed97853b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6f5c48-d145-4d3f-b093-a4064b6cdf0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118191f5-d8d2-4a3e-82ca-aa1b546e0ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577903ee-1865-4beb-9261-dea1abeedcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550559a9-bfb8-484d-a633-778658235806",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e13d89-d529-4d6b-b251-908ca5ab3cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ddbb88-bc88-437e-ad6a-9625c6dbd593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1291c451-16cc-48b4-b6db-ca1a35fd0d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0520b480-d4e5-4c36-8653-b2eb569099ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fa383c-0c4b-4a68-a659-d16d05c35ab5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eea2099-e95b-4fd5-881b-984eeb123d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee942baf-eacd-4286-92bb-5c331e0d1c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5a7df6-74cc-4d23-925b-f1204f49a085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78018e9e-eca3-47bf-b47a-31231ae83acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5671ae-9832-42f3-9b62-e73a8c618a73",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe342681-94c5-4a47-8ea1-8df605fe7173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41847935-e871-40e8-904c-8c703557edde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68255dc-9809-478f-a7c3-26eba0617d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a78d560-fed2-4e2a-bd22-b5eab9abe288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa7167d-5c47-47ba-bf28-eb70b70cfc76",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1eed9f-e98f-4dc6-aed3-1f358bdc3e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de230e12-6294-46df-98ad-80d545a4e83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae93b6f8-d4d9-4330-9ccb-3ce42659e31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d05f893-9b3b-4fd6-92a5-46b2bde017d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da5fc1b-3d31-444d-8e6a-e879b0e02011",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7144e2b-dca8-4978-a192-05c21749a53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961a22dc-a7f1-4065-9de7-4d64e2e6bc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d351bc04-6770-4c63-a570-74834bbfbc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ea990c-5eb5-4614-aa00-f540f4631b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a7265b-5f36-4da5-83b1-ed58536e7fff",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f84d2d-0720-4c23-bc4c-9c6010e2a9ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ec108c-7be4-4f93-bfce-3bf20f3b2752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bae124e-8e96-47f9-93af-36dc3374f03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7efbff-976e-4e2a-ad60-fe69680fe4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de64a2b0-d818-4621-87dd-c07fd527f3e5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b759d0-4ffd-4c0f-ad04-58ed46e90173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "790beaca-4cdd-4872-bed8-1b0f1a64b3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ee9cdc-244a-4a0b-b37a-7844d8f6f86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6f10ff-e23b-4a8b-bfd7-a9ad1c5d7e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bb6b8c-76c0-4e1a-872a-1ea68a81c32d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a8aa4c-34f4-4e15-a2d1-9ac8f300a27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e56fff-c7dd-46d7-864f-fd518005dc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882745e2-a53e-432f-8f41-58601dc64b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c67b0ca-0d5d-4b88-a9a9-6f877c5fde28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e6e138-ad7c-458b-89f3-6d28f933677e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420daf35-6d72-4367-9447-e0c627db412a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f44d60d-a2a2-41f5-9329-7a05f830cd4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bbfc17-40d8-48b1-8033-295385db87b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5360209-f364-4afa-9602-5f0fcf3717b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b398857-e003-49b0-8145-3bda2390db37",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e62bb0-4b3e-4765-9fd6-231d085f751f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe5b1c3-57fc-4275-b134-63d8d04d65e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786d4a9a-eacf-4a62-baa5-624ce68a82b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb252ad-d95c-4bcb-8b38-f4c49d09e2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7fb6ce-e4da-483e-b746-6b53e7a9afe3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d243066-0240-4f88-8fe7-2832fcea0e85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03b4fc0-4565-4899-a317-f02ee36a7573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfecedf-194a-443d-b11c-1a617e94a2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd224f7-2b97-4b00-a75b-175e291cdf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e1bf0b-8b10-42ca-90bf-7e445c2310ad",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587c4962-a595-451b-86c8-921ca5b8aeef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7766d83a-3b0d-4ec9-9075-aaca87272d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54860c6d-5111-4839-b5ec-a765edccb0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbe95e5-b286-480e-b7b0-05489f339da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724a4cac-c666-4f20-9d6d-e4d1a9331282",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9920f60-2ae8-4779-908b-1fc04d70ace6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c2de08f-d644-4532-a5ab-2addcd2f3c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4718e1b7-c815-4ad5-8fec-ee442275f37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8e29cb-d1b5-4456-93c5-ccee7afcf246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177e4819-e81d-4ea6-8f52-04d5e4bbf9ae",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebab9604-1ecc-4f5e-89be-f6b34a8e4d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e8508f-5f15-4245-9129-0c223a56ddcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b427391c-d829-4b61-bf48-78d21f3234b5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59aad27e-6bf7-4ff3-8fee-7ca134c66018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f536f6e-743c-40a1-add2-7c851b588d88",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d887c6f9-3bc3-4b07-9ba3-468f25ab9e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bea096-7f2e-43fa-93fd-2fb9626e8681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14c73f2-6582-4c19-b80f-1e1543280db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd082fe-8d5f-4cd3-ad36-c7722f5869a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453dae3a-5868-4201-a7b0-5b40e41ef001",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d178179-8f6f-4956-a5cc-62bc4212aca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ebe9f4a-cdb6-40ca-968a-9c59e09a058c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c905ba-5b4a-4446-a6cd-d769aa704595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac04766f-f4f8-4ca6-a8d7-bf428f2563a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23adcd77-b787-4c36-88d7-de04e6961bbc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fac5a39-1b4b-4aae-9ca8-ec72e045862e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17102897-938c-4969-a580-72684c27efc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc126dc-f1c2-4a18-9fe4-9148cd43f993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e7ba5a-bac1-443e-8c46-0d69f05fdcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa824ba9-825f-4f06-8b09-71a6b0261047",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21de2ddc-8144-4823-b7c2-87353a82eff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47fbd1e9-285a-4cbd-9eaa-e4d2be16f80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf0ce58-1dc3-47a4-b113-efdfb19a20eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd96dc9-0d4c-4022-ac1e-4776f037bae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598feaa1-7e9f-4c32-9824-bd1a12a826f3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c8e004-2fb6-42e4-9a3a-4c9c4d4bbf49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c734bce-07d0-4443-8935-2fe9f1a1ca20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9206cd-e7c2-414f-9a75-9168668c4798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03f47c8-8d8d-4e9a-8761-896a5af9bfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118a093c-39ff-4aa7-a5df-e1a95a6e3049",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69282dc-9c05-4de4-8a29-71eaed79477e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4472e87-2ee6-4b23-9ceb-3d9fc398a112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cef795c-744f-4d2c-991d-7117c8110633",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e012a509-6df4-4c72-93e9-8d9c8d731fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19dd958-4be5-430f-9de6-42dc1b9a3f0c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8a7451-0864-4de5-a30f-10f94c8a71f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec9e3a8-a3ca-4e15-b98a-886c1150b0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86fe2bc-0345-42cf-8c48-7ade7472af64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b6c6af-af16-4496-a152-269269e95a3a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcb9fc29-8d4e-45e0-b8fd-8e1d1a99687d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac841d66-2e61-4c1e-b304-083e46db0e1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ef0c713-814d-4de8-851d-5330601e3c9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b85ff502-50e8-40ec-bfe6-588563555ddd"
                    }
                  }
                ]
              },
              {
                "id": "13ee51b8-fdfd-46b1-a566-a3a01412fc9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b5693f8-859f-4345-9efd-c582626e1780",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85fdea3-97d1-4180-85ca-cb080c8bd893",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f816c339-cf0e-4a1c-96ba-d2a1bf1d7a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c50744-ceda-43d8-98eb-1a8272af9697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4ae8820-581c-4397-87c5-5d5e2eeebc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba4a6b3-ba65-469f-abe5-52179da7dfff",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba59e81-a1a8-47e0-84b3-cf0e38e0a824",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "455420a7-5ab0-4e15-912e-b55cefcfe10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a726efc5-8ee4-4a01-8c16-888b29046312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4e58e1b-1077-4820-aac4-6e889fa945b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f671369-454b-4a7f-ab6c-52b8c5976390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2020c36f-59c1-4c52-bb77-0e52515b4c3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c30224ae-a5e3-4980-92fd-e15e09431b28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2735adb-6753-48a9-b7a0-3ca0acaf1b46"
                    }
                  }
                ]
              },
              {
                "id": "4a0f5b34-fdf6-4f9d-b081-3144814d031e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "860e82ff-fb09-401c-b6d9-5acd41915d63",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab93bb2f-d30e-4597-8e1a-1286388e49db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "81e422fc-4197-4830-8385-6d4a26158269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d101bbe-befa-4f1d-b402-59b7b7b4d330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c454ecd-bcc6-439d-a09c-d6617d0c2811"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f27f7a33-1047-44f0-be02-c1d07339dc16",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8079e046-3857-4229-8f20-aa7fb1db1f5f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe62ff00-b48b-4e7d-8715-4109c065856f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "86174854-f196-4aba-9e3d-9ecb1e101088"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be878c84-30e3-4536-b38c-c73e933469e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73b9c50f-7f09-4ad6-8b52-582b3ca37ee4"
                    }
                  }
                ]
              },
              {
                "id": "c1d0332d-ae2e-4390-afaa-30448c945bff",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a783068d-5244-471f-8588-5ddb020128e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c1a3b5bb-5b73-4645-9cbb-87659b38b942"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b85f72e-e650-4c3c-9f34-5163d91560f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c27fb1fa-e940-49d3-a06d-39c422ef981d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "583df16d-b719-432f-b71f-0714ad1d7b15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b1ba3b6a-d3c9-4f7c-821f-ccebb5fd3aef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ff5ff8c-5e44-4357-b7c2-129713698b21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f8508f4-530d-4db0-9e51-72f8ff9b2965"
            }
          }
        ]
      },
      {
        "id": "f95a1cc4-630d-413d-a544-a00ea8cccf2b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "852043fd-1cc8-45ff-bd88-1670c2d22483",
            "name": "Negative Testing",
            "item": [
              {
                "id": "492cc9a8-804e-4e2f-b47c-a90187c4bdcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3748e89b-0dcb-414c-8f8d-04e2b3223713",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5745df4-38a7-4cda-8a13-18f1a5bdfa3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b34a956e-df65-4a98-98bc-1f351d1af6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019a2eac-ad2b-4b40-9431-7e73421394f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6cc80d6-49d6-4b00-a2ac-3f6fa5eab0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f65462-7213-486f-9865-d223a4d35ce9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d48fbc5-13db-4ad8-b019-8e3160aa47d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6e152cc0-5312-4bd7-a7e2-61f6aedd345d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24be4e2-c031-4819-a593-24a80ef21ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b596d34-8b44-4159-8699-cb77328e5b2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99632af1-d227-4f4f-b728-0fb7fb3a879d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7595591b-5a1a-43bf-90f6-814dddc64e67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b00ddff3-118a-4a90-8209-7cca4d2d8950",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8bcf116-59bd-4d02-b5f2-537da0005193"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1a3575b-a9e4-4457-91d5-64b625359056",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3a0da568-e9e4-4133-a9f1-d180f4efe6bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca01e0f9-8957-43a4-b4b2-f350fea61e42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "489f988e-a06f-4075-9de1-143d9df4f492"
            }
          }
        ]
      },
      {
        "id": "d2c4332e-9f13-4355-8d12-c7da33518fcc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ee278db4-5eeb-4c69-8308-2234fe2e0337",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae8ce445-1864-4d14-ad6a-d80d9dbafc59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "912e44e0-431f-4833-aad4-c54719697c0c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee51a160-5882-4a41-8744-27fd47f6ace7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7748daf-ab21-43d0-a476-22fab7d82c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f430f77-c774-4cab-8f05-f296212b6405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33a7e7a9-4c35-474a-846f-de3ee35f73d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a252e883-f628-4e19-8769-7d7b93f3e89c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0751fed0-e62e-4e55-88d3-426522e9c8bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "82feb9d0-65b6-40b5-9ba6-8753712e91ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5951e4c5-f646-40ff-9d08-91d9fcc5d11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d479f647-9de3-468a-83c6-f041deb00b1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f543f044-520a-48d1-ad3a-efd4e30fa996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7e543a7-a705-4596-a9fb-2715b71005fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00cb534a-ecfb-4569-a1fe-541d051c2989",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19c3de13-f1d0-4a9a-921e-29ddb079d01a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bf607e5-3322-483e-a303-13ff84728a71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d83546fb-d68c-465d-b7e8-07548f0df4cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7100aff-e288-4d76-8ddd-9e97bd61f3d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a957ea9-16b3-4c3a-86d2-a7792e318f01"
            }
          }
        ]
      },
      {
        "id": "5fa8a0f0-7230-4c71-8919-22b55ef29865",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ab0480d2-1bbd-4c0e-9fe3-9efd3a0a15e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc79d2cb-220a-444e-9260-0e0bb09912dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b17deb2d-80b2-4d5d-87cc-3ac70a5ec70f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2f35f7-29fd-4a4f-916f-dae7b35538d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1e1637a-2095-4304-9b5e-6c34443488fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d5fb72-adc9-4bfa-a4c0-7b507df87aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4177b711-fa30-4f8f-91c1-6e94e9b56c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a35fd28-39ec-45ec-a0fe-333b6a76188d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1474ed-ac73-486e-bd59-58e6951d6857",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "93ea5e37-d51f-4e83-b248-c55515d84c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fae608-d71b-4a28-9e6b-e4c68946adba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b1492c1-32f4-4c49-b92b-15b83377c7f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f361b8a-6b40-4c6f-8180-1c877ab28b72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf65c9ab-c013-48f1-abe1-9eccc6185918"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ed03d52-aa4c-402e-80a9-57715d6e1bb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1079ebed-a88f-46cd-8371-327c857e89db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b267a9c-ec7b-4e5e-b58a-bcc797e2b1e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "450e3e58-40bd-4502-a61c-9de6278a685e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b03d1ae1-f5d1-4a7f-97e1-d243031e0377",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66405462-4db6-4dc8-95c4-1bd16833a51e"
            }
          }
        ]
      },
      {
        "id": "401b4a94-5b97-4aca-b667-660f9becd5c8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bae3b2c-677b-4cec-8bb8-cd5a07638d3e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2c5d047-bf60-4646-9895-2fe860620f4e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fe9474cc-96d5-4b5e-b455-718aa79b95f7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8a80af5-d1ba-4967-98ad-2a1b8e23ee3c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12351009-0ccb-4980-b762-48489e77344a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 58.93050193050193,
      "responseMin": 21,
      "responseMax": 307,
      "responseSd": 30.69332357538491,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678408913110,
      "completed": 1678408939037
    },
    "executions": [
      {
        "id": "ded15c4a-baac-4ebb-8c68-9911f86ae9d9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2669bdc4-c9e1-4df2-a517-28897203ffbc",
          "httpRequestId": "9b4977e8-3b39-4974-99a3-9cebafee11f7"
        },
        "item": {
          "id": "ded15c4a-baac-4ebb-8c68-9911f86ae9d9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "73d33943-4c1d-4bed-80b6-545ce026beb1",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "9c61d0a4-2f0b-489c-bdc2-95b77f38565f",
        "cursor": {
          "ref": "afedd490-de0a-41bd-80bd-d8a0462f9889",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5c801182-4ba0-4cdb-b916-210672ae5ac5"
        },
        "item": {
          "id": "9c61d0a4-2f0b-489c-bdc2-95b77f38565f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "842196a1-23c5-49d9-832c-657eb3b63e0e",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "d06dff7c-ea9d-40a4-aa5b-3a83a040c340",
        "cursor": {
          "ref": "843b6107-22c5-49c2-950a-fd5cdcc987bb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e63053d4-e44d-4f9e-bea5-236ed8a4cbb7"
        },
        "item": {
          "id": "d06dff7c-ea9d-40a4-aa5b-3a83a040c340",
          "name": "did_json"
        },
        "response": {
          "id": "53527efa-a8e3-47c9-ba4c-c16bf211cfe0",
          "status": "OK",
          "code": 200,
          "responseTime": 187,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a69f96d-ad8a-4769-9df7-15d5277bf266",
        "cursor": {
          "ref": "ab41dbe5-f50d-4cb7-b003-20b41ac6b136",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9dcaffb2-860a-44dd-a6a3-54d9cb942c28"
        },
        "item": {
          "id": "7a69f96d-ad8a-4769-9df7-15d5277bf266",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c484390-0bdf-4c99-9b13-aedb24a1d008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a69f96d-ad8a-4769-9df7-15d5277bf266",
        "cursor": {
          "ref": "ab41dbe5-f50d-4cb7-b003-20b41ac6b136",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9dcaffb2-860a-44dd-a6a3-54d9cb942c28"
        },
        "item": {
          "id": "7a69f96d-ad8a-4769-9df7-15d5277bf266",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c484390-0bdf-4c99-9b13-aedb24a1d008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03018925-f2a3-4a82-a44b-71ada0422d24",
        "cursor": {
          "ref": "d88e2b66-b467-4c24-b40c-bcebc8885651",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "47571944-c5b9-4a45-ab01-0b9d4a5a943f"
        },
        "item": {
          "id": "03018925-f2a3-4a82-a44b-71ada0422d24",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d1df7a3a-1b4c-484f-80a0-41df738b7bfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 92,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e90f7f3-447a-42f7-b836-5e3317d3cb72",
        "cursor": {
          "ref": "04d78589-bf1b-44e7-9aea-4f26fc0f3937",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "70c403c2-a61a-4a57-8a10-f15dc2087441"
        },
        "item": {
          "id": "1e90f7f3-447a-42f7-b836-5e3317d3cb72",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1f17fc01-eb9a-41ea-abce-7bf0e2518d11",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9496935-aad4-4599-bbc7-c06b9c124494",
        "cursor": {
          "ref": "5e7e0f76-4bed-4f11-987a-8b3e5af6ac49",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "593ecbb8-0fd1-4abf-9296-6570ddd34dc6"
        },
        "item": {
          "id": "b9496935-aad4-4599-bbc7-c06b9c124494",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bccba353-fde8-4fa2-9d61-dc779110aa0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6f120f-6586-421c-bf66-339c3c3a3639",
        "cursor": {
          "ref": "22ebf5f9-7265-4e85-8bd2-db4b7e5f8864",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d1359e35-f047-44da-ae59-88362a6c0a48"
        },
        "item": {
          "id": "cd6f120f-6586-421c-bf66-339c3c3a3639",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e3a24e8e-c8d6-4332-ae38-9f6ca590c6ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 52,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6f120f-6586-421c-bf66-339c3c3a3639",
        "cursor": {
          "ref": "22ebf5f9-7265-4e85-8bd2-db4b7e5f8864",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d1359e35-f047-44da-ae59-88362a6c0a48"
        },
        "item": {
          "id": "cd6f120f-6586-421c-bf66-339c3c3a3639",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e3a24e8e-c8d6-4332-ae38-9f6ca590c6ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 52,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57fa511-17c9-46dc-8685-7932bdc2a89e",
        "cursor": {
          "ref": "db64c3b4-a07e-4043-9597-996a72b8c539",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9bc45289-ee64-4f66-9aef-3544a9f9f63e"
        },
        "item": {
          "id": "e57fa511-17c9-46dc-8685-7932bdc2a89e",
          "name": "identifiers"
        },
        "response": {
          "id": "f319f575-886a-4b45-965d-1ef7fe539a99",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5601fcd3-4359-44cc-9681-0f7c01655030",
        "cursor": {
          "ref": "58280fc8-88aa-483e-bde9-55ae68976f65",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f7df414f-7ea3-43e8-9ea1-e9f95f4e5d84"
        },
        "item": {
          "id": "5601fcd3-4359-44cc-9681-0f7c01655030",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "03526c9c-abfb-4a8c-a9db-c26ed9dbd15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5601fcd3-4359-44cc-9681-0f7c01655030",
        "cursor": {
          "ref": "58280fc8-88aa-483e-bde9-55ae68976f65",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f7df414f-7ea3-43e8-9ea1-e9f95f4e5d84"
        },
        "item": {
          "id": "5601fcd3-4359-44cc-9681-0f7c01655030",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "03526c9c-abfb-4a8c-a9db-c26ed9dbd15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd42466-e648-43e8-82e6-35ebb2a978a2",
        "cursor": {
          "ref": "4657272b-fcc2-4209-8a94-b9d04faf0529",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6a79b68e-781a-4189-9916-951b1aa5dcd6"
        },
        "item": {
          "id": "dcd42466-e648-43e8-82e6-35ebb2a978a2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "569ce3b3-c3bf-4fc8-bbfa-2f944258f051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38320d5-7c3e-4c4e-bf36-6571b1718e8e",
        "cursor": {
          "ref": "f1bd03a2-473c-4122-b0ce-c13ffbf89e09",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1616b5b1-365f-42b0-8810-340656b1d6cd"
        },
        "item": {
          "id": "c38320d5-7c3e-4c4e-bf36-6571b1718e8e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "07c54459-8f17-45c4-8f4d-d80da4c09717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359585de-748c-4982-beda-ad82cdd89b72",
        "cursor": {
          "ref": "b8e21f89-26e0-42fe-95c2-564bf7448e43",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d0b437da-80e1-4a52-90d5-149b1b9ad42a"
        },
        "item": {
          "id": "359585de-748c-4982-beda-ad82cdd89b72",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c7b607be-e69f-463a-b2ea-02d492973d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86eeba09-f1d5-4fc4-b22a-1c66c3e751ba",
        "cursor": {
          "ref": "f20d501c-0f0b-4778-b0a4-3fe3d5feeb98",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a6b27939-3efa-481a-971e-95af1b4c11fc"
        },
        "item": {
          "id": "86eeba09-f1d5-4fc4-b22a-1c66c3e751ba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "48217084-ccaa-40dd-a1ab-0343e2625407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b77654-39ce-48ae-9d0d-0c9a044152eb",
        "cursor": {
          "ref": "4d453fa9-34d7-43bc-a108-7f57a7bd2a86",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eecd46e9-6854-448c-99d2-f6c2680574cc"
        },
        "item": {
          "id": "b9b77654-39ce-48ae-9d0d-0c9a044152eb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "56a2c2c5-afe7-4866-91f6-c209bbd5fe28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3026f7-2409-4663-b887-e41d9dac223a",
        "cursor": {
          "ref": "ae4414ad-66f5-4c30-8e17-a038da59eee0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dab1b3df-e6f3-41d6-850d-b6f02540cd11"
        },
        "item": {
          "id": "fd3026f7-2409-4663-b887-e41d9dac223a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7bc199c8-007d-488d-a698-2d643f908d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cf47bb-4c61-4468-9208-b4989582b13d",
        "cursor": {
          "ref": "ae50bdba-d8e9-4ae7-8d41-41527478d0ab",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7a4fe13f-cc5f-4e90-bda5-3210e112cad0"
        },
        "item": {
          "id": "19cf47bb-4c61-4468-9208-b4989582b13d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0dfe7695-edc0-4cf1-b540-17c280b18774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0f9859-a89c-4988-90f2-70520bb2624b",
        "cursor": {
          "ref": "aad0d6ff-e4ce-47d1-ae4b-94d8f983780c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c59db0c6-8b38-411f-8535-26a05441ca08"
        },
        "item": {
          "id": "0b0f9859-a89c-4988-90f2-70520bb2624b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c3fca78e-b812-4838-af5b-645e9a594109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6343cd-312e-4834-988f-6d81fab49c05",
        "cursor": {
          "ref": "09ecc80f-9132-489e-8bd4-f4111462e595",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8b9f4073-adac-49c6-88a5-627e0204717f"
        },
        "item": {
          "id": "de6343cd-312e-4834-988f-6d81fab49c05",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "733986ba-16f5-404f-987d-07b33d4074eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe90d05-30c2-4e0e-9a18-64a00bf37f5e",
        "cursor": {
          "ref": "e6ad81dc-9cbf-4ddb-80cd-e5d217558777",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aecbe8fe-2ee8-44f8-96a4-6b8a638e8257"
        },
        "item": {
          "id": "8fe90d05-30c2-4e0e-9a18-64a00bf37f5e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8bc0a9e3-482a-403f-9fea-66441e3eaae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2bf6e0-6c71-4c23-9506-866466a93577",
        "cursor": {
          "ref": "1e084622-4571-4127-9a5e-7a2778b0b07c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "81aaea9f-e8fd-4153-bc6b-e64b6b9999f9"
        },
        "item": {
          "id": "cd2bf6e0-6c71-4c23-9506-866466a93577",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "221ecbfc-efb4-4a4b-8cef-56825f4dc2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e92876-aab0-4f57-b79c-42ebe55f1d11",
        "cursor": {
          "ref": "173bbc6a-c30c-4028-ad8f-aed7a16f0491",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "040afcf1-0d92-44de-84ad-e1e5b0206352"
        },
        "item": {
          "id": "86e92876-aab0-4f57-b79c-42ebe55f1d11",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3e97af9f-2f83-46a5-a072-719cef351a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9191db88-96a6-40f6-8f00-419c6ec7aae6",
        "cursor": {
          "ref": "c6b8d336-489b-4b1f-a29c-f207ded29ae5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d59223f8-eb0b-417d-aa8d-1967ad87ab37"
        },
        "item": {
          "id": "9191db88-96a6-40f6-8f00-419c6ec7aae6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5e34a0c1-5313-4892-8cf8-33d69685951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b11697-4e8a-4366-bd27-c2bbdeddbbaa",
        "cursor": {
          "ref": "b8279dc8-9e1d-4311-b255-1d610915de84",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "225273e9-f2c0-4cd6-a8c8-e3737c29c249"
        },
        "item": {
          "id": "27b11697-4e8a-4366-bd27-c2bbdeddbbaa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ea40991f-995e-452e-ad1c-498783064706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1169ac8e-6d84-4483-994d-75e9e2e2406b",
        "cursor": {
          "ref": "7f652616-cf29-47df-8ee3-eb6c10d9d8d2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b4b3b480-2b69-4bbd-8959-56f63865ed2c"
        },
        "item": {
          "id": "1169ac8e-6d84-4483-994d-75e9e2e2406b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "001141f6-134a-4851-b031-79754b414aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78b8f97-d8c1-4f19-9066-2a9394547e71",
        "cursor": {
          "ref": "c927731b-0511-4bb3-8625-ad774adf03e5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ad924c6b-a891-417e-ac07-b8026478a633"
        },
        "item": {
          "id": "a78b8f97-d8c1-4f19-9066-2a9394547e71",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e43e0436-5d8c-4f96-8bd5-838fecf95db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f57d728-e28d-49d6-b38f-e7005d285e24",
        "cursor": {
          "ref": "33a45550-9c90-47e3-903e-8583cebd1b4b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f0cebb10-96a8-457a-9286-d2cfdae47b96"
        },
        "item": {
          "id": "3f57d728-e28d-49d6-b38f-e7005d285e24",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8e20fc75-ecca-46a6-b6ea-162c5cfb8b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f1f7e3-c920-48ff-9ae5-e9b2f3ce7c42",
        "cursor": {
          "ref": "f15a61dd-2e81-4957-b9f6-79485f1351e0",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1594ca91-f4a5-4be6-a2e5-ab1b97108566"
        },
        "item": {
          "id": "96f1f7e3-c920-48ff-9ae5-e9b2f3ce7c42",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "23777188-fc4c-47de-858a-4d9e3faa3fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2bb486-2af8-4fa3-809f-4ef561a65e3c",
        "cursor": {
          "ref": "8b0050cb-4802-4239-88a3-89e595731926",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d48ea9b4-e570-468e-a94e-5108fe1c6488"
        },
        "item": {
          "id": "db2bb486-2af8-4fa3-809f-4ef561a65e3c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "de1a18b7-1247-4517-af8b-e7c65e57ecbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf67e722-5097-469a-96a2-233bcedefd52",
        "cursor": {
          "ref": "e2b377f6-1edf-43f0-ba4c-a5b72d449a45",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "343bfda0-0e1f-4499-8bd9-0f1c620e8926"
        },
        "item": {
          "id": "cf67e722-5097-469a-96a2-233bcedefd52",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "686cbd89-1180-4d4d-adca-62141853c63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343c37bd-55b6-4483-adfd-a3ee56cfc23c",
        "cursor": {
          "ref": "05732a56-607f-4118-990e-7f2fee436217",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ce0529bb-d5c3-4d47-823e-b776ec9c1e04"
        },
        "item": {
          "id": "343c37bd-55b6-4483-adfd-a3ee56cfc23c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "68e20b6b-5f35-4afb-a37e-3c5bbaab9b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e8df5b-ef17-49d7-b183-7e6dd23762d4",
        "cursor": {
          "ref": "c449559a-9f06-41ad-beb5-486b27539654",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f18d9778-fe8b-484c-a783-f1fa46873cca"
        },
        "item": {
          "id": "c7e8df5b-ef17-49d7-b183-7e6dd23762d4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ee394236-d100-40f9-b3e8-975af7afb9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694da4d8-5e5d-44fc-8fb7-7ba09b3993e5",
        "cursor": {
          "ref": "4c1fc428-8d14-463a-81d3-594c6ed17b7a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b37db3eb-b894-425e-a798-1fc70ab02ff0"
        },
        "item": {
          "id": "694da4d8-5e5d-44fc-8fb7-7ba09b3993e5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f5293742-9c6a-4ec2-a2a4-67bdc8e52135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533bf124-9293-4eef-b39f-0b7cc4b08de4",
        "cursor": {
          "ref": "45b9fbc0-0fbe-48b1-9683-2d4f50c03eb5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e1576300-384e-49d8-a754-7d2b6cd51b00"
        },
        "item": {
          "id": "533bf124-9293-4eef-b39f-0b7cc4b08de4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "75e6b6c5-8823-4ed0-994e-ff4eb67ce8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a931f07-d301-484d-89c2-63a8e9a4f765",
        "cursor": {
          "ref": "d708e8a8-a498-4485-937c-d3a6f3fdb2a0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "25f7249a-975f-4b0c-bcb1-2921b762ef48"
        },
        "item": {
          "id": "3a931f07-d301-484d-89c2-63a8e9a4f765",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fc204d12-919d-45c7-a8eb-2e7d57f5c914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a112fccb-60f9-47db-bbff-454f0d6fdf28",
        "cursor": {
          "ref": "9f2f8f0a-1620-4bc7-b69b-7ffafd5eec58",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1c4b84b1-0777-43a8-8985-fd5b1d9d25d3"
        },
        "item": {
          "id": "a112fccb-60f9-47db-bbff-454f0d6fdf28",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b745430f-2985-4f2f-b70e-ec3a55c914ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab5b69d-5a4c-4623-8291-ff87cfb7abe3",
        "cursor": {
          "ref": "ee3442ca-8231-4222-990b-ac142de08b76",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "00dfc8cd-58d5-421d-8ae8-0f9ace5d0218"
        },
        "item": {
          "id": "dab5b69d-5a4c-4623-8291-ff87cfb7abe3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8e65dfe5-43d4-4772-a91b-d9e78606128e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ed826f-386e-4256-8b03-a8c0d85b9223",
        "cursor": {
          "ref": "fe16139e-07c7-4378-a594-5a8283ec87e0",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8042c124-334d-431b-9d47-d41bc2a66875"
        },
        "item": {
          "id": "b8ed826f-386e-4256-8b03-a8c0d85b9223",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f214bf6f-4a96-4a7d-a90e-4a2153e8025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f63754-73ea-4eac-af52-d20bfd9d60f3",
        "cursor": {
          "ref": "474a946d-f15f-427e-baf0-9297ca96725e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8b28681c-e21d-4201-9519-b4a3a82ce8ec"
        },
        "item": {
          "id": "63f63754-73ea-4eac-af52-d20bfd9d60f3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9b018094-8b50-4367-b4a1-9ba6c164ad13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aac4480-77a9-449c-9ed3-f45b1b700bac",
        "cursor": {
          "ref": "43b570f4-0d14-4f2f-b2a3-e240e25c3ff4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "53f2f8c7-088e-475e-b54e-3373e2c39b15"
        },
        "item": {
          "id": "4aac4480-77a9-449c-9ed3-f45b1b700bac",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d580bc30-971e-4c7a-be5b-6e1a6b5aabc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb3e7ac-aece-4696-a107-577cfadf9a4d",
        "cursor": {
          "ref": "c928e305-df6b-4615-883e-dbed1ce0830f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "aa556071-ebac-4013-b64d-97d310016ac5"
        },
        "item": {
          "id": "fbb3e7ac-aece-4696-a107-577cfadf9a4d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6d90f388-fff1-47fa-93ed-0f43f8d379b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4e2798-55da-41f7-ba7f-59e46e6ccb39",
        "cursor": {
          "ref": "ad4dd020-eaaf-4e5f-a315-274520508260",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33460767-1702-4f7e-8129-00817007ae19"
        },
        "item": {
          "id": "bb4e2798-55da-41f7-ba7f-59e46e6ccb39",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7df5cac5-5ed4-433f-aa06-bb0e62251c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d50fd9-ace0-4911-8327-67182c2b7c97",
        "cursor": {
          "ref": "d0397cb5-c72f-4142-822b-2a6995bb946e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7ce7e1e8-72e5-406a-a180-cd8a71110455"
        },
        "item": {
          "id": "e8d50fd9-ace0-4911-8327-67182c2b7c97",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "780d61ec-fe8a-42c5-8a56-e4a56fe05c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d173e5e1-4a9c-48e4-b34d-481956204e07",
        "cursor": {
          "ref": "2d2b930f-f703-4460-8ba7-47d9c5b3bd42",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2867b9c6-6ad2-4ad8-b615-956360a54485"
        },
        "item": {
          "id": "d173e5e1-4a9c-48e4-b34d-481956204e07",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1a31ea0c-2c22-4ad6-b46d-1c6171fa80db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c38ea0a-8f7f-4ffc-912c-4dc3c5c7ddda",
        "cursor": {
          "ref": "a475b674-1580-4c73-b3ae-fd9d8c737da9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3e005285-9900-469c-9ad7-2eeb788c4e51"
        },
        "item": {
          "id": "1c38ea0a-8f7f-4ffc-912c-4dc3c5c7ddda",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1c5757c6-8234-44de-9e77-e4457acf1dad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 63,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caef706-713a-42f2-8922-6b0d7bf4a1b7",
        "cursor": {
          "ref": "775775b5-4455-46ff-9f9c-173a85905a32",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0a1cb294-afbd-4fa8-a07b-a0cb06ce11ce"
        },
        "item": {
          "id": "1caef706-713a-42f2-8922-6b0d7bf4a1b7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4d905622-9e85-4a43-8d56-e97470754ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceafa4f-7099-4a25-a8f2-50a764dc5c76",
        "cursor": {
          "ref": "45a48db6-8ed7-4390-80bd-d1f5d0c6958b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "24a20b20-55c9-466a-95aa-66c2990b02f1"
        },
        "item": {
          "id": "3ceafa4f-7099-4a25-a8f2-50a764dc5c76",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dc47c796-3141-4c80-8dfa-3bd53d950be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f52f3c-fc1e-4473-b139-6d032524d5fa",
        "cursor": {
          "ref": "130ff039-76ca-41d1-90cf-a4832c5cb423",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f605a624-7123-41fb-95ea-a38d1db60987"
        },
        "item": {
          "id": "65f52f3c-fc1e-4473-b139-6d032524d5fa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3cd68d27-9110-4a86-be92-617dcaa1308e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dbff0e-dabd-4b29-8fec-259767e21137",
        "cursor": {
          "ref": "db7b6000-1af2-43c7-b98d-95fd315f6931",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "105e859f-908d-4c9f-a184-bb876616a2ec"
        },
        "item": {
          "id": "50dbff0e-dabd-4b29-8fec-259767e21137",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "53c63e69-3bd4-4cea-aa34-9b9bda1a67cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d396152-9014-47c3-958d-1d4718b81637",
        "cursor": {
          "ref": "4bade4f7-bc9f-449d-b8f1-a53acce6784d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "63f2dc3a-83cb-41d2-908a-f382998adbc6"
        },
        "item": {
          "id": "6d396152-9014-47c3-958d-1d4718b81637",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e1b7addc-1a5d-485f-b4cd-c8c436183881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e2bffc-a13a-48c6-8ef3-fef2c8bdffb6",
        "cursor": {
          "ref": "dd48f174-e39f-4b0a-bec0-a40a3cbb91f8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0a6511f2-1271-40a4-bead-bf41fa47d14c"
        },
        "item": {
          "id": "09e2bffc-a13a-48c6-8ef3-fef2c8bdffb6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "67c18a13-f58f-4ae8-858d-605cbbc8f528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfec5524-ab50-4732-b615-a95c87b73978",
        "cursor": {
          "ref": "4e87bcfd-ae12-4338-a869-277e8d74848f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c5a44d1a-a77a-4afa-9d37-725ec91b361a"
        },
        "item": {
          "id": "bfec5524-ab50-4732-b615-a95c87b73978",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c96b59dc-3809-489c-9a4e-34db7f38ee2c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 61,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9bf241-7c91-4326-b226-3751ede25a04",
        "cursor": {
          "ref": "8f4c006d-7013-4583-a0de-f6b4562c2bc5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bc174534-fc25-4be5-8b78-3e0a81a5244a"
        },
        "item": {
          "id": "4e9bf241-7c91-4326-b226-3751ede25a04",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3a4d3eb9-5274-47eb-867b-3cdaa409d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af104e28-0fd6-46ce-bd00-e72f3f353bb0",
        "cursor": {
          "ref": "4b86dd82-7002-4b27-98e6-b1bdf06a10dd",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b6f821cf-e582-42d3-9a9c-08bbc89746b9"
        },
        "item": {
          "id": "af104e28-0fd6-46ce-bd00-e72f3f353bb0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d48896d0-c482-4fd2-8cd4-d9ddddf69f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03fc37a-cb88-485d-8ac8-8c8fe206128d",
        "cursor": {
          "ref": "4736e41c-0d1e-404a-a449-83bd150c5594",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cb7d7491-6aa6-4b78-828e-8dcd77aa9558"
        },
        "item": {
          "id": "f03fc37a-cb88-485d-8ac8-8c8fe206128d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "97da5287-152a-498f-bfe3-8fbf57c906d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39bd6ea-0051-407e-9aa1-e5ea2c261ec2",
        "cursor": {
          "ref": "0be3357a-7815-4d78-adbb-212e13673090",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "424c48f8-435b-4e67-84a3-f3f7f5239c79"
        },
        "item": {
          "id": "b39bd6ea-0051-407e-9aa1-e5ea2c261ec2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7e5f1ab0-79d6-4b20-8e93-fdddf76392c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa3113c-5fdf-43cb-93df-24d26ef69ca2",
        "cursor": {
          "ref": "c5c4af18-acad-4251-bf10-6b6550bb3971",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ae3720c9-a23b-4b5a-bd65-d3b46eada0ce"
        },
        "item": {
          "id": "daa3113c-5fdf-43cb-93df-24d26ef69ca2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "50787dbb-30c0-40ca-982e-63dbe3521318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59973746-73ec-49ac-ae32-e7374f61ab60",
        "cursor": {
          "ref": "f9029983-30ff-49e3-90fc-6c4d9dc866c6",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "75b072b7-e25e-47f9-bcd5-86a92f008325"
        },
        "item": {
          "id": "59973746-73ec-49ac-ae32-e7374f61ab60",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c00e1ab5-60a9-4fec-8805-519418d4e0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180da171-3279-42a1-a028-06ae05902b7f",
        "cursor": {
          "ref": "4419fb1d-290c-488c-b994-274956afadcf",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0b95d5c6-8f91-469c-a8f5-976d3b396573"
        },
        "item": {
          "id": "180da171-3279-42a1-a028-06ae05902b7f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "58d497e5-1808-47ed-bfa4-c1472bafac6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c0dbfe-b32a-4166-9544-aaeb1d5b535b",
        "cursor": {
          "ref": "78ae7257-3271-4524-99da-8326ae2b3875",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f56bc01c-da59-4e85-881c-2ebbf159177b"
        },
        "item": {
          "id": "50c0dbfe-b32a-4166-9544-aaeb1d5b535b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f4ef7d03-9716-4ac0-a870-fa36a9df1345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de146eb2-84ce-4a6b-a86a-d98b41f18943",
        "cursor": {
          "ref": "4ac7909b-7b44-4d58-a602-827b2f80ba1a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b70f1c51-650f-4d59-bc36-be863a0a074c"
        },
        "item": {
          "id": "de146eb2-84ce-4a6b-a86a-d98b41f18943",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "407aeefc-7428-4826-8b3d-47a86d3d3632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3337d914-5e73-44d1-844a-ad257caae587",
        "cursor": {
          "ref": "23efdf31-2d23-47d2-af45-51e7cd39d28b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8df68be1-008c-42a8-baac-323fc02cc152"
        },
        "item": {
          "id": "3337d914-5e73-44d1-844a-ad257caae587",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1dcdbb77-2074-4cc3-a956-a091837a9ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bae8837-fd1c-4439-bda4-10a85278240d",
        "cursor": {
          "ref": "2f6e650a-ab09-4267-95d3-0d814807e0bc",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fbb8b1a3-d130-4db9-81d4-1d9ba075c55a"
        },
        "item": {
          "id": "6bae8837-fd1c-4439-bda4-10a85278240d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "73ba8527-51b6-4224-875c-05139f0cd5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae16a4e-bf56-4a5b-b3b5-98eac58006b2",
        "cursor": {
          "ref": "02c16845-056a-436c-8cf5-ab861368bbbb",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b7fa2fec-8471-443a-bf47-507bf6ff63ad"
        },
        "item": {
          "id": "3ae16a4e-bf56-4a5b-b3b5-98eac58006b2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0a9cd90f-9689-484f-9dae-04fec7e38e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf60323c-1b07-4540-b408-98ed7f0976c0",
        "cursor": {
          "ref": "50f97c76-1ab4-4fc5-872d-2fd961e2c627",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0de2f49b-77f8-40ae-a79b-813d8110da30"
        },
        "item": {
          "id": "bf60323c-1b07-4540-b408-98ed7f0976c0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fff87504-f152-4061-9280-cf1fc0cad027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a4de13-0994-426f-97b2-b03f5e32b5f4",
        "cursor": {
          "ref": "069f6477-99a6-4d37-80fe-1581ca37dae7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "12c265ca-9545-486f-845d-da96a4319266"
        },
        "item": {
          "id": "98a4de13-0994-426f-97b2-b03f5e32b5f4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7d59ce63-0526-44f0-81d2-3a4610ed887a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1963fc-85a9-450e-8066-ac494c3b4a5c",
        "cursor": {
          "ref": "c2081bcd-28e5-42c5-89e3-7cae141e52c4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "adbc9210-6b68-4368-a0db-8ae66364e6e0"
        },
        "item": {
          "id": "1a1963fc-85a9-450e-8066-ac494c3b4a5c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b0af5c44-c8d4-4998-9307-d53a7b33c05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e348d88-5fc8-43b1-87d3-bfa6b6de6399",
        "cursor": {
          "ref": "4c3e1802-6b4c-4277-98d2-871386b33c2e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d80ccfc1-82de-40fd-9fc8-1c850f703f0e"
        },
        "item": {
          "id": "0e348d88-5fc8-43b1-87d3-bfa6b6de6399",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "689ff64b-e7ce-4d0f-9bd1-f02b51b0fc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a466b802-e7bd-461d-a2b0-050037610066",
        "cursor": {
          "ref": "a0d8132a-be14-4d8b-8bcf-b4f1a8842824",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a660c155-3d0b-4e73-82a0-d3506652f369"
        },
        "item": {
          "id": "a466b802-e7bd-461d-a2b0-050037610066",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "11ce50a3-6a42-4f6c-9ed7-f339c1d6d9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1839b2c6-f041-4aff-9b5c-65c8820e560a",
        "cursor": {
          "ref": "21f94613-1572-479b-9a8c-36f95597ff67",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fd8ed25e-b72b-477c-bd33-f207cba2c343"
        },
        "item": {
          "id": "1839b2c6-f041-4aff-9b5c-65c8820e560a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3fb6412a-2b21-4e7c-a711-e682798ca806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bfc6a9-1a79-483b-ab51-21ca0eca136c",
        "cursor": {
          "ref": "c40f1423-525c-4ac4-ab63-48de1e524d2b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3dd8ca4d-9877-4c81-91a2-abdf7c1dce27"
        },
        "item": {
          "id": "c0bfc6a9-1a79-483b-ab51-21ca0eca136c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "185fcc24-ec7d-4752-89dc-010ba19d5944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d43f74-b639-4f2f-8863-05824c17681f",
        "cursor": {
          "ref": "5ab9b949-bd45-414e-973c-4aa2aeb57449",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fdfca34d-2797-42e8-8beb-379a202b6e92"
        },
        "item": {
          "id": "11d43f74-b639-4f2f-8863-05824c17681f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4e98e917-6a09-49bf-a5af-45922699175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0e1b58-400d-4efe-abea-7c81a8e8d744",
        "cursor": {
          "ref": "d9bfa9c0-a92e-470b-bf15-881d05b02cef",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5f46bcbe-bbcf-46e2-8678-6f1ca56ce7a2"
        },
        "item": {
          "id": "ca0e1b58-400d-4efe-abea-7c81a8e8d744",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d53977aa-8bea-4c5d-b824-9d2100b7edf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ccefaa-3860-416a-a49e-b09e6c190b68",
        "cursor": {
          "ref": "138fcb37-bac7-4f97-95fa-b238c88b2b39",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "48008a86-0365-4c2e-adbf-610b0e9e3d0f"
        },
        "item": {
          "id": "07ccefaa-3860-416a-a49e-b09e6c190b68",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "789e57d6-551b-4f80-89d3-1a3dbd51261c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a054d3cc-8eca-439f-beee-570e8cedf040",
        "cursor": {
          "ref": "df056604-deeb-4335-b58e-f6a0c9a6129a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9d1c1724-99a0-405d-bee2-9e2181850ffd"
        },
        "item": {
          "id": "a054d3cc-8eca-439f-beee-570e8cedf040",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f01be863-d882-4f89-92b8-0730a3bc2bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62311186-379b-45c6-8347-018ae394cfaf",
        "cursor": {
          "ref": "a3133357-6f9c-431c-adf4-4a4a777f7487",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3fa13d70-d311-4ffe-a196-81d5d28c9451"
        },
        "item": {
          "id": "62311186-379b-45c6-8347-018ae394cfaf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "41f0fe0c-e574-43e7-849a-0f36e533fac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c748e3fa-147f-4d99-9fa1-f0069fe0ade1",
        "cursor": {
          "ref": "18db938a-11e9-4bea-9975-766626b4139c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b9490f26-30eb-416f-b156-fdb97da199a4"
        },
        "item": {
          "id": "c748e3fa-147f-4d99-9fa1-f0069fe0ade1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a4a0f342-ecb8-418f-b25f-a5daa979a086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38c684c-8171-4f27-9444-efc3e8b057ad",
        "cursor": {
          "ref": "03705dd7-cef7-4d90-aa29-139fbd405f69",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "af8eb16c-6cb2-4859-9f6f-408b55f6ed07"
        },
        "item": {
          "id": "e38c684c-8171-4f27-9444-efc3e8b057ad",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3ae8d2c6-d0a6-42de-87bc-05fba09ad041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced21122-9d3e-4cde-bf0e-5241b4b2ff37",
        "cursor": {
          "ref": "6d311bbd-7c4c-44a1-abdd-4d51957832c7",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "987edaee-e0cb-44e3-8576-2e78977f58f8"
        },
        "item": {
          "id": "ced21122-9d3e-4cde-bf0e-5241b4b2ff37",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "97f76c9a-31c0-4d88-9e3a-3fb38abb4833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee59411-bda2-4a19-aadb-b34a37fcec9d",
        "cursor": {
          "ref": "8af4d5ff-f584-40bd-9f3a-8eba5b764bf6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "51c570db-d551-42c5-9d0a-9975ea5ab7fe"
        },
        "item": {
          "id": "cee59411-bda2-4a19-aadb-b34a37fcec9d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3a9b4032-5981-487b-9b70-7e83a1e19fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea96890-73a6-426e-a2fb-b12a5178b800",
        "cursor": {
          "ref": "e7fe58a6-4560-419c-9b10-d40d3d9c35bb",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d8674911-846a-4aec-8414-73dead1c5918"
        },
        "item": {
          "id": "9ea96890-73a6-426e-a2fb-b12a5178b800",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d67ca87b-af6e-493a-91a3-5f3310b70c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317d5933-32a2-4a67-b47d-60ef66ebe6a3",
        "cursor": {
          "ref": "6277a91c-4baf-4e4f-b157-d2cda565c755",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "defa099d-0598-49b8-a99b-531766c0a181"
        },
        "item": {
          "id": "317d5933-32a2-4a67-b47d-60ef66ebe6a3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cff64881-a2f7-45f1-b590-cdd09d0df75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b5ee16-4817-41b0-aaeb-a9820644ba2a",
        "cursor": {
          "ref": "6f25df76-99d3-4b8d-88e0-f8d395cc5c83",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d9f6fa5b-4250-441e-982c-5820810ed4f4"
        },
        "item": {
          "id": "25b5ee16-4817-41b0-aaeb-a9820644ba2a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fc1eb764-40c8-43e5-97bd-13da09cc8803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c424910-ca92-46f5-89d9-017fccb7548d",
        "cursor": {
          "ref": "d2587936-e12d-46e6-9e68-66d67305e570",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fb334788-3340-4351-85ed-707c122e4c83"
        },
        "item": {
          "id": "9c424910-ca92-46f5-89d9-017fccb7548d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cfa569f0-6d38-4b0c-a5b8-0d8bec3f9391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cc575e-a33c-4131-bcf9-2e8b53ebc8ec",
        "cursor": {
          "ref": "5787f585-0748-4144-a181-59cc1312872e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d65d8c54-8c03-43d9-a56c-80f9c86ef42f"
        },
        "item": {
          "id": "55cc575e-a33c-4131-bcf9-2e8b53ebc8ec",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7d79bdc7-c4cf-48b1-bad5-e6862ce38f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd37936-0bb7-47bf-ab0e-a243188e6996",
        "cursor": {
          "ref": "59dab21f-65af-4ed9-ada3-62396e41376f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d8fb148f-ae22-424a-a022-1b8e2babd0a2"
        },
        "item": {
          "id": "ccd37936-0bb7-47bf-ab0e-a243188e6996",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dce53c10-92ce-4c37-9779-6645d3cd3701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59491d5a-7334-422b-9e62-ef3761b951a0",
        "cursor": {
          "ref": "4aacb1c5-e8af-4d12-97ea-ac8255c1ec4a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ec32f9c8-d258-49d1-a83c-b32d7d5baf38"
        },
        "item": {
          "id": "59491d5a-7334-422b-9e62-ef3761b951a0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c2d917bd-2efd-4f7b-af61-ec51fd13f2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6158bd66-d346-4c67-a259-576c30674467",
        "cursor": {
          "ref": "0ded5c51-0a0f-4d72-ba74-d32f4fa14df9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "502fa64a-81c1-4080-ae04-df955d04cb62"
        },
        "item": {
          "id": "6158bd66-d346-4c67-a259-576c30674467",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9b39be99-5c08-41af-8101-7db7657d4a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41e615c-3578-474a-b103-850ddec9a33d",
        "cursor": {
          "ref": "cc3cf794-a2de-4b2d-ba6c-6ccfa3a98893",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aa9c6430-b00a-4fab-8949-d25dfeb6d6da"
        },
        "item": {
          "id": "a41e615c-3578-474a-b103-850ddec9a33d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "01653971-40f2-4ced-98ab-bf826bf99746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f218d0d2-81c2-4b46-b9cd-208ab69b9e73",
        "cursor": {
          "ref": "b5242ede-de6f-4d3b-be6a-3bf6117ea190",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cecfe880-269b-4cdf-86a2-f37d9dc2126d"
        },
        "item": {
          "id": "f218d0d2-81c2-4b46-b9cd-208ab69b9e73",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ed6856fa-c4f1-45c8-a80e-561f3dbfbc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d94c45-0864-4e72-816b-c74646dff9be",
        "cursor": {
          "ref": "8e983642-5867-4e5e-9158-503251a089cc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5cc09925-70de-47d5-ad4a-8538c34b18e0"
        },
        "item": {
          "id": "28d94c45-0864-4e72-816b-c74646dff9be",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6defd7e3-b3eb-4f36-8a67-c8f0b45101a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c337b3-5fca-4491-8375-2e4d60e2113f",
        "cursor": {
          "ref": "bb351018-08b4-4fd5-b2ec-5ef20f671052",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "826b9c27-ac96-4d1c-af3b-6f604de0f49d"
        },
        "item": {
          "id": "a3c337b3-5fca-4491-8375-2e4d60e2113f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "083bd23e-68c4-4169-9d73-daea6b15c7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b43946-76cd-420e-a262-fa91b423911f",
        "cursor": {
          "ref": "d43a8693-86a9-4c3b-91d5-33e2c69cfd33",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bfeddf29-1ebd-4414-83ea-1bc4b68837f7"
        },
        "item": {
          "id": "96b43946-76cd-420e-a262-fa91b423911f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4e6deac0-ffb1-4b13-9fdf-8f1aacf92fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b847d472-ce31-481e-b4db-6f6fac2ff62d",
        "cursor": {
          "ref": "85aa408f-9163-4459-8292-4e0e142c5206",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b358cd5c-f57c-43bd-8786-50c6ad07cd3b"
        },
        "item": {
          "id": "b847d472-ce31-481e-b4db-6f6fac2ff62d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bd360d68-e81b-47d6-a33b-d9290ca49bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245a22cb-e9db-4aed-b416-c0f93e69286e",
        "cursor": {
          "ref": "5f82cdfc-95e1-4818-ab27-c2f66a10f242",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0c1e6d66-89c5-442c-80d9-d7f20fa2d898"
        },
        "item": {
          "id": "245a22cb-e9db-4aed-b416-c0f93e69286e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "13788e6a-d2ae-4043-b63b-b0bf49a28545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbf1bd1-5d42-4483-b879-f932ec738bd8",
        "cursor": {
          "ref": "edbc7e6c-a6fa-4138-a543-1ca1b3c66cc6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "53cf4d98-3bd7-4dc4-a76d-5e98bfb2342e"
        },
        "item": {
          "id": "6cbf1bd1-5d42-4483-b879-f932ec738bd8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4e3f97ba-9c22-4a1e-a472-75edc905ef32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49927cf4-8ee9-4954-9928-8ec5a05e451d",
        "cursor": {
          "ref": "7570d2bf-ef4d-42e1-9de9-55144e23dbe0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "80c0d419-f861-4beb-adbb-b3c07d278acf"
        },
        "item": {
          "id": "49927cf4-8ee9-4954-9928-8ec5a05e451d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2b61747a-1970-42fc-bb29-a29389256225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8f8c08-7722-4cb9-8f4f-5fb9c22fc9d4",
        "cursor": {
          "ref": "04d1db71-e73d-4cdb-8ce6-e0d70675a4b6",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ad44a235-8218-4923-9b52-9d3a571ecae3"
        },
        "item": {
          "id": "6d8f8c08-7722-4cb9-8f4f-5fb9c22fc9d4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4562c2af-882e-459f-b53a-ec2fdb467c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d0b466-c348-4867-b259-47a182cc99f6",
        "cursor": {
          "ref": "cafe7223-22eb-4551-8433-f8e8f4458549",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "84826ac0-65d5-47c1-8daf-fbd10d68b469"
        },
        "item": {
          "id": "87d0b466-c348-4867-b259-47a182cc99f6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "93c74c38-7813-4746-8fdc-ff74e69c8594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b715f753-ad42-49ac-aaef-c11d87288032",
        "cursor": {
          "ref": "e5b44cd5-a3c7-4f7a-ba40-88274b9ea79a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9564e2a6-2c8e-481c-a7e2-54b1fbc33d43"
        },
        "item": {
          "id": "b715f753-ad42-49ac-aaef-c11d87288032",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eee01233-b542-4e17-86b4-59d9e5498e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f5755b-ff97-44d3-9d1e-3269572374d2",
        "cursor": {
          "ref": "68122dff-876a-442a-8b0b-d4d15102b5f7",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "00bfe559-8c36-426c-a27e-2a920462e180"
        },
        "item": {
          "id": "20f5755b-ff97-44d3-9d1e-3269572374d2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e02be7d1-ca22-48f7-b848-db009e54fa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366816fa-888f-48a7-bce5-92bb6425272a",
        "cursor": {
          "ref": "3756c6be-9d87-479e-95e5-e8d674850477",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ba3f5cdd-59a4-44fe-ad37-759d503e89a3"
        },
        "item": {
          "id": "366816fa-888f-48a7-bce5-92bb6425272a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "05adf49d-ee02-483e-b080-9ba402727009",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacfd6b1-2529-4d84-8a2f-c32ed289001f",
        "cursor": {
          "ref": "448de0c1-3d63-4c17-b632-e23c123d2ae9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2cd08e0a-e591-48a5-94c7-7976a7d52ec1"
        },
        "item": {
          "id": "bacfd6b1-2529-4d84-8a2f-c32ed289001f",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b16045a6-7995-4252-95d6-72a4831396c3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 213,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e100599-3883-42c8-b26f-330d64115ee3",
        "cursor": {
          "ref": "39e11042-3589-43b8-83db-e076fde53c1b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f8a15bbd-a631-4208-ae39-91723ff9fbe3"
        },
        "item": {
          "id": "5e100599-3883-42c8-b26f-330d64115ee3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ce4d12af-2a29-422b-8fcb-7b686b902f8a",
          "status": "Created",
          "code": 201,
          "responseTime": 72,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb474e4-fa2b-4412-8692-e2e4c3a830e9",
        "cursor": {
          "ref": "f4655f5c-5e6e-431d-be45-77c3c0b137c3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fc7a1eb7-cdbe-4e1e-9976-e095b9568ff6"
        },
        "item": {
          "id": "7cb474e4-fa2b-4412-8692-e2e4c3a830e9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7d1e23f9-75d2-4280-a72a-b73b32c55020",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f256ad05-d0ec-49a4-86bc-43202c0091e2",
        "cursor": {
          "ref": "cbed7aae-2aeb-4e46-a75d-674141ec38f4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "81d23f90-2fd4-47db-b814-c774e96a097b"
        },
        "item": {
          "id": "f256ad05-d0ec-49a4-86bc-43202c0091e2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fef53b06-5acf-4c7b-903d-979895998bae",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c0d966-079b-46a1-8438-4e0b05085f2a",
        "cursor": {
          "ref": "7885b248-c6e8-4ff8-a5ca-2cdb5cd2bab9",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "68e29126-6406-4383-ad85-308c1dad25bf"
        },
        "item": {
          "id": "89c0d966-079b-46a1-8438-4e0b05085f2a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "20429554-7d5b-4bb4-a937-a0e84003c976",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "661cb155-ef75-4d3f-b663-8b3eb37a5ba2",
        "cursor": {
          "ref": "57a913b9-945e-40be-b000-533437bc7360",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ba47d25b-f971-46a6-8f35-c62cd277c8d8"
        },
        "item": {
          "id": "661cb155-ef75-4d3f-b663-8b3eb37a5ba2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "95e2c8ac-4d4a-4768-9b52-d3b1c97f2a1d",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "810e024c-d97f-4ea8-818e-01a6e7a715d0",
        "cursor": {
          "ref": "819e6883-6fd1-4436-be8c-ebefc71d994d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e484355b-3ebf-4bee-8817-eff807f05d40"
        },
        "item": {
          "id": "810e024c-d97f-4ea8-818e-01a6e7a715d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5c725f9c-4dfe-41b4-8f8f-c2f672d7f7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810e024c-d97f-4ea8-818e-01a6e7a715d0",
        "cursor": {
          "ref": "819e6883-6fd1-4436-be8c-ebefc71d994d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e484355b-3ebf-4bee-8817-eff807f05d40"
        },
        "item": {
          "id": "810e024c-d97f-4ea8-818e-01a6e7a715d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5c725f9c-4dfe-41b4-8f8f-c2f672d7f7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc251817-1bc9-4b0a-8fb3-db25e85859dd",
        "cursor": {
          "ref": "718b1af6-8364-433b-9856-2fced9f3bc12",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "692c5ba1-14c3-488b-b398-20336757616b"
        },
        "item": {
          "id": "cc251817-1bc9-4b0a-8fb3-db25e85859dd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "622dade3-e825-45f0-9f8b-be898f7ac65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be7f081-8041-475d-aac1-a9b5f4436649",
        "cursor": {
          "ref": "79a3c3f8-8dbf-4afb-bc5f-db3807a699cf",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cfb20a50-1e40-4578-b622-600dd1732a0e"
        },
        "item": {
          "id": "7be7f081-8041-475d-aac1-a9b5f4436649",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7b87bb57-be7f-4b37-81e7-0620f8c685f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8183377b-e1a9-4418-bd91-3d7decb46d0b",
        "cursor": {
          "ref": "314b167d-2c58-4fd3-a4f9-7e3ae835f53d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "72b8bcc8-f51f-47f7-92d2-615f8932af23"
        },
        "item": {
          "id": "8183377b-e1a9-4418-bd91-3d7decb46d0b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "91693b92-abd2-49ad-8846-1dd773e76d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250e325a-d5dd-4678-bd71-9b3417e529b5",
        "cursor": {
          "ref": "39ad3931-4261-4a9e-baa4-56f6b3b42c57",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e7d3b687-ef11-4609-9daa-2c950dc72f27"
        },
        "item": {
          "id": "250e325a-d5dd-4678-bd71-9b3417e529b5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c05f62f-70ba-46cf-8315-c5e9757de5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac023bd-893f-4230-b99b-c81b6b487271",
        "cursor": {
          "ref": "313303e6-f301-446c-8095-37ae70f2f8b3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0b2ef8b0-a9d5-497c-8666-bd4e7c604ab3"
        },
        "item": {
          "id": "1ac023bd-893f-4230-b99b-c81b6b487271",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "804f8def-7ddc-47e9-b4d4-a917bd063218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f8b588-7b4b-46d3-ba52-1168f23dad25",
        "cursor": {
          "ref": "eeee7a4c-22f6-42b4-a11f-9b673d5eb108",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "08c921bd-952e-4c09-a550-0f135029937e"
        },
        "item": {
          "id": "23f8b588-7b4b-46d3-ba52-1168f23dad25",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d0b0451f-389e-426c-a339-4fbc9184e8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e09e21a-e1ad-429a-b45b-476eb0bfa7bb",
        "cursor": {
          "ref": "c7a55c11-9ab2-4a11-95b0-eb7388c1e695",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c44bd4dc-8f90-453e-8f0d-4920329f0e78"
        },
        "item": {
          "id": "6e09e21a-e1ad-429a-b45b-476eb0bfa7bb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "db06f25a-843d-4702-acae-ae3f1ca061df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc31621a-0868-458c-8f63-04d9c8b4b443",
        "cursor": {
          "ref": "54609a26-2be8-4813-8e80-2ff26f729ed8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c2cac960-4710-4c06-8b69-bd0b81847712"
        },
        "item": {
          "id": "fc31621a-0868-458c-8f63-04d9c8b4b443",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "747ddcda-e6d6-47a6-b5b0-c99c2067e469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7514054-882c-4f9e-966e-94dddfaf6abd",
        "cursor": {
          "ref": "06bd27e2-0ae8-4a72-bdfa-bc05a2764eef",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2a1c8801-d532-4d15-87bc-80d064a2b270"
        },
        "item": {
          "id": "f7514054-882c-4f9e-966e-94dddfaf6abd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3f0df560-3055-404d-9a62-054ecccbd832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4f8967-a042-4451-8452-54cbb3fc49d6",
        "cursor": {
          "ref": "75244b59-09a7-40d4-974d-466172f0a1d1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dede9d3e-4b35-433e-be7a-38f8829acb79"
        },
        "item": {
          "id": "fa4f8967-a042-4451-8452-54cbb3fc49d6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1f2f4b23-689a-4819-b2bf-3a3c3143565f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750055f8-7432-4c50-8a2b-bca84246b311",
        "cursor": {
          "ref": "189feed8-534e-47d9-8bea-c144860fedc3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cced21ee-7872-4d21-843b-adf1bbeb91a4"
        },
        "item": {
          "id": "750055f8-7432-4c50-8a2b-bca84246b311",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b2f835d6-30f9-42a6-9a4f-a686734ae604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a0dded-254d-4912-ac68-d13bde767686",
        "cursor": {
          "ref": "59d5f089-06b7-4872-b48a-a379aaef5c72",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5f2beade-399c-43fa-b7ac-ce33b2a86cfb"
        },
        "item": {
          "id": "56a0dded-254d-4912-ac68-d13bde767686",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "12133349-03c8-4d3a-a359-31b94ff469db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a628e62-446d-4091-8ce0-5533e869a9d3",
        "cursor": {
          "ref": "f2a6c6a5-751a-4b11-92dd-02d8cc032751",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "01b81a90-7820-4a99-b4ae-4f56acf68f3e"
        },
        "item": {
          "id": "0a628e62-446d-4091-8ce0-5533e869a9d3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5b5a1b2d-d395-4b33-bf6b-9df3104730bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35d4058-50a3-433b-b857-c5805ec2a344",
        "cursor": {
          "ref": "e00de0d8-abf1-491a-ac4f-d00f5f00158b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8ea959ba-d802-4ccd-b502-a35242beb48b"
        },
        "item": {
          "id": "c35d4058-50a3-433b-b857-c5805ec2a344",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b4095fd8-f9a6-4965-b927-67fe2c40d09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f86292-1ea0-4b96-a105-aa4eed3c727a",
        "cursor": {
          "ref": "637531c5-3a01-4db6-a9f8-f6311621e2cc",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c606100c-3164-4bf8-804c-ed27fdc1d7a6"
        },
        "item": {
          "id": "d8f86292-1ea0-4b96-a105-aa4eed3c727a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2e78c199-e944-4300-ae81-86d43a8a0e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f99493-cd96-4873-a852-8d79f9943e06",
        "cursor": {
          "ref": "29330df7-0f84-417b-a79b-653a38f088e9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "448328e6-ac01-457e-b347-e82176622d7b"
        },
        "item": {
          "id": "f4f99493-cd96-4873-a852-8d79f9943e06",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0569b0ed-c2bd-4aa6-b2b2-dce65ad751e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd3fd7c-a068-4455-83cd-7ff1ec50ed8d",
        "cursor": {
          "ref": "d67d1818-5294-4755-8ab4-5ca7fab1c8bd",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "66c6e293-4e98-4174-9277-a4da5d312d9b"
        },
        "item": {
          "id": "cdd3fd7c-a068-4455-83cd-7ff1ec50ed8d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "759b5ca9-e93a-4138-9333-240276629de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649b0565-de7e-4ca4-8679-08323753b19d",
        "cursor": {
          "ref": "f58c8635-8912-4e4f-a1c9-68537bcaae7a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ca08c4d7-42b4-4ff2-b743-0d9f7b505786"
        },
        "item": {
          "id": "649b0565-de7e-4ca4-8679-08323753b19d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "89ed5b19-e2f8-424e-904e-6ca5121249cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad11cf0b-6999-40d7-aa4d-c3d01c393a68",
        "cursor": {
          "ref": "143c418f-2b82-4e38-9b5e-48388fd21130",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "364b3642-40fd-423e-8c2e-14a8f1d05cee"
        },
        "item": {
          "id": "ad11cf0b-6999-40d7-aa4d-c3d01c393a68",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9834aa82-d577-4395-84c3-eb7b1110f199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84ed86f-09a5-414e-8ec1-821d71e7387d",
        "cursor": {
          "ref": "14fa8358-09bc-49a6-9653-3039b8f9ad67",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "75dcb9e4-2f00-4e33-a96d-547d6461418f"
        },
        "item": {
          "id": "b84ed86f-09a5-414e-8ec1-821d71e7387d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0f43d5ef-bb26-4199-9f19-9bb029d068c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a6ea0f-ce48-4bff-a511-1a82ac32faf0",
        "cursor": {
          "ref": "cf793a07-dd3f-45f2-8a33-7cf624ba683f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3d770c5a-a279-4378-82a0-dc79229baaac"
        },
        "item": {
          "id": "48a6ea0f-ce48-4bff-a511-1a82ac32faf0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e62acaf1-b8a1-4c55-86d3-7537cee6f53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3aa707-e56c-4b46-9028-fa010fb9358e",
        "cursor": {
          "ref": "d8d8b5f2-f953-4494-a908-f9bd068fa31d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c1985f55-faa6-4545-a6da-095ea8beaa65"
        },
        "item": {
          "id": "9b3aa707-e56c-4b46-9028-fa010fb9358e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3ecac04a-3c28-4556-b9e0-1086bbf13ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78197fe-1221-4e92-b728-33a9c99e8bff",
        "cursor": {
          "ref": "967fe0af-2a2c-4cd7-bd3d-0b680527ab4d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d92b5f3d-cbd4-48cf-9da6-10f787ddcc7d"
        },
        "item": {
          "id": "e78197fe-1221-4e92-b728-33a9c99e8bff",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6cefb9f7-edcf-4532-b0b0-99385f380b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e402b99-fe5d-4c84-a3e2-76993d54413a",
        "cursor": {
          "ref": "c35e6ae9-5efb-40ae-b88f-91d61a7cab55",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fc4a85b1-4bc4-4d2f-930e-ad9a4a9fd59a"
        },
        "item": {
          "id": "1e402b99-fe5d-4c84-a3e2-76993d54413a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1144aea6-024d-44b2-ab1e-fe2f10191cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bd8ecb-98ef-489f-a711-b71ae84402c2",
        "cursor": {
          "ref": "99b1db48-2b15-4cc7-8e52-81e32ecfe138",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d40cdd4b-53ab-4b74-9528-79739680f875"
        },
        "item": {
          "id": "f8bd8ecb-98ef-489f-a711-b71ae84402c2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab289587-fc60-4439-936c-cdfcdf14fb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7603180-7919-4c03-948d-37546d3a0da5",
        "cursor": {
          "ref": "48ddab7f-32e3-4a8f-aa1b-6e168d1c8beb",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e57d5878-5c18-4db3-9b26-cb29b11f73fc"
        },
        "item": {
          "id": "f7603180-7919-4c03-948d-37546d3a0da5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "743ce593-74bc-4e0f-beda-7e908892cd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dba64b-52fc-41d4-91f7-dd058d635ed1",
        "cursor": {
          "ref": "80267b29-6627-4ee9-b134-230ba5ee221d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f27f6254-a7f4-414d-baac-91e0660acf3a"
        },
        "item": {
          "id": "46dba64b-52fc-41d4-91f7-dd058d635ed1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dee9ddc3-7391-448a-a5e6-e06376fc90ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88719a7b-71de-4ef8-8880-9b3c166aa96f",
        "cursor": {
          "ref": "189db6dc-1433-4132-a079-cb06d6fcfb6e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2290a171-2d0a-4a61-8cb6-16706102e5ed"
        },
        "item": {
          "id": "88719a7b-71de-4ef8-8880-9b3c166aa96f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9dd4b08c-7106-4045-81b0-3ad1f521dfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce56b88c-68b7-4508-a376-c17dcbc6f661",
        "cursor": {
          "ref": "2d67e34f-7544-41b5-8f1c-5746b0df0a73",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "45369caf-e8e4-4e6f-bd38-d442198441dc"
        },
        "item": {
          "id": "ce56b88c-68b7-4508-a376-c17dcbc6f661",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8a5bd821-a1bf-4975-86ff-79d2bc62cd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7cf7a4-61ad-4f7a-ba07-5a238f43c36d",
        "cursor": {
          "ref": "299415fd-084e-422a-8158-5e4465bab48c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c0c012d9-00d8-44a3-b77a-b433257e8af9"
        },
        "item": {
          "id": "ea7cf7a4-61ad-4f7a-ba07-5a238f43c36d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d919f283-9928-441b-99c5-a3f3e7271296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df701eb2-d729-4114-8ccf-4b5db667ca7f",
        "cursor": {
          "ref": "c49de41a-85df-4e40-8391-0153cc718c52",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d040c052-7812-4d6f-9feb-699bc4d1ec9d"
        },
        "item": {
          "id": "df701eb2-d729-4114-8ccf-4b5db667ca7f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c2dab0ab-2222-48fc-9c0e-e49f9a32e9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfb9ff9-fe64-493f-941d-26b55f49f1cb",
        "cursor": {
          "ref": "56a28d65-207b-4c09-958d-d8da1cfc9b43",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3478648d-a973-4cac-bf9e-8f3c92351984"
        },
        "item": {
          "id": "7bfb9ff9-fe64-493f-941d-26b55f49f1cb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f378b980-bddb-4669-8edb-e5b21da5dc79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a1278c-2347-4b77-9150-5c72eba4e7f3",
        "cursor": {
          "ref": "f35c4a45-4df4-4f45-a299-124fc73c7e3b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "72dbf21c-fcf4-4d14-a446-1fa2afb4d21b"
        },
        "item": {
          "id": "95a1278c-2347-4b77-9150-5c72eba4e7f3",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "da9fe55d-4e64-4387-bcad-5d2be47d182d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 52,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c3f99b-2273-4ca7-b0d9-0dbb9b3550d0",
        "cursor": {
          "ref": "32569202-16d1-46cd-a006-4e5d380c4ef1",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b9fdfe7d-8f75-4385-ae03-6207e521d4bb"
        },
        "item": {
          "id": "94c3f99b-2273-4ca7-b0d9-0dbb9b3550d0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "db16f18f-67bd-40bd-849d-33f4bb186226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c3f99b-2273-4ca7-b0d9-0dbb9b3550d0",
        "cursor": {
          "ref": "32569202-16d1-46cd-a006-4e5d380c4ef1",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b9fdfe7d-8f75-4385-ae03-6207e521d4bb"
        },
        "item": {
          "id": "94c3f99b-2273-4ca7-b0d9-0dbb9b3550d0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "db16f18f-67bd-40bd-849d-33f4bb186226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0b8ec8-c389-4225-8862-184fa1c765ec",
        "cursor": {
          "ref": "3c94c70a-a85b-464e-b4dc-1dbac5c33617",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "79f5d9bd-5ddd-4f2c-8e6d-bbf66a1ec3e1"
        },
        "item": {
          "id": "ca0b8ec8-c389-4225-8862-184fa1c765ec",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fd70dbb1-aecd-4431-857e-e59241097ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1aa029-e5ff-4f86-adf2-79cb57f4b5a1",
        "cursor": {
          "ref": "73621c00-30b7-43b8-ab18-f75b88cf3c74",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c9191693-6744-4c6c-ac03-b29648c27026"
        },
        "item": {
          "id": "4d1aa029-e5ff-4f86-adf2-79cb57f4b5a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6379b9b9-4e49-4b6e-8ccc-013d8481489e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12c4bf-0abd-4012-ae41-e27ff47b6cda",
        "cursor": {
          "ref": "8b535968-9720-430e-89ad-36ffa03847d0",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3eb7445b-18ed-4fc9-9fee-66d51d39e14d"
        },
        "item": {
          "id": "6e12c4bf-0abd-4012-ae41-e27ff47b6cda",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bafb0726-b5d3-4d46-a4c3-63232f994585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ae01a4-82b1-46ab-a254-1ccc15f32ad0",
        "cursor": {
          "ref": "32187f76-c27c-48de-8d18-0d79fe83190b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4b55beb9-f4fe-495b-99ff-6703cccaa405"
        },
        "item": {
          "id": "21ae01a4-82b1-46ab-a254-1ccc15f32ad0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a60aeb0a-5b25-4e3a-8695-17c2144f8e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa72239-453f-4d5b-92c2-443675fe41ff",
        "cursor": {
          "ref": "0571dff0-8579-4503-b57d-edcef0d906ea",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ecef0e63-a7c3-4aeb-b836-237b6d696cdc"
        },
        "item": {
          "id": "3fa72239-453f-4d5b-92c2-443675fe41ff",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "123ed6eb-beca-4998-ac15-e2a8712fee5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1f0226-19e2-40c3-baf7-cf662a885063",
        "cursor": {
          "ref": "4eb13921-4896-4d6a-9cfa-8503e6ffb850",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d94c5b88-5a75-43f6-b57b-f2deeeee8c56"
        },
        "item": {
          "id": "ee1f0226-19e2-40c3-baf7-cf662a885063",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "62e2f9d2-86d5-4e39-a0ab-59fbb51c90da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b335350e-0241-41be-b903-00320b161c1a",
        "cursor": {
          "ref": "37c281e2-9fe1-4f5b-92bf-c7c3763785fd",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f1497d85-66b1-4a63-82f4-316dc041be5e"
        },
        "item": {
          "id": "b335350e-0241-41be-b903-00320b161c1a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "97954ae8-e57b-47a6-8302-b15c1479c8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7d4942-7116-4aca-b5aa-c694c7d295ba",
        "cursor": {
          "ref": "fb037cda-58c7-40da-88ec-7424ac3acbb2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "eb899ca5-fca8-485d-99d0-94ef360ef940"
        },
        "item": {
          "id": "4f7d4942-7116-4aca-b5aa-c694c7d295ba",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "00de2a4f-0e4e-401c-8961-36fa1750ec8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd03a0c-eb0b-483c-b69b-6dbef6c99bd1",
        "cursor": {
          "ref": "9b7e116a-91cb-4d6d-a1eb-9085d652ecda",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8b0de135-a0f1-44cb-9553-0d5d2844bb6a"
        },
        "item": {
          "id": "1fd03a0c-eb0b-483c-b69b-6dbef6c99bd1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a639ce85-e7c8-48c0-b183-cd8c6582b4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19acf2ca-6e59-4c99-92e0-f494bf303de1",
        "cursor": {
          "ref": "77e9361d-a89c-4b92-821c-8190c2d2d44b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "35b93e78-4c71-493a-985d-ea307e81a12d"
        },
        "item": {
          "id": "19acf2ca-6e59-4c99-92e0-f494bf303de1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "010e1db8-ce01-4701-918f-49dc3a4ed6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559332c5-5928-4ccd-950f-9756a1b0ba1c",
        "cursor": {
          "ref": "de212984-f6a1-44cb-9876-4184c7ac882f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "10e4b231-d1bb-49a9-8c76-c010609c2a77"
        },
        "item": {
          "id": "559332c5-5928-4ccd-950f-9756a1b0ba1c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "991a676f-32ad-41d3-b0f2-1d6ee65986d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99e2aa0-6bd2-4645-b97e-dabd8025d81b",
        "cursor": {
          "ref": "950f05c7-c2bc-41de-a36b-69598cbb23df",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f599c263-8b1a-4123-9a7f-305d2374eadb"
        },
        "item": {
          "id": "e99e2aa0-6bd2-4645-b97e-dabd8025d81b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4e398a6c-030b-4400-970f-d9ced25e4832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63d4458-d1b5-4328-8aa4-d9ecd95e6aca",
        "cursor": {
          "ref": "8e03d304-e19f-4bd8-af68-758feeda1978",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2e943851-ece7-4849-86fa-01cd627acd3f"
        },
        "item": {
          "id": "c63d4458-d1b5-4328-8aa4-d9ecd95e6aca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1b48d199-ee08-46b1-8569-b840e834f5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ccea46-6802-41e6-9f16-8135b501db42",
        "cursor": {
          "ref": "7ff2bb46-0be0-464d-b8bd-4cea8a26735b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "31886650-6a51-4b56-b135-85a7692ec9d7"
        },
        "item": {
          "id": "c4ccea46-6802-41e6-9f16-8135b501db42",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "70f1bf70-e1ba-4acf-a931-5deae89e6628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88c9866-4c40-4556-8bdf-9992b67743ba",
        "cursor": {
          "ref": "e4c66749-5872-4ac2-89f9-3dd4e4c6377b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c4454ade-10e8-47cc-b37f-f4e8117b220e"
        },
        "item": {
          "id": "d88c9866-4c40-4556-8bdf-9992b67743ba",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b9d4c625-9e56-4d1a-bc27-0e80b55afbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346ad130-1ad0-4382-9ec8-25e1db0ecd58",
        "cursor": {
          "ref": "969533e3-d59d-4972-8b1b-7947e3ebf70c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "067ccf0e-088e-4131-b746-ee2f08afb864"
        },
        "item": {
          "id": "346ad130-1ad0-4382-9ec8-25e1db0ecd58",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "71229242-db83-4658-9951-c95ec16df918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262283b7-351d-4627-b331-482b8774eda3",
        "cursor": {
          "ref": "52b9d09c-f58b-4f0c-9497-f6ddd6736524",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0b097095-6f53-4f79-98f9-5465e25c031d"
        },
        "item": {
          "id": "262283b7-351d-4627-b331-482b8774eda3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "797cfed3-8e87-42a3-b947-09a7dcf6414f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbe209c-3822-4088-8be2-d4afa18da797",
        "cursor": {
          "ref": "d2448dae-7bcb-469d-9639-0c52211f9101",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c1e85525-b1f6-458c-bff4-af2039400ed8"
        },
        "item": {
          "id": "ebbe209c-3822-4088-8be2-d4afa18da797",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "94708b45-0462-4591-8da1-daab8a46d5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de20043d-95e7-4149-bac8-f6a89c26e76d",
        "cursor": {
          "ref": "62b3366f-40ad-4ea1-9348-61ce2bd431d4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9b5c7545-c85d-4e5a-9b70-47f8c04d634f"
        },
        "item": {
          "id": "de20043d-95e7-4149-bac8-f6a89c26e76d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "53214219-e7cf-47c7-9658-088db0d6dfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53500b7a-e925-4be6-a2a4-5ccd262011c0",
        "cursor": {
          "ref": "dd5184b0-9fda-44ad-bbb4-94e383b00793",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c513c18d-4b3d-43bc-893f-f29b135e1016"
        },
        "item": {
          "id": "53500b7a-e925-4be6-a2a4-5ccd262011c0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e815ce64-2b31-4bdb-a666-6de8e7fa13e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d026963-19e5-4d36-8f13-fede1ed2280d",
        "cursor": {
          "ref": "e2908e94-3164-443f-b6fe-eb1603a85536",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b0db4bf7-090d-4b5e-bd28-6c34d7a63993"
        },
        "item": {
          "id": "3d026963-19e5-4d36-8f13-fede1ed2280d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e2265ec8-eff5-4904-bcf7-f651567b30da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73f3425-0192-4786-9824-dde750c0fafd",
        "cursor": {
          "ref": "37049f9f-25be-45aa-b84b-54b93ce9fff2",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "eba0287a-c039-4790-8071-80c5c1b2bdcc"
        },
        "item": {
          "id": "d73f3425-0192-4786-9824-dde750c0fafd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "743a4795-6072-4781-a5c1-da87344537db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2149f4d2-d0e6-4759-a3c3-8db3dc59a923",
        "cursor": {
          "ref": "49dbd367-3680-429e-b58d-bd5f66a4bca1",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8054ded6-32ef-46eb-97b6-40b6c01639f5"
        },
        "item": {
          "id": "2149f4d2-d0e6-4759-a3c3-8db3dc59a923",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6de81108-5de4-4c8e-a22a-19bdb96e179c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e828dc34-2104-4e41-ba9f-64d2c16a6463",
        "cursor": {
          "ref": "57ac7887-bb22-4bf5-a458-83b9b8752dc4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bb581778-6738-4c29-8d44-3b1414ec3037"
        },
        "item": {
          "id": "e828dc34-2104-4e41-ba9f-64d2c16a6463",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2ab6c093-aa6f-49b8-8980-3e65b59fd07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a13c623-1ac3-4a6b-adb1-ec830a522a54",
        "cursor": {
          "ref": "661a39a6-20ed-4198-9a77-ee3d3cd4be0b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "75d44eeb-9c90-49a5-8f8d-8b4a3f5d3a77"
        },
        "item": {
          "id": "8a13c623-1ac3-4a6b-adb1-ec830a522a54",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "24b00124-73c2-452b-a7b7-9babcd664489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543bd929-c96b-481b-8df7-c81eec0eeaed",
        "cursor": {
          "ref": "f50f2079-bdcc-4e6c-9c89-c3a0cfba9782",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e73ecee0-5e01-4c87-ae08-c1dd3b3e500f"
        },
        "item": {
          "id": "543bd929-c96b-481b-8df7-c81eec0eeaed",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "801ccde5-62f0-4dcd-9925-ff8afd995ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcb2693-022c-42ff-8d6a-1796819cb045",
        "cursor": {
          "ref": "26c64e7e-5227-435a-844d-a8fe54baddfb",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b9004d75-4bfd-4553-af1a-56034aca373e"
        },
        "item": {
          "id": "1dcb2693-022c-42ff-8d6a-1796819cb045",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fdc6e84d-1d5c-4b06-8c0a-15b601326d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2742f1f9-6129-40ef-b866-7e4dc5b2abb7",
        "cursor": {
          "ref": "1207f770-0384-4551-8b5b-ee013ff30861",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "949036db-6b69-4c26-b6ac-706220c228b5"
        },
        "item": {
          "id": "2742f1f9-6129-40ef-b866-7e4dc5b2abb7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "40a1d7af-556f-4a0d-8c88-dcc8bcfe2267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa96e7-eeee-4963-bc8a-509f844565b4",
        "cursor": {
          "ref": "022e0db9-c421-4a82-a35e-e3618d945a18",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5edf7947-ed0c-4690-913b-049a366689a1"
        },
        "item": {
          "id": "44aa96e7-eeee-4963-bc8a-509f844565b4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c4ddfac0-a774-4487-962e-cb40af34068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e129723-a7bb-43ef-ba13-893c2d0a5bcf",
        "cursor": {
          "ref": "3612dee0-9405-49c7-8ef0-9621ada8e717",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "58d20991-98be-47c8-9fa0-19a9dcea093b"
        },
        "item": {
          "id": "8e129723-a7bb-43ef-ba13-893c2d0a5bcf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "46f1c3e1-110e-4fcc-93ae-76fb971b632b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa2e871-8672-4638-be13-001faa3a1256",
        "cursor": {
          "ref": "2f36bfb5-fd65-4923-a189-9d1c78a6b28f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "14eb62d6-5bff-40b5-8732-7e8abebcdb3c"
        },
        "item": {
          "id": "6fa2e871-8672-4638-be13-001faa3a1256",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b303c2f7-c2f5-4bae-b57a-ff947b494095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c0d968-64ad-4f72-9176-96743cf41cda",
        "cursor": {
          "ref": "824998f6-5216-4b53-b885-ab01f6346cff",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1fed929e-576e-40a0-b339-53c2c385003b"
        },
        "item": {
          "id": "86c0d968-64ad-4f72-9176-96743cf41cda",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a266fe18-6e1c-422f-a8d2-1de0e4b45c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2416c8-bec9-43ee-85f9-984c64eba16e",
        "cursor": {
          "ref": "859ce562-d98d-47c7-958c-d45f52006dfa",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "83da4e65-f7f1-470b-965c-2cfd3b7e3674"
        },
        "item": {
          "id": "7b2416c8-bec9-43ee-85f9-984c64eba16e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "22d44a16-81e5-4913-8f95-50a714ce102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf711f1-e802-4111-86cf-90eaec03adce",
        "cursor": {
          "ref": "8391731c-96da-4cc6-8f6b-326dd9500e1a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5acacdc9-faf6-4fe2-8a6d-b40042fa4011"
        },
        "item": {
          "id": "eaf711f1-e802-4111-86cf-90eaec03adce",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "242f5abe-80f9-478c-af23-9fc58472d508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb5029b-9edd-4070-a790-e33415dd74a6",
        "cursor": {
          "ref": "e2ad5689-e993-4053-9a9d-424b66c7d95d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5f9cf6d1-0ad3-43b4-8521-040d11702429"
        },
        "item": {
          "id": "7eb5029b-9edd-4070-a790-e33415dd74a6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a92667cd-94ac-4edc-a416-e01425742652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7787ddb-9e9b-4f99-94dd-bda772d69e0d",
        "cursor": {
          "ref": "f9bbe160-7187-429a-9cc1-2f6a1dcd135f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2a376f81-ea52-4c42-a9bc-8445404a35a5"
        },
        "item": {
          "id": "e7787ddb-9e9b-4f99-94dd-bda772d69e0d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6175b95d-7fc7-48d4-80d8-dbba7948c23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba657cfb-8a20-41ff-9d55-23304ce37d32",
        "cursor": {
          "ref": "45646a39-3290-4cc1-8d26-2cd2bfc660e3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bfb788f8-4ff4-41c3-9239-48ddd4fb9238"
        },
        "item": {
          "id": "ba657cfb-8a20-41ff-9d55-23304ce37d32",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8dd15da4-b3a3-489c-a32d-66c2458e0f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2d956d-27bc-40da-b795-919176551cad",
        "cursor": {
          "ref": "c8ba5555-00fa-4d04-94fe-18820fd755d4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3bc935ab-c3e5-4ce5-8bb0-5702eb083177"
        },
        "item": {
          "id": "0e2d956d-27bc-40da-b795-919176551cad",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d1d3a644-d4d7-4aca-b33e-0a7059725601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa094e2e-db75-4682-b536-59b4b6e45788",
        "cursor": {
          "ref": "ec0a5614-494e-4d19-8bbb-f78222acf08b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f5f0b6d8-4c6c-4996-be48-1dab05aa74b8"
        },
        "item": {
          "id": "aa094e2e-db75-4682-b536-59b4b6e45788",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6d2a552e-d291-4244-90a9-2d11c7599359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f14548f-3f13-4da0-a0fc-6cebb91705b5",
        "cursor": {
          "ref": "0c557220-f078-43b2-8ecf-654ab277d9a9",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5f886428-4b46-4b65-acaf-fc5cf021a2f3"
        },
        "item": {
          "id": "2f14548f-3f13-4da0-a0fc-6cebb91705b5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "afabdfd1-61b0-488e-8f1b-940db655af49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0286e1e-cf42-4039-a05a-f42174ead029",
        "cursor": {
          "ref": "507f210e-776b-4fd4-8dfd-81d218e1ec44",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "368a939f-f54f-4068-b513-c887873416c4"
        },
        "item": {
          "id": "b0286e1e-cf42-4039-a05a-f42174ead029",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "486f5666-b1f8-4d4d-a049-4262ea29b3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05f2462-d158-48b3-905e-391b69e03380",
        "cursor": {
          "ref": "03080deb-c0fe-453b-be54-f10d35ad09d7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "71cbf52b-fe58-4132-a3e8-c430c4aa0311"
        },
        "item": {
          "id": "f05f2462-d158-48b3-905e-391b69e03380",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9cf18c9d-0a93-4458-bfc1-1ae029efa7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10193b6-cad4-43dd-9dcd-800654521f93",
        "cursor": {
          "ref": "129c2164-14f9-438d-8d29-3a8dbea3a6d1",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "644e7723-cdb4-4bc9-96ed-2feabf625d7b"
        },
        "item": {
          "id": "c10193b6-cad4-43dd-9dcd-800654521f93",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b5168ad3-e8c9-487d-9a53-1352c365fe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440c9b31-ca03-486e-a9a9-9823aed6116f",
        "cursor": {
          "ref": "5da074ef-bc13-4b1c-a0d5-f1bc5ce9e1bf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ecb32b8f-b1f5-4452-b9b9-2c959a16c15a"
        },
        "item": {
          "id": "440c9b31-ca03-486e-a9a9-9823aed6116f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "49ec75c3-6141-4025-8af8-734dc8dc9261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2062fee7-0743-4622-aaf4-b772a56b2241",
        "cursor": {
          "ref": "ec20fc49-7bd9-4701-a11b-b5562abbe64f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2aed2847-5690-4485-a102-a454db765181"
        },
        "item": {
          "id": "2062fee7-0743-4622-aaf4-b772a56b2241",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c447d5d8-048b-4f71-8b66-49009b6e8bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c178e77c-8a24-4be5-8146-d2c1b04d43df",
        "cursor": {
          "ref": "b798b9b6-0d6c-4b44-812c-6e1e88d2b843",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9ff9ce09-ae4b-42db-acfd-2a20d94e73e4"
        },
        "item": {
          "id": "c178e77c-8a24-4be5-8146-d2c1b04d43df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9ef4bab3-f557-4c42-8b12-f6f4c25aa902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54702f98-1a18-493d-af9f-0a4857049998",
        "cursor": {
          "ref": "71970d17-8b0b-46fc-892e-988e813f4905",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "da2e396c-0e26-47f0-8070-e93921504abc"
        },
        "item": {
          "id": "54702f98-1a18-493d-af9f-0a4857049998",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66360252-ac5f-4661-aff1-dc0071c2ad85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bd4d60-7ced-47f8-80de-d420fba5db7a",
        "cursor": {
          "ref": "28ff8400-2b46-49e1-94ff-5a0d77cb6936",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b21fe2c1-1cc3-400e-b90d-25c585693305"
        },
        "item": {
          "id": "94bd4d60-7ced-47f8-80de-d420fba5db7a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "05ad6595-f40c-402e-a43a-b168bdfac506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e69218-bb58-4f3c-bf26-705a38af7028",
        "cursor": {
          "ref": "16521bde-e313-4f5c-a1a8-f9d21ecf3e4f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9f6f651e-3e3a-4b5a-9c0f-2aed87867855"
        },
        "item": {
          "id": "75e69218-bb58-4f3c-bf26-705a38af7028",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "96ad646e-0471-40df-becc-559af52298d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198b950f-9d07-4d82-85ae-7b9e13e6cee8",
        "cursor": {
          "ref": "7318ed20-2b3c-43b2-92ad-cad8fec67efb",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0ad09b98-43e0-469f-b724-ec7fc8f8028c"
        },
        "item": {
          "id": "198b950f-9d07-4d82-85ae-7b9e13e6cee8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fefc2b63-d229-4cc3-91ab-8fa5f7972c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8663548a-320b-44ac-8bcf-29cbd6a6f460",
        "cursor": {
          "ref": "d383a8b8-01d0-4a4b-a662-2436883ee505",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a2bc7cee-b349-4094-be01-9f596c45557d"
        },
        "item": {
          "id": "8663548a-320b-44ac-8bcf-29cbd6a6f460",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "57c07057-73f3-456c-a163-d4e12dd4880f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b7b36c-ba95-4dd9-b9e0-469d7387dc6f",
        "cursor": {
          "ref": "a5548895-1733-4f26-9924-3329c2112c70",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fe04c7bf-1e56-4c79-bd4f-25885a10b9a5"
        },
        "item": {
          "id": "73b7b36c-ba95-4dd9-b9e0-469d7387dc6f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "70344072-03b9-43a1-88bf-cb48616cfc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baeb86e-39c3-47d4-9dc5-e3399a279436",
        "cursor": {
          "ref": "b57d23a1-321e-455b-a183-11d8022df386",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d5d816fc-c49c-4e82-9817-8382fab2ac34"
        },
        "item": {
          "id": "6baeb86e-39c3-47d4-9dc5-e3399a279436",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "df14618d-8c55-4cbe-bb94-3ea17a7b4d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2a4fa4-964a-422a-8bc3-d3a743796ab1",
        "cursor": {
          "ref": "7fc76fc8-51c9-4a85-97bb-1b0ea1506700",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6df225a5-16bd-409a-9ee6-321e9ad6580c"
        },
        "item": {
          "id": "8b2a4fa4-964a-422a-8bc3-d3a743796ab1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "54b62a59-aabc-4cab-9867-a6afeb6917ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d65af4-4dae-4837-93cd-a82df16885b1",
        "cursor": {
          "ref": "929c4b87-9747-4f42-9c6e-a534aae6a743",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8b7cc84d-a39c-4a18-9d71-955a273dd9fa"
        },
        "item": {
          "id": "34d65af4-4dae-4837-93cd-a82df16885b1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c448d10a-9452-4d5d-8e96-189b696654b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911f05d2-849a-4700-91f1-0629a1ba1dc7",
        "cursor": {
          "ref": "347caea6-0816-44da-8034-f9b0eac6f63c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "06425e69-cba4-44e3-a796-d84529e90b49"
        },
        "item": {
          "id": "911f05d2-849a-4700-91f1-0629a1ba1dc7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8dc0bbf8-2777-4900-8d52-05b5a64e8600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9056a366-f071-4b79-825e-f35a3badbf97",
        "cursor": {
          "ref": "25531de6-706b-4da0-8db1-8d4932b69c40",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c2bff5e8-000a-4820-9fe1-d36ea897b6f7"
        },
        "item": {
          "id": "9056a366-f071-4b79-825e-f35a3badbf97",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "897ab1ac-fc5b-4760-9e4e-82fb9648c5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f59494e-dd44-44e9-8dfd-f486f8adceb0",
        "cursor": {
          "ref": "12912f8c-7917-484c-81d7-bcfbdebe0bfb",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "504d9c24-9d26-418e-8ad6-daed51746e13"
        },
        "item": {
          "id": "0f59494e-dd44-44e9-8dfd-f486f8adceb0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e889bccc-ae47-4ccc-8417-91d5656f3597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3174a4a-9ad9-4881-a5d1-d4d3c7abd4d5",
        "cursor": {
          "ref": "5f6b68be-69e9-4576-b115-0fca96552528",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1763e66b-21f0-4e1a-a421-05f623952f1e"
        },
        "item": {
          "id": "f3174a4a-9ad9-4881-a5d1-d4d3c7abd4d5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c126e31f-33c0-4d27-af4b-45734221a016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd32bec8-3f51-474c-8b36-5158c54110e6",
        "cursor": {
          "ref": "bca79758-6c43-4916-9e64-e507332a84f1",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5081ae0a-7b12-46a5-8ca6-722711d1a695"
        },
        "item": {
          "id": "cd32bec8-3f51-474c-8b36-5158c54110e6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1001a237-5133-43ec-9264-b5fe90a626e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52174cb0-e7c7-48a9-a4d5-dd36467afb9d",
        "cursor": {
          "ref": "11accf74-d8f0-4959-928a-364ef5cbd4cd",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "012326fd-bff6-4983-a223-b683f7911587"
        },
        "item": {
          "id": "52174cb0-e7c7-48a9-a4d5-dd36467afb9d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0dc19d84-57f2-4061-a7c5-f88201c5e72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d163ae97-4de5-4c98-b42e-c234aef86fd0",
        "cursor": {
          "ref": "a8c75168-5d15-4f61-a1ab-d4594400f89b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c7bc422f-7eb6-42da-98b5-83befb32028c"
        },
        "item": {
          "id": "d163ae97-4de5-4c98-b42e-c234aef86fd0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "863269b5-6f82-4a0c-9d49-7559e0a66a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb214b0e-4293-439c-aaee-381ad9642490",
        "cursor": {
          "ref": "ab707ec1-ccb1-478e-bb3f-277b27836cdc",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0ff570ca-a61f-4c38-9bc9-23018d4ea631"
        },
        "item": {
          "id": "bb214b0e-4293-439c-aaee-381ad9642490",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c8e6bfea-32d2-4bf8-8b9b-4b4370d19f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8479ba1a-a2e3-4763-bd5b-65281edf502b",
        "cursor": {
          "ref": "7c94e1c7-b046-4297-883b-8856707baac3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c817ea0e-c994-474a-b826-34710f6bdee9"
        },
        "item": {
          "id": "8479ba1a-a2e3-4763-bd5b-65281edf502b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b67b1f01-0b2f-4d90-b1af-95b2a862bb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39281c85-b648-405a-a934-b511cc2bd19a",
        "cursor": {
          "ref": "6dc5806c-d0c6-4eeb-9186-7ecf3e0e6990",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2afab67e-bd59-4100-abe3-7456a68f59de"
        },
        "item": {
          "id": "39281c85-b648-405a-a934-b511cc2bd19a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bd6eb4f5-322b-434c-b6ee-027ff08a5c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cf15e2-b783-41ad-a71b-16c286ecc901",
        "cursor": {
          "ref": "2ce0df20-b053-4002-bd45-8d6073d51d42",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d826420b-192f-4302-bd11-15fd4c30d623"
        },
        "item": {
          "id": "53cf15e2-b783-41ad-a71b-16c286ecc901",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0bb60418-a594-4c83-94fe-2a7d08448258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3183a55-12a1-42b5-9cbd-6fce431d57b1",
        "cursor": {
          "ref": "19a01803-26e8-4ca9-af8c-d0b571298115",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8573d27a-277d-414c-a9d0-d2ae1133d349"
        },
        "item": {
          "id": "a3183a55-12a1-42b5-9cbd-6fce431d57b1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "858cfa4b-fae1-4c2d-8047-cff03e45caf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932a83d4-1ff2-42a1-8a5f-315add58c02f",
        "cursor": {
          "ref": "d0889219-fb02-453f-a358-c2b767484934",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e2bb44b7-7774-4948-b7ac-e42f2ee2adb1"
        },
        "item": {
          "id": "932a83d4-1ff2-42a1-8a5f-315add58c02f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "04eb19ac-bd42-4250-98ae-776785362c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62b8141-286e-44a5-9e28-5886efd455d0",
        "cursor": {
          "ref": "c4b412da-5788-4176-964f-766e2a840816",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "afaf529e-0129-4658-af08-eff089b1b8d8"
        },
        "item": {
          "id": "f62b8141-286e-44a5-9e28-5886efd455d0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1de3701f-893b-4d20-af64-27c6d782b043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2149e58-a35d-4fea-ba44-da763bfd30dd",
        "cursor": {
          "ref": "52d68838-7d12-4151-b7f2-0f94e6fc5388",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "67df1e6d-3938-4550-bb3c-e7a30b402ce4"
        },
        "item": {
          "id": "e2149e58-a35d-4fea-ba44-da763bfd30dd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a586f3ed-9db4-48c4-bc30-09b5b106940f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e6b1a7-a5ba-484f-9f3a-4e2171cf6bd0",
        "cursor": {
          "ref": "9d43fa58-b029-458a-87b2-658f3e99782e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "08acb00a-b73e-43fa-851e-9e182605aa76"
        },
        "item": {
          "id": "94e6b1a7-a5ba-484f-9f3a-4e2171cf6bd0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "70ddd50b-9f06-4b2d-ac2e-99a644915516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db86176e-975d-4182-ab4e-d6900d2156f3",
        "cursor": {
          "ref": "257fd081-bbf5-4092-835e-0b489c1473b9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3fc691fb-dd40-42ef-b30f-a298479e35df"
        },
        "item": {
          "id": "db86176e-975d-4182-ab4e-d6900d2156f3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e626475b-76cc-4a3d-b822-745c1ea0fa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ede76df-551e-4cee-9c1b-f6dbf34a499c",
        "cursor": {
          "ref": "96e2df39-8af3-4708-8e1c-8369b115031c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9ab6db61-4bd1-4a00-9b86-10aac9b59a2a"
        },
        "item": {
          "id": "1ede76df-551e-4cee-9c1b-f6dbf34a499c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bdb902c7-8fc8-4f83-a0b0-fc9360d075d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d747b68f-e72b-470f-a593-bb338f7db02e",
        "cursor": {
          "ref": "216ab4ca-2357-43cc-b3c7-0a5a0fbd9de3",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6f778694-4d61-4e8c-b091-a71e39f7016b"
        },
        "item": {
          "id": "d747b68f-e72b-470f-a593-bb338f7db02e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b3f1a777-20f9-488e-a06d-0d92dfd08334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aea4cce-a0ac-4d84-aad4-85f35bd20495",
        "cursor": {
          "ref": "09f08dca-40f9-46c8-abff-d98e4858e78f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7aea4de1-6089-4eda-8928-c28b8046268a"
        },
        "item": {
          "id": "3aea4cce-a0ac-4d84-aad4-85f35bd20495",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0c75e4af-77c0-44af-9e52-41bd105c26bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550559a9-bfb8-484d-a633-778658235806",
        "cursor": {
          "ref": "d6f39f64-35f0-4404-aa24-3c9c3f23bac8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3f626662-64b9-430d-bcb5-34d01ffff10e"
        },
        "item": {
          "id": "550559a9-bfb8-484d-a633-778658235806",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2e570a0d-5fa6-41ca-a145-1de815c337be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fa383c-0c4b-4a68-a659-d16d05c35ab5",
        "cursor": {
          "ref": "141f67fd-56aa-4dac-9817-426ff1309c1e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "79b2a54e-36ec-4a2a-8b57-3fa56bde65f8"
        },
        "item": {
          "id": "b7fa383c-0c4b-4a68-a659-d16d05c35ab5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5291f496-3a66-4406-9ab6-6932c86f0156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5671ae-9832-42f3-9b62-e73a8c618a73",
        "cursor": {
          "ref": "736f8c62-5dd2-4d66-94e2-03626ceb0324",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "475db351-190d-4f8f-8e0a-2d666778e2a6"
        },
        "item": {
          "id": "ba5671ae-9832-42f3-9b62-e73a8c618a73",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7b57ed22-3ab9-46c8-ab64-c6b5e5f25c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa7167d-5c47-47ba-bf28-eb70b70cfc76",
        "cursor": {
          "ref": "c2abb916-4574-461e-b850-1ccccc6ba9e4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6d0d5eb6-6b8b-408c-b657-bd20744b5cc8"
        },
        "item": {
          "id": "baa7167d-5c47-47ba-bf28-eb70b70cfc76",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f715125e-8957-4f1c-adb6-d3999a5a1185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da5fc1b-3d31-444d-8e6a-e879b0e02011",
        "cursor": {
          "ref": "6bf9ec30-c0ae-40c6-9774-06cc7062389a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d207ba1a-94ac-4420-b2eb-4fd18db1f0d8"
        },
        "item": {
          "id": "5da5fc1b-3d31-444d-8e6a-e879b0e02011",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "eb029af7-d769-4aa5-b5ad-a31129a79c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a7265b-5f36-4da5-83b1-ed58536e7fff",
        "cursor": {
          "ref": "f2a5410a-2610-4a7b-868e-3062331f9d95",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "44d98934-fd04-4f1b-ba6a-573cf987cb7a"
        },
        "item": {
          "id": "52a7265b-5f36-4da5-83b1-ed58536e7fff",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3f1da2d1-d2b9-4688-a210-4ee4cf270b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de64a2b0-d818-4621-87dd-c07fd527f3e5",
        "cursor": {
          "ref": "fe4cdaae-5e31-48f1-94f4-ec2cf75a7203",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eb41a936-2034-4f0b-aaa8-65cddd671dae"
        },
        "item": {
          "id": "de64a2b0-d818-4621-87dd-c07fd527f3e5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "87b996ce-eb7c-4912-a5f7-a194152303d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bb6b8c-76c0-4e1a-872a-1ea68a81c32d",
        "cursor": {
          "ref": "b233a7fb-a311-4521-bbc9-265777e027d7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "42169467-85bb-43b4-bf10-0f444e21d722"
        },
        "item": {
          "id": "b6bb6b8c-76c0-4e1a-872a-1ea68a81c32d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ef4090e4-087d-4041-8861-193a61811825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e6e138-ad7c-458b-89f3-6d28f933677e",
        "cursor": {
          "ref": "189dc862-70d0-4121-a7bc-16f28566cf56",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "22f52922-faa8-4d47-9379-fc784db1fe1e"
        },
        "item": {
          "id": "05e6e138-ad7c-458b-89f3-6d28f933677e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fb18a20a-3cc4-4983-8742-6ebe1f92959c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b398857-e003-49b0-8145-3bda2390db37",
        "cursor": {
          "ref": "e1580bcb-5757-4208-8198-dc1064011cb8",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "23bff0c1-88c7-485c-ae34-b333b30d2cfd"
        },
        "item": {
          "id": "7b398857-e003-49b0-8145-3bda2390db37",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "480cfb8f-42f4-4cfc-a4f3-bcef6e383dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7fb6ce-e4da-483e-b746-6b53e7a9afe3",
        "cursor": {
          "ref": "3e9acb28-1aa9-443b-b038-f663a6895dab",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "de6dbe8a-5af2-4e96-b56e-9648fb0e2b45"
        },
        "item": {
          "id": "ab7fb6ce-e4da-483e-b746-6b53e7a9afe3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "357ff15c-3bbd-46cb-9317-9c025ed6a015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e1bf0b-8b10-42ca-90bf-7e445c2310ad",
        "cursor": {
          "ref": "0d638f7b-8bd8-4d81-8715-ceaf002b95ff",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "91534996-00ed-477e-8d5f-62f8603efffe"
        },
        "item": {
          "id": "55e1bf0b-8b10-42ca-90bf-7e445c2310ad",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d0e7478b-5217-4d59-a709-03552818034f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724a4cac-c666-4f20-9d6d-e4d1a9331282",
        "cursor": {
          "ref": "a12e5f07-af94-4bc5-8b22-c936d292206b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "72123347-87a9-43fc-819f-f00cc3e4ea54"
        },
        "item": {
          "id": "724a4cac-c666-4f20-9d6d-e4d1a9331282",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d038d59a-5d5e-4b7d-969b-46221426eacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177e4819-e81d-4ea6-8f52-04d5e4bbf9ae",
        "cursor": {
          "ref": "e952007a-6e2e-47f3-b2b5-ed3e85720096",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b9957960-8b39-4000-a7a2-9187df94ed91"
        },
        "item": {
          "id": "177e4819-e81d-4ea6-8f52-04d5e4bbf9ae",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cf5d9f8c-b681-4a80-959f-174527123336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f536f6e-743c-40a1-add2-7c851b588d88",
        "cursor": {
          "ref": "312f5e94-e1c4-46ff-9313-4fb409c26b45",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "63164c4b-2249-489a-a006-8cb9c69fe73f"
        },
        "item": {
          "id": "2f536f6e-743c-40a1-add2-7c851b588d88",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "77d9c078-d6c1-4862-9515-88ddf8702de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453dae3a-5868-4201-a7b0-5b40e41ef001",
        "cursor": {
          "ref": "5825e60b-dad2-4a02-a01e-582a106a30ed",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2622f7b0-f7d1-4d18-8000-6b74f9b2120f"
        },
        "item": {
          "id": "453dae3a-5868-4201-a7b0-5b40e41ef001",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fadc7e69-e1bf-413e-90b1-3493547f4a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23adcd77-b787-4c36-88d7-de04e6961bbc",
        "cursor": {
          "ref": "7f7d0cea-2ba6-4b7c-a3bc-987af5b5094d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1048c32a-92a7-4c63-b004-997bc68b9f2b"
        },
        "item": {
          "id": "23adcd77-b787-4c36-88d7-de04e6961bbc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d39b8b30-6fe8-4305-abf4-96b8bbf874de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa824ba9-825f-4f06-8b09-71a6b0261047",
        "cursor": {
          "ref": "bbfa1e0c-c9d6-4cda-abd5-0069005fd893",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f34c9316-1426-4eb7-be8a-bdfc12397689"
        },
        "item": {
          "id": "fa824ba9-825f-4f06-8b09-71a6b0261047",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b0ec283b-1af4-4673-8c38-ea1f86edd573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598feaa1-7e9f-4c32-9824-bd1a12a826f3",
        "cursor": {
          "ref": "aa0c39e1-4217-4ce7-86de-6108ad6d123c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cbbd862f-4837-47b3-9930-63ae914c1484"
        },
        "item": {
          "id": "598feaa1-7e9f-4c32-9824-bd1a12a826f3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "53053962-b6d8-4cc5-bd6f-4173911f4b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118a093c-39ff-4aa7-a5df-e1a95a6e3049",
        "cursor": {
          "ref": "77f7da6a-eedb-465d-8a07-21c691321e81",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "adadc009-3e03-4c7e-9961-3c865a7b4b72"
        },
        "item": {
          "id": "118a093c-39ff-4aa7-a5df-e1a95a6e3049",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d562a5e0-8ea8-4954-8145-a086a93c6402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19dd958-4be5-430f-9de6-42dc1b9a3f0c",
        "cursor": {
          "ref": "49926ed5-45b6-4fd6-82a0-da827f23384d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "db585624-79e6-4469-b97f-058ae9d320b4"
        },
        "item": {
          "id": "a19dd958-4be5-430f-9de6-42dc1b9a3f0c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fe52e32f-e8c3-4a3b-8d7d-30fc14ab9c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5693f8-859f-4345-9efd-c582626e1780",
        "cursor": {
          "ref": "9dbf6b6f-8be1-443a-b0e4-e77beebe7115",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5d36215a-2972-4e67-8c6b-4db0476f430b"
        },
        "item": {
          "id": "0b5693f8-859f-4345-9efd-c582626e1780",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "22d1742b-97c4-42b6-8ea8-c21e5a0145f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba4a6b3-ba65-469f-abe5-52179da7dfff",
        "cursor": {
          "ref": "3dcf7fbf-d7be-406b-85ff-5268ecd84bf9",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "762592bb-d088-451f-a78c-847e5eeb503e"
        },
        "item": {
          "id": "aba4a6b3-ba65-469f-abe5-52179da7dfff",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e474bc3a-c51a-4554-ac28-71182ddb6bcc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860e82ff-fb09-401c-b6d9-5acd41915d63",
        "cursor": {
          "ref": "a49b6228-72bb-41fb-9b72-d7456dc24a46",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "88e7662d-c90a-41a2-b2f5-e08b0e3ac3c4"
        },
        "item": {
          "id": "860e82ff-fb09-401c-b6d9-5acd41915d63",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bb120248-2f8c-4952-a0d5-519e3baae8ab",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8079e046-3857-4229-8f20-aa7fb1db1f5f",
        "cursor": {
          "ref": "ada03eaf-2197-4177-ad47-dd78e75d44bb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ae6624be-1264-4b3c-b0c3-af6b47a08650"
        },
        "item": {
          "id": "8079e046-3857-4229-8f20-aa7fb1db1f5f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4776af99-586b-411d-b821-30445bf8707f",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d0332d-ae2e-4390-afaa-30448c945bff",
        "cursor": {
          "ref": "766662ab-ce7c-45a0-9916-2ca6813664d0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "594070fc-548c-4013-b49b-51e1ddf0e3b0"
        },
        "item": {
          "id": "c1d0332d-ae2e-4390-afaa-30448c945bff",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "96fbebf4-333c-4b3a-b30d-fe5697d772c0",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3748e89b-0dcb-414c-8f8d-04e2b3223713",
        "cursor": {
          "ref": "58edc46e-1e38-4f37-8187-cf857c414b17",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7ca13735-d0e6-41d8-911a-f3a56256494e"
        },
        "item": {
          "id": "3748e89b-0dcb-414c-8f8d-04e2b3223713",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05e1863a-9f51-49bb-b9d7-2c55698a04ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3748e89b-0dcb-414c-8f8d-04e2b3223713",
        "cursor": {
          "ref": "58edc46e-1e38-4f37-8187-cf857c414b17",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7ca13735-d0e6-41d8-911a-f3a56256494e"
        },
        "item": {
          "id": "3748e89b-0dcb-414c-8f8d-04e2b3223713",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05e1863a-9f51-49bb-b9d7-2c55698a04ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3748e89b-0dcb-414c-8f8d-04e2b3223713",
        "cursor": {
          "ref": "58edc46e-1e38-4f37-8187-cf857c414b17",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7ca13735-d0e6-41d8-911a-f3a56256494e"
        },
        "item": {
          "id": "3748e89b-0dcb-414c-8f8d-04e2b3223713",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05e1863a-9f51-49bb-b9d7-2c55698a04ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f65462-7213-486f-9865-d223a4d35ce9",
        "cursor": {
          "ref": "b01548d7-2066-4a99-96ae-ce43273644c6",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "eec5dbab-32df-4246-b08f-fc2657d4fe01"
        },
        "item": {
          "id": "a2f65462-7213-486f-9865-d223a4d35ce9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "f8d0b010-a609-4eee-9e42-0c812603b2a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 50,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912e44e0-431f-4833-aad4-c54719697c0c",
        "cursor": {
          "ref": "8061a12a-342d-49e6-9d77-f5df17275a62",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b2195e26-e2e4-4585-b48a-90e6cc911e51"
        },
        "item": {
          "id": "912e44e0-431f-4833-aad4-c54719697c0c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3af64f18-f15c-49e9-8bad-5e11ebd69f5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912e44e0-431f-4833-aad4-c54719697c0c",
        "cursor": {
          "ref": "8061a12a-342d-49e6-9d77-f5df17275a62",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b2195e26-e2e4-4585-b48a-90e6cc911e51"
        },
        "item": {
          "id": "912e44e0-431f-4833-aad4-c54719697c0c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3af64f18-f15c-49e9-8bad-5e11ebd69f5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a252e883-f628-4e19-8769-7d7b93f3e89c",
        "cursor": {
          "ref": "3da2c5da-f3d6-4df7-8e09-dc68b23b7e92",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6ce867f6-79fa-4303-af96-af302763458c"
        },
        "item": {
          "id": "a252e883-f628-4e19-8769-7d7b93f3e89c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "2c5fcd97-faf5-457f-95e7-99b9ed5687c6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17deb2d-80b2-4d5d-87cc-3ac70a5ec70f",
        "cursor": {
          "ref": "4ab2c134-9ee7-45ff-bc8d-d24570bdb490",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2781daeb-af73-4c39-8ae9-99e4ba201516"
        },
        "item": {
          "id": "b17deb2d-80b2-4d5d-87cc-3ac70a5ec70f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "22f2f117-aa37-41b9-9252-5efe76e1bffb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17deb2d-80b2-4d5d-87cc-3ac70a5ec70f",
        "cursor": {
          "ref": "4ab2c134-9ee7-45ff-bc8d-d24570bdb490",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2781daeb-af73-4c39-8ae9-99e4ba201516"
        },
        "item": {
          "id": "b17deb2d-80b2-4d5d-87cc-3ac70a5ec70f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "22f2f117-aa37-41b9-9252-5efe76e1bffb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a35fd28-39ec-45ec-a0fe-333b6a76188d",
        "cursor": {
          "ref": "2bd14d6e-6cee-493d-ad2b-b46d37eaeff4",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "116c0bfd-dd05-44aa-b586-49bd1889d700"
        },
        "item": {
          "id": "8a35fd28-39ec-45ec-a0fe-333b6a76188d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ae3fc3d4-bb8f-4e38-88ee-90cf2f67f922",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}